// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles
parcelRequire = (function (modules, cache, entry, globalName) {
  // Save the require from previous bundle to this closure if any
  var previousRequire = typeof parcelRequire === 'function' && parcelRequire;
  var nodeRequire = typeof require === 'function' && require;

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire = typeof parcelRequire === 'function' && parcelRequire;
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error('Cannot find module \'' + name + '\'');
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = cache[name] = new newRequire.Module(name);

      modules[name][0].call(module.exports, localRequire, module, module.exports, this);
    }

    return cache[name].exports;

    function localRequire(x){
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x){
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [function (require, module) {
      module.exports = exports;
    }, {}];
  };

  var error;
  for (var i = 0; i < entry.length; i++) {
    try {
      newRequire(entry[i]);
    } catch (e) {
      // Save first error but execute all entries
      if (!error) {
        error = e;
      }
    }
  }

  if (entry.length) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(entry[entry.length - 1]);

    // CommonJS
    if (typeof exports === "object" && typeof module !== "undefined") {
      module.exports = mainExports;

    // RequireJS
    } else if (typeof define === "function" && define.amd) {
     define(function () {
       return mainExports;
     });

    // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }

  // Override the current require with this new one
  parcelRequire = newRequire;

  if (error) {
    // throw error from earlier, _after updating parcelRequire_
    throw error;
  }

  return newRequire;
})({"../output/Data.Eq/foreign.js":[function(require,module,exports) {
"use strict";

var refEq = function refEq(r1) {
  return function (r2) {
    return r1 === r2;
  };
};

exports.eqBooleanImpl = refEq;
exports.eqIntImpl = refEq;
exports.eqNumberImpl = refEq;
exports.eqCharImpl = refEq;
exports.eqStringImpl = refEq;

exports.eqArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      if (xs === ys) return true;
      if (xs.length !== ys.length) return false;

      for (var i = 0; i < xs.length; i++) {
        if (!f(xs[i])(ys[i])) return false;
      }

      return true;
    };
  };
};
},{}],"../output/Data.Symbol/foreign.js":[function(require,module,exports) {
"use strict"; // module Data.Symbol

exports.unsafeCoerce = function (arg) {
  return arg;
};
},{}],"../output/Data.Symbol/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var SProxy = function () {
  function SProxy() {}

  ;
  SProxy.value = new SProxy();
  return SProxy;
}();

var IsSymbol = function IsSymbol(reflectSymbol) {
  this.reflectSymbol = reflectSymbol;
};

var reifySymbol = function reifySymbol(s) {
  return function (f) {
    return $foreign.unsafeCoerce(function (dictIsSymbol) {
      return f(dictIsSymbol);
    })({
      reflectSymbol: function reflectSymbol(v) {
        return s;
      }
    })(SProxy.value);
  };
};

var reflectSymbol = function reflectSymbol(dict) {
  return dict.reflectSymbol;
};

module.exports = {
  IsSymbol: IsSymbol,
  reflectSymbol: reflectSymbol,
  reifySymbol: reifySymbol,
  SProxy: SProxy
};
},{"./foreign.js":"../output/Data.Symbol/foreign.js"}],"../output/Record.Unsafe/foreign.js":[function(require,module,exports) {
"use strict";

exports.unsafeHas = function (label) {
  return function (rec) {
    return {}.hasOwnProperty.call(rec, label);
  };
};

exports.unsafeGet = function (label) {
  return function (rec) {
    return rec[label];
  };
};

exports.unsafeSet = function (label) {
  return function (value) {
    return function (rec) {
      var copy = {};

      for (var key in rec) {
        if ({}.hasOwnProperty.call(rec, key)) {
          copy[key] = rec[key];
        }
      }

      copy[label] = value;
      return copy;
    };
  };
};

exports.unsafeDelete = function (label) {
  return function (rec) {
    var copy = {};

    for (var key in rec) {
      if (key !== label && {}.hasOwnProperty.call(rec, key)) {
        copy[key] = rec[key];
      }
    }

    return copy;
  };
};
},{}],"../output/Record.Unsafe/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

module.exports = {
  unsafeHas: $foreign.unsafeHas,
  unsafeGet: $foreign.unsafeGet,
  unsafeSet: $foreign.unsafeSet,
  unsafeDelete: $foreign.unsafeDelete
};
},{"./foreign.js":"../output/Record.Unsafe/foreign.js"}],"../output/Type.Data.RowList/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var RLProxy = function () {
  function RLProxy() {}

  ;
  RLProxy.value = new RLProxy();
  return RLProxy;
}();

module.exports = {
  RLProxy: RLProxy
};
},{}],"../output/Data.Eq/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Type_Data_RowList = require("../Type.Data.RowList/index.js");

var EqRecord = function EqRecord(eqRecord) {
  this.eqRecord = eqRecord;
};

var Eq1 = function Eq1(eq1) {
  this.eq1 = eq1;
};

var Eq = function Eq(eq) {
  this.eq = eq;
};

var eqVoid = new Eq(function (v) {
  return function (v1) {
    return true;
  };
});
var eqUnit = new Eq(function (v) {
  return function (v1) {
    return true;
  };
});
var eqString = new Eq($foreign.eqStringImpl);
var eqRowNil = new EqRecord(function (v) {
  return function (v1) {
    return function (v2) {
      return true;
    };
  };
});

var eqRecord = function eqRecord(dict) {
  return dict.eqRecord;
};

var eqRec = function eqRec(dictRowToList) {
  return function (dictEqRecord) {
    return new Eq(eqRecord(dictEqRecord)(Type_Data_RowList.RLProxy.value));
  };
};

var eqNumber = new Eq($foreign.eqNumberImpl);
var eqInt = new Eq($foreign.eqIntImpl);
var eqChar = new Eq($foreign.eqCharImpl);
var eqBoolean = new Eq($foreign.eqBooleanImpl);

var eq1 = function eq1(dict) {
  return dict.eq1;
};

var eq = function eq(dict) {
  return dict.eq;
};

var eqArray = function eqArray(dictEq) {
  return new Eq($foreign.eqArrayImpl(eq(dictEq)));
};

var eq1Array = new Eq1(function (dictEq) {
  return eq(eqArray(dictEq));
});

var eqRowCons = function eqRowCons(dictEqRecord) {
  return function (dictCons) {
    return function (dictIsSymbol) {
      return function (dictEq) {
        return new EqRecord(function (v) {
          return function (ra) {
            return function (rb) {
              var tail = eqRecord(dictEqRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
              var get = Record_Unsafe.unsafeGet(key);
              return eq(dictEq)(get(ra))(get(rb)) && tail;
            };
          };
        });
      };
    };
  };
};

var notEq = function notEq(dictEq) {
  return function (x) {
    return function (y) {
      return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
    };
  };
};

var notEq1 = function notEq1(dictEq1) {
  return function (dictEq) {
    return function (x) {
      return function (y) {
        return eq(eqBoolean)(eq1(dictEq1)(dictEq)(x)(y))(false);
      };
    };
  };
};

module.exports = {
  Eq: Eq,
  eq: eq,
  notEq: notEq,
  Eq1: Eq1,
  eq1: eq1,
  notEq1: notEq1,
  EqRecord: EqRecord,
  eqRecord: eqRecord,
  eqBoolean: eqBoolean,
  eqInt: eqInt,
  eqNumber: eqNumber,
  eqChar: eqChar,
  eqString: eqString,
  eqUnit: eqUnit,
  eqVoid: eqVoid,
  eqArray: eqArray,
  eqRec: eqRec,
  eq1Array: eq1Array,
  eqRowNil: eqRowNil,
  eqRowCons: eqRowCons
};
},{"./foreign.js":"../output/Data.Eq/foreign.js","../Data.Symbol/index.js":"../output/Data.Symbol/index.js","../Record.Unsafe/index.js":"../output/Record.Unsafe/index.js","../Type.Data.RowList/index.js":"../output/Type.Data.RowList/index.js"}],"../output/Data.Foldable/foreign.js":[function(require,module,exports) {
"use strict";

exports.foldrArray = function (f) {
  return function (init) {
    return function (xs) {
      var acc = init;
      var len = xs.length;

      for (var i = len - 1; i >= 0; i--) {
        acc = f(xs[i])(acc);
      }

      return acc;
    };
  };
};

exports.foldlArray = function (f) {
  return function (init) {
    return function (xs) {
      var acc = init;
      var len = xs.length;

      for (var i = 0; i < len; i++) {
        acc = f(acc)(xs[i]);
      }

      return acc;
    };
  };
};
},{}],"../output/Data.Functor/foreign.js":[function(require,module,exports) {
"use strict";

exports.arrayMap = function (f) {
  return function (arr) {
    var l = arr.length;
    var result = new Array(l);

    for (var i = 0; i < l; i++) {
      result[i] = f(arr[i]);
    }

    return result;
  };
};
},{}],"../output/Control.Semigroupoid/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Semigroupoid = function Semigroupoid(compose) {
  this.compose = compose;
};

var semigroupoidFn = new Semigroupoid(function (f) {
  return function (g) {
    return function (x) {
      return f(g(x));
    };
  };
});

var compose = function compose(dict) {
  return dict.compose;
};

var composeFlipped = function composeFlipped(dictSemigroupoid) {
  return function (f) {
    return function (g) {
      return compose(dictSemigroupoid)(g)(f);
    };
  };
};

module.exports = {
  compose: compose,
  Semigroupoid: Semigroupoid,
  composeFlipped: composeFlipped,
  semigroupoidFn: semigroupoidFn
};
},{}],"../output/Data.Boolean/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var otherwise = true;
module.exports = {
  otherwise: otherwise
};
},{}],"../output/Data.Function/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Data_Boolean = require("../Data.Boolean/index.js");

var on = function on(f) {
  return function (g) {
    return function (x) {
      return function (y) {
        return f(g(x))(g(y));
      };
    };
  };
};

var flip = function flip(f) {
  return function (b) {
    return function (a) {
      return f(a)(b);
    };
  };
};

var $$const = function $$const(a) {
  return function (v) {
    return a;
  };
};

var applyN = function applyN(f) {
  var go = function go($copy_n) {
    return function ($copy_acc) {
      var $tco_var_n = $copy_n;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(n, acc) {
        if (n <= 0) {
          $tco_done = true;
          return acc;
        }

        ;

        if (Data_Boolean.otherwise) {
          $tco_var_n = n - 1 | 0;
          $copy_acc = f(acc);
          return;
        }

        ;
        throw new Error("Failed pattern match at Data.Function (line 94, column 3 - line 96, column 37): " + [n.constructor.name, acc.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_n, $copy_acc);
      }

      ;
      return $tco_result;
    };
  };

  return go;
};

var applyFlipped = function applyFlipped(x) {
  return function (f) {
    return f(x);
  };
};

var apply = function apply(f) {
  return function (x) {
    return f(x);
  };
};

module.exports = {
  flip: flip,
  "const": $$const,
  apply: apply,
  applyFlipped: applyFlipped,
  applyN: applyN,
  on: on
};
},{"../Data.Boolean/index.js":"../output/Data.Boolean/index.js"}],"../output/Data.Unit/foreign.js":[function(require,module,exports) {
"use strict";

exports.unit = {};
},{}],"../output/Data.Show/foreign.js":[function(require,module,exports) {
"use strict";

exports.showIntImpl = function (n) {
  return n.toString();
};

exports.showNumberImpl = function (n) {
  var str = n.toString();
  return isNaN(str + ".0") ? str : str + ".0";
};

exports.showCharImpl = function (c) {
  var code = c.charCodeAt(0);

  if (code < 0x20 || code === 0x7F) {
    switch (c) {
      case "\x07":
        return "'\\a'";

      case "\b":
        return "'\\b'";

      case "\f":
        return "'\\f'";

      case "\n":
        return "'\\n'";

      case "\r":
        return "'\\r'";

      case "\t":
        return "'\\t'";

      case "\v":
        return "'\\v'";
    }

    return "'\\" + code.toString(10) + "'";
  }

  return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
};

exports.showStringImpl = function (s) {
  var l = s.length;
  return "\"" + s.replace(/[\0-\x1F\x7F"\\]/g, // eslint-disable-line no-control-regex
  function (c, i) {
    switch (c) {
      case "\"":
      case "\\":
        return "\\" + c;

      case "\x07":
        return "\\a";

      case "\b":
        return "\\b";

      case "\f":
        return "\\f";

      case "\n":
        return "\\n";

      case "\r":
        return "\\r";

      case "\t":
        return "\\t";

      case "\v":
        return "\\v";
    }

    var k = i + 1;
    var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
    return "\\" + c.charCodeAt(0).toString(10) + empty;
  }) + "\"";
};

exports.showArrayImpl = function (f) {
  return function (xs) {
    var ss = [];

    for (var i = 0, l = xs.length; i < l; i++) {
      ss[i] = f(xs[i]);
    }

    return "[" + ss.join(",") + "]";
  };
};

exports.cons = function (head) {
  return function (tail) {
    return [head].concat(tail);
  };
};

exports.join = function (separator) {
  return function (xs) {
    return xs.join(separator);
  };
};
},{}],"../output/Data.Show/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Type_Data_RowList = require("../Type.Data.RowList/index.js");

var ShowRecordFields = function ShowRecordFields(showRecordFields) {
  this.showRecordFields = showRecordFields;
};

var Show = function Show(show) {
  this.show = show;
};

var showString = new Show($foreign.showStringImpl);
var showRecordFieldsNil = new ShowRecordFields(function (v) {
  return function (v1) {
    return [];
  };
});

var showRecordFields = function showRecordFields(dict) {
  return dict.showRecordFields;
};

var showRecord = function showRecord(dictRowToList) {
  return function (dictShowRecordFields) {
    return new Show(function (record) {
      var v = showRecordFields(dictShowRecordFields)(Type_Data_RowList.RLProxy.value)(record);

      if (v.length === 0) {
        return "{}";
      }

      ;
      return $foreign.join(" ")(["{", $foreign.join(", ")(v), "}"]);
    });
  };
};

var showNumber = new Show($foreign.showNumberImpl);
var showInt = new Show($foreign.showIntImpl);
var showChar = new Show($foreign.showCharImpl);
var showBoolean = new Show(function (v) {
  if (v) {
    return "true";
  }

  ;

  if (!v) {
    return "false";
  }

  ;
  throw new Error("Failed pattern match at Data.Show (line 20, column 1 - line 22, column 23): " + [v.constructor.name]);
});

var show = function show(dict) {
  return dict.show;
};

var showArray = function showArray(dictShow) {
  return new Show($foreign.showArrayImpl(show(dictShow)));
};

var showRecordFieldsCons = function showRecordFieldsCons(dictIsSymbol) {
  return function (dictShowRecordFields) {
    return function (dictShow) {
      return new ShowRecordFields(function (v) {
        return function (record) {
          var tail = showRecordFields(dictShowRecordFields)(Type_Data_RowList.RLProxy.value)(record);
          var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
          var focus = Record_Unsafe.unsafeGet(key)(record);
          return $foreign.cons($foreign.join(": ")([key, show(dictShow)(focus)]))(tail);
        };
      });
    };
  };
};

module.exports = {
  Show: Show,
  show: show,
  ShowRecordFields: ShowRecordFields,
  showRecordFields: showRecordFields,
  showBoolean: showBoolean,
  showInt: showInt,
  showNumber: showNumber,
  showChar: showChar,
  showString: showString,
  showArray: showArray,
  showRecord: showRecord,
  showRecordFieldsNil: showRecordFieldsNil,
  showRecordFieldsCons: showRecordFieldsCons
};
},{"./foreign.js":"../output/Data.Show/foreign.js","../Data.Symbol/index.js":"../output/Data.Symbol/index.js","../Record.Unsafe/index.js":"../output/Record.Unsafe/index.js","../Type.Data.RowList/index.js":"../output/Type.Data.RowList/index.js"}],"../output/Data.Unit/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Data_Show = require("../Data.Show/index.js");

var showUnit = new Data_Show.Show(function (v) {
  return "unit";
});
module.exports = {
  showUnit: showUnit,
  unit: $foreign.unit
};
},{"./foreign.js":"../output/Data.Unit/foreign.js","../Data.Show/index.js":"../output/Data.Show/index.js"}],"../output/Data.Functor/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Functor = function Functor(map) {
  this.map = map;
};

var map = function map(dict) {
  return dict.map;
};

var mapFlipped = function mapFlipped(dictFunctor) {
  return function (fa) {
    return function (f) {
      return map(dictFunctor)(f)(fa);
    };
  };
};

var $$void = function $$void(dictFunctor) {
  return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
};

var voidLeft = function voidLeft(dictFunctor) {
  return function (f) {
    return function (x) {
      return map(dictFunctor)(Data_Function["const"](x))(f);
    };
  };
};

var voidRight = function voidRight(dictFunctor) {
  return function (x) {
    return map(dictFunctor)(Data_Function["const"](x));
  };
};

var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
var functorArray = new Functor($foreign.arrayMap);

var flap = function flap(dictFunctor) {
  return function (ff) {
    return function (x) {
      return map(dictFunctor)(function (f) {
        return f(x);
      })(ff);
    };
  };
};

module.exports = {
  Functor: Functor,
  map: map,
  mapFlipped: mapFlipped,
  "void": $$void,
  voidRight: voidRight,
  voidLeft: voidLeft,
  flap: flap,
  functorFn: functorFn,
  functorArray: functorArray
};
},{"./foreign.js":"../output/Data.Functor/foreign.js","../Control.Semigroupoid/index.js":"../output/Control.Semigroupoid/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js"}],"../output/Data.Semigroup/foreign.js":[function(require,module,exports) {
"use strict";

exports.concatString = function (s1) {
  return function (s2) {
    return s1 + s2;
  };
};

exports.concatArray = function (xs) {
  return function (ys) {
    if (xs.length === 0) return ys;
    if (ys.length === 0) return xs;
    return xs.concat(ys);
  };
};
},{}],"../output/Data.Void/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Data_Show = require("../Data.Show/index.js");

var Void = function Void(x) {
  return x;
};

var absurd = function absurd(a) {
  var spin = function spin($copy_v) {
    var $tco_result;

    function $tco_loop(v) {
      $copy_v = v;
      return;
    }

    ;

    while (!false) {
      $tco_result = $tco_loop($copy_v);
    }

    ;
    return $tco_result;
  };

  return spin(a);
};

var showVoid = new Data_Show.Show(absurd);
module.exports = {
  absurd: absurd,
  showVoid: showVoid
};
},{"../Data.Show/index.js":"../output/Data.Show/index.js"}],"../output/Data.Semigroup/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Data_Void = require("../Data.Void/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Type_Data_RowList = require("../Type.Data.RowList/index.js");

var SemigroupRecord = function SemigroupRecord(appendRecord) {
  this.appendRecord = appendRecord;
};

var Semigroup = function Semigroup(append) {
  this.append = append;
};

var semigroupVoid = new Semigroup(function (v) {
  return Data_Void.absurd;
});
var semigroupUnit = new Semigroup(function (v) {
  return function (v1) {
    return Data_Unit.unit;
  };
});
var semigroupString = new Semigroup($foreign.concatString);
var semigroupRecordNil = new SemigroupRecord(function (v) {
  return function (v1) {
    return function (v2) {
      return {};
    };
  };
});
var semigroupArray = new Semigroup($foreign.concatArray);

var appendRecord = function appendRecord(dict) {
  return dict.appendRecord;
};

var semigroupRecord = function semigroupRecord(dictRowToList) {
  return function (dictSemigroupRecord) {
    return new Semigroup(appendRecord(dictSemigroupRecord)(Type_Data_RowList.RLProxy.value));
  };
};

var append = function append(dict) {
  return dict.append;
};

var semigroupFn = function semigroupFn(dictSemigroup) {
  return new Semigroup(function (f) {
    return function (g) {
      return function (x) {
        return append(dictSemigroup)(f(x))(g(x));
      };
    };
  });
};

var semigroupRecordCons = function semigroupRecordCons(dictIsSymbol) {
  return function (dictCons) {
    return function (dictSemigroupRecord) {
      return function (dictSemigroup) {
        return new SemigroupRecord(function (v) {
          return function (ra) {
            return function (rb) {
              var tail = appendRecord(dictSemigroupRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
              var insert = Record_Unsafe.unsafeSet(key);
              var get = Record_Unsafe.unsafeGet(key);
              return insert(append(dictSemigroup)(get(ra))(get(rb)))(tail);
            };
          };
        });
      };
    };
  };
};

module.exports = {
  Semigroup: Semigroup,
  append: append,
  SemigroupRecord: SemigroupRecord,
  appendRecord: appendRecord,
  semigroupString: semigroupString,
  semigroupUnit: semigroupUnit,
  semigroupVoid: semigroupVoid,
  semigroupFn: semigroupFn,
  semigroupArray: semigroupArray,
  semigroupRecord: semigroupRecord,
  semigroupRecordNil: semigroupRecordNil,
  semigroupRecordCons: semigroupRecordCons
};
},{"./foreign.js":"../output/Data.Semigroup/foreign.js","../Data.Symbol/index.js":"../output/Data.Symbol/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js","../Data.Void/index.js":"../output/Data.Void/index.js","../Record.Unsafe/index.js":"../output/Record.Unsafe/index.js","../Type.Data.RowList/index.js":"../output/Type.Data.RowList/index.js"}],"../output/Control.Alt/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Data_Functor = require("../Data.Functor/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Alt = function Alt(Functor0, alt) {
  this.Functor0 = Functor0;
  this.alt = alt;
};

var altArray = new Alt(function () {
  return Data_Functor.functorArray;
}, Data_Semigroup.append(Data_Semigroup.semigroupArray));

var alt = function alt(dict) {
  return dict.alt;
};

module.exports = {
  Alt: Alt,
  alt: alt,
  altArray: altArray
};
},{"../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js"}],"../output/Control.Apply/foreign.js":[function(require,module,exports) {
"use strict";

exports.arrayApply = function (fs) {
  return function (xs) {
    var l = fs.length;
    var k = xs.length;
    var result = new Array(l * k);
    var n = 0;

    for (var i = 0; i < l; i++) {
      var f = fs[i];

      for (var j = 0; j < k; j++) {
        result[n++] = f(xs[j]);
      }
    }

    return result;
  };
};
},{}],"../output/Control.Category/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Category = function Category(Semigroupoid0, identity) {
  this.Semigroupoid0 = Semigroupoid0;
  this.identity = identity;
};

var identity = function identity(dict) {
  return dict.identity;
};

var categoryFn = new Category(function () {
  return Control_Semigroupoid.semigroupoidFn;
}, function (x) {
  return x;
});
module.exports = {
  Category: Category,
  identity: identity,
  categoryFn: categoryFn
};
},{"../Control.Semigroupoid/index.js":"../output/Control.Semigroupoid/index.js"}],"../output/Control.Apply/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Apply = function Apply(Functor0, apply) {
  this.Functor0 = Functor0;
  this.apply = apply;
};

var applyFn = new Apply(function () {
  return Data_Functor.functorFn;
}, function (f) {
  return function (g) {
    return function (x) {
      return f(x)(g(x));
    };
  };
});
var applyArray = new Apply(function () {
  return Data_Functor.functorArray;
}, $foreign.arrayApply);

var apply = function apply(dict) {
  return dict.apply;
};

var applyFirst = function applyFirst(dictApply) {
  return function (a) {
    return function (b) {
      return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"])(a))(b);
    };
  };
};

var applySecond = function applySecond(dictApply) {
  return function (a) {
    return function (b) {
      return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)))(a))(b);
    };
  };
};

var lift2 = function lift2(dictApply) {
  return function (f) {
    return function (a) {
      return function (b) {
        return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b);
      };
    };
  };
};

var lift3 = function lift3(dictApply) {
  return function (f) {
    return function (a) {
      return function (b) {
        return function (c) {
          return apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c);
        };
      };
    };
  };
};

var lift4 = function lift4(dictApply) {
  return function (f) {
    return function (a) {
      return function (b) {
        return function (c) {
          return function (d) {
            return apply(dictApply)(apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c))(d);
          };
        };
      };
    };
  };
};

var lift5 = function lift5(dictApply) {
  return function (f) {
    return function (a) {
      return function (b) {
        return function (c) {
          return function (d) {
            return function (e) {
              return apply(dictApply)(apply(dictApply)(apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c))(d))(e);
            };
          };
        };
      };
    };
  };
};

module.exports = {
  Apply: Apply,
  apply: apply,
  applyFirst: applyFirst,
  applySecond: applySecond,
  lift2: lift2,
  lift3: lift3,
  lift4: lift4,
  lift5: lift5,
  applyFn: applyFn,
  applyArray: applyArray
};
},{"./foreign.js":"../output/Control.Apply/foreign.js","../Control.Category/index.js":"../output/Control.Category/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js"}],"../output/Control.Applicative/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Apply = require("../Control.Apply/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Applicative = function Applicative(Apply0, pure) {
  this.Apply0 = Apply0;
  this.pure = pure;
};

var pure = function pure(dict) {
  return dict.pure;
};

var unless = function unless(dictApplicative) {
  return function (v) {
    return function (v1) {
      if (!v) {
        return v1;
      }

      ;

      if (v) {
        return pure(dictApplicative)(Data_Unit.unit);
      }

      ;
      throw new Error("Failed pattern match at Control.Applicative (line 62, column 1 - line 62, column 65): " + [v.constructor.name, v1.constructor.name]);
    };
  };
};

var when = function when(dictApplicative) {
  return function (v) {
    return function (v1) {
      if (v) {
        return v1;
      }

      ;

      if (!v) {
        return pure(dictApplicative)(Data_Unit.unit);
      }

      ;
      throw new Error("Failed pattern match at Control.Applicative (line 57, column 1 - line 57, column 63): " + [v.constructor.name, v1.constructor.name]);
    };
  };
};

var liftA1 = function liftA1(dictApplicative) {
  return function (f) {
    return function (a) {
      return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
    };
  };
};

var applicativeFn = new Applicative(function () {
  return Control_Apply.applyFn;
}, function (x) {
  return function (v) {
    return x;
  };
});
var applicativeArray = new Applicative(function () {
  return Control_Apply.applyArray;
}, function (x) {
  return [x];
});
module.exports = {
  Applicative: Applicative,
  pure: pure,
  liftA1: liftA1,
  unless: unless,
  when: when,
  applicativeFn: applicativeFn,
  applicativeArray: applicativeArray
};
},{"../Control.Apply/index.js":"../output/Control.Apply/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js"}],"../output/Control.Bind/foreign.js":[function(require,module,exports) {
"use strict";

exports.arrayBind = function (arr) {
  return function (f) {
    var result = [];

    for (var i = 0, l = arr.length; i < l; i++) {
      Array.prototype.push.apply(result, f(arr[i]));
    }

    return result;
  };
};
},{}],"../output/Control.Bind/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Function = require("../Data.Function/index.js");

var Discard = function Discard(discard) {
  this.discard = discard;
};

var Bind = function Bind(Apply0, bind) {
  this.Apply0 = Apply0;
  this.bind = bind;
};

var discard = function discard(dict) {
  return dict.discard;
};

var bindFn = new Bind(function () {
  return Control_Apply.applyFn;
}, function (m) {
  return function (f) {
    return function (x) {
      return f(m(x))(x);
    };
  };
});
var bindArray = new Bind(function () {
  return Control_Apply.applyArray;
}, $foreign.arrayBind);

var bind = function bind(dict) {
  return dict.bind;
};

var bindFlipped = function bindFlipped(dictBind) {
  return Data_Function.flip(bind(dictBind));
};

var composeKleisliFlipped = function composeKleisliFlipped(dictBind) {
  return function (f) {
    return function (g) {
      return function (a) {
        return bindFlipped(dictBind)(f)(g(a));
      };
    };
  };
};

var composeKleisli = function composeKleisli(dictBind) {
  return function (f) {
    return function (g) {
      return function (a) {
        return bind(dictBind)(f(a))(g);
      };
    };
  };
};

var discardUnit = new Discard(function (dictBind) {
  return bind(dictBind);
});

var ifM = function ifM(dictBind) {
  return function (cond) {
    return function (t) {
      return function (f) {
        return bind(dictBind)(cond)(function (cond$prime) {
          if (cond$prime) {
            return t;
          }

          ;
          return f;
        });
      };
    };
  };
};

var join = function join(dictBind) {
  return function (m) {
    return bind(dictBind)(m)(Control_Category.identity(Control_Category.categoryFn));
  };
};

module.exports = {
  Bind: Bind,
  bind: bind,
  bindFlipped: bindFlipped,
  Discard: Discard,
  discard: discard,
  join: join,
  composeKleisli: composeKleisli,
  composeKleisliFlipped: composeKleisliFlipped,
  ifM: ifM,
  bindFn: bindFn,
  bindArray: bindArray,
  discardUnit: discardUnit
};
},{"./foreign.js":"../output/Control.Bind/foreign.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Category/index.js":"../output/Control.Category/index.js","../Data.Function/index.js":"../output/Data.Function/index.js"}],"../output/Control.Plus/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Plus = function Plus(Alt0, empty) {
  this.Alt0 = Alt0;
  this.empty = empty;
};

var plusArray = new Plus(function () {
  return Control_Alt.altArray;
}, []);

var empty = function empty(dict) {
  return dict.empty;
};

module.exports = {
  Plus: Plus,
  empty: empty,
  plusArray: plusArray
};
},{"../Control.Alt/index.js":"../output/Control.Alt/index.js"}],"../output/Data.HeytingAlgebra/foreign.js":[function(require,module,exports) {
"use strict";

exports.boolConj = function (b1) {
  return function (b2) {
    return b1 && b2;
  };
};

exports.boolDisj = function (b1) {
  return function (b2) {
    return b1 || b2;
  };
};

exports.boolNot = function (b) {
  return !b;
};
},{}],"../output/Type.Data.Row/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var RProxy = function () {
  function RProxy() {}

  ;
  RProxy.value = new RProxy();
  return RProxy;
}();

module.exports = {
  RProxy: RProxy
};
},{}],"../output/Data.HeytingAlgebra/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Type_Data_Row = require("../Type.Data.Row/index.js");

var Type_Data_RowList = require("../Type.Data.RowList/index.js");

var HeytingAlgebraRecord = function HeytingAlgebraRecord(conjRecord, disjRecord, ffRecord, impliesRecord, notRecord, ttRecord) {
  this.conjRecord = conjRecord;
  this.disjRecord = disjRecord;
  this.ffRecord = ffRecord;
  this.impliesRecord = impliesRecord;
  this.notRecord = notRecord;
  this.ttRecord = ttRecord;
};

var HeytingAlgebra = function HeytingAlgebra(conj, disj, ff, implies, not, tt) {
  this.conj = conj;
  this.disj = disj;
  this.ff = ff;
  this.implies = implies;
  this.not = not;
  this.tt = tt;
};

var ttRecord = function ttRecord(dict) {
  return dict.ttRecord;
};

var tt = function tt(dict) {
  return dict.tt;
};

var notRecord = function notRecord(dict) {
  return dict.notRecord;
};

var not = function not(dict) {
  return dict.not;
};

var impliesRecord = function impliesRecord(dict) {
  return dict.impliesRecord;
};

var implies = function implies(dict) {
  return dict.implies;
};

var heytingAlgebraUnit = new HeytingAlgebra(function (v) {
  return function (v1) {
    return Data_Unit.unit;
  };
}, function (v) {
  return function (v1) {
    return Data_Unit.unit;
  };
}, Data_Unit.unit, function (v) {
  return function (v1) {
    return Data_Unit.unit;
  };
}, function (v) {
  return Data_Unit.unit;
}, Data_Unit.unit);
var heytingAlgebraRecordNil = new HeytingAlgebraRecord(function (v) {
  return function (v1) {
    return function (v2) {
      return {};
    };
  };
}, function (v) {
  return function (v1) {
    return function (v2) {
      return {};
    };
  };
}, function (v) {
  return function (v1) {
    return {};
  };
}, function (v) {
  return function (v1) {
    return function (v2) {
      return {};
    };
  };
}, function (v) {
  return function (v1) {
    return {};
  };
}, function (v) {
  return function (v1) {
    return {};
  };
});

var ffRecord = function ffRecord(dict) {
  return dict.ffRecord;
};

var ff = function ff(dict) {
  return dict.ff;
};

var disjRecord = function disjRecord(dict) {
  return dict.disjRecord;
};

var disj = function disj(dict) {
  return dict.disj;
};

var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
  return function (b) {
    return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
  };
}, $foreign.boolNot, true);

var conjRecord = function conjRecord(dict) {
  return dict.conjRecord;
};

var heytingAlgebraRecord = function heytingAlgebraRecord(dictRowToList) {
  return function (dictHeytingAlgebraRecord) {
    return new HeytingAlgebra(conjRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value), disjRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value), ffRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(Type_Data_Row.RProxy.value), impliesRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value), notRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value), ttRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(Type_Data_Row.RProxy.value));
  };
};

var conj = function conj(dict) {
  return dict.conj;
};

var heytingAlgebraFunction = function heytingAlgebraFunction(dictHeytingAlgebra) {
  return new HeytingAlgebra(function (f) {
    return function (g) {
      return function (a) {
        return conj(dictHeytingAlgebra)(f(a))(g(a));
      };
    };
  }, function (f) {
    return function (g) {
      return function (a) {
        return disj(dictHeytingAlgebra)(f(a))(g(a));
      };
    };
  }, function (v) {
    return ff(dictHeytingAlgebra);
  }, function (f) {
    return function (g) {
      return function (a) {
        return implies(dictHeytingAlgebra)(f(a))(g(a));
      };
    };
  }, function (f) {
    return function (a) {
      return not(dictHeytingAlgebra)(f(a));
    };
  }, function (v) {
    return tt(dictHeytingAlgebra);
  });
};

var heytingAlgebraRecordCons = function heytingAlgebraRecordCons(dictIsSymbol) {
  return function (dictCons) {
    return function (dictHeytingAlgebraRecord) {
      return function (dictHeytingAlgebra) {
        return new HeytingAlgebraRecord(function (v) {
          return function (ra) {
            return function (rb) {
              var tail = conjRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
              var insert = Record_Unsafe.unsafeSet(key);
              var get = Record_Unsafe.unsafeGet(key);
              return insert(conj(dictHeytingAlgebra)(get(ra))(get(rb)))(tail);
            };
          };
        }, function (v) {
          return function (ra) {
            return function (rb) {
              var tail = disjRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
              var insert = Record_Unsafe.unsafeSet(key);
              var get = Record_Unsafe.unsafeGet(key);
              return insert(disj(dictHeytingAlgebra)(get(ra))(get(rb)))(tail);
            };
          };
        }, function (v) {
          return function (row) {
            var tail = ffRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(row);
            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
            var insert = Record_Unsafe.unsafeSet(key);
            return insert(ff(dictHeytingAlgebra))(tail);
          };
        }, function (v) {
          return function (ra) {
            return function (rb) {
              var tail = impliesRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
              var insert = Record_Unsafe.unsafeSet(key);
              var get = Record_Unsafe.unsafeGet(key);
              return insert(implies(dictHeytingAlgebra)(get(ra))(get(rb)))(tail);
            };
          };
        }, function (v) {
          return function (row) {
            var tail = notRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(row);
            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
            var insert = Record_Unsafe.unsafeSet(key);
            var get = Record_Unsafe.unsafeGet(key);
            return insert(not(dictHeytingAlgebra)(get(row)))(tail);
          };
        }, function (v) {
          return function (row) {
            var tail = ttRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(row);
            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
            var insert = Record_Unsafe.unsafeSet(key);
            return insert(tt(dictHeytingAlgebra))(tail);
          };
        });
      };
    };
  };
};

module.exports = {
  HeytingAlgebra: HeytingAlgebra,
  tt: tt,
  ff: ff,
  implies: implies,
  conj: conj,
  disj: disj,
  not: not,
  HeytingAlgebraRecord: HeytingAlgebraRecord,
  ffRecord: ffRecord,
  ttRecord: ttRecord,
  impliesRecord: impliesRecord,
  conjRecord: conjRecord,
  disjRecord: disjRecord,
  notRecord: notRecord,
  heytingAlgebraBoolean: heytingAlgebraBoolean,
  heytingAlgebraUnit: heytingAlgebraUnit,
  heytingAlgebraFunction: heytingAlgebraFunction,
  heytingAlgebraRecord: heytingAlgebraRecord,
  heytingAlgebraRecordNil: heytingAlgebraRecordNil,
  heytingAlgebraRecordCons: heytingAlgebraRecordCons
};
},{"./foreign.js":"../output/Data.HeytingAlgebra/foreign.js","../Data.Symbol/index.js":"../output/Data.Symbol/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js","../Record.Unsafe/index.js":"../output/Record.Unsafe/index.js","../Type.Data.Row/index.js":"../output/Type.Data.Row/index.js","../Type.Data.RowList/index.js":"../output/Type.Data.RowList/index.js"}],"../output/Control.Alternative/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Alternative = function Alternative(Applicative0, Plus1) {
  this.Applicative0 = Applicative0;
  this.Plus1 = Plus1;
};

var alternativeArray = new Alternative(function () {
  return Control_Applicative.applicativeArray;
}, function () {
  return Control_Plus.plusArray;
});
module.exports = {
  Alternative: Alternative,
  alternativeArray: alternativeArray
};
},{"../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Plus/index.js":"../output/Control.Plus/index.js"}],"../output/Control.Extend/foreign.js":[function(require,module,exports) {
"use strict";

exports.arrayExtend = function (f) {
  return function (xs) {
    return xs.map(function (_, i, xs) {
      return f(xs.slice(i));
    });
  };
};
},{}],"../output/Control.Extend/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Extend = function Extend(Functor0, extend) {
  this.Functor0 = Functor0;
  this.extend = extend;
};

var extendFn = function extendFn(dictSemigroup) {
  return new Extend(function () {
    return Data_Functor.functorFn;
  }, function (f) {
    return function (g) {
      return function (w) {
        return f(function (w$prime) {
          return g(Data_Semigroup.append(dictSemigroup)(w)(w$prime));
        });
      };
    };
  });
};

var extendArray = new Extend(function () {
  return Data_Functor.functorArray;
}, $foreign.arrayExtend);

var extend = function extend(dict) {
  return dict.extend;
};

var extendFlipped = function extendFlipped(dictExtend) {
  return function (w) {
    return function (f) {
      return extend(dictExtend)(f)(w);
    };
  };
};

var duplicate = function duplicate(dictExtend) {
  return extend(dictExtend)(Control_Category.identity(Control_Category.categoryFn));
};

var composeCoKleisliFlipped = function composeCoKleisliFlipped(dictExtend) {
  return function (f) {
    return function (g) {
      return function (w) {
        return f(extend(dictExtend)(g)(w));
      };
    };
  };
};

var composeCoKleisli = function composeCoKleisli(dictExtend) {
  return function (f) {
    return function (g) {
      return function (w) {
        return g(extend(dictExtend)(f)(w));
      };
    };
  };
};

module.exports = {
  Extend: Extend,
  extend: extend,
  extendFlipped: extendFlipped,
  composeCoKleisli: composeCoKleisli,
  composeCoKleisliFlipped: composeCoKleisliFlipped,
  duplicate: duplicate,
  extendFn: extendFn,
  extendArray: extendArray
};
},{"./foreign.js":"../output/Control.Extend/foreign.js","../Control.Category/index.js":"../output/Control.Category/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js"}],"../output/Control.Monad/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Monad = function Monad(Applicative0, Bind1) {
  this.Applicative0 = Applicative0;
  this.Bind1 = Bind1;
};

var whenM = function whenM(dictMonad) {
  return function (mb) {
    return function (m) {
      return Control_Bind.bind(dictMonad.Bind1())(mb)(function (b) {
        return Control_Applicative.when(dictMonad.Applicative0())(b)(m);
      });
    };
  };
};

var unlessM = function unlessM(dictMonad) {
  return function (mb) {
    return function (m) {
      return Control_Bind.bind(dictMonad.Bind1())(mb)(function (b) {
        return Control_Applicative.unless(dictMonad.Applicative0())(b)(m);
      });
    };
  };
};

var monadFn = new Monad(function () {
  return Control_Applicative.applicativeFn;
}, function () {
  return Control_Bind.bindFn;
});
var monadArray = new Monad(function () {
  return Control_Applicative.applicativeArray;
}, function () {
  return Control_Bind.bindArray;
});

var liftM1 = function liftM1(dictMonad) {
  return function (f) {
    return function (a) {
      return Control_Bind.bind(dictMonad.Bind1())(a)(function (a$prime) {
        return Control_Applicative.pure(dictMonad.Applicative0())(f(a$prime));
      });
    };
  };
};

var ap = function ap(dictMonad) {
  return function (f) {
    return function (a) {
      return Control_Bind.bind(dictMonad.Bind1())(f)(function (f$prime) {
        return Control_Bind.bind(dictMonad.Bind1())(a)(function (a$prime) {
          return Control_Applicative.pure(dictMonad.Applicative0())(f$prime(a$prime));
        });
      });
    };
  };
};

module.exports = {
  Monad: Monad,
  liftM1: liftM1,
  ap: ap,
  whenM: whenM,
  unlessM: unlessM,
  monadFn: monadFn,
  monadArray: monadArray
};
},{"../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js"}],"../output/Control.MonadZero/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var MonadZero = function MonadZero(Alternative1, Monad0) {
  this.Alternative1 = Alternative1;
  this.Monad0 = Monad0;
};

var monadZeroArray = new MonadZero(function () {
  return Control_Alternative.alternativeArray;
}, function () {
  return Control_Monad.monadArray;
});

var guard = function guard(dictMonadZero) {
  return function (v) {
    if (v) {
      return Control_Applicative.pure(dictMonadZero.Alternative1().Applicative0())(Data_Unit.unit);
    }

    ;

    if (!v) {
      return Control_Plus.empty(dictMonadZero.Alternative1().Plus1());
    }

    ;
    throw new Error("Failed pattern match at Control.MonadZero (line 54, column 1 - line 54, column 52): " + [v.constructor.name]);
  };
};

module.exports = {
  MonadZero: MonadZero,
  guard: guard,
  monadZeroArray: monadZeroArray
};
},{"../Control.Alternative/index.js":"../output/Control.Alternative/index.js","../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Monad/index.js":"../output/Control.Monad/index.js","../Control.Plus/index.js":"../output/Control.Plus/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js"}],"../output/Data.Bounded/foreign.js":[function(require,module,exports) {
"use strict";

exports.topInt = 2147483647;
exports.bottomInt = -2147483648;
exports.topChar = String.fromCharCode(65535);
exports.bottomChar = String.fromCharCode(0);
exports.topNumber = Number.POSITIVE_INFINITY;
exports.bottomNumber = Number.NEGATIVE_INFINITY;
},{}],"../output/Data.Ord/foreign.js":[function(require,module,exports) {
"use strict";

var unsafeCompareImpl = function unsafeCompareImpl(lt) {
  return function (eq) {
    return function (gt) {
      return function (x) {
        return function (y) {
          return x < y ? lt : x === y ? eq : gt;
        };
      };
    };
  };
};

exports.ordBooleanImpl = unsafeCompareImpl;
exports.ordIntImpl = unsafeCompareImpl;
exports.ordNumberImpl = unsafeCompareImpl;
exports.ordStringImpl = unsafeCompareImpl;
exports.ordCharImpl = unsafeCompareImpl;

exports.ordArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      var i = 0;
      var xlen = xs.length;
      var ylen = ys.length;

      while (i < xlen && i < ylen) {
        var x = xs[i];
        var y = ys[i];
        var o = f(x)(y);

        if (o !== 0) {
          return o;
        }

        i++;
      }

      if (xlen === ylen) {
        return 0;
      } else if (xlen > ylen) {
        return -1;
      } else {
        return 1;
      }
    };
  };
};
},{}],"../output/Data.Ordering/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var LT = function () {
  function LT() {}

  ;
  LT.value = new LT();
  return LT;
}();

var GT = function () {
  function GT() {}

  ;
  GT.value = new GT();
  return GT;
}();

var EQ = function () {
  function EQ() {}

  ;
  EQ.value = new EQ();
  return EQ;
}();

var showOrdering = new Data_Show.Show(function (v) {
  if (v instanceof LT) {
    return "LT";
  }

  ;

  if (v instanceof GT) {
    return "GT";
  }

  ;

  if (v instanceof EQ) {
    return "EQ";
  }

  ;
  throw new Error("Failed pattern match at Data.Ordering (line 26, column 1 - line 29, column 17): " + [v.constructor.name]);
});
var semigroupOrdering = new Data_Semigroup.Semigroup(function (v) {
  return function (v1) {
    if (v instanceof LT) {
      return LT.value;
    }

    ;

    if (v instanceof GT) {
      return GT.value;
    }

    ;

    if (v instanceof EQ) {
      return v1;
    }

    ;
    throw new Error("Failed pattern match at Data.Ordering (line 21, column 1 - line 24, column 18): " + [v.constructor.name, v1.constructor.name]);
  };
});

var invert = function invert(v) {
  if (v instanceof GT) {
    return LT.value;
  }

  ;

  if (v instanceof EQ) {
    return EQ.value;
  }

  ;

  if (v instanceof LT) {
    return GT.value;
  }

  ;
  throw new Error("Failed pattern match at Data.Ordering (line 33, column 1 - line 33, column 31): " + [v.constructor.name]);
};

var eqOrdering = new Data_Eq.Eq(function (v) {
  return function (v1) {
    if (v instanceof LT && v1 instanceof LT) {
      return true;
    }

    ;

    if (v instanceof GT && v1 instanceof GT) {
      return true;
    }

    ;

    if (v instanceof EQ && v1 instanceof EQ) {
      return true;
    }

    ;
    return false;
  };
});
module.exports = {
  LT: LT,
  GT: GT,
  EQ: EQ,
  invert: invert,
  eqOrdering: eqOrdering,
  semigroupOrdering: semigroupOrdering,
  showOrdering: showOrdering
};
},{"../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Show/index.js":"../output/Data.Show/index.js"}],"../output/Data.Ring/foreign.js":[function(require,module,exports) {
"use strict";

exports.intSub = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x - y | 0;
  };
};

exports.numSub = function (n1) {
  return function (n2) {
    return n1 - n2;
  };
};
},{}],"../output/Data.Semiring/foreign.js":[function(require,module,exports) {
"use strict";

exports.intAdd = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x + y | 0;
  };
};

exports.intMul = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x * y | 0;
  };
};

exports.numAdd = function (n1) {
  return function (n2) {
    return n1 + n2;
  };
};

exports.numMul = function (n1) {
  return function (n2) {
    return n1 * n2;
  };
};
},{}],"../output/Data.Semiring/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Type_Data_Row = require("../Type.Data.Row/index.js");

var Type_Data_RowList = require("../Type.Data.RowList/index.js");

var SemiringRecord = function SemiringRecord(addRecord, mulRecord, oneRecord, zeroRecord) {
  this.addRecord = addRecord;
  this.mulRecord = mulRecord;
  this.oneRecord = oneRecord;
  this.zeroRecord = zeroRecord;
};

var Semiring = function Semiring(add, mul, one, zero) {
  this.add = add;
  this.mul = mul;
  this.one = one;
  this.zero = zero;
};

var zeroRecord = function zeroRecord(dict) {
  return dict.zeroRecord;
};

var zero = function zero(dict) {
  return dict.zero;
};

var semiringUnit = new Semiring(function (v) {
  return function (v1) {
    return Data_Unit.unit;
  };
}, function (v) {
  return function (v1) {
    return Data_Unit.unit;
  };
}, Data_Unit.unit, Data_Unit.unit);
var semiringRecordNil = new SemiringRecord(function (v) {
  return function (v1) {
    return function (v2) {
      return {};
    };
  };
}, function (v) {
  return function (v1) {
    return function (v2) {
      return {};
    };
  };
}, function (v) {
  return function (v1) {
    return {};
  };
}, function (v) {
  return function (v1) {
    return {};
  };
});
var semiringNumber = new Semiring($foreign.numAdd, $foreign.numMul, 1.0, 0.0);
var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);

var oneRecord = function oneRecord(dict) {
  return dict.oneRecord;
};

var one = function one(dict) {
  return dict.one;
};

var mulRecord = function mulRecord(dict) {
  return dict.mulRecord;
};

var mul = function mul(dict) {
  return dict.mul;
};

var addRecord = function addRecord(dict) {
  return dict.addRecord;
};

var semiringRecord = function semiringRecord(dictRowToList) {
  return function (dictSemiringRecord) {
    return new Semiring(addRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value), mulRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value), oneRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value)(Type_Data_Row.RProxy.value), zeroRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value)(Type_Data_Row.RProxy.value));
  };
};

var add = function add(dict) {
  return dict.add;
};

var semiringFn = function semiringFn(dictSemiring) {
  return new Semiring(function (f) {
    return function (g) {
      return function (x) {
        return add(dictSemiring)(f(x))(g(x));
      };
    };
  }, function (f) {
    return function (g) {
      return function (x) {
        return mul(dictSemiring)(f(x))(g(x));
      };
    };
  }, function (v) {
    return one(dictSemiring);
  }, function (v) {
    return zero(dictSemiring);
  });
};

var semiringRecordCons = function semiringRecordCons(dictIsSymbol) {
  return function (dictCons) {
    return function (dictSemiringRecord) {
      return function (dictSemiring) {
        return new SemiringRecord(function (v) {
          return function (ra) {
            return function (rb) {
              var tail = addRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
              var insert = Record_Unsafe.unsafeSet(key);
              var get = Record_Unsafe.unsafeGet(key);
              return insert(add(dictSemiring)(get(ra))(get(rb)))(tail);
            };
          };
        }, function (v) {
          return function (ra) {
            return function (rb) {
              var tail = mulRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
              var insert = Record_Unsafe.unsafeSet(key);
              var get = Record_Unsafe.unsafeGet(key);
              return insert(mul(dictSemiring)(get(ra))(get(rb)))(tail);
            };
          };
        }, function (v) {
          return function (v1) {
            var tail = oneRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value)(Type_Data_Row.RProxy.value);
            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
            var insert = Record_Unsafe.unsafeSet(key);
            return insert(one(dictSemiring))(tail);
          };
        }, function (v) {
          return function (v1) {
            var tail = zeroRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value)(Type_Data_Row.RProxy.value);
            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
            var insert = Record_Unsafe.unsafeSet(key);
            return insert(zero(dictSemiring))(tail);
          };
        });
      };
    };
  };
};

module.exports = {
  Semiring: Semiring,
  add: add,
  zero: zero,
  mul: mul,
  one: one,
  SemiringRecord: SemiringRecord,
  addRecord: addRecord,
  mulRecord: mulRecord,
  oneRecord: oneRecord,
  zeroRecord: zeroRecord,
  semiringInt: semiringInt,
  semiringNumber: semiringNumber,
  semiringFn: semiringFn,
  semiringUnit: semiringUnit,
  semiringRecord: semiringRecord,
  semiringRecordNil: semiringRecordNil,
  semiringRecordCons: semiringRecordCons
};
},{"./foreign.js":"../output/Data.Semiring/foreign.js","../Data.Symbol/index.js":"../output/Data.Symbol/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js","../Record.Unsafe/index.js":"../output/Record.Unsafe/index.js","../Type.Data.Row/index.js":"../output/Type.Data.Row/index.js","../Type.Data.RowList/index.js":"../output/Type.Data.RowList/index.js"}],"../output/Data.Ring/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Type_Data_RowList = require("../Type.Data.RowList/index.js");

var RingRecord = function RingRecord(SemiringRecord0, subRecord) {
  this.SemiringRecord0 = SemiringRecord0;
  this.subRecord = subRecord;
};

var Ring = function Ring(Semiring0, sub) {
  this.Semiring0 = Semiring0;
  this.sub = sub;
};

var subRecord = function subRecord(dict) {
  return dict.subRecord;
};

var sub = function sub(dict) {
  return dict.sub;
};

var ringUnit = new Ring(function () {
  return Data_Semiring.semiringUnit;
}, function (v) {
  return function (v1) {
    return Data_Unit.unit;
  };
});
var ringRecordNil = new RingRecord(function () {
  return Data_Semiring.semiringRecordNil;
}, function (v) {
  return function (v1) {
    return function (v2) {
      return {};
    };
  };
});

var ringRecordCons = function ringRecordCons(dictIsSymbol) {
  return function (dictCons) {
    return function (dictRingRecord) {
      return function (dictRing) {
        return new RingRecord(function () {
          return Data_Semiring.semiringRecordCons(dictIsSymbol)()(dictRingRecord.SemiringRecord0())(dictRing.Semiring0());
        }, function (v) {
          return function (ra) {
            return function (rb) {
              var tail = subRecord(dictRingRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
              var insert = Record_Unsafe.unsafeSet(key);
              var get = Record_Unsafe.unsafeGet(key);
              return insert(sub(dictRing)(get(ra))(get(rb)))(tail);
            };
          };
        });
      };
    };
  };
};

var ringRecord = function ringRecord(dictRowToList) {
  return function (dictRingRecord) {
    return new Ring(function () {
      return Data_Semiring.semiringRecord()(dictRingRecord.SemiringRecord0());
    }, subRecord(dictRingRecord)(Type_Data_RowList.RLProxy.value));
  };
};

var ringNumber = new Ring(function () {
  return Data_Semiring.semiringNumber;
}, $foreign.numSub);
var ringInt = new Ring(function () {
  return Data_Semiring.semiringInt;
}, $foreign.intSub);

var ringFn = function ringFn(dictRing) {
  return new Ring(function () {
    return Data_Semiring.semiringFn(dictRing.Semiring0());
  }, function (f) {
    return function (g) {
      return function (x) {
        return sub(dictRing)(f(x))(g(x));
      };
    };
  });
};

var negate = function negate(dictRing) {
  return function (a) {
    return sub(dictRing)(Data_Semiring.zero(dictRing.Semiring0()))(a);
  };
};

module.exports = {
  Ring: Ring,
  sub: sub,
  negate: negate,
  RingRecord: RingRecord,
  subRecord: subRecord,
  ringInt: ringInt,
  ringNumber: ringNumber,
  ringUnit: ringUnit,
  ringFn: ringFn,
  ringRecord: ringRecord,
  ringRecordNil: ringRecordNil,
  ringRecordCons: ringRecordCons
};
},{"./foreign.js":"../output/Data.Ring/foreign.js","../Data.Semiring/index.js":"../output/Data.Semiring/index.js","../Data.Symbol/index.js":"../output/Data.Symbol/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js","../Record.Unsafe/index.js":"../output/Record.Unsafe/index.js","../Type.Data.RowList/index.js":"../output/Type.Data.RowList/index.js"}],"../output/Data.Ord/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Type_Data_RowList = require("../Type.Data.RowList/index.js");

var OrdRecord = function OrdRecord(EqRecord0, compareRecord) {
  this.EqRecord0 = EqRecord0;
  this.compareRecord = compareRecord;
};

var Ord1 = function Ord1(Eq10, compare1) {
  this.Eq10 = Eq10;
  this.compare1 = compare1;
};

var Ord = function Ord(Eq0, compare) {
  this.Eq0 = Eq0;
  this.compare = compare;
};

var ordVoid = new Ord(function () {
  return Data_Eq.eqVoid;
}, function (v) {
  return function (v1) {
    return Data_Ordering.EQ.value;
  };
});
var ordUnit = new Ord(function () {
  return Data_Eq.eqUnit;
}, function (v) {
  return function (v1) {
    return Data_Ordering.EQ.value;
  };
});
var ordString = new Ord(function () {
  return Data_Eq.eqString;
}, $foreign.ordStringImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
var ordRecordNil = new OrdRecord(function () {
  return Data_Eq.eqRowNil;
}, function (v) {
  return function (v1) {
    return function (v2) {
      return Data_Ordering.EQ.value;
    };
  };
});
var ordOrdering = new Ord(function () {
  return Data_Ordering.eqOrdering;
}, function (v) {
  return function (v1) {
    if (v instanceof Data_Ordering.LT && v1 instanceof Data_Ordering.LT) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.EQ) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (v instanceof Data_Ordering.GT && v1 instanceof Data_Ordering.GT) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (v instanceof Data_Ordering.LT) {
      return Data_Ordering.LT.value;
    }

    ;

    if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.LT) {
      return Data_Ordering.GT.value;
    }

    ;

    if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.GT) {
      return Data_Ordering.LT.value;
    }

    ;

    if (v instanceof Data_Ordering.GT) {
      return Data_Ordering.GT.value;
    }

    ;
    throw new Error("Failed pattern match at Data.Ord (line 112, column 1 - line 119, column 21): " + [v.constructor.name, v1.constructor.name]);
  };
});
var ordNumber = new Ord(function () {
  return Data_Eq.eqNumber;
}, $foreign.ordNumberImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
var ordInt = new Ord(function () {
  return Data_Eq.eqInt;
}, $foreign.ordIntImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
var ordChar = new Ord(function () {
  return Data_Eq.eqChar;
}, $foreign.ordCharImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
var ordBoolean = new Ord(function () {
  return Data_Eq.eqBoolean;
}, $foreign.ordBooleanImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));

var compareRecord = function compareRecord(dict) {
  return dict.compareRecord;
};

var ordRecord = function ordRecord(dictRowToList) {
  return function (dictOrdRecord) {
    return new Ord(function () {
      return Data_Eq.eqRec()(dictOrdRecord.EqRecord0());
    }, compareRecord(dictOrdRecord)(Type_Data_RowList.RLProxy.value));
  };
};

var compare1 = function compare1(dict) {
  return dict.compare1;
};

var compare = function compare(dict) {
  return dict.compare;
};

var comparing = function comparing(dictOrd) {
  return function (f) {
    return function (x) {
      return function (y) {
        return compare(dictOrd)(f(x))(f(y));
      };
    };
  };
};

var greaterThan = function greaterThan(dictOrd) {
  return function (a1) {
    return function (a2) {
      var v = compare(dictOrd)(a1)(a2);

      if (v instanceof Data_Ordering.GT) {
        return true;
      }

      ;
      return false;
    };
  };
};

var greaterThanOrEq = function greaterThanOrEq(dictOrd) {
  return function (a1) {
    return function (a2) {
      var v = compare(dictOrd)(a1)(a2);

      if (v instanceof Data_Ordering.LT) {
        return false;
      }

      ;
      return true;
    };
  };
};

var signum = function signum(dictOrd) {
  return function (dictRing) {
    return function (x) {
      var $43 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));

      if ($43) {
        return Data_Semiring.one(dictRing.Semiring0());
      }

      ;
      return Data_Ring.negate(dictRing)(Data_Semiring.one(dictRing.Semiring0()));
    };
  };
};

var lessThan = function lessThan(dictOrd) {
  return function (a1) {
    return function (a2) {
      var v = compare(dictOrd)(a1)(a2);

      if (v instanceof Data_Ordering.LT) {
        return true;
      }

      ;
      return false;
    };
  };
};

var lessThanOrEq = function lessThanOrEq(dictOrd) {
  return function (a1) {
    return function (a2) {
      var v = compare(dictOrd)(a1)(a2);

      if (v instanceof Data_Ordering.GT) {
        return false;
      }

      ;
      return true;
    };
  };
};

var max = function max(dictOrd) {
  return function (x) {
    return function (y) {
      var v = compare(dictOrd)(x)(y);

      if (v instanceof Data_Ordering.LT) {
        return y;
      }

      ;

      if (v instanceof Data_Ordering.EQ) {
        return x;
      }

      ;

      if (v instanceof Data_Ordering.GT) {
        return x;
      }

      ;
      throw new Error("Failed pattern match at Data.Ord (line 167, column 3 - line 170, column 12): " + [v.constructor.name]);
    };
  };
};

var min = function min(dictOrd) {
  return function (x) {
    return function (y) {
      var v = compare(dictOrd)(x)(y);

      if (v instanceof Data_Ordering.LT) {
        return x;
      }

      ;

      if (v instanceof Data_Ordering.EQ) {
        return x;
      }

      ;

      if (v instanceof Data_Ordering.GT) {
        return y;
      }

      ;
      throw new Error("Failed pattern match at Data.Ord (line 158, column 3 - line 161, column 12): " + [v.constructor.name]);
    };
  };
};

var ordArray = function ordArray(dictOrd) {
  return new Ord(function () {
    return Data_Eq.eqArray(dictOrd.Eq0());
  }, function () {
    var toDelta = function toDelta(x) {
      return function (y) {
        var v = compare(dictOrd)(x)(y);

        if (v instanceof Data_Ordering.EQ) {
          return 0;
        }

        ;

        if (v instanceof Data_Ordering.LT) {
          return 1;
        }

        ;

        if (v instanceof Data_Ordering.GT) {
          return -1 | 0;
        }

        ;
        throw new Error("Failed pattern match at Data.Ord (line 65, column 7 - line 68, column 17): " + [v.constructor.name]);
      };
    };

    return function (xs) {
      return function (ys) {
        return compare(ordInt)(0)($foreign.ordArrayImpl(toDelta)(xs)(ys));
      };
    };
  }());
};

var ord1Array = new Ord1(function () {
  return Data_Eq.eq1Array;
}, function (dictOrd) {
  return compare(ordArray(dictOrd));
});

var ordRecordCons = function ordRecordCons(dictOrdRecord) {
  return function (dictCons) {
    return function (dictIsSymbol) {
      return function (dictOrd) {
        return new OrdRecord(function () {
          return Data_Eq.eqRowCons(dictOrdRecord.EqRecord0())()(dictIsSymbol)(dictOrd.Eq0());
        }, function (v) {
          return function (ra) {
            return function (rb) {
              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
              var left = compare(dictOrd)(Record_Unsafe.unsafeGet(key)(ra))(Record_Unsafe.unsafeGet(key)(rb));
              var $49 = Data_Eq.notEq(Data_Ordering.eqOrdering)(left)(Data_Ordering.EQ.value);

              if ($49) {
                return left;
              }

              ;
              return compareRecord(dictOrdRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
            };
          };
        });
      };
    };
  };
};

var clamp = function clamp(dictOrd) {
  return function (low) {
    return function (hi) {
      return function (x) {
        return min(dictOrd)(hi)(max(dictOrd)(low)(x));
      };
    };
  };
};

var between = function between(dictOrd) {
  return function (low) {
    return function (hi) {
      return function (x) {
        if (lessThan(dictOrd)(x)(low)) {
          return false;
        }

        ;

        if (greaterThan(dictOrd)(x)(hi)) {
          return false;
        }

        ;
        return true;
      };
    };
  };
};

var abs = function abs(dictOrd) {
  return function (dictRing) {
    return function (x) {
      var $53 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));

      if ($53) {
        return x;
      }

      ;
      return Data_Ring.negate(dictRing)(x);
    };
  };
};

module.exports = {
  Ord: Ord,
  compare: compare,
  Ord1: Ord1,
  compare1: compare1,
  lessThan: lessThan,
  lessThanOrEq: lessThanOrEq,
  greaterThan: greaterThan,
  greaterThanOrEq: greaterThanOrEq,
  comparing: comparing,
  min: min,
  max: max,
  clamp: clamp,
  between: between,
  abs: abs,
  signum: signum,
  OrdRecord: OrdRecord,
  compareRecord: compareRecord,
  ordBoolean: ordBoolean,
  ordInt: ordInt,
  ordNumber: ordNumber,
  ordString: ordString,
  ordChar: ordChar,
  ordUnit: ordUnit,
  ordVoid: ordVoid,
  ordArray: ordArray,
  ordOrdering: ordOrdering,
  ord1Array: ord1Array,
  ordRecordNil: ordRecordNil,
  ordRecordCons: ordRecordCons,
  ordRecord: ordRecord
};
},{"./foreign.js":"../output/Data.Ord/foreign.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Ordering/index.js":"../output/Data.Ordering/index.js","../Data.Ring/index.js":"../output/Data.Ring/index.js","../Data.Semiring/index.js":"../output/Data.Semiring/index.js","../Data.Symbol/index.js":"../output/Data.Symbol/index.js","../Record.Unsafe/index.js":"../output/Record.Unsafe/index.js","../Type.Data.RowList/index.js":"../output/Type.Data.RowList/index.js"}],"../output/Data.Bounded/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Bounded = function Bounded(Ord0, bottom, top) {
  this.Ord0 = Ord0;
  this.bottom = bottom;
  this.top = top;
};

var top = function top(dict) {
  return dict.top;
};

var boundedUnit = new Bounded(function () {
  return Data_Ord.ordUnit;
}, Data_Unit.unit, Data_Unit.unit);
var boundedOrdering = new Bounded(function () {
  return Data_Ord.ordOrdering;
}, Data_Ordering.LT.value, Data_Ordering.GT.value);
var boundedNumber = new Bounded(function () {
  return Data_Ord.ordNumber;
}, $foreign.bottomNumber, $foreign.topNumber);
var boundedInt = new Bounded(function () {
  return Data_Ord.ordInt;
}, $foreign.bottomInt, $foreign.topInt);
var boundedChar = new Bounded(function () {
  return Data_Ord.ordChar;
}, $foreign.bottomChar, $foreign.topChar);
var boundedBoolean = new Bounded(function () {
  return Data_Ord.ordBoolean;
}, false, true);

var bottom = function bottom(dict) {
  return dict.bottom;
};

module.exports = {
  Bounded: Bounded,
  bottom: bottom,
  top: top,
  boundedBoolean: boundedBoolean,
  boundedInt: boundedInt,
  boundedChar: boundedChar,
  boundedOrdering: boundedOrdering,
  boundedUnit: boundedUnit,
  boundedNumber: boundedNumber
};
},{"./foreign.js":"../output/Data.Bounded/foreign.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Ordering/index.js":"../output/Data.Ordering/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js"}],"../output/Data.Functor.Invariant/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Data_Functor = require("../Data.Functor/index.js");

var Invariant = function Invariant(imap) {
  this.imap = imap;
};

var invariantMultiplicative = new Invariant(function (f) {
  return function (v) {
    return function (v1) {
      return f(v1);
    };
  };
});
var invariantEndo = new Invariant(function (ab) {
  return function (ba) {
    return function (v) {
      return function ($31) {
        return ab(v(ba($31)));
      };
    };
  };
});
var invariantDual = new Invariant(function (f) {
  return function (v) {
    return function (v1) {
      return f(v1);
    };
  };
});
var invariantDisj = new Invariant(function (f) {
  return function (v) {
    return function (v1) {
      return f(v1);
    };
  };
});
var invariantConj = new Invariant(function (f) {
  return function (v) {
    return function (v1) {
      return f(v1);
    };
  };
});
var invariantAdditive = new Invariant(function (f) {
  return function (v) {
    return function (v1) {
      return f(v1);
    };
  };
});

var imapF = function imapF(dictFunctor) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictFunctor)(f);
    };
  };
};

var invariantArray = new Invariant(imapF(Data_Functor.functorArray));
var invariantFn = new Invariant(imapF(Data_Functor.functorFn));

var imap = function imap(dict) {
  return dict.imap;
};

module.exports = {
  imap: imap,
  Invariant: Invariant,
  imapF: imapF,
  invariantFn: invariantFn,
  invariantArray: invariantArray,
  invariantAdditive: invariantAdditive,
  invariantConj: invariantConj,
  invariantDisj: invariantDisj,
  invariantDual: invariantDual,
  invariantEndo: invariantEndo,
  invariantMultiplicative: invariantMultiplicative
};
},{"../Data.Functor/index.js":"../output/Data.Functor/index.js"}],"../output/Data.EuclideanRing/foreign.js":[function(require,module,exports) {
"use strict";

exports.intDegree = function (x) {
  return Math.min(Math.abs(x), 2147483647);
}; // See the Euclidean definition in
// https://en.m.wikipedia.org/wiki/Modulo_operation.


exports.intDiv = function (x) {
  return function (y) {
    if (y === 0) return 0;
    return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);
  };
};

exports.intMod = function (x) {
  return function (y) {
    if (y === 0) return 0;
    var yy = Math.abs(y);
    return (x % yy + yy) % yy;
  };
};

exports.numDiv = function (n1) {
  return function (n2) {
    return n1 / n2;
  };
};
},{}],"../output/Data.CommutativeRing/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Data_Ring = require("../Data.Ring/index.js");

var CommutativeRingRecord = function CommutativeRingRecord(RingRecord0) {
  this.RingRecord0 = RingRecord0;
};

var CommutativeRing = function CommutativeRing(Ring0) {
  this.Ring0 = Ring0;
};

var commutativeRingUnit = new CommutativeRing(function () {
  return Data_Ring.ringUnit;
});
var commutativeRingRecordNil = new CommutativeRingRecord(function () {
  return Data_Ring.ringRecordNil;
});

var commutativeRingRecordCons = function commutativeRingRecordCons(dictIsSymbol) {
  return function (dictCons) {
    return function (dictCommutativeRingRecord) {
      return function (dictCommutativeRing) {
        return new CommutativeRingRecord(function () {
          return Data_Ring.ringRecordCons(dictIsSymbol)()(dictCommutativeRingRecord.RingRecord0())(dictCommutativeRing.Ring0());
        });
      };
    };
  };
};

var commutativeRingRecord = function commutativeRingRecord(dictRowToList) {
  return function (dictCommutativeRingRecord) {
    return new CommutativeRing(function () {
      return Data_Ring.ringRecord()(dictCommutativeRingRecord.RingRecord0());
    });
  };
};

var commutativeRingNumber = new CommutativeRing(function () {
  return Data_Ring.ringNumber;
});
var commutativeRingInt = new CommutativeRing(function () {
  return Data_Ring.ringInt;
});

var commutativeRingFn = function commutativeRingFn(dictCommutativeRing) {
  return new CommutativeRing(function () {
    return Data_Ring.ringFn(dictCommutativeRing.Ring0());
  });
};

module.exports = {
  CommutativeRing: CommutativeRing,
  CommutativeRingRecord: CommutativeRingRecord,
  commutativeRingInt: commutativeRingInt,
  commutativeRingNumber: commutativeRingNumber,
  commutativeRingUnit: commutativeRingUnit,
  commutativeRingFn: commutativeRingFn,
  commutativeRingRecord: commutativeRingRecord,
  commutativeRingRecordNil: commutativeRingRecordNil,
  commutativeRingRecordCons: commutativeRingRecordCons
};
},{"../Data.Ring/index.js":"../output/Data.Ring/index.js"}],"../output/Data.EuclideanRing/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var EuclideanRing = function EuclideanRing(CommutativeRing0, degree, div, mod) {
  this.CommutativeRing0 = CommutativeRing0;
  this.degree = degree;
  this.div = div;
  this.mod = mod;
};

var mod = function mod(dict) {
  return dict.mod;
};

var gcd = function gcd($copy_dictEq) {
  return function ($copy_dictEuclideanRing) {
    return function ($copy_a) {
      return function ($copy_b) {
        var $tco_var_dictEq = $copy_dictEq;
        var $tco_var_dictEuclideanRing = $copy_dictEuclideanRing;
        var $tco_var_a = $copy_a;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(dictEq, dictEuclideanRing, a, b) {
          var $7 = Data_Eq.eq(dictEq)(b)(Data_Semiring.zero(dictEuclideanRing.CommutativeRing0().Ring0().Semiring0()));

          if ($7) {
            $tco_done = true;
            return a;
          }

          ;
          $tco_var_dictEq = dictEq;
          $tco_var_dictEuclideanRing = dictEuclideanRing;
          $tco_var_a = b;
          $copy_b = mod(dictEuclideanRing)(a)(b);
          return;
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_dictEq, $tco_var_dictEuclideanRing, $tco_var_a, $copy_b);
        }

        ;
        return $tco_result;
      };
    };
  };
};

var euclideanRingNumber = new EuclideanRing(function () {
  return Data_CommutativeRing.commutativeRingNumber;
}, function (v) {
  return 1;
}, $foreign.numDiv, function (v) {
  return function (v1) {
    return 0.0;
  };
});
var euclideanRingInt = new EuclideanRing(function () {
  return Data_CommutativeRing.commutativeRingInt;
}, $foreign.intDegree, $foreign.intDiv, $foreign.intMod);

var div = function div(dict) {
  return dict.div;
};

var lcm = function lcm(dictEq) {
  return function (dictEuclideanRing) {
    return function (a) {
      return function (b) {
        var $8 = Data_Eq.eq(dictEq)(a)(Data_Semiring.zero(dictEuclideanRing.CommutativeRing0().Ring0().Semiring0())) || Data_Eq.eq(dictEq)(b)(Data_Semiring.zero(dictEuclideanRing.CommutativeRing0().Ring0().Semiring0()));

        if ($8) {
          return Data_Semiring.zero(dictEuclideanRing.CommutativeRing0().Ring0().Semiring0());
        }

        ;
        return div(dictEuclideanRing)(Data_Semiring.mul(dictEuclideanRing.CommutativeRing0().Ring0().Semiring0())(a)(b))(gcd(dictEq)(dictEuclideanRing)(a)(b));
      };
    };
  };
};

var degree = function degree(dict) {
  return dict.degree;
};

module.exports = {
  EuclideanRing: EuclideanRing,
  degree: degree,
  div: div,
  mod: mod,
  gcd: gcd,
  lcm: lcm,
  euclideanRingInt: euclideanRingInt,
  euclideanRingNumber: euclideanRingNumber
};
},{"./foreign.js":"../output/Data.EuclideanRing/foreign.js","../Data.CommutativeRing/index.js":"../output/Data.CommutativeRing/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Semiring/index.js":"../output/Data.Semiring/index.js"}],"../output/Data.Monoid/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Type_Data_RowList = require("../Type.Data.RowList/index.js");

var MonoidRecord = function MonoidRecord(SemigroupRecord0, memptyRecord) {
  this.SemigroupRecord0 = SemigroupRecord0;
  this.memptyRecord = memptyRecord;
};

var Monoid = function Monoid(Semigroup0, mempty) {
  this.Semigroup0 = Semigroup0;
  this.mempty = mempty;
};

var monoidUnit = new Monoid(function () {
  return Data_Semigroup.semigroupUnit;
}, Data_Unit.unit);
var monoidString = new Monoid(function () {
  return Data_Semigroup.semigroupString;
}, "");
var monoidRecordNil = new MonoidRecord(function () {
  return Data_Semigroup.semigroupRecordNil;
}, function (v) {
  return {};
});
var monoidOrdering = new Monoid(function () {
  return Data_Ordering.semigroupOrdering;
}, Data_Ordering.EQ.value);
var monoidArray = new Monoid(function () {
  return Data_Semigroup.semigroupArray;
}, []);

var memptyRecord = function memptyRecord(dict) {
  return dict.memptyRecord;
};

var monoidRecord = function monoidRecord(dictRowToList) {
  return function (dictMonoidRecord) {
    return new Monoid(function () {
      return Data_Semigroup.semigroupRecord()(dictMonoidRecord.SemigroupRecord0());
    }, memptyRecord(dictMonoidRecord)(Type_Data_RowList.RLProxy.value));
  };
};

var mempty = function mempty(dict) {
  return dict.mempty;
};

var monoidFn = function monoidFn(dictMonoid) {
  return new Monoid(function () {
    return Data_Semigroup.semigroupFn(dictMonoid.Semigroup0());
  }, function (v) {
    return mempty(dictMonoid);
  });
};

var monoidRecordCons = function monoidRecordCons(dictIsSymbol) {
  return function (dictMonoid) {
    return function (dictCons) {
      return function (dictMonoidRecord) {
        return new MonoidRecord(function () {
          return Data_Semigroup.semigroupRecordCons(dictIsSymbol)()(dictMonoidRecord.SemigroupRecord0())(dictMonoid.Semigroup0());
        }, function (v) {
          var tail = memptyRecord(dictMonoidRecord)(Type_Data_RowList.RLProxy.value);
          var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
          var insert = Record_Unsafe.unsafeSet(key);
          return insert(mempty(dictMonoid))(tail);
        });
      };
    };
  };
};

var power = function power(dictMonoid) {
  return function (x) {
    var go = function go(p) {
      if (p <= 0) {
        return mempty(dictMonoid);
      }

      ;

      if (p === 1) {
        return x;
      }

      ;

      if (Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(p)(2) === 0) {
        var x$prime = go(Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(p)(2));
        return Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(x$prime);
      }

      ;

      if (Data_Boolean.otherwise) {
        var x$prime = go(Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(p)(2));
        return Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(x));
      }

      ;
      throw new Error("Failed pattern match at Data.Monoid (line 65, column 3 - line 65, column 17): " + [p.constructor.name]);
    };

    return go;
  };
};

var guard = function guard(dictMonoid) {
  return function (v) {
    return function (v1) {
      if (v) {
        return v1;
      }

      ;

      if (!v) {
        return mempty(dictMonoid);
      }

      ;
      throw new Error("Failed pattern match at Data.Monoid (line 73, column 1 - line 73, column 49): " + [v.constructor.name, v1.constructor.name]);
    };
  };
};

module.exports = {
  Monoid: Monoid,
  mempty: mempty,
  power: power,
  guard: guard,
  MonoidRecord: MonoidRecord,
  memptyRecord: memptyRecord,
  monoidUnit: monoidUnit,
  monoidOrdering: monoidOrdering,
  monoidFn: monoidFn,
  monoidString: monoidString,
  monoidArray: monoidArray,
  monoidRecord: monoidRecord,
  monoidRecordNil: monoidRecordNil,
  monoidRecordCons: monoidRecordCons
};
},{"../Data.Boolean/index.js":"../output/Data.Boolean/index.js","../Data.EuclideanRing/index.js":"../output/Data.EuclideanRing/index.js","../Data.Ordering/index.js":"../output/Data.Ordering/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Symbol/index.js":"../output/Data.Symbol/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js","../Record.Unsafe/index.js":"../output/Record.Unsafe/index.js","../Type.Data.RowList/index.js":"../output/Type.Data.RowList/index.js"}],"../output/Data.Maybe/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Extend = require("../Control.Extend/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Nothing = function () {
  function Nothing() {}

  ;
  Nothing.value = new Nothing();
  return Nothing;
}();

var Just = function () {
  function Just(value0) {
    this.value0 = value0;
  }

  ;

  Just.create = function (value0) {
    return new Just(value0);
  };

  return Just;
}();

var showMaybe = function showMaybe(dictShow) {
  return new Data_Show.Show(function (v) {
    if (v instanceof Just) {
      return "(Just " + (Data_Show.show(dictShow)(v.value0) + ")");
    }

    ;

    if (v instanceof Nothing) {
      return "Nothing";
    }

    ;
    throw new Error("Failed pattern match at Data.Maybe (line 205, column 1 - line 207, column 28): " + [v.constructor.name]);
  });
};

var semigroupMaybe = function semigroupMaybe(dictSemigroup) {
  return new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      if (v instanceof Nothing) {
        return v1;
      }

      ;

      if (v1 instanceof Nothing) {
        return v;
      }

      ;

      if (v instanceof Just && v1 instanceof Just) {
        return new Just(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0));
      }

      ;
      throw new Error("Failed pattern match at Data.Maybe (line 174, column 1 - line 177, column 43): " + [v.constructor.name, v1.constructor.name]);
    };
  });
};

var optional = function optional(dictAlternative) {
  return function (a) {
    return Control_Alt.alt(dictAlternative.Plus1().Alt0())(Data_Functor.map(dictAlternative.Plus1().Alt0().Functor0())(Just.create)(a))(Control_Applicative.pure(dictAlternative.Applicative0())(Nothing.value));
  };
};

var monoidMaybe = function monoidMaybe(dictSemigroup) {
  return new Data_Monoid.Monoid(function () {
    return semigroupMaybe(dictSemigroup);
  }, Nothing.value);
};

var maybe$prime = function maybe$prime(v) {
  return function (v1) {
    return function (v2) {
      if (v2 instanceof Nothing) {
        return v(Data_Unit.unit);
      }

      ;

      if (v2 instanceof Just) {
        return v1(v2.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Maybe (line 230, column 1 - line 230, column 62): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
    };
  };
};

var maybe = function maybe(v) {
  return function (v1) {
    return function (v2) {
      if (v2 instanceof Nothing) {
        return v;
      }

      ;

      if (v2 instanceof Just) {
        return v1(v2.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Maybe (line 217, column 1 - line 217, column 51): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
    };
  };
};

var isNothing = maybe(true)(Data_Function["const"](false));
var isJust = maybe(false)(Data_Function["const"](true));
var functorMaybe = new Data_Functor.Functor(function (v) {
  return function (v1) {
    if (v1 instanceof Just) {
      return new Just(v(v1.value0));
    }

    ;
    return Nothing.value;
  };
});
var invariantMaybe = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorMaybe));

var fromMaybe$prime = function fromMaybe$prime(a) {
  return maybe$prime(a)(Control_Category.identity(Control_Category.categoryFn));
};

var fromMaybe = function fromMaybe(a) {
  return maybe(a)(Control_Category.identity(Control_Category.categoryFn));
};

var fromJust = function fromJust(dictPartial) {
  return function (v) {
    if (v instanceof Just) {
      return v.value0;
    }

    ;
    throw new Error("Failed pattern match at Data.Maybe (line 268, column 1 - line 268, column 46): " + [v.constructor.name]);
  };
};

var extendMaybe = new Control_Extend.Extend(function () {
  return functorMaybe;
}, function (v) {
  return function (v1) {
    if (v1 instanceof Nothing) {
      return Nothing.value;
    }

    ;
    return new Just(v(v1));
  };
});

var eqMaybe = function eqMaybe(dictEq) {
  return new Data_Eq.Eq(function (x) {
    return function (y) {
      if (x instanceof Nothing && y instanceof Nothing) {
        return true;
      }

      ;

      if (x instanceof Just && y instanceof Just) {
        return Data_Eq.eq(dictEq)(x.value0)(y.value0);
      }

      ;
      return false;
    };
  });
};

var ordMaybe = function ordMaybe(dictOrd) {
  return new Data_Ord.Ord(function () {
    return eqMaybe(dictOrd.Eq0());
  }, function (x) {
    return function (y) {
      if (x instanceof Nothing && y instanceof Nothing) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof Nothing) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof Nothing) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof Just && y instanceof Just) {
        return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Maybe (line 194, column 1 - line 194, column 51): " + [x.constructor.name, y.constructor.name]);
    };
  });
};

var eq1Maybe = new Data_Eq.Eq1(function (dictEq) {
  return Data_Eq.eq(eqMaybe(dictEq));
});
var ord1Maybe = new Data_Ord.Ord1(function () {
  return eq1Maybe;
}, function (dictOrd) {
  return Data_Ord.compare(ordMaybe(dictOrd));
});

var boundedMaybe = function boundedMaybe(dictBounded) {
  return new Data_Bounded.Bounded(function () {
    return ordMaybe(dictBounded.Ord0());
  }, Nothing.value, new Just(Data_Bounded.top(dictBounded)));
};

var applyMaybe = new Control_Apply.Apply(function () {
  return functorMaybe;
}, function (v) {
  return function (v1) {
    if (v instanceof Just) {
      return Data_Functor.map(functorMaybe)(v.value0)(v1);
    }

    ;

    if (v instanceof Nothing) {
      return Nothing.value;
    }

    ;
    throw new Error("Failed pattern match at Data.Maybe (line 67, column 1 - line 69, column 30): " + [v.constructor.name, v1.constructor.name]);
  };
});
var bindMaybe = new Control_Bind.Bind(function () {
  return applyMaybe;
}, function (v) {
  return function (v1) {
    if (v instanceof Just) {
      return v1(v.value0);
    }

    ;

    if (v instanceof Nothing) {
      return Nothing.value;
    }

    ;
    throw new Error("Failed pattern match at Data.Maybe (line 125, column 1 - line 127, column 28): " + [v.constructor.name, v1.constructor.name]);
  };
});
var applicativeMaybe = new Control_Applicative.Applicative(function () {
  return applyMaybe;
}, Just.create);
var monadMaybe = new Control_Monad.Monad(function () {
  return applicativeMaybe;
}, function () {
  return bindMaybe;
});
var altMaybe = new Control_Alt.Alt(function () {
  return functorMaybe;
}, function (v) {
  return function (v1) {
    if (v instanceof Nothing) {
      return v1;
    }

    ;
    return v;
  };
});
var plusMaybe = new Control_Plus.Plus(function () {
  return altMaybe;
}, Nothing.value);
var alternativeMaybe = new Control_Alternative.Alternative(function () {
  return applicativeMaybe;
}, function () {
  return plusMaybe;
});
var monadZeroMaybe = new Control_MonadZero.MonadZero(function () {
  return alternativeMaybe;
}, function () {
  return monadMaybe;
});
module.exports = {
  Nothing: Nothing,
  Just: Just,
  maybe: maybe,
  "maybe'": maybe$prime,
  fromMaybe: fromMaybe,
  "fromMaybe'": fromMaybe$prime,
  isJust: isJust,
  isNothing: isNothing,
  fromJust: fromJust,
  optional: optional,
  functorMaybe: functorMaybe,
  applyMaybe: applyMaybe,
  applicativeMaybe: applicativeMaybe,
  altMaybe: altMaybe,
  plusMaybe: plusMaybe,
  alternativeMaybe: alternativeMaybe,
  bindMaybe: bindMaybe,
  monadMaybe: monadMaybe,
  monadZeroMaybe: monadZeroMaybe,
  extendMaybe: extendMaybe,
  invariantMaybe: invariantMaybe,
  semigroupMaybe: semigroupMaybe,
  monoidMaybe: monoidMaybe,
  eqMaybe: eqMaybe,
  eq1Maybe: eq1Maybe,
  ordMaybe: ordMaybe,
  ord1Maybe: ord1Maybe,
  boundedMaybe: boundedMaybe,
  showMaybe: showMaybe
};
},{"../Control.Alt/index.js":"../output/Control.Alt/index.js","../Control.Alternative/index.js":"../output/Control.Alternative/index.js","../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Category/index.js":"../output/Control.Category/index.js","../Control.Extend/index.js":"../output/Control.Extend/index.js","../Control.Monad/index.js":"../output/Control.Monad/index.js","../Control.MonadZero/index.js":"../output/Control.MonadZero/index.js","../Control.Plus/index.js":"../output/Control.Plus/index.js","../Data.Bounded/index.js":"../output/Data.Bounded/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Functor.Invariant/index.js":"../output/Data.Functor.Invariant/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Ordering/index.js":"../output/Data.Ordering/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Show/index.js":"../output/Data.Show/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js"}],"../output/Data.Monoid.Conj/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Conj = function Conj(x) {
  return x;
};

var showConj = function showConj(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Conj " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semiringConj = function semiringConj(dictHeytingAlgebra) {
  return new Data_Semiring.Semiring(function (v) {
    return function (v1) {
      return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
    };
  }, function (v) {
    return function (v1) {
      return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
    };
  }, Data_HeytingAlgebra.ff(dictHeytingAlgebra), Data_HeytingAlgebra.tt(dictHeytingAlgebra));
};

var semigroupConj = function semigroupConj(dictHeytingAlgebra) {
  return new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
    };
  });
};

var ordConj = function ordConj(dictOrd) {
  return dictOrd;
};

var monoidConj = function monoidConj(dictHeytingAlgebra) {
  return new Data_Monoid.Monoid(function () {
    return semigroupConj(dictHeytingAlgebra);
  }, Data_HeytingAlgebra.tt(dictHeytingAlgebra));
};

var functorConj = new Data_Functor.Functor(function (f) {
  return function (m) {
    return f(m);
  };
});

var eqConj = function eqConj(dictEq) {
  return dictEq;
};

var eq1Conj = new Data_Eq.Eq1(function (dictEq) {
  return Data_Eq.eq(eqConj(dictEq));
});
var ord1Conj = new Data_Ord.Ord1(function () {
  return eq1Conj;
}, function (dictOrd) {
  return Data_Ord.compare(ordConj(dictOrd));
});

var boundedConj = function boundedConj(dictBounded) {
  return dictBounded;
};

var applyConj = new Control_Apply.Apply(function () {
  return functorConj;
}, function (v) {
  return function (v1) {
    return v(v1);
  };
});
var bindConj = new Control_Bind.Bind(function () {
  return applyConj;
}, function (v) {
  return function (f) {
    return f(v);
  };
});
var applicativeConj = new Control_Applicative.Applicative(function () {
  return applyConj;
}, Conj);
var monadConj = new Control_Monad.Monad(function () {
  return applicativeConj;
}, function () {
  return bindConj;
});
module.exports = {
  Conj: Conj,
  eqConj: eqConj,
  eq1Conj: eq1Conj,
  ordConj: ordConj,
  ord1Conj: ord1Conj,
  boundedConj: boundedConj,
  showConj: showConj,
  functorConj: functorConj,
  applyConj: applyConj,
  applicativeConj: applicativeConj,
  bindConj: bindConj,
  monadConj: monadConj,
  semigroupConj: semigroupConj,
  monoidConj: monoidConj,
  semiringConj: semiringConj
};
},{"../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Monad/index.js":"../output/Control.Monad/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.HeytingAlgebra/index.js":"../output/Data.HeytingAlgebra/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Semiring/index.js":"../output/Data.Semiring/index.js","../Data.Show/index.js":"../output/Data.Show/index.js"}],"../output/Data.Monoid.Disj/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Disj = function Disj(x) {
  return x;
};

var showDisj = function showDisj(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Disj " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semiringDisj = function semiringDisj(dictHeytingAlgebra) {
  return new Data_Semiring.Semiring(function (v) {
    return function (v1) {
      return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
    };
  }, function (v) {
    return function (v1) {
      return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
    };
  }, Data_HeytingAlgebra.tt(dictHeytingAlgebra), Data_HeytingAlgebra.ff(dictHeytingAlgebra));
};

var semigroupDisj = function semigroupDisj(dictHeytingAlgebra) {
  return new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
    };
  });
};

var ordDisj = function ordDisj(dictOrd) {
  return dictOrd;
};

var monoidDisj = function monoidDisj(dictHeytingAlgebra) {
  return new Data_Monoid.Monoid(function () {
    return semigroupDisj(dictHeytingAlgebra);
  }, Data_HeytingAlgebra.ff(dictHeytingAlgebra));
};

var functorDisj = new Data_Functor.Functor(function (f) {
  return function (m) {
    return f(m);
  };
});

var eqDisj = function eqDisj(dictEq) {
  return dictEq;
};

var eq1Disj = new Data_Eq.Eq1(function (dictEq) {
  return Data_Eq.eq(eqDisj(dictEq));
});
var ord1Disj = new Data_Ord.Ord1(function () {
  return eq1Disj;
}, function (dictOrd) {
  return Data_Ord.compare(ordDisj(dictOrd));
});

var boundedDisj = function boundedDisj(dictBounded) {
  return dictBounded;
};

var applyDisj = new Control_Apply.Apply(function () {
  return functorDisj;
}, function (v) {
  return function (v1) {
    return v(v1);
  };
});
var bindDisj = new Control_Bind.Bind(function () {
  return applyDisj;
}, function (v) {
  return function (f) {
    return f(v);
  };
});
var applicativeDisj = new Control_Applicative.Applicative(function () {
  return applyDisj;
}, Disj);
var monadDisj = new Control_Monad.Monad(function () {
  return applicativeDisj;
}, function () {
  return bindDisj;
});
module.exports = {
  Disj: Disj,
  eqDisj: eqDisj,
  eq1Disj: eq1Disj,
  ordDisj: ordDisj,
  ord1Disj: ord1Disj,
  boundedDisj: boundedDisj,
  showDisj: showDisj,
  functorDisj: functorDisj,
  applyDisj: applyDisj,
  applicativeDisj: applicativeDisj,
  bindDisj: bindDisj,
  monadDisj: monadDisj,
  semigroupDisj: semigroupDisj,
  monoidDisj: monoidDisj,
  semiringDisj: semiringDisj
};
},{"../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Monad/index.js":"../output/Control.Monad/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.HeytingAlgebra/index.js":"../output/Data.HeytingAlgebra/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Semiring/index.js":"../output/Data.Semiring/index.js","../Data.Show/index.js":"../output/Data.Show/index.js"}],"../output/Data.Monoid.Dual/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Dual = function Dual(x) {
  return x;
};

var showDual = function showDual(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Dual " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semigroupDual = function semigroupDual(dictSemigroup) {
  return new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      return Data_Semigroup.append(dictSemigroup)(v1)(v);
    };
  });
};

var ordDual = function ordDual(dictOrd) {
  return dictOrd;
};

var monoidDual = function monoidDual(dictMonoid) {
  return new Data_Monoid.Monoid(function () {
    return semigroupDual(dictMonoid.Semigroup0());
  }, Data_Monoid.mempty(dictMonoid));
};

var functorDual = new Data_Functor.Functor(function (f) {
  return function (m) {
    return f(m);
  };
});

var eqDual = function eqDual(dictEq) {
  return dictEq;
};

var eq1Dual = new Data_Eq.Eq1(function (dictEq) {
  return Data_Eq.eq(eqDual(dictEq));
});
var ord1Dual = new Data_Ord.Ord1(function () {
  return eq1Dual;
}, function (dictOrd) {
  return Data_Ord.compare(ordDual(dictOrd));
});

var boundedDual = function boundedDual(dictBounded) {
  return dictBounded;
};

var applyDual = new Control_Apply.Apply(function () {
  return functorDual;
}, function (v) {
  return function (v1) {
    return v(v1);
  };
});
var bindDual = new Control_Bind.Bind(function () {
  return applyDual;
}, function (v) {
  return function (f) {
    return f(v);
  };
});
var applicativeDual = new Control_Applicative.Applicative(function () {
  return applyDual;
}, Dual);
var monadDual = new Control_Monad.Monad(function () {
  return applicativeDual;
}, function () {
  return bindDual;
});
module.exports = {
  Dual: Dual,
  eqDual: eqDual,
  eq1Dual: eq1Dual,
  ordDual: ordDual,
  ord1Dual: ord1Dual,
  boundedDual: boundedDual,
  showDual: showDual,
  functorDual: functorDual,
  applyDual: applyDual,
  applicativeDual: applicativeDual,
  bindDual: bindDual,
  monadDual: monadDual,
  semigroupDual: semigroupDual,
  monoidDual: monoidDual
};
},{"../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Monad/index.js":"../output/Control.Monad/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Show/index.js":"../output/Data.Show/index.js"}],"../output/Data.Monoid.Endo/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Endo = function Endo(x) {
  return x;
};

var showEndo = function showEndo(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Endo " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semigroupEndo = function semigroupEndo(dictSemigroupoid) {
  return new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      return Control_Semigroupoid.compose(dictSemigroupoid)(v)(v1);
    };
  });
};

var ordEndo = function ordEndo(dictOrd) {
  return dictOrd;
};

var monoidEndo = function monoidEndo(dictCategory) {
  return new Data_Monoid.Monoid(function () {
    return semigroupEndo(dictCategory.Semigroupoid0());
  }, Control_Category.identity(dictCategory));
};

var eqEndo = function eqEndo(dictEq) {
  return dictEq;
};

var boundedEndo = function boundedEndo(dictBounded) {
  return dictBounded;
};

module.exports = {
  Endo: Endo,
  eqEndo: eqEndo,
  ordEndo: ordEndo,
  boundedEndo: boundedEndo,
  showEndo: showEndo,
  semigroupEndo: semigroupEndo,
  monoidEndo: monoidEndo
};
},{"../Control.Category/index.js":"../output/Control.Category/index.js","../Control.Semigroupoid/index.js":"../output/Control.Semigroupoid/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Show/index.js":"../output/Data.Show/index.js"}],"../output/Data.Monoid.Additive/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Additive = function Additive(x) {
  return x;
};

var showAdditive = function showAdditive(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Additive " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semigroupAdditive = function semigroupAdditive(dictSemiring) {
  return new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      return Data_Semiring.add(dictSemiring)(v)(v1);
    };
  });
};

var ordAdditive = function ordAdditive(dictOrd) {
  return dictOrd;
};

var monoidAdditive = function monoidAdditive(dictSemiring) {
  return new Data_Monoid.Monoid(function () {
    return semigroupAdditive(dictSemiring);
  }, Data_Semiring.zero(dictSemiring));
};

var functorAdditive = new Data_Functor.Functor(function (f) {
  return function (m) {
    return f(m);
  };
});

var eqAdditive = function eqAdditive(dictEq) {
  return dictEq;
};

var eq1Additive = new Data_Eq.Eq1(function (dictEq) {
  return Data_Eq.eq(eqAdditive(dictEq));
});
var ord1Additive = new Data_Ord.Ord1(function () {
  return eq1Additive;
}, function (dictOrd) {
  return Data_Ord.compare(ordAdditive(dictOrd));
});

var boundedAdditive = function boundedAdditive(dictBounded) {
  return dictBounded;
};

var applyAdditive = new Control_Apply.Apply(function () {
  return functorAdditive;
}, function (v) {
  return function (v1) {
    return v(v1);
  };
});
var bindAdditive = new Control_Bind.Bind(function () {
  return applyAdditive;
}, function (v) {
  return function (f) {
    return f(v);
  };
});
var applicativeAdditive = new Control_Applicative.Applicative(function () {
  return applyAdditive;
}, Additive);
var monadAdditive = new Control_Monad.Monad(function () {
  return applicativeAdditive;
}, function () {
  return bindAdditive;
});
module.exports = {
  Additive: Additive,
  eqAdditive: eqAdditive,
  eq1Additive: eq1Additive,
  ordAdditive: ordAdditive,
  ord1Additive: ord1Additive,
  boundedAdditive: boundedAdditive,
  showAdditive: showAdditive,
  functorAdditive: functorAdditive,
  applyAdditive: applyAdditive,
  applicativeAdditive: applicativeAdditive,
  bindAdditive: bindAdditive,
  monadAdditive: monadAdditive,
  semigroupAdditive: semigroupAdditive,
  monoidAdditive: monoidAdditive
};
},{"../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Monad/index.js":"../output/Control.Monad/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Semiring/index.js":"../output/Data.Semiring/index.js","../Data.Show/index.js":"../output/Data.Show/index.js"}],"../output/Data.Monoid.Multiplicative/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Multiplicative = function Multiplicative(x) {
  return x;
};

var showMultiplicative = function showMultiplicative(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Multiplicative " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semigroupMultiplicative = function semigroupMultiplicative(dictSemiring) {
  return new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      return Data_Semiring.mul(dictSemiring)(v)(v1);
    };
  });
};

var ordMultiplicative = function ordMultiplicative(dictOrd) {
  return dictOrd;
};

var monoidMultiplicative = function monoidMultiplicative(dictSemiring) {
  return new Data_Monoid.Monoid(function () {
    return semigroupMultiplicative(dictSemiring);
  }, Data_Semiring.one(dictSemiring));
};

var functorMultiplicative = new Data_Functor.Functor(function (f) {
  return function (m) {
    return f(m);
  };
});

var eqMultiplicative = function eqMultiplicative(dictEq) {
  return dictEq;
};

var eq1Multiplicative = new Data_Eq.Eq1(function (dictEq) {
  return Data_Eq.eq(eqMultiplicative(dictEq));
});
var ord1Multiplicative = new Data_Ord.Ord1(function () {
  return eq1Multiplicative;
}, function (dictOrd) {
  return Data_Ord.compare(ordMultiplicative(dictOrd));
});

var boundedMultiplicative = function boundedMultiplicative(dictBounded) {
  return dictBounded;
};

var applyMultiplicative = new Control_Apply.Apply(function () {
  return functorMultiplicative;
}, function (v) {
  return function (v1) {
    return v(v1);
  };
});
var bindMultiplicative = new Control_Bind.Bind(function () {
  return applyMultiplicative;
}, function (v) {
  return function (f) {
    return f(v);
  };
});
var applicativeMultiplicative = new Control_Applicative.Applicative(function () {
  return applyMultiplicative;
}, Multiplicative);
var monadMultiplicative = new Control_Monad.Monad(function () {
  return applicativeMultiplicative;
}, function () {
  return bindMultiplicative;
});
module.exports = {
  Multiplicative: Multiplicative,
  eqMultiplicative: eqMultiplicative,
  eq1Multiplicative: eq1Multiplicative,
  ordMultiplicative: ordMultiplicative,
  ord1Multiplicative: ord1Multiplicative,
  boundedMultiplicative: boundedMultiplicative,
  showMultiplicative: showMultiplicative,
  functorMultiplicative: functorMultiplicative,
  applyMultiplicative: applyMultiplicative,
  applicativeMultiplicative: applicativeMultiplicative,
  bindMultiplicative: bindMultiplicative,
  monadMultiplicative: monadMultiplicative,
  semigroupMultiplicative: semigroupMultiplicative,
  monoidMultiplicative: monoidMultiplicative
};
},{"../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Monad/index.js":"../output/Control.Monad/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Semiring/index.js":"../output/Data.Semiring/index.js","../Data.Show/index.js":"../output/Data.Show/index.js"}],"../output/Data.Semigroup.First/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var First = function First(x) {
  return x;
};

var showFirst = function showFirst(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(First " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semigroupFirst = new Data_Semigroup.Semigroup(function (x) {
  return function (v) {
    return x;
  };
});

var ordFirst = function ordFirst(dictOrd) {
  return dictOrd;
};

var functorFirst = new Data_Functor.Functor(function (f) {
  return function (m) {
    return f(m);
  };
});

var eqFirst = function eqFirst(dictEq) {
  return dictEq;
};

var eq1First = new Data_Eq.Eq1(function (dictEq) {
  return Data_Eq.eq(eqFirst(dictEq));
});
var ord1First = new Data_Ord.Ord1(function () {
  return eq1First;
}, function (dictOrd) {
  return Data_Ord.compare(ordFirst(dictOrd));
});

var boundedFirst = function boundedFirst(dictBounded) {
  return dictBounded;
};

var applyFirst = new Control_Apply.Apply(function () {
  return functorFirst;
}, function (v) {
  return function (v1) {
    return v(v1);
  };
});
var bindFirst = new Control_Bind.Bind(function () {
  return applyFirst;
}, function (v) {
  return function (f) {
    return f(v);
  };
});
var applicativeFirst = new Control_Applicative.Applicative(function () {
  return applyFirst;
}, First);
var monadFirst = new Control_Monad.Monad(function () {
  return applicativeFirst;
}, function () {
  return bindFirst;
});
module.exports = {
  First: First,
  eqFirst: eqFirst,
  eq1First: eq1First,
  ordFirst: ordFirst,
  ord1First: ord1First,
  boundedFirst: boundedFirst,
  showFirst: showFirst,
  functorFirst: functorFirst,
  applyFirst: applyFirst,
  applicativeFirst: applicativeFirst,
  bindFirst: bindFirst,
  monadFirst: monadFirst,
  semigroupFirst: semigroupFirst
};
},{"../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Monad/index.js":"../output/Control.Monad/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Show/index.js":"../output/Data.Show/index.js"}],"../output/Data.Semigroup.Last/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Last = function Last(x) {
  return x;
};

var showLast = function showLast(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Last " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semigroupLast = new Data_Semigroup.Semigroup(function (v) {
  return function (x) {
    return x;
  };
});

var ordLast = function ordLast(dictOrd) {
  return dictOrd;
};

var functorLast = new Data_Functor.Functor(function (f) {
  return function (m) {
    return f(m);
  };
});

var eqLast = function eqLast(dictEq) {
  return dictEq;
};

var eq1Last = new Data_Eq.Eq1(function (dictEq) {
  return Data_Eq.eq(eqLast(dictEq));
});
var ord1Last = new Data_Ord.Ord1(function () {
  return eq1Last;
}, function (dictOrd) {
  return Data_Ord.compare(ordLast(dictOrd));
});

var boundedLast = function boundedLast(dictBounded) {
  return dictBounded;
};

var applyLast = new Control_Apply.Apply(function () {
  return functorLast;
}, function (v) {
  return function (v1) {
    return v(v1);
  };
});
var bindLast = new Control_Bind.Bind(function () {
  return applyLast;
}, function (v) {
  return function (f) {
    return f(v);
  };
});
var applicativeLast = new Control_Applicative.Applicative(function () {
  return applyLast;
}, Last);
var monadLast = new Control_Monad.Monad(function () {
  return applicativeLast;
}, function () {
  return bindLast;
});
module.exports = {
  Last: Last,
  eqLast: eqLast,
  eq1Last: eq1Last,
  ordLast: ordLast,
  ord1Last: ord1Last,
  boundedLast: boundedLast,
  showLast: showLast,
  functorLast: functorLast,
  applyLast: applyLast,
  applicativeLast: applicativeLast,
  bindLast: bindLast,
  monadLast: monadLast,
  semigroupLast: semigroupLast
};
},{"../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Monad/index.js":"../output/Control.Monad/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Show/index.js":"../output/Data.Show/index.js"}],"../output/Data.Newtype/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid_Additive = require("../Data.Monoid.Additive/index.js");

var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");

var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");

var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");

var Data_Monoid_Endo = require("../Data.Monoid.Endo/index.js");

var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative/index.js");

var Data_Semigroup_First = require("../Data.Semigroup.First/index.js");

var Data_Semigroup_Last = require("../Data.Semigroup.Last/index.js");

var Newtype = function Newtype(unwrap, wrap) {
  this.unwrap = unwrap;
  this.wrap = wrap;
};

var wrap = function wrap(dict) {
  return dict.wrap;
};

var unwrap = function unwrap(dict) {
  return dict.unwrap;
};

var underF2 = function underF2(dictFunctor) {
  return function (dictFunctor1) {
    return function (dictNewtype) {
      return function (dictNewtype1) {
        return function (v) {
          return function (f) {
            var $66 = Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn)(Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1)));
            var $67 = Data_Function.on(f)(Data_Functor.map(dictFunctor)(wrap(dictNewtype)));
            return function ($68) {
              return $66($67($68));
            };
          };
        };
      };
    };
  };
};

var underF = function underF(dictFunctor) {
  return function (dictFunctor1) {
    return function (dictNewtype) {
      return function (dictNewtype1) {
        return function (v) {
          return function (f) {
            var $69 = Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1));
            var $70 = Data_Functor.map(dictFunctor)(wrap(dictNewtype));
            return function ($71) {
              return $69(f($70($71)));
            };
          };
        };
      };
    };
  };
};

var under2 = function under2(dictNewtype) {
  return function (dictNewtype1) {
    return function (v) {
      return function (f) {
        var $72 = Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn)(unwrap(dictNewtype1));
        var $73 = Data_Function.on(f)(wrap(dictNewtype));
        return function ($74) {
          return $72($73($74));
        };
      };
    };
  };
};

var under = function under(dictNewtype) {
  return function (dictNewtype1) {
    return function (v) {
      return function (f) {
        var $75 = unwrap(dictNewtype1);
        var $76 = wrap(dictNewtype);
        return function ($77) {
          return $75(f($76($77)));
        };
      };
    };
  };
};

var un = function un(dictNewtype) {
  return function (v) {
    return unwrap(dictNewtype);
  };
};

var traverse = function traverse(dictFunctor) {
  return function (dictNewtype) {
    return function (v) {
      return function (f) {
        var $78 = Data_Functor.map(dictFunctor)(wrap(dictNewtype));
        var $79 = unwrap(dictNewtype);
        return function ($80) {
          return $78(f($79($80)));
        };
      };
    };
  };
};

var overF2 = function overF2(dictFunctor) {
  return function (dictFunctor1) {
    return function (dictNewtype) {
      return function (dictNewtype1) {
        return function (v) {
          return function (f) {
            var $81 = Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn)(Data_Functor.map(dictFunctor1)(wrap(dictNewtype1)));
            var $82 = Data_Function.on(f)(Data_Functor.map(dictFunctor)(unwrap(dictNewtype)));
            return function ($83) {
              return $81($82($83));
            };
          };
        };
      };
    };
  };
};

var overF = function overF(dictFunctor) {
  return function (dictFunctor1) {
    return function (dictNewtype) {
      return function (dictNewtype1) {
        return function (v) {
          return function (f) {
            var $84 = Data_Functor.map(dictFunctor1)(wrap(dictNewtype1));
            var $85 = Data_Functor.map(dictFunctor)(unwrap(dictNewtype));
            return function ($86) {
              return $84(f($85($86)));
            };
          };
        };
      };
    };
  };
};

var over2 = function over2(dictNewtype) {
  return function (dictNewtype1) {
    return function (v) {
      return function (f) {
        var $87 = Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn)(wrap(dictNewtype1));
        var $88 = Data_Function.on(f)(unwrap(dictNewtype));
        return function ($89) {
          return $87($88($89));
        };
      };
    };
  };
};

var over = function over(dictNewtype) {
  return function (dictNewtype1) {
    return function (v) {
      return function (f) {
        var $90 = wrap(dictNewtype1);
        var $91 = unwrap(dictNewtype);
        return function ($92) {
          return $90(f($91($92)));
        };
      };
    };
  };
};

var op = function op(dictNewtype) {
  return un(dictNewtype);
};

var newtypeMultiplicative = new Newtype(function (v) {
  return v;
}, Data_Monoid_Multiplicative.Multiplicative);
var newtypeLast = new Newtype(function (v) {
  return v;
}, Data_Semigroup_Last.Last);
var newtypeFirst = new Newtype(function (v) {
  return v;
}, Data_Semigroup_First.First);
var newtypeEndo = new Newtype(function (v) {
  return v;
}, Data_Monoid_Endo.Endo);
var newtypeDual = new Newtype(function (v) {
  return v;
}, Data_Monoid_Dual.Dual);
var newtypeDisj = new Newtype(function (v) {
  return v;
}, Data_Monoid_Disj.Disj);
var newtypeConj = new Newtype(function (v) {
  return v;
}, Data_Monoid_Conj.Conj);
var newtypeAdditive = new Newtype(function (v) {
  return v;
}, Data_Monoid_Additive.Additive);

var collect = function collect(dictFunctor) {
  return function (dictNewtype) {
    return function (v) {
      return function (f) {
        var $93 = wrap(dictNewtype);
        var $94 = Data_Functor.map(dictFunctor)(unwrap(dictNewtype));
        return function ($95) {
          return $93(f($94($95)));
        };
      };
    };
  };
};

var alaF = function alaF(dictFunctor) {
  return function (dictFunctor1) {
    return function (dictNewtype) {
      return function (dictNewtype1) {
        return function (v) {
          return function (f) {
            var $96 = Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1));
            var $97 = Data_Functor.map(dictFunctor)(wrap(dictNewtype));
            return function ($98) {
              return $96(f($97($98)));
            };
          };
        };
      };
    };
  };
};

var ala = function ala(dictFunctor) {
  return function (dictNewtype) {
    return function (dictNewtype1) {
      return function (v) {
        return function (f) {
          return Data_Functor.map(dictFunctor)(unwrap(dictNewtype))(f(wrap(dictNewtype1)));
        };
      };
    };
  };
};

module.exports = {
  unwrap: unwrap,
  wrap: wrap,
  Newtype: Newtype,
  un: un,
  op: op,
  ala: ala,
  alaF: alaF,
  over: over,
  overF: overF,
  under: under,
  underF: underF,
  over2: over2,
  overF2: overF2,
  under2: under2,
  underF2: underF2,
  traverse: traverse,
  collect: collect,
  newtypeAdditive: newtypeAdditive,
  newtypeMultiplicative: newtypeMultiplicative,
  newtypeConj: newtypeConj,
  newtypeDisj: newtypeDisj,
  newtypeDual: newtypeDual,
  newtypeEndo: newtypeEndo,
  newtypeFirst: newtypeFirst,
  newtypeLast: newtypeLast
};
},{"../Control.Semigroupoid/index.js":"../output/Control.Semigroupoid/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Monoid.Additive/index.js":"../output/Data.Monoid.Additive/index.js","../Data.Monoid.Conj/index.js":"../output/Data.Monoid.Conj/index.js","../Data.Monoid.Disj/index.js":"../output/Data.Monoid.Disj/index.js","../Data.Monoid.Dual/index.js":"../output/Data.Monoid.Dual/index.js","../Data.Monoid.Endo/index.js":"../output/Data.Monoid.Endo/index.js","../Data.Monoid.Multiplicative/index.js":"../output/Data.Monoid.Multiplicative/index.js","../Data.Semigroup.First/index.js":"../output/Data.Semigroup.First/index.js","../Data.Semigroup.Last/index.js":"../output/Data.Semigroup.Last/index.js"}],"../output/Data.Foldable/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");

var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");

var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");

var Data_Monoid_Endo = require("../Data.Monoid.Endo/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Foldable = function Foldable(foldMap, foldl, foldr) {
  this.foldMap = foldMap;
  this.foldl = foldl;
  this.foldr = foldr;
};

var foldr = function foldr(dict) {
  return dict.foldr;
};

var indexr = function indexr(dictFoldable) {
  return function (idx) {
    var go = function go(a) {
      return function (cursor) {
        if (cursor.elem instanceof Data_Maybe.Just) {
          return cursor;
        }

        ;
        var $106 = cursor.pos === idx;

        if ($106) {
          return {
            elem: new Data_Maybe.Just(a),
            pos: cursor.pos
          };
        }

        ;
        return {
          pos: cursor.pos + 1 | 0,
          elem: cursor.elem
        };
      };
    };

    var $193 = foldr(dictFoldable)(go)({
      elem: Data_Maybe.Nothing.value,
      pos: 0
    });
    return function ($194) {
      return function (v) {
        return v.elem;
      }($193($194));
    };
  };
};

var $$null = function $$null(dictFoldable) {
  return foldr(dictFoldable)(function (v) {
    return function (v1) {
      return false;
    };
  })(true);
};

var oneOf = function oneOf(dictFoldable) {
  return function (dictPlus) {
    return foldr(dictFoldable)(Control_Alt.alt(dictPlus.Alt0()))(Control_Plus.empty(dictPlus));
  };
};

var oneOfMap = function oneOfMap(dictFoldable) {
  return function (dictPlus) {
    return function (f) {
      return foldr(dictFoldable)(function () {
        var $195 = Control_Alt.alt(dictPlus.Alt0());
        return function ($196) {
          return $195(f($196));
        };
      }())(Control_Plus.empty(dictPlus));
    };
  };
};

var traverse_ = function traverse_(dictApplicative) {
  return function (dictFoldable) {
    return function (f) {
      return foldr(dictFoldable)(function () {
        var $197 = Control_Apply.applySecond(dictApplicative.Apply0());
        return function ($198) {
          return $197(f($198));
        };
      }())(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
    };
  };
};

var for_ = function for_(dictApplicative) {
  return function (dictFoldable) {
    return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
  };
};

var sequence_ = function sequence_(dictApplicative) {
  return function (dictFoldable) {
    return traverse_(dictApplicative)(dictFoldable)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var foldl = function foldl(dict) {
  return dict.foldl;
};

var indexl = function indexl(dictFoldable) {
  return function (idx) {
    var go = function go(cursor) {
      return function (a) {
        if (cursor.elem instanceof Data_Maybe.Just) {
          return cursor;
        }

        ;
        var $109 = cursor.pos === idx;

        if ($109) {
          return {
            elem: new Data_Maybe.Just(a),
            pos: cursor.pos
          };
        }

        ;
        return {
          pos: cursor.pos + 1 | 0,
          elem: cursor.elem
        };
      };
    };

    var $199 = foldl(dictFoldable)(go)({
      elem: Data_Maybe.Nothing.value,
      pos: 0
    });
    return function ($200) {
      return function (v) {
        return v.elem;
      }($199($200));
    };
  };
};

var intercalate = function intercalate(dictFoldable) {
  return function (dictMonoid) {
    return function (sep) {
      return function (xs) {
        var go = function go(v) {
          return function (x) {
            if (v.init) {
              return {
                init: false,
                acc: x
              };
            }

            ;
            return {
              init: false,
              acc: Data_Semigroup.append(dictMonoid.Semigroup0())(v.acc)(Data_Semigroup.append(dictMonoid.Semigroup0())(sep)(x))
            };
          };
        };

        return foldl(dictFoldable)(go)({
          init: true,
          acc: Data_Monoid.mempty(dictMonoid)
        })(xs).acc;
      };
    };
  };
};

var length = function length(dictFoldable) {
  return function (dictSemiring) {
    return foldl(dictFoldable)(function (c) {
      return function (v) {
        return Data_Semiring.add(dictSemiring)(Data_Semiring.one(dictSemiring))(c);
      };
    })(Data_Semiring.zero(dictSemiring));
  };
};

var maximumBy = function maximumBy(dictFoldable) {
  return function (cmp) {
    var max$prime = function max$prime(v) {
      return function (v1) {
        if (v instanceof Data_Maybe.Nothing) {
          return new Data_Maybe.Just(v1);
        }

        ;

        if (v instanceof Data_Maybe.Just) {
          return new Data_Maybe.Just(function () {
            var $116 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.GT.value);

            if ($116) {
              return v.value0;
            }

            ;
            return v1;
          }());
        }

        ;
        throw new Error("Failed pattern match at Data.Foldable (line 389, column 3 - line 389, column 27): " + [v.constructor.name, v1.constructor.name]);
      };
    };

    return foldl(dictFoldable)(max$prime)(Data_Maybe.Nothing.value);
  };
};

var maximum = function maximum(dictOrd) {
  return function (dictFoldable) {
    return maximumBy(dictFoldable)(Data_Ord.compare(dictOrd));
  };
};

var minimumBy = function minimumBy(dictFoldable) {
  return function (cmp) {
    var min$prime = function min$prime(v) {
      return function (v1) {
        if (v instanceof Data_Maybe.Nothing) {
          return new Data_Maybe.Just(v1);
        }

        ;

        if (v instanceof Data_Maybe.Just) {
          return new Data_Maybe.Just(function () {
            var $120 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.LT.value);

            if ($120) {
              return v.value0;
            }

            ;
            return v1;
          }());
        }

        ;
        throw new Error("Failed pattern match at Data.Foldable (line 402, column 3 - line 402, column 27): " + [v.constructor.name, v1.constructor.name]);
      };
    };

    return foldl(dictFoldable)(min$prime)(Data_Maybe.Nothing.value);
  };
};

var minimum = function minimum(dictOrd) {
  return function (dictFoldable) {
    return minimumBy(dictFoldable)(Data_Ord.compare(dictOrd));
  };
};

var product = function product(dictFoldable) {
  return function (dictSemiring) {
    return foldl(dictFoldable)(Data_Semiring.mul(dictSemiring))(Data_Semiring.one(dictSemiring));
  };
};

var sum = function sum(dictFoldable) {
  return function (dictSemiring) {
    return foldl(dictFoldable)(Data_Semiring.add(dictSemiring))(Data_Semiring.zero(dictSemiring));
  };
};

var foldableMultiplicative = new Foldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      return f(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(z)(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(v)(z);
    };
  };
});
var foldableMaybe = new Foldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      if (v instanceof Data_Maybe.Nothing) {
        return Data_Monoid.mempty(dictMonoid);
      }

      ;

      if (v instanceof Data_Maybe.Just) {
        return f(v.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Foldable (line 129, column 1 - line 135, column 27): " + [f.constructor.name, v.constructor.name]);
    };
  };
}, function (v) {
  return function (z) {
    return function (v1) {
      if (v1 instanceof Data_Maybe.Nothing) {
        return z;
      }

      ;

      if (v1 instanceof Data_Maybe.Just) {
        return v(z)(v1.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Foldable (line 129, column 1 - line 135, column 27): " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
    };
  };
}, function (v) {
  return function (z) {
    return function (v1) {
      if (v1 instanceof Data_Maybe.Nothing) {
        return z;
      }

      ;

      if (v1 instanceof Data_Maybe.Just) {
        return v(v1.value0)(z);
      }

      ;
      throw new Error("Failed pattern match at Data.Foldable (line 129, column 1 - line 135, column 27): " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
    };
  };
});
var foldableDual = new Foldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      return f(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(z)(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(v)(z);
    };
  };
});
var foldableDisj = new Foldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      return f(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(z)(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(v)(z);
    };
  };
});
var foldableConj = new Foldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      return f(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(z)(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(v)(z);
    };
  };
});
var foldableAdditive = new Foldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      return f(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(z)(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(v)(z);
    };
  };
});

var foldMapDefaultR = function foldMapDefaultR(dictFoldable) {
  return function (dictMonoid) {
    return function (f) {
      return foldr(dictFoldable)(function (x) {
        return function (acc) {
          return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
        };
      })(Data_Monoid.mempty(dictMonoid));
    };
  };
};

var foldableArray = new Foldable(function (dictMonoid) {
  return foldMapDefaultR(foldableArray)(dictMonoid);
}, $foreign.foldlArray, $foreign.foldrArray);

var foldMapDefaultL = function foldMapDefaultL(dictFoldable) {
  return function (dictMonoid) {
    return function (f) {
      return foldl(dictFoldable)(function (acc) {
        return function (x) {
          return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(x));
        };
      })(Data_Monoid.mempty(dictMonoid));
    };
  };
};

var foldMap = function foldMap(dict) {
  return dict.foldMap;
};

var foldableFirst = new Foldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      return foldMap(foldableMaybe)(dictMonoid)(f)(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return foldl(foldableMaybe)(f)(z)(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return foldr(foldableMaybe)(f)(z)(v);
    };
  };
});
var foldableLast = new Foldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      return foldMap(foldableMaybe)(dictMonoid)(f)(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return foldl(foldableMaybe)(f)(z)(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return foldr(foldableMaybe)(f)(z)(v);
    };
  };
});

var foldlDefault = function foldlDefault(dictFoldable) {
  return function (c) {
    return function (u) {
      return function (xs) {
        return Data_Newtype.unwrap(Data_Newtype.newtypeEndo)(Data_Newtype.unwrap(Data_Newtype.newtypeDual)(foldMap(dictFoldable)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn)))(function () {
          var $201 = Data_Function.flip(c);
          return function ($202) {
            return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo($201($202)));
          };
        }())(xs)))(u);
      };
    };
  };
};

var foldrDefault = function foldrDefault(dictFoldable) {
  return function (c) {
    return function (u) {
      return function (xs) {
        return Data_Newtype.unwrap(Data_Newtype.newtypeEndo)(foldMap(dictFoldable)(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn))(function ($203) {
          return Data_Monoid_Endo.Endo(c($203));
        })(xs))(u);
      };
    };
  };
};

var surroundMap = function surroundMap(dictFoldable) {
  return function (dictSemigroup) {
    return function (d) {
      return function (t) {
        return function (f) {
          var joined = function joined(a) {
            return function (m) {
              return Data_Semigroup.append(dictSemigroup)(d)(Data_Semigroup.append(dictSemigroup)(t(a))(m));
            };
          };

          return Data_Newtype.unwrap(Data_Newtype.newtypeEndo)(foldMap(dictFoldable)(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn))(joined)(f))(d);
        };
      };
    };
  };
};

var surround = function surround(dictFoldable) {
  return function (dictSemigroup) {
    return function (d) {
      return surroundMap(dictFoldable)(dictSemigroup)(d)(Control_Category.identity(Control_Category.categoryFn));
    };
  };
};

var foldM = function foldM(dictFoldable) {
  return function (dictMonad) {
    return function (f) {
      return function (a0) {
        return foldl(dictFoldable)(function (ma) {
          return function (b) {
            return Control_Bind.bind(dictMonad.Bind1())(ma)(Data_Function.flip(f)(b));
          };
        })(Control_Applicative.pure(dictMonad.Applicative0())(a0));
      };
    };
  };
};

var fold = function fold(dictFoldable) {
  return function (dictMonoid) {
    return foldMap(dictFoldable)(dictMonoid)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var findMap = function findMap(dictFoldable) {
  return function (p) {
    var go = function go(v) {
      return function (v1) {
        if (v instanceof Data_Maybe.Nothing) {
          return p(v1);
        }

        ;
        return v;
      };
    };

    return foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);
  };
};

var find = function find(dictFoldable) {
  return function (p) {
    var go = function go(v) {
      return function (v1) {
        if (v instanceof Data_Maybe.Nothing && p(v1)) {
          return new Data_Maybe.Just(v1);
        }

        ;
        return v;
      };
    };

    return foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);
  };
};

var any = function any(dictFoldable) {
  return function (dictHeytingAlgebra) {
    return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Newtype.newtypeDisj)(Data_Newtype.newtypeDisj)(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));
  };
};

var elem = function elem(dictFoldable) {
  return function (dictEq) {
    var $204 = any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean);
    var $205 = Data_Eq.eq(dictEq);
    return function ($206) {
      return $204($205($206));
    };
  };
};

var notElem = function notElem(dictFoldable) {
  return function (dictEq) {
    return function (x) {
      var $207 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean);
      var $208 = elem(dictFoldable)(dictEq)(x);
      return function ($209) {
        return $207($208($209));
      };
    };
  };
};

var or = function or(dictFoldable) {
  return function (dictHeytingAlgebra) {
    return any(dictFoldable)(dictHeytingAlgebra)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var all = function all(dictFoldable) {
  return function (dictHeytingAlgebra) {
    return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Newtype.newtypeConj)(Data_Newtype.newtypeConj)(Data_Monoid_Conj.Conj)(foldMap(dictFoldable)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra)));
  };
};

var and = function and(dictFoldable) {
  return function (dictHeytingAlgebra) {
    return all(dictFoldable)(dictHeytingAlgebra)(Control_Category.identity(Control_Category.categoryFn));
  };
};

module.exports = {
  Foldable: Foldable,
  foldr: foldr,
  foldl: foldl,
  foldMap: foldMap,
  foldrDefault: foldrDefault,
  foldlDefault: foldlDefault,
  foldMapDefaultL: foldMapDefaultL,
  foldMapDefaultR: foldMapDefaultR,
  fold: fold,
  foldM: foldM,
  traverse_: traverse_,
  for_: for_,
  sequence_: sequence_,
  oneOf: oneOf,
  oneOfMap: oneOfMap,
  intercalate: intercalate,
  surroundMap: surroundMap,
  surround: surround,
  and: and,
  or: or,
  all: all,
  any: any,
  sum: sum,
  product: product,
  elem: elem,
  notElem: notElem,
  indexl: indexl,
  indexr: indexr,
  find: find,
  findMap: findMap,
  maximum: maximum,
  maximumBy: maximumBy,
  minimum: minimum,
  minimumBy: minimumBy,
  "null": $$null,
  length: length,
  foldableArray: foldableArray,
  foldableMaybe: foldableMaybe,
  foldableFirst: foldableFirst,
  foldableLast: foldableLast,
  foldableAdditive: foldableAdditive,
  foldableDual: foldableDual,
  foldableDisj: foldableDisj,
  foldableConj: foldableConj,
  foldableMultiplicative: foldableMultiplicative
};
},{"./foreign.js":"../output/Data.Foldable/foreign.js","../Control.Alt/index.js":"../output/Control.Alt/index.js","../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Category/index.js":"../output/Control.Category/index.js","../Control.Plus/index.js":"../output/Control.Plus/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.HeytingAlgebra/index.js":"../output/Data.HeytingAlgebra/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Monoid.Conj/index.js":"../output/Data.Monoid.Conj/index.js","../Data.Monoid.Disj/index.js":"../output/Data.Monoid.Disj/index.js","../Data.Monoid.Dual/index.js":"../output/Data.Monoid.Dual/index.js","../Data.Monoid.Endo/index.js":"../output/Data.Monoid.Endo/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Ordering/index.js":"../output/Data.Ordering/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Semiring/index.js":"../output/Data.Semiring/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js"}],"../output/Control.Biapplicative/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Biapplicative = function Biapplicative(Biapply0, bipure) {
  this.Biapply0 = Biapply0;
  this.bipure = bipure;
};

var bipure = function bipure(dict) {
  return dict.bipure;
};

module.exports = {
  bipure: bipure,
  Biapplicative: Biapplicative
};
},{}],"../output/Data.Bifunctor/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Bifunctor = function Bifunctor(bimap) {
  this.bimap = bimap;
};

var bimap = function bimap(dict) {
  return dict.bimap;
};

var lmap = function lmap(dictBifunctor) {
  return function (f) {
    return bimap(dictBifunctor)(f)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var rmap = function rmap(dictBifunctor) {
  return bimap(dictBifunctor)(Control_Category.identity(Control_Category.categoryFn));
};

module.exports = {
  bimap: bimap,
  Bifunctor: Bifunctor,
  lmap: lmap,
  rmap: rmap
};
},{"../Control.Category/index.js":"../output/Control.Category/index.js"}],"../output/Control.Biapply/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Function = require("../Data.Function/index.js");

var Biapply = function Biapply(Bifunctor0, biapply) {
  this.Bifunctor0 = Bifunctor0;
  this.biapply = biapply;
};

var biapply = function biapply(dict) {
  return dict.biapply;
};

var biapplyFirst = function biapplyFirst(dictBiapply) {
  return function (a) {
    return function (b) {
      return biapply(dictBiapply)(Control_Category.identity(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply.Bifunctor0())(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)))(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn))))(a))(b);
    };
  };
};

var biapplySecond = function biapplySecond(dictBiapply) {
  return function (a) {
    return function (b) {
      return biapply(dictBiapply)(Control_Category.identity(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply.Bifunctor0())(Data_Function["const"])(Data_Function["const"]))(a))(b);
    };
  };
};

var bilift2 = function bilift2(dictBiapply) {
  return function (f) {
    return function (g) {
      return function (a) {
        return function (b) {
          return biapply(dictBiapply)(Control_Category.identity(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply.Bifunctor0())(f)(g))(a))(b);
        };
      };
    };
  };
};

var bilift3 = function bilift3(dictBiapply) {
  return function (f) {
    return function (g) {
      return function (a) {
        return function (b) {
          return function (c) {
            return biapply(dictBiapply)(biapply(dictBiapply)(Control_Category.identity(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply.Bifunctor0())(f)(g))(a))(b))(c);
          };
        };
      };
    };
  };
};

module.exports = {
  biapply: biapply,
  Biapply: Biapply,
  biapplyFirst: biapplyFirst,
  biapplySecond: biapplySecond,
  bilift2: bilift2,
  bilift3: bilift3
};
},{"../Control.Category/index.js":"../output/Control.Category/index.js","../Data.Bifunctor/index.js":"../output/Data.Bifunctor/index.js","../Data.Function/index.js":"../output/Data.Function/index.js"}],"../output/Control.Comonad/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Comonad = function Comonad(Extend0, extract) {
  this.Extend0 = Extend0;
  this.extract = extract;
};

var extract = function extract(dict) {
  return dict.extract;
};

module.exports = {
  Comonad: Comonad,
  extract: extract
};
},{}],"../output/Control.Lazy/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Data_Unit = require("../Data.Unit/index.js");

var Lazy = function Lazy(defer) {
  this.defer = defer;
};

var lazyUnit = new Lazy(function (v) {
  return Data_Unit.unit;
});
var lazyFn = new Lazy(function (f) {
  return function (x) {
    return f(Data_Unit.unit)(x);
  };
});

var defer = function defer(dict) {
  return dict.defer;
};

var fix = function fix(dictLazy) {
  return function (f) {
    var go = defer(dictLazy)(function (v) {
      return f(go);
    });
    return go;
  };
};

module.exports = {
  defer: defer,
  Lazy: Lazy,
  fix: fix,
  lazyFn: lazyFn,
  lazyUnit: lazyUnit
};
},{"../Data.Unit/index.js":"../output/Data.Unit/index.js"}],"../output/Data.Bifoldable/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");

var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");

var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");

var Data_Monoid_Endo = require("../Data.Monoid.Endo/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Bifoldable = function Bifoldable(bifoldMap, bifoldl, bifoldr) {
  this.bifoldMap = bifoldMap;
  this.bifoldl = bifoldl;
  this.bifoldr = bifoldr;
};

var bifoldr = function bifoldr(dict) {
  return dict.bifoldr;
};

var bitraverse_ = function bitraverse_(dictBifoldable) {
  return function (dictApplicative) {
    return function (f) {
      return function (g) {
        return bifoldr(dictBifoldable)(function () {
          var $97 = Control_Apply.applySecond(dictApplicative.Apply0());
          return function ($98) {
            return $97(f($98));
          };
        }())(function () {
          var $99 = Control_Apply.applySecond(dictApplicative.Apply0());
          return function ($100) {
            return $99(g($100));
          };
        }())(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
      };
    };
  };
};

var bifor_ = function bifor_(dictBifoldable) {
  return function (dictApplicative) {
    return function (t) {
      return function (f) {
        return function (g) {
          return bitraverse_(dictBifoldable)(dictApplicative)(f)(g)(t);
        };
      };
    };
  };
};

var bisequence_ = function bisequence_(dictBifoldable) {
  return function (dictApplicative) {
    return bitraverse_(dictBifoldable)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn))(Control_Category.identity(Control_Category.categoryFn));
  };
};

var bifoldl = function bifoldl(dict) {
  return dict.bifoldl;
};

var bifoldableJoker = function bifoldableJoker(dictFoldable) {
  return new Bifoldable(function (dictMonoid) {
    return function (v) {
      return function (r) {
        return function (v1) {
          return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(r)(v1);
        };
      };
    };
  }, function (v) {
    return function (r) {
      return function (u) {
        return function (v1) {
          return Data_Foldable.foldl(dictFoldable)(r)(u)(v1);
        };
      };
    };
  }, function (v) {
    return function (r) {
      return function (u) {
        return function (v1) {
          return Data_Foldable.foldr(dictFoldable)(r)(u)(v1);
        };
      };
    };
  });
};

var bifoldableClown = function bifoldableClown(dictFoldable) {
  return new Bifoldable(function (dictMonoid) {
    return function (l) {
      return function (v) {
        return function (v1) {
          return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(l)(v1);
        };
      };
    };
  }, function (l) {
    return function (v) {
      return function (u) {
        return function (v1) {
          return Data_Foldable.foldl(dictFoldable)(l)(u)(v1);
        };
      };
    };
  }, function (l) {
    return function (v) {
      return function (u) {
        return function (v1) {
          return Data_Foldable.foldr(dictFoldable)(l)(u)(v1);
        };
      };
    };
  });
};

var bifoldMapDefaultR = function bifoldMapDefaultR(dictBifoldable) {
  return function (dictMonoid) {
    return function (f) {
      return function (g) {
        return bifoldr(dictBifoldable)(function () {
          var $101 = Data_Semigroup.append(dictMonoid.Semigroup0());
          return function ($102) {
            return $101(f($102));
          };
        }())(function () {
          var $103 = Data_Semigroup.append(dictMonoid.Semigroup0());
          return function ($104) {
            return $103(g($104));
          };
        }())(Data_Monoid.mempty(dictMonoid));
      };
    };
  };
};

var bifoldMapDefaultL = function bifoldMapDefaultL(dictBifoldable) {
  return function (dictMonoid) {
    return function (f) {
      return function (g) {
        return bifoldl(dictBifoldable)(function (m) {
          return function (a) {
            return Data_Semigroup.append(dictMonoid.Semigroup0())(m)(f(a));
          };
        })(function (m) {
          return function (b) {
            return Data_Semigroup.append(dictMonoid.Semigroup0())(m)(g(b));
          };
        })(Data_Monoid.mempty(dictMonoid));
      };
    };
  };
};

var bifoldMap = function bifoldMap(dict) {
  return dict.bifoldMap;
};

var bifoldableFlip = function bifoldableFlip(dictBifoldable) {
  return new Bifoldable(function (dictMonoid) {
    return function (r) {
      return function (l) {
        return function (v) {
          return bifoldMap(dictBifoldable)(dictMonoid)(l)(r)(v);
        };
      };
    };
  }, function (r) {
    return function (l) {
      return function (u) {
        return function (v) {
          return bifoldl(dictBifoldable)(l)(r)(u)(v);
        };
      };
    };
  }, function (r) {
    return function (l) {
      return function (u) {
        return function (v) {
          return bifoldr(dictBifoldable)(l)(r)(u)(v);
        };
      };
    };
  });
};

var bifoldableWrap = function bifoldableWrap(dictBifoldable) {
  return new Bifoldable(function (dictMonoid) {
    return function (l) {
      return function (r) {
        return function (v) {
          return bifoldMap(dictBifoldable)(dictMonoid)(l)(r)(v);
        };
      };
    };
  }, function (l) {
    return function (r) {
      return function (u) {
        return function (v) {
          return bifoldl(dictBifoldable)(l)(r)(u)(v);
        };
      };
    };
  }, function (l) {
    return function (r) {
      return function (u) {
        return function (v) {
          return bifoldr(dictBifoldable)(l)(r)(u)(v);
        };
      };
    };
  });
};

var bifoldlDefault = function bifoldlDefault(dictBifoldable) {
  return function (f) {
    return function (g) {
      return function (z) {
        return function (p) {
          return Data_Newtype.unwrap(Data_Newtype.newtypeEndo)(Data_Newtype.unwrap(Data_Newtype.newtypeDual)(bifoldMap(dictBifoldable)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn)))(function () {
            var $105 = Data_Function.flip(f);
            return function ($106) {
              return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo($105($106)));
            };
          }())(function () {
            var $107 = Data_Function.flip(g);
            return function ($108) {
              return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo($107($108)));
            };
          }())(p)))(z);
        };
      };
    };
  };
};

var bifoldrDefault = function bifoldrDefault(dictBifoldable) {
  return function (f) {
    return function (g) {
      return function (z) {
        return function (p) {
          return Data_Newtype.unwrap(Data_Newtype.newtypeEndo)(bifoldMap(dictBifoldable)(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn))(function ($109) {
            return Data_Monoid_Endo.Endo(f($109));
          })(function ($110) {
            return Data_Monoid_Endo.Endo(g($110));
          })(p))(z);
        };
      };
    };
  };
};

var bifoldableProduct = function bifoldableProduct(dictBifoldable) {
  return function (dictBifoldable1) {
    return new Bifoldable(function (dictMonoid) {
      return function (l) {
        return function (r) {
          return function (v) {
            return Data_Semigroup.append(dictMonoid.Semigroup0())(bifoldMap(dictBifoldable)(dictMonoid)(l)(r)(v.value0))(bifoldMap(dictBifoldable1)(dictMonoid)(l)(r)(v.value1));
          };
        };
      };
    }, function (l) {
      return function (r) {
        return function (u) {
          return function (m) {
            return bifoldlDefault(bifoldableProduct(dictBifoldable)(dictBifoldable1))(l)(r)(u)(m);
          };
        };
      };
    }, function (l) {
      return function (r) {
        return function (u) {
          return function (m) {
            return bifoldrDefault(bifoldableProduct(dictBifoldable)(dictBifoldable1))(l)(r)(u)(m);
          };
        };
      };
    });
  };
};

var bifold = function bifold(dictBifoldable) {
  return function (dictMonoid) {
    return bifoldMap(dictBifoldable)(dictMonoid)(Control_Category.identity(Control_Category.categoryFn))(Control_Category.identity(Control_Category.categoryFn));
  };
};

var biany = function biany(dictBifoldable) {
  return function (dictBooleanAlgebra) {
    return function (p) {
      return function (q) {
        var $111 = Data_Newtype.unwrap(Data_Newtype.newtypeDisj);
        var $112 = bifoldMap(dictBifoldable)(Data_Monoid_Disj.monoidDisj(dictBooleanAlgebra.HeytingAlgebra0()))(function ($114) {
          return Data_Monoid_Disj.Disj(p($114));
        })(function ($115) {
          return Data_Monoid_Disj.Disj(q($115));
        });
        return function ($113) {
          return $111($112($113));
        };
      };
    };
  };
};

var biall = function biall(dictBifoldable) {
  return function (dictBooleanAlgebra) {
    return function (p) {
      return function (q) {
        var $116 = Data_Newtype.unwrap(Data_Newtype.newtypeConj);
        var $117 = bifoldMap(dictBifoldable)(Data_Monoid_Conj.monoidConj(dictBooleanAlgebra.HeytingAlgebra0()))(function ($119) {
          return Data_Monoid_Conj.Conj(p($119));
        })(function ($120) {
          return Data_Monoid_Conj.Conj(q($120));
        });
        return function ($118) {
          return $116($117($118));
        };
      };
    };
  };
};

module.exports = {
  bifoldMap: bifoldMap,
  bifoldl: bifoldl,
  bifoldr: bifoldr,
  Bifoldable: Bifoldable,
  bifoldrDefault: bifoldrDefault,
  bifoldlDefault: bifoldlDefault,
  bifoldMapDefaultR: bifoldMapDefaultR,
  bifoldMapDefaultL: bifoldMapDefaultL,
  bifold: bifold,
  bitraverse_: bitraverse_,
  bifor_: bifor_,
  bisequence_: bisequence_,
  biany: biany,
  biall: biall,
  bifoldableClown: bifoldableClown,
  bifoldableJoker: bifoldableJoker,
  bifoldableFlip: bifoldableFlip,
  bifoldableProduct: bifoldableProduct,
  bifoldableWrap: bifoldableWrap
};
},{"../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Category/index.js":"../output/Control.Category/index.js","../Data.Foldable/index.js":"../output/Data.Foldable/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Monoid.Conj/index.js":"../output/Data.Monoid.Conj/index.js","../Data.Monoid.Disj/index.js":"../output/Data.Monoid.Disj/index.js","../Data.Monoid.Dual/index.js":"../output/Data.Monoid.Dual/index.js","../Data.Monoid.Endo/index.js":"../output/Data.Monoid.Endo/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js"}],"../output/Data.Bifunctor.Clown/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Biapplicative = require("../Control.Biapplicative/index.js");

var Control_Biapply = require("../Control.Biapply/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Show = require("../Data.Show/index.js");

var Clown = function Clown(x) {
  return x;
};

var showClown = function showClown(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Clown " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var ordClown = function ordClown(dictOrd) {
  return dictOrd;
};

var newtypeClown = new Data_Newtype.Newtype(function (n) {
  return n;
}, Clown);
var functorClown = new Data_Functor.Functor(function (v) {
  return function (v1) {
    return v1;
  };
});

var eqClown = function eqClown(dictEq) {
  return dictEq;
};

var bifunctorClown = function bifunctorClown(dictFunctor) {
  return new Data_Bifunctor.Bifunctor(function (f) {
    return function (v) {
      return function (v1) {
        return Data_Functor.map(dictFunctor)(f)(v1);
      };
    };
  });
};

var biapplyClown = function biapplyClown(dictApply) {
  return new Control_Biapply.Biapply(function () {
    return bifunctorClown(dictApply.Functor0());
  }, function (v) {
    return function (v1) {
      return Control_Apply.apply(dictApply)(v)(v1);
    };
  });
};

var biapplicativeClown = function biapplicativeClown(dictApplicative) {
  return new Control_Biapplicative.Biapplicative(function () {
    return biapplyClown(dictApplicative.Apply0());
  }, function (a) {
    return function (v) {
      return Control_Applicative.pure(dictApplicative)(a);
    };
  });
};

module.exports = {
  Clown: Clown,
  newtypeClown: newtypeClown,
  eqClown: eqClown,
  ordClown: ordClown,
  showClown: showClown,
  functorClown: functorClown,
  bifunctorClown: bifunctorClown,
  biapplyClown: biapplyClown,
  biapplicativeClown: biapplicativeClown
};
},{"../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Biapplicative/index.js":"../output/Control.Biapplicative/index.js","../Control.Biapply/index.js":"../output/Control.Biapply/index.js","../Data.Bifunctor/index.js":"../output/Data.Bifunctor/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Show/index.js":"../output/Data.Show/index.js"}],"../output/Data.Bifunctor.Flip/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Biapplicative = require("../Control.Biapplicative/index.js");

var Control_Biapply = require("../Control.Biapply/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Show = require("../Data.Show/index.js");

var Flip = function Flip(x) {
  return x;
};

var showFlip = function showFlip(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Flip " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var ordFlip = function ordFlip(dictOrd) {
  return dictOrd;
};

var newtypeFlip = new Data_Newtype.Newtype(function (n) {
  return n;
}, Flip);

var functorFlip = function functorFlip(dictBifunctor) {
  return new Data_Functor.Functor(function (f) {
    return function (v) {
      return Data_Bifunctor.lmap(dictBifunctor)(f)(v);
    };
  });
};

var eqFlip = function eqFlip(dictEq) {
  return dictEq;
};

var bifunctorFlip = function bifunctorFlip(dictBifunctor) {
  return new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
      return function (v) {
        return Data_Bifunctor.bimap(dictBifunctor)(g)(f)(v);
      };
    };
  });
};

var biapplyFlip = function biapplyFlip(dictBiapply) {
  return new Control_Biapply.Biapply(function () {
    return bifunctorFlip(dictBiapply.Bifunctor0());
  }, function (v) {
    return function (v1) {
      return Control_Biapply.biapply(dictBiapply)(v)(v1);
    };
  });
};

var biapplicativeFlip = function biapplicativeFlip(dictBiapplicative) {
  return new Control_Biapplicative.Biapplicative(function () {
    return biapplyFlip(dictBiapplicative.Biapply0());
  }, function (a) {
    return function (b) {
      return Control_Biapplicative.bipure(dictBiapplicative)(b)(a);
    };
  });
};

module.exports = {
  Flip: Flip,
  newtypeFlip: newtypeFlip,
  eqFlip: eqFlip,
  ordFlip: ordFlip,
  showFlip: showFlip,
  functorFlip: functorFlip,
  bifunctorFlip: bifunctorFlip,
  biapplyFlip: biapplyFlip,
  biapplicativeFlip: biapplicativeFlip
};
},{"../Control.Biapplicative/index.js":"../output/Control.Biapplicative/index.js","../Control.Biapply/index.js":"../output/Control.Biapply/index.js","../Data.Bifunctor/index.js":"../output/Data.Bifunctor/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Show/index.js":"../output/Data.Show/index.js"}],"../output/Data.Bifunctor.Joker/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Biapplicative = require("../Control.Biapplicative/index.js");

var Control_Biapply = require("../Control.Biapply/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Show = require("../Data.Show/index.js");

var Joker = function Joker(x) {
  return x;
};

var showJoker = function showJoker(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Joker " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var ordJoker = function ordJoker(dictOrd) {
  return dictOrd;
};

var newtypeJoker = new Data_Newtype.Newtype(function (n) {
  return n;
}, Joker);

var functorJoker = function functorJoker(dictFunctor) {
  return new Data_Functor.Functor(function (g) {
    return function (v) {
      return Data_Functor.map(dictFunctor)(g)(v);
    };
  });
};

var eqJoker = function eqJoker(dictEq) {
  return dictEq;
};

var bifunctorJoker = function bifunctorJoker(dictFunctor) {
  return new Data_Bifunctor.Bifunctor(function (v) {
    return function (g) {
      return function (v1) {
        return Data_Functor.map(dictFunctor)(g)(v1);
      };
    };
  });
};

var biapplyJoker = function biapplyJoker(dictApply) {
  return new Control_Biapply.Biapply(function () {
    return bifunctorJoker(dictApply.Functor0());
  }, function (v) {
    return function (v1) {
      return Control_Apply.apply(dictApply)(v)(v1);
    };
  });
};

var biapplicativeJoker = function biapplicativeJoker(dictApplicative) {
  return new Control_Biapplicative.Biapplicative(function () {
    return biapplyJoker(dictApplicative.Apply0());
  }, function (v) {
    return function (b) {
      return Control_Applicative.pure(dictApplicative)(b);
    };
  });
};

module.exports = {
  Joker: Joker,
  newtypeJoker: newtypeJoker,
  eqJoker: eqJoker,
  ordJoker: ordJoker,
  showJoker: showJoker,
  functorJoker: functorJoker,
  bifunctorJoker: bifunctorJoker,
  biapplyJoker: biapplyJoker,
  biapplicativeJoker: biapplicativeJoker
};
},{"../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Biapplicative/index.js":"../output/Control.Biapplicative/index.js","../Control.Biapply/index.js":"../output/Control.Biapply/index.js","../Data.Bifunctor/index.js":"../output/Data.Bifunctor/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Show/index.js":"../output/Data.Show/index.js"}],"../output/Data.Bifunctor.Product/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Biapplicative = require("../Control.Biapplicative/index.js");

var Control_Biapply = require("../Control.Biapply/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Show = require("../Data.Show/index.js");

var Product = function () {
  function Product(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Product.create = function (value0) {
    return function (value1) {
      return new Product(value0, value1);
    };
  };

  return Product;
}();

var showProduct = function showProduct(dictShow) {
  return function (dictShow1) {
    return new Data_Show.Show(function (v) {
      return "(Product " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
    });
  };
};

var eqProduct = function eqProduct(dictEq) {
  return function (dictEq1) {
    return new Data_Eq.Eq(function (x) {
      return function (y) {
        return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq(dictEq1)(x.value1)(y.value1);
      };
    });
  };
};

var ordProduct = function ordProduct(dictOrd) {
  return function (dictOrd1) {
    return new Data_Ord.Ord(function () {
      return eqProduct(dictOrd.Eq0())(dictOrd1.Eq0());
    }, function (x) {
      return function (y) {
        var v = Data_Ord.compare(dictOrd)(x.value0)(y.value0);

        if (v instanceof Data_Ordering.LT) {
          return Data_Ordering.LT.value;
        }

        ;

        if (v instanceof Data_Ordering.GT) {
          return Data_Ordering.GT.value;
        }

        ;
        return Data_Ord.compare(dictOrd1)(x.value1)(y.value1);
      };
    });
  };
};

var bifunctorProduct = function bifunctorProduct(dictBifunctor) {
  return function (dictBifunctor1) {
    return new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
        return function (v) {
          return new Product(Data_Bifunctor.bimap(dictBifunctor)(f)(g)(v.value0), Data_Bifunctor.bimap(dictBifunctor1)(f)(g)(v.value1));
        };
      };
    });
  };
};

var biapplyProduct = function biapplyProduct(dictBiapply) {
  return function (dictBiapply1) {
    return new Control_Biapply.Biapply(function () {
      return bifunctorProduct(dictBiapply.Bifunctor0())(dictBiapply1.Bifunctor0());
    }, function (v) {
      return function (v1) {
        return new Product(Control_Biapply.biapply(dictBiapply)(v.value0)(v1.value0), Control_Biapply.biapply(dictBiapply1)(v.value1)(v1.value1));
      };
    });
  };
};

var biapplicativeProduct = function biapplicativeProduct(dictBiapplicative) {
  return function (dictBiapplicative1) {
    return new Control_Biapplicative.Biapplicative(function () {
      return biapplyProduct(dictBiapplicative.Biapply0())(dictBiapplicative1.Biapply0());
    }, function (a) {
      return function (b) {
        return new Product(Control_Biapplicative.bipure(dictBiapplicative)(a)(b), Control_Biapplicative.bipure(dictBiapplicative1)(a)(b));
      };
    });
  };
};

module.exports = {
  Product: Product,
  eqProduct: eqProduct,
  ordProduct: ordProduct,
  showProduct: showProduct,
  bifunctorProduct: bifunctorProduct,
  biapplyProduct: biapplyProduct,
  biapplicativeProduct: biapplicativeProduct
};
},{"../Control.Biapplicative/index.js":"../output/Control.Biapplicative/index.js","../Control.Biapply/index.js":"../output/Control.Biapply/index.js","../Data.Bifunctor/index.js":"../output/Data.Bifunctor/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Ordering/index.js":"../output/Data.Ordering/index.js","../Data.Show/index.js":"../output/Data.Show/index.js"}],"../output/Data.Bifunctor.Wrap/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Biapplicative = require("../Control.Biapplicative/index.js");

var Control_Biapply = require("../Control.Biapply/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Show = require("../Data.Show/index.js");

var Wrap = function Wrap(x) {
  return x;
};

var showWrap = function showWrap(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Wrap " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var ordWrap = function ordWrap(dictOrd) {
  return dictOrd;
};

var newtypeWrap = new Data_Newtype.Newtype(function (n) {
  return n;
}, Wrap);

var functorWrap = function functorWrap(dictBifunctor) {
  return new Data_Functor.Functor(function (f) {
    return function (v) {
      return Data_Bifunctor.rmap(dictBifunctor)(f)(v);
    };
  });
};

var eqWrap = function eqWrap(dictEq) {
  return dictEq;
};

var bifunctorWrap = function bifunctorWrap(dictBifunctor) {
  return new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
      return function (v) {
        return Data_Bifunctor.bimap(dictBifunctor)(f)(g)(v);
      };
    };
  });
};

var biapplyWrap = function biapplyWrap(dictBiapply) {
  return new Control_Biapply.Biapply(function () {
    return bifunctorWrap(dictBiapply.Bifunctor0());
  }, function (v) {
    return function (v1) {
      return Control_Biapply.biapply(dictBiapply)(v)(v1);
    };
  });
};

var biapplicativeWrap = function biapplicativeWrap(dictBiapplicative) {
  return new Control_Biapplicative.Biapplicative(function () {
    return biapplyWrap(dictBiapplicative.Biapply0());
  }, function (a) {
    return function (b) {
      return Control_Biapplicative.bipure(dictBiapplicative)(a)(b);
    };
  });
};

module.exports = {
  Wrap: Wrap,
  newtypeWrap: newtypeWrap,
  eqWrap: eqWrap,
  ordWrap: ordWrap,
  showWrap: showWrap,
  functorWrap: functorWrap,
  bifunctorWrap: bifunctorWrap,
  biapplyWrap: biapplyWrap,
  biapplicativeWrap: biapplicativeWrap
};
},{"../Control.Biapplicative/index.js":"../output/Control.Biapplicative/index.js","../Control.Biapply/index.js":"../output/Control.Biapply/index.js","../Data.Bifunctor/index.js":"../output/Data.Bifunctor/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Show/index.js":"../output/Data.Show/index.js"}],"../output/Data.Traversable/foreign.js":[function(require,module,exports) {
"use strict"; // jshint maxparams: 3

exports.traverseArrayImpl = function () {
  function array1(a) {
    return [a];
  }

  function array2(a) {
    return function (b) {
      return [a, b];
    };
  }

  function array3(a) {
    return function (b) {
      return function (c) {
        return [a, b, c];
      };
    };
  }

  function concat2(xs) {
    return function (ys) {
      return xs.concat(ys);
    };
  }

  return function (apply) {
    return function (map) {
      return function (pure) {
        return function (f) {
          return function (array) {
            function go(bot, top) {
              switch (top - bot) {
                case 0:
                  return pure([]);

                case 1:
                  return map(array1)(f(array[bot]));

                case 2:
                  return apply(map(array2)(f(array[bot])))(f(array[bot + 1]));

                case 3:
                  return apply(apply(map(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));

                default:
                  // This slightly tricky pivot selection aims to produce two
                  // even-length partitions where possible.
                  var pivot = bot + Math.floor((top - bot) / 4) * 2;
                  return apply(map(concat2)(go(bot, pivot)))(go(pivot, top));
              }
            }

            return go(0, array.length);
          };
        };
      };
    };
  };
}();
},{}],"../output/Data.Maybe.First/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var First = function First(x) {
  return x;
};

var showFirst = function showFirst(dictShow) {
  return new Data_Show.Show(function (v) {
    return "First (" + (Data_Show.show(Data_Maybe.showMaybe(dictShow))(v) + ")");
  });
};

var semigroupFirst = new Data_Semigroup.Semigroup(function (v) {
  return function (v1) {
    if (v instanceof Data_Maybe.Just) {
      return v;
    }

    ;
    return v1;
  };
});

var ordFirst = function ordFirst(dictOrd) {
  return Data_Maybe.ordMaybe(dictOrd);
};

var ord1First = Data_Maybe.ord1Maybe;
var newtypeFirst = new Data_Newtype.Newtype(function (n) {
  return n;
}, First);
var monoidFirst = new Data_Monoid.Monoid(function () {
  return semigroupFirst;
}, Data_Maybe.Nothing.value);
var monadFirst = Data_Maybe.monadMaybe;
var invariantFirst = Data_Maybe.invariantMaybe;
var functorFirst = Data_Maybe.functorMaybe;
var extendFirst = Data_Maybe.extendMaybe;

var eqFirst = function eqFirst(dictEq) {
  return Data_Maybe.eqMaybe(dictEq);
};

var eq1First = Data_Maybe.eq1Maybe;

var boundedFirst = function boundedFirst(dictBounded) {
  return Data_Maybe.boundedMaybe(dictBounded);
};

var bindFirst = Data_Maybe.bindMaybe;
var applyFirst = Data_Maybe.applyMaybe;
var applicativeFirst = Data_Maybe.applicativeMaybe;
var altFirst = new Control_Alt.Alt(function () {
  return functorFirst;
}, Data_Semigroup.append(semigroupFirst));
var plusFirst = new Control_Plus.Plus(function () {
  return altFirst;
}, Data_Monoid.mempty(monoidFirst));
var alternativeFirst = new Control_Alternative.Alternative(function () {
  return applicativeFirst;
}, function () {
  return plusFirst;
});
var monadZeroFirst = new Control_MonadZero.MonadZero(function () {
  return alternativeFirst;
}, function () {
  return monadFirst;
});
module.exports = {
  First: First,
  newtypeFirst: newtypeFirst,
  eqFirst: eqFirst,
  eq1First: eq1First,
  ordFirst: ordFirst,
  ord1First: ord1First,
  boundedFirst: boundedFirst,
  functorFirst: functorFirst,
  invariantFirst: invariantFirst,
  applyFirst: applyFirst,
  applicativeFirst: applicativeFirst,
  bindFirst: bindFirst,
  monadFirst: monadFirst,
  extendFirst: extendFirst,
  showFirst: showFirst,
  semigroupFirst: semigroupFirst,
  monoidFirst: monoidFirst,
  altFirst: altFirst,
  plusFirst: plusFirst,
  alternativeFirst: alternativeFirst,
  monadZeroFirst: monadZeroFirst
};
},{"../Control.Alt/index.js":"../output/Control.Alt/index.js","../Control.Alternative/index.js":"../output/Control.Alternative/index.js","../Control.MonadZero/index.js":"../output/Control.MonadZero/index.js","../Control.Plus/index.js":"../output/Control.Plus/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Show/index.js":"../output/Data.Show/index.js"}],"../output/Data.Maybe.Last/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Last = function Last(x) {
  return x;
};

var showLast = function showLast(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Last " + (Data_Show.show(Data_Maybe.showMaybe(dictShow))(v) + ")");
  });
};

var semigroupLast = new Data_Semigroup.Semigroup(function (v) {
  return function (v1) {
    if (v1 instanceof Data_Maybe.Just) {
      return v1;
    }

    ;

    if (v1 instanceof Data_Maybe.Nothing) {
      return v;
    }

    ;
    throw new Error("Failed pattern match at Data.Maybe.Last (line 52, column 1 - line 54, column 36): " + [v.constructor.name, v1.constructor.name]);
  };
});

var ordLast = function ordLast(dictOrd) {
  return Data_Maybe.ordMaybe(dictOrd);
};

var ord1Last = Data_Maybe.ord1Maybe;
var newtypeLast = new Data_Newtype.Newtype(function (n) {
  return n;
}, Last);
var monoidLast = new Data_Monoid.Monoid(function () {
  return semigroupLast;
}, Data_Maybe.Nothing.value);
var monadLast = Data_Maybe.monadMaybe;
var invariantLast = Data_Maybe.invariantMaybe;
var functorLast = Data_Maybe.functorMaybe;
var extendLast = Data_Maybe.extendMaybe;

var eqLast = function eqLast(dictEq) {
  return Data_Maybe.eqMaybe(dictEq);
};

var eq1Last = Data_Maybe.eq1Maybe;

var boundedLast = function boundedLast(dictBounded) {
  return Data_Maybe.boundedMaybe(dictBounded);
};

var bindLast = Data_Maybe.bindMaybe;
var applyLast = Data_Maybe.applyMaybe;
var applicativeLast = Data_Maybe.applicativeMaybe;
var altLast = new Control_Alt.Alt(function () {
  return functorLast;
}, Data_Semigroup.append(semigroupLast));
var plusLast = new Control_Plus.Plus(function () {
  return altLast;
}, Data_Monoid.mempty(monoidLast));
var alternativeLast = new Control_Alternative.Alternative(function () {
  return applicativeLast;
}, function () {
  return plusLast;
});
var monadZeroLast = new Control_MonadZero.MonadZero(function () {
  return alternativeLast;
}, function () {
  return monadLast;
});
module.exports = {
  Last: Last,
  newtypeLast: newtypeLast,
  eqLast: eqLast,
  eq1Last: eq1Last,
  ordLast: ordLast,
  ord1Last: ord1Last,
  boundedLast: boundedLast,
  functorLast: functorLast,
  invariantLast: invariantLast,
  applyLast: applyLast,
  applicativeLast: applicativeLast,
  bindLast: bindLast,
  monadLast: monadLast,
  extendLast: extendLast,
  showLast: showLast,
  semigroupLast: semigroupLast,
  monoidLast: monoidLast,
  altLast: altLast,
  plusLast: plusLast,
  alternativeLast: alternativeLast,
  monadZeroLast: monadZeroLast
};
},{"../Control.Alt/index.js":"../output/Control.Alt/index.js","../Control.Alternative/index.js":"../output/Control.Alternative/index.js","../Control.MonadZero/index.js":"../output/Control.MonadZero/index.js","../Control.Plus/index.js":"../output/Control.Plus/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Show/index.js":"../output/Data.Show/index.js"}],"../output/Data.Traversable.Accum.Internal/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var StateR = function StateR(x) {
  return x;
};

var StateL = function StateL(x) {
  return x;
};

var stateR = function stateR(v) {
  return v;
};

var stateL = function stateL(v) {
  return v;
};

var functorStateR = new Data_Functor.Functor(function (f) {
  return function (k) {
    return function (s) {
      var v = stateR(k)(s);
      return {
        accum: v.accum,
        value: f(v.value)
      };
    };
  };
});
var functorStateL = new Data_Functor.Functor(function (f) {
  return function (k) {
    return function (s) {
      var v = stateL(k)(s);
      return {
        accum: v.accum,
        value: f(v.value)
      };
    };
  };
});
var applyStateR = new Control_Apply.Apply(function () {
  return functorStateR;
}, function (f) {
  return function (x) {
    return function (s) {
      var v = stateR(x)(s);
      var v1 = stateR(f)(v.accum);
      return {
        accum: v1.accum,
        value: v1.value(v.value)
      };
    };
  };
});
var applyStateL = new Control_Apply.Apply(function () {
  return functorStateL;
}, function (f) {
  return function (x) {
    return function (s) {
      var v = stateL(f)(s);
      var v1 = stateL(x)(v.accum);
      return {
        accum: v1.accum,
        value: v.value(v1.value)
      };
    };
  };
});
var applicativeStateR = new Control_Applicative.Applicative(function () {
  return applyStateR;
}, function (a) {
  return function (s) {
    return {
      accum: s,
      value: a
    };
  };
});
var applicativeStateL = new Control_Applicative.Applicative(function () {
  return applyStateL;
}, function (a) {
  return function (s) {
    return {
      accum: s,
      value: a
    };
  };
});
module.exports = {
  StateL: StateL,
  stateL: stateL,
  StateR: StateR,
  stateR: stateR,
  functorStateL: functorStateL,
  applyStateL: applyStateL,
  applicativeStateL: applicativeStateL,
  functorStateR: functorStateR,
  applyStateR: applyStateR,
  applicativeStateR: applicativeStateR
};
},{"../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js"}],"../output/Data.Traversable/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Maybe_First = require("../Data.Maybe.First/index.js");

var Data_Maybe_Last = require("../Data.Maybe.Last/index.js");

var Data_Monoid_Additive = require("../Data.Monoid.Additive/index.js");

var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");

var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");

var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");

var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative/index.js");

var Data_Traversable_Accum_Internal = require("../Data.Traversable.Accum.Internal/index.js");

var Traversable = function Traversable(Foldable1, Functor0, sequence, traverse) {
  this.Foldable1 = Foldable1;
  this.Functor0 = Functor0;
  this.sequence = sequence;
  this.traverse = traverse;
};

var traverse = function traverse(dict) {
  return dict.traverse;
};

var traversableMultiplicative = new Traversable(function () {
  return Data_Foldable.foldableMultiplicative;
}, function () {
  return Data_Monoid_Multiplicative.functorMultiplicative;
}, function (dictApplicative) {
  return function (v) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Multiplicative.Multiplicative)(v);
  };
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Multiplicative.Multiplicative)(f(v));
    };
  };
});
var traversableMaybe = new Traversable(function () {
  return Data_Foldable.foldableMaybe;
}, function () {
  return Data_Maybe.functorMaybe;
}, function (dictApplicative) {
  return function (v) {
    if (v instanceof Data_Maybe.Nothing) {
      return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
    }

    ;

    if (v instanceof Data_Maybe.Just) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Maybe.Just.create)(v.value0);
    }

    ;
    throw new Error("Failed pattern match at Data.Traversable (line 86, column 1 - line 90, column 33): " + [v.constructor.name]);
  };
}, function (dictApplicative) {
  return function (v) {
    return function (v1) {
      if (v1 instanceof Data_Maybe.Nothing) {
        return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
      }

      ;

      if (v1 instanceof Data_Maybe.Just) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Maybe.Just.create)(v(v1.value0));
      }

      ;
      throw new Error("Failed pattern match at Data.Traversable (line 86, column 1 - line 90, column 33): " + [v.constructor.name, v1.constructor.name]);
    };
  };
});
var traversableDual = new Traversable(function () {
  return Data_Foldable.foldableDual;
}, function () {
  return Data_Monoid_Dual.functorDual;
}, function (dictApplicative) {
  return function (v) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Dual.Dual)(v);
  };
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Dual.Dual)(f(v));
    };
  };
});
var traversableDisj = new Traversable(function () {
  return Data_Foldable.foldableDisj;
}, function () {
  return Data_Monoid_Disj.functorDisj;
}, function (dictApplicative) {
  return function (v) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Disj.Disj)(v);
  };
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Disj.Disj)(f(v));
    };
  };
});
var traversableConj = new Traversable(function () {
  return Data_Foldable.foldableConj;
}, function () {
  return Data_Monoid_Conj.functorConj;
}, function (dictApplicative) {
  return function (v) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Conj.Conj)(v);
  };
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Conj.Conj)(f(v));
    };
  };
});
var traversableAdditive = new Traversable(function () {
  return Data_Foldable.foldableAdditive;
}, function () {
  return Data_Monoid_Additive.functorAdditive;
}, function (dictApplicative) {
  return function (v) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Additive.Additive)(v);
  };
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Additive.Additive)(f(v));
    };
  };
});

var sequenceDefault = function sequenceDefault(dictTraversable) {
  return function (dictApplicative) {
    return traverse(dictTraversable)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var traversableArray = new Traversable(function () {
  return Data_Foldable.foldableArray;
}, function () {
  return Data_Functor.functorArray;
}, function (dictApplicative) {
  return sequenceDefault(traversableArray)(dictApplicative);
}, function (dictApplicative) {
  return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map(dictApplicative.Apply0().Functor0()))(Control_Applicative.pure(dictApplicative));
});

var sequence = function sequence(dict) {
  return dict.sequence;
};

var traversableFirst = new Traversable(function () {
  return Data_Foldable.foldableFirst;
}, function () {
  return Data_Maybe_First.functorFirst;
}, function (dictApplicative) {
  return function (v) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Maybe_First.First)(sequence(traversableMaybe)(dictApplicative)(v));
  };
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Maybe_First.First)(traverse(traversableMaybe)(dictApplicative)(f)(v));
    };
  };
});
var traversableLast = new Traversable(function () {
  return Data_Foldable.foldableLast;
}, function () {
  return Data_Maybe_Last.functorLast;
}, function (dictApplicative) {
  return function (v) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Maybe_Last.Last)(sequence(traversableMaybe)(dictApplicative)(v));
  };
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Maybe_Last.Last)(traverse(traversableMaybe)(dictApplicative)(f)(v));
    };
  };
});

var traverseDefault = function traverseDefault(dictTraversable) {
  return function (dictApplicative) {
    return function (f) {
      return function (ta) {
        return sequence(dictTraversable)(dictApplicative)(Data_Functor.map(dictTraversable.Functor0())(f)(ta));
      };
    };
  };
};

var mapAccumR = function mapAccumR(dictTraversable) {
  return function (f) {
    return function (s0) {
      return function (xs) {
        return Data_Traversable_Accum_Internal.stateR(traverse(dictTraversable)(Data_Traversable_Accum_Internal.applicativeStateR)(function (a) {
          return function (s) {
            return f(s)(a);
          };
        })(xs))(s0);
      };
    };
  };
};

var scanr = function scanr(dictTraversable) {
  return function (f) {
    return function (b0) {
      return function (xs) {
        return mapAccumR(dictTraversable)(function (b) {
          return function (a) {
            var b$prime = f(a)(b);
            return {
              accum: b$prime,
              value: b$prime
            };
          };
        })(b0)(xs).value;
      };
    };
  };
};

var mapAccumL = function mapAccumL(dictTraversable) {
  return function (f) {
    return function (s0) {
      return function (xs) {
        return Data_Traversable_Accum_Internal.stateL(traverse(dictTraversable)(Data_Traversable_Accum_Internal.applicativeStateL)(function (a) {
          return function (s) {
            return f(s)(a);
          };
        })(xs))(s0);
      };
    };
  };
};

var scanl = function scanl(dictTraversable) {
  return function (f) {
    return function (b0) {
      return function (xs) {
        return mapAccumL(dictTraversable)(function (b) {
          return function (a) {
            var b$prime = f(b)(a);
            return {
              accum: b$prime,
              value: b$prime
            };
          };
        })(b0)(xs).value;
      };
    };
  };
};

var $$for = function $$for(dictApplicative) {
  return function (dictTraversable) {
    return function (x) {
      return function (f) {
        return traverse(dictTraversable)(dictApplicative)(f)(x);
      };
    };
  };
};

module.exports = {
  Traversable: Traversable,
  traverse: traverse,
  sequence: sequence,
  traverseDefault: traverseDefault,
  sequenceDefault: sequenceDefault,
  "for": $$for,
  scanl: scanl,
  scanr: scanr,
  mapAccumL: mapAccumL,
  mapAccumR: mapAccumR,
  traversableArray: traversableArray,
  traversableMaybe: traversableMaybe,
  traversableFirst: traversableFirst,
  traversableLast: traversableLast,
  traversableAdditive: traversableAdditive,
  traversableDual: traversableDual,
  traversableConj: traversableConj,
  traversableDisj: traversableDisj,
  traversableMultiplicative: traversableMultiplicative
};
},{"./foreign.js":"../output/Data.Traversable/foreign.js","../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Category/index.js":"../output/Control.Category/index.js","../Data.Foldable/index.js":"../output/Data.Foldable/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Maybe.First/index.js":"../output/Data.Maybe.First/index.js","../Data.Maybe.Last/index.js":"../output/Data.Maybe.Last/index.js","../Data.Monoid.Additive/index.js":"../output/Data.Monoid.Additive/index.js","../Data.Monoid.Conj/index.js":"../output/Data.Monoid.Conj/index.js","../Data.Monoid.Disj/index.js":"../output/Data.Monoid.Disj/index.js","../Data.Monoid.Dual/index.js":"../output/Data.Monoid.Dual/index.js","../Data.Monoid.Multiplicative/index.js":"../output/Data.Monoid.Multiplicative/index.js","../Data.Traversable.Accum.Internal/index.js":"../output/Data.Traversable.Accum.Internal/index.js"}],"../output/Data.Bitraversable/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Bifoldable = require("../Data.Bifoldable/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Bifunctor_Clown = require("../Data.Bifunctor.Clown/index.js");

var Data_Bifunctor_Flip = require("../Data.Bifunctor.Flip/index.js");

var Data_Bifunctor_Joker = require("../Data.Bifunctor.Joker/index.js");

var Data_Bifunctor_Product = require("../Data.Bifunctor.Product/index.js");

var Data_Bifunctor_Wrap = require("../Data.Bifunctor.Wrap/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Bitraversable = function Bitraversable(Bifoldable1, Bifunctor0, bisequence, bitraverse) {
  this.Bifoldable1 = Bifoldable1;
  this.Bifunctor0 = Bifunctor0;
  this.bisequence = bisequence;
  this.bitraverse = bitraverse;
};

var bitraverse = function bitraverse(dict) {
  return dict.bitraverse;
};

var lfor = function lfor(dictBitraversable) {
  return function (dictApplicative) {
    return function (t) {
      return function (f) {
        return bitraverse(dictBitraversable)(dictApplicative)(f)(Control_Applicative.pure(dictApplicative))(t);
      };
    };
  };
};

var ltraverse = function ltraverse(dictBitraversable) {
  return function (dictApplicative) {
    return function (f) {
      return bitraverse(dictBitraversable)(dictApplicative)(f)(Control_Applicative.pure(dictApplicative));
    };
  };
};

var rfor = function rfor(dictBitraversable) {
  return function (dictApplicative) {
    return function (t) {
      return function (f) {
        return bitraverse(dictBitraversable)(dictApplicative)(Control_Applicative.pure(dictApplicative))(f)(t);
      };
    };
  };
};

var rtraverse = function rtraverse(dictBitraversable) {
  return function (dictApplicative) {
    return bitraverse(dictBitraversable)(dictApplicative)(Control_Applicative.pure(dictApplicative));
  };
};

var bitraversableJoker = function bitraversableJoker(dictTraversable) {
  return new Bitraversable(function () {
    return Data_Bifoldable.bifoldableJoker(dictTraversable.Foldable1());
  }, function () {
    return Data_Bifunctor_Joker.bifunctorJoker(dictTraversable.Functor0());
  }, function (dictApplicative) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Bifunctor_Joker.Joker)(Data_Traversable.sequence(dictTraversable)(dictApplicative)(v));
    };
  }, function (dictApplicative) {
    return function (v) {
      return function (r) {
        return function (v1) {
          return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Bifunctor_Joker.Joker)(Data_Traversable.traverse(dictTraversable)(dictApplicative)(r)(v1));
        };
      };
    };
  });
};

var bitraversableClown = function bitraversableClown(dictTraversable) {
  return new Bitraversable(function () {
    return Data_Bifoldable.bifoldableClown(dictTraversable.Foldable1());
  }, function () {
    return Data_Bifunctor_Clown.bifunctorClown(dictTraversable.Functor0());
  }, function (dictApplicative) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Bifunctor_Clown.Clown)(Data_Traversable.sequence(dictTraversable)(dictApplicative)(v));
    };
  }, function (dictApplicative) {
    return function (l) {
      return function (v) {
        return function (v1) {
          return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Bifunctor_Clown.Clown)(Data_Traversable.traverse(dictTraversable)(dictApplicative)(l)(v1));
        };
      };
    };
  });
};

var bisequenceDefault = function bisequenceDefault(dictBitraversable) {
  return function (dictApplicative) {
    return bitraverse(dictBitraversable)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn))(Control_Category.identity(Control_Category.categoryFn));
  };
};

var bisequence = function bisequence(dict) {
  return dict.bisequence;
};

var bitraversableFlip = function bitraversableFlip(dictBitraversable) {
  return new Bitraversable(function () {
    return Data_Bifoldable.bifoldableFlip(dictBitraversable.Bifoldable1());
  }, function () {
    return Data_Bifunctor_Flip.bifunctorFlip(dictBitraversable.Bifunctor0());
  }, function (dictApplicative) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Bifunctor_Flip.Flip)(bisequence(dictBitraversable)(dictApplicative)(v));
    };
  }, function (dictApplicative) {
    return function (r) {
      return function (l) {
        return function (v) {
          return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Bifunctor_Flip.Flip)(bitraverse(dictBitraversable)(dictApplicative)(l)(r)(v));
        };
      };
    };
  });
};

var bitraversableProduct = function bitraversableProduct(dictBitraversable) {
  return function (dictBitraversable1) {
    return new Bitraversable(function () {
      return Data_Bifoldable.bifoldableProduct(dictBitraversable.Bifoldable1())(dictBitraversable1.Bifoldable1());
    }, function () {
      return Data_Bifunctor_Product.bifunctorProduct(dictBitraversable.Bifunctor0())(dictBitraversable1.Bifunctor0());
    }, function (dictApplicative) {
      return function (v) {
        return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Bifunctor_Product.Product.create)(bisequence(dictBitraversable)(dictApplicative)(v.value0)))(bisequence(dictBitraversable1)(dictApplicative)(v.value1));
      };
    }, function (dictApplicative) {
      return function (l) {
        return function (r) {
          return function (v) {
            return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Bifunctor_Product.Product.create)(bitraverse(dictBitraversable)(dictApplicative)(l)(r)(v.value0)))(bitraverse(dictBitraversable1)(dictApplicative)(l)(r)(v.value1));
          };
        };
      };
    });
  };
};

var bitraversableWrap = function bitraversableWrap(dictBitraversable) {
  return new Bitraversable(function () {
    return Data_Bifoldable.bifoldableWrap(dictBitraversable.Bifoldable1());
  }, function () {
    return Data_Bifunctor_Wrap.bifunctorWrap(dictBitraversable.Bifunctor0());
  }, function (dictApplicative) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Bifunctor_Wrap.Wrap)(bisequence(dictBitraversable)(dictApplicative)(v));
    };
  }, function (dictApplicative) {
    return function (l) {
      return function (r) {
        return function (v) {
          return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Bifunctor_Wrap.Wrap)(bitraverse(dictBitraversable)(dictApplicative)(l)(r)(v));
        };
      };
    };
  });
};

var bitraverseDefault = function bitraverseDefault(dictBitraversable) {
  return function (dictApplicative) {
    return function (f) {
      return function (g) {
        return function (t) {
          return bisequence(dictBitraversable)(dictApplicative)(Data_Bifunctor.bimap(dictBitraversable.Bifunctor0())(f)(g)(t));
        };
      };
    };
  };
};

var bifor = function bifor(dictBitraversable) {
  return function (dictApplicative) {
    return function (t) {
      return function (f) {
        return function (g) {
          return bitraverse(dictBitraversable)(dictApplicative)(f)(g)(t);
        };
      };
    };
  };
};

module.exports = {
  Bitraversable: Bitraversable,
  bitraverse: bitraverse,
  bisequence: bisequence,
  bitraverseDefault: bitraverseDefault,
  bisequenceDefault: bisequenceDefault,
  ltraverse: ltraverse,
  rtraverse: rtraverse,
  bifor: bifor,
  lfor: lfor,
  rfor: rfor,
  bitraversableClown: bitraversableClown,
  bitraversableJoker: bitraversableJoker,
  bitraversableFlip: bitraversableFlip,
  bitraversableProduct: bitraversableProduct,
  bitraversableWrap: bitraversableWrap
};
},{"../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Category/index.js":"../output/Control.Category/index.js","../Data.Bifoldable/index.js":"../output/Data.Bifoldable/index.js","../Data.Bifunctor/index.js":"../output/Data.Bifunctor/index.js","../Data.Bifunctor.Clown/index.js":"../output/Data.Bifunctor.Clown/index.js","../Data.Bifunctor.Flip/index.js":"../output/Data.Bifunctor.Flip/index.js","../Data.Bifunctor.Joker/index.js":"../output/Data.Bifunctor.Joker/index.js","../Data.Bifunctor.Product/index.js":"../output/Data.Bifunctor.Product/index.js","../Data.Bifunctor.Wrap/index.js":"../output/Data.Bifunctor.Wrap/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Traversable/index.js":"../output/Data.Traversable/index.js"}],"../output/Data.BooleanAlgebra/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var BooleanAlgebraRecord = function BooleanAlgebraRecord(HeytingAlgebraRecord0) {
  this.HeytingAlgebraRecord0 = HeytingAlgebraRecord0;
};

var BooleanAlgebra = function BooleanAlgebra(HeytingAlgebra0) {
  this.HeytingAlgebra0 = HeytingAlgebra0;
};

var booleanAlgebraUnit = new BooleanAlgebra(function () {
  return Data_HeytingAlgebra.heytingAlgebraUnit;
});
var booleanAlgebraRecordNil = new BooleanAlgebraRecord(function () {
  return Data_HeytingAlgebra.heytingAlgebraRecordNil;
});

var booleanAlgebraRecordCons = function booleanAlgebraRecordCons(dictIsSymbol) {
  return function (dictCons) {
    return function (dictBooleanAlgebraRecord) {
      return function (dictBooleanAlgebra) {
        return new BooleanAlgebraRecord(function () {
          return Data_HeytingAlgebra.heytingAlgebraRecordCons(dictIsSymbol)()(dictBooleanAlgebraRecord.HeytingAlgebraRecord0())(dictBooleanAlgebra.HeytingAlgebra0());
        });
      };
    };
  };
};

var booleanAlgebraRecord = function booleanAlgebraRecord(dictRowToList) {
  return function (dictBooleanAlgebraRecord) {
    return new BooleanAlgebra(function () {
      return Data_HeytingAlgebra.heytingAlgebraRecord()(dictBooleanAlgebraRecord.HeytingAlgebraRecord0());
    });
  };
};

var booleanAlgebraFn = function booleanAlgebraFn(dictBooleanAlgebra) {
  return new BooleanAlgebra(function () {
    return Data_HeytingAlgebra.heytingAlgebraFunction(dictBooleanAlgebra.HeytingAlgebra0());
  });
};

var booleanAlgebraBoolean = new BooleanAlgebra(function () {
  return Data_HeytingAlgebra.heytingAlgebraBoolean;
});
module.exports = {
  BooleanAlgebra: BooleanAlgebra,
  BooleanAlgebraRecord: BooleanAlgebraRecord,
  booleanAlgebraBoolean: booleanAlgebraBoolean,
  booleanAlgebraUnit: booleanAlgebraUnit,
  booleanAlgebraFn: booleanAlgebraFn,
  booleanAlgebraRecord: booleanAlgebraRecord,
  booleanAlgebraRecordNil: booleanAlgebraRecordNil,
  booleanAlgebraRecordCons: booleanAlgebraRecordCons
};
},{"../Data.HeytingAlgebra/index.js":"../output/Data.HeytingAlgebra/index.js"}],"../output/Data.FunctorWithIndex/foreign.js":[function(require,module,exports) {
"use strict";

exports.mapWithIndexArray = function (f) {
  return function (xs) {
    var l = xs.length;
    var result = Array(l);

    for (var i = 0; i < l; i++) {
      result[i] = f(i)(xs[i]);
    }

    return result;
  };
};
},{}],"../output/Data.FunctorWithIndex/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Maybe_First = require("../Data.Maybe.First/index.js");

var Data_Maybe_Last = require("../Data.Maybe.Last/index.js");

var Data_Monoid_Additive = require("../Data.Monoid.Additive/index.js");

var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");

var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");

var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");

var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var FunctorWithIndex = function FunctorWithIndex(Functor0, mapWithIndex) {
  this.Functor0 = Functor0;
  this.mapWithIndex = mapWithIndex;
};

var mapWithIndex = function mapWithIndex(dict) {
  return dict.mapWithIndex;
};

var mapDefault = function mapDefault(dictFunctorWithIndex) {
  return function (f) {
    return mapWithIndex(dictFunctorWithIndex)(Data_Function["const"](f));
  };
};

var functorWithIndexMultiplicative = new FunctorWithIndex(function () {
  return Data_Monoid_Multiplicative.functorMultiplicative;
}, function (f) {
  return Data_Functor.map(Data_Monoid_Multiplicative.functorMultiplicative)(f(Data_Unit.unit));
});
var functorWithIndexMaybe = new FunctorWithIndex(function () {
  return Data_Maybe.functorMaybe;
}, function (f) {
  return Data_Functor.map(Data_Maybe.functorMaybe)(f(Data_Unit.unit));
});
var functorWithIndexLast = new FunctorWithIndex(function () {
  return Data_Maybe_Last.functorLast;
}, function (f) {
  return Data_Functor.map(Data_Maybe_Last.functorLast)(f(Data_Unit.unit));
});
var functorWithIndexFirst = new FunctorWithIndex(function () {
  return Data_Maybe_First.functorFirst;
}, function (f) {
  return Data_Functor.map(Data_Maybe_First.functorFirst)(f(Data_Unit.unit));
});
var functorWithIndexDual = new FunctorWithIndex(function () {
  return Data_Monoid_Dual.functorDual;
}, function (f) {
  return Data_Functor.map(Data_Monoid_Dual.functorDual)(f(Data_Unit.unit));
});
var functorWithIndexDisj = new FunctorWithIndex(function () {
  return Data_Monoid_Disj.functorDisj;
}, function (f) {
  return Data_Functor.map(Data_Monoid_Disj.functorDisj)(f(Data_Unit.unit));
});
var functorWithIndexConj = new FunctorWithIndex(function () {
  return Data_Monoid_Conj.functorConj;
}, function (f) {
  return Data_Functor.map(Data_Monoid_Conj.functorConj)(f(Data_Unit.unit));
});
var functorWithIndexArray = new FunctorWithIndex(function () {
  return Data_Functor.functorArray;
}, $foreign.mapWithIndexArray);
var functorWithIndexAdditive = new FunctorWithIndex(function () {
  return Data_Monoid_Additive.functorAdditive;
}, function (f) {
  return Data_Functor.map(Data_Monoid_Additive.functorAdditive)(f(Data_Unit.unit));
});
module.exports = {
  FunctorWithIndex: FunctorWithIndex,
  mapWithIndex: mapWithIndex,
  mapDefault: mapDefault,
  functorWithIndexArray: functorWithIndexArray,
  functorWithIndexMaybe: functorWithIndexMaybe,
  functorWithIndexFirst: functorWithIndexFirst,
  functorWithIndexLast: functorWithIndexLast,
  functorWithIndexAdditive: functorWithIndexAdditive,
  functorWithIndexDual: functorWithIndexDual,
  functorWithIndexConj: functorWithIndexConj,
  functorWithIndexDisj: functorWithIndexDisj,
  functorWithIndexMultiplicative: functorWithIndexMultiplicative
};
},{"./foreign.js":"../output/Data.FunctorWithIndex/foreign.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Maybe.First/index.js":"../output/Data.Maybe.First/index.js","../Data.Maybe.Last/index.js":"../output/Data.Maybe.Last/index.js","../Data.Monoid.Additive/index.js":"../output/Data.Monoid.Additive/index.js","../Data.Monoid.Conj/index.js":"../output/Data.Monoid.Conj/index.js","../Data.Monoid.Disj/index.js":"../output/Data.Monoid.Disj/index.js","../Data.Monoid.Dual/index.js":"../output/Data.Monoid.Dual/index.js","../Data.Monoid.Multiplicative/index.js":"../output/Data.Monoid.Multiplicative/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js"}],"../output/Data.FoldableWithIndex/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");

var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");

var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");

var Data_Monoid_Endo = require("../Data.Monoid.Endo/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Tuple = function () {
  function Tuple(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Tuple.create = function (value0) {
    return function (value1) {
      return new Tuple(value0, value1);
    };
  };

  return Tuple;
}();

var FoldableWithIndex = function FoldableWithIndex(Foldable0, foldMapWithIndex, foldlWithIndex, foldrWithIndex) {
  this.Foldable0 = Foldable0;
  this.foldMapWithIndex = foldMapWithIndex;
  this.foldlWithIndex = foldlWithIndex;
  this.foldrWithIndex = foldrWithIndex;
};

var foldrWithIndex = function foldrWithIndex(dict) {
  return dict.foldrWithIndex;
};

var traverseWithIndex_ = function traverseWithIndex_(dictApplicative) {
  return function (dictFoldableWithIndex) {
    return function (f) {
      return foldrWithIndex(dictFoldableWithIndex)(function (i) {
        var $46 = Control_Apply.applySecond(dictApplicative.Apply0());
        var $47 = f(i);
        return function ($48) {
          return $46($47($48));
        };
      })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
    };
  };
};

var forWithIndex_ = function forWithIndex_(dictApplicative) {
  return function (dictFoldableWithIndex) {
    return Data_Function.flip(traverseWithIndex_(dictApplicative)(dictFoldableWithIndex));
  };
};

var foldrDefault = function foldrDefault(dictFoldableWithIndex) {
  return function (f) {
    return foldrWithIndex(dictFoldableWithIndex)(Data_Function["const"](f));
  };
};

var foldlWithIndex = function foldlWithIndex(dict) {
  return dict.foldlWithIndex;
};

var foldlDefault = function foldlDefault(dictFoldableWithIndex) {
  return function (f) {
    return foldlWithIndex(dictFoldableWithIndex)(Data_Function["const"](f));
  };
};

var foldableWithIndexMultiplicative = new FoldableWithIndex(function () {
  return Data_Foldable.foldableMultiplicative;
}, function (dictMonoid) {
  return function (f) {
    return Data_Foldable.foldMap(Data_Foldable.foldableMultiplicative)(dictMonoid)(f(Data_Unit.unit));
  };
}, function (f) {
  return Data_Foldable.foldl(Data_Foldable.foldableMultiplicative)(f(Data_Unit.unit));
}, function (f) {
  return Data_Foldable.foldr(Data_Foldable.foldableMultiplicative)(f(Data_Unit.unit));
});
var foldableWithIndexMaybe = new FoldableWithIndex(function () {
  return Data_Foldable.foldableMaybe;
}, function (dictMonoid) {
  return function (f) {
    return Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(dictMonoid)(f(Data_Unit.unit));
  };
}, function (f) {
  return Data_Foldable.foldl(Data_Foldable.foldableMaybe)(f(Data_Unit.unit));
}, function (f) {
  return Data_Foldable.foldr(Data_Foldable.foldableMaybe)(f(Data_Unit.unit));
});
var foldableWithIndexLast = new FoldableWithIndex(function () {
  return Data_Foldable.foldableLast;
}, function (dictMonoid) {
  return function (f) {
    return Data_Foldable.foldMap(Data_Foldable.foldableLast)(dictMonoid)(f(Data_Unit.unit));
  };
}, function (f) {
  return Data_Foldable.foldl(Data_Foldable.foldableLast)(f(Data_Unit.unit));
}, function (f) {
  return Data_Foldable.foldr(Data_Foldable.foldableLast)(f(Data_Unit.unit));
});
var foldableWithIndexFirst = new FoldableWithIndex(function () {
  return Data_Foldable.foldableFirst;
}, function (dictMonoid) {
  return function (f) {
    return Data_Foldable.foldMap(Data_Foldable.foldableFirst)(dictMonoid)(f(Data_Unit.unit));
  };
}, function (f) {
  return Data_Foldable.foldl(Data_Foldable.foldableFirst)(f(Data_Unit.unit));
}, function (f) {
  return Data_Foldable.foldr(Data_Foldable.foldableFirst)(f(Data_Unit.unit));
});
var foldableWithIndexDual = new FoldableWithIndex(function () {
  return Data_Foldable.foldableDual;
}, function (dictMonoid) {
  return function (f) {
    return Data_Foldable.foldMap(Data_Foldable.foldableDual)(dictMonoid)(f(Data_Unit.unit));
  };
}, function (f) {
  return Data_Foldable.foldl(Data_Foldable.foldableDual)(f(Data_Unit.unit));
}, function (f) {
  return Data_Foldable.foldr(Data_Foldable.foldableDual)(f(Data_Unit.unit));
});
var foldableWithIndexDisj = new FoldableWithIndex(function () {
  return Data_Foldable.foldableDisj;
}, function (dictMonoid) {
  return function (f) {
    return Data_Foldable.foldMap(Data_Foldable.foldableDisj)(dictMonoid)(f(Data_Unit.unit));
  };
}, function (f) {
  return Data_Foldable.foldl(Data_Foldable.foldableDisj)(f(Data_Unit.unit));
}, function (f) {
  return Data_Foldable.foldr(Data_Foldable.foldableDisj)(f(Data_Unit.unit));
});
var foldableWithIndexConj = new FoldableWithIndex(function () {
  return Data_Foldable.foldableConj;
}, function (dictMonoid) {
  return function (f) {
    return Data_Foldable.foldMap(Data_Foldable.foldableConj)(dictMonoid)(f(Data_Unit.unit));
  };
}, function (f) {
  return Data_Foldable.foldl(Data_Foldable.foldableConj)(f(Data_Unit.unit));
}, function (f) {
  return Data_Foldable.foldr(Data_Foldable.foldableConj)(f(Data_Unit.unit));
});
var foldableWithIndexAdditive = new FoldableWithIndex(function () {
  return Data_Foldable.foldableAdditive;
}, function (dictMonoid) {
  return function (f) {
    return Data_Foldable.foldMap(Data_Foldable.foldableAdditive)(dictMonoid)(f(Data_Unit.unit));
  };
}, function (f) {
  return Data_Foldable.foldl(Data_Foldable.foldableAdditive)(f(Data_Unit.unit));
}, function (f) {
  return Data_Foldable.foldr(Data_Foldable.foldableAdditive)(f(Data_Unit.unit));
});

var foldWithIndexM = function foldWithIndexM(dictFoldableWithIndex) {
  return function (dictMonad) {
    return function (f) {
      return function (a0) {
        return foldlWithIndex(dictFoldableWithIndex)(function (i) {
          return function (ma) {
            return function (b) {
              return Control_Bind.bind(dictMonad.Bind1())(ma)(Data_Function.flip(f(i))(b));
            };
          };
        })(Control_Applicative.pure(dictMonad.Applicative0())(a0));
      };
    };
  };
};

var foldMapWithIndexDefaultR = function foldMapWithIndexDefaultR(dictFoldableWithIndex) {
  return function (dictMonoid) {
    return function (f) {
      return foldrWithIndex(dictFoldableWithIndex)(function (i) {
        return function (x) {
          return function (acc) {
            return Data_Semigroup.append(dictMonoid.Semigroup0())(f(i)(x))(acc);
          };
        };
      })(Data_Monoid.mempty(dictMonoid));
    };
  };
};

var foldableWithIndexArray = new FoldableWithIndex(function () {
  return Data_Foldable.foldableArray;
}, function (dictMonoid) {
  return foldMapWithIndexDefaultR(foldableWithIndexArray)(dictMonoid);
}, function (f) {
  return function (z) {
    var $49 = Data_Foldable.foldl(Data_Foldable.foldableArray)(function (y) {
      return function (v) {
        return f(v.value0)(y)(v.value1);
      };
    })(z);
    var $50 = Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Tuple.create);
    return function ($51) {
      return $49($50($51));
    };
  };
}, function (f) {
  return function (z) {
    var $52 = Data_Foldable.foldr(Data_Foldable.foldableArray)(function (v) {
      return function (y) {
        return f(v.value0)(v.value1)(y);
      };
    })(z);
    var $53 = Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Tuple.create);
    return function ($54) {
      return $52($53($54));
    };
  };
});

var foldMapWithIndexDefaultL = function foldMapWithIndexDefaultL(dictFoldableWithIndex) {
  return function (dictMonoid) {
    return function (f) {
      return foldlWithIndex(dictFoldableWithIndex)(function (i) {
        return function (acc) {
          return function (x) {
            return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(i)(x));
          };
        };
      })(Data_Monoid.mempty(dictMonoid));
    };
  };
};

var foldMapWithIndex = function foldMapWithIndex(dict) {
  return dict.foldMapWithIndex;
};

var foldlWithIndexDefault = function foldlWithIndexDefault(dictFoldableWithIndex) {
  return function (c) {
    return function (u) {
      return function (xs) {
        return Data_Newtype.unwrap(Data_Newtype.newtypeEndo)(Data_Newtype.unwrap(Data_Newtype.newtypeDual)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn)))(function (i) {
          var $55 = Data_Function.flip(c(i));
          return function ($56) {
            return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo($55($56)));
          };
        })(xs)))(u);
      };
    };
  };
};

var foldrWithIndexDefault = function foldrWithIndexDefault(dictFoldableWithIndex) {
  return function (c) {
    return function (u) {
      return function (xs) {
        return Data_Newtype.unwrap(Data_Newtype.newtypeEndo)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn))(function (i) {
          var $57 = c(i);
          return function ($58) {
            return Data_Monoid_Endo.Endo($57($58));
          };
        })(xs))(u);
      };
    };
  };
};

var surroundMapWithIndex = function surroundMapWithIndex(dictFoldableWithIndex) {
  return function (dictSemigroup) {
    return function (d) {
      return function (t) {
        return function (f) {
          var joined = function joined(i) {
            return function (a) {
              return function (m) {
                return Data_Semigroup.append(dictSemigroup)(d)(Data_Semigroup.append(dictSemigroup)(t(i)(a))(m));
              };
            };
          };

          return Data_Newtype.unwrap(Data_Newtype.newtypeEndo)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn))(joined)(f))(d);
        };
      };
    };
  };
};

var foldMapDefault = function foldMapDefault(dictFoldableWithIndex) {
  return function (dictMonoid) {
    return function (f) {
      return foldMapWithIndex(dictFoldableWithIndex)(dictMonoid)(Data_Function["const"](f));
    };
  };
};

var findWithIndex = function findWithIndex(dictFoldableWithIndex) {
  return function (p) {
    var go = function go(v) {
      return function (v1) {
        return function (v2) {
          if (v1 instanceof Data_Maybe.Nothing && p(v)(v2)) {
            return new Data_Maybe.Just({
              index: v,
              value: v2
            });
          }

          ;
          return v1;
        };
      };
    };

    return foldlWithIndex(dictFoldableWithIndex)(go)(Data_Maybe.Nothing.value);
  };
};

var anyWithIndex = function anyWithIndex(dictFoldableWithIndex) {
  return function (dictHeytingAlgebra) {
    return function (t) {
      var $59 = Data_Newtype.unwrap(Data_Newtype.newtypeDisj);
      var $60 = foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra))(function (i) {
        var $62 = t(i);
        return function ($63) {
          return Data_Monoid_Disj.Disj($62($63));
        };
      });
      return function ($61) {
        return $59($60($61));
      };
    };
  };
};

var allWithIndex = function allWithIndex(dictFoldableWithIndex) {
  return function (dictHeytingAlgebra) {
    return function (t) {
      var $64 = Data_Newtype.unwrap(Data_Newtype.newtypeConj);
      var $65 = foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra))(function (i) {
        var $67 = t(i);
        return function ($68) {
          return Data_Monoid_Conj.Conj($67($68));
        };
      });
      return function ($66) {
        return $64($65($66));
      };
    };
  };
};

module.exports = {
  FoldableWithIndex: FoldableWithIndex,
  foldrWithIndex: foldrWithIndex,
  foldlWithIndex: foldlWithIndex,
  foldMapWithIndex: foldMapWithIndex,
  foldrWithIndexDefault: foldrWithIndexDefault,
  foldlWithIndexDefault: foldlWithIndexDefault,
  foldMapWithIndexDefaultR: foldMapWithIndexDefaultR,
  foldMapWithIndexDefaultL: foldMapWithIndexDefaultL,
  foldWithIndexM: foldWithIndexM,
  traverseWithIndex_: traverseWithIndex_,
  forWithIndex_: forWithIndex_,
  surroundMapWithIndex: surroundMapWithIndex,
  allWithIndex: allWithIndex,
  anyWithIndex: anyWithIndex,
  findWithIndex: findWithIndex,
  foldrDefault: foldrDefault,
  foldlDefault: foldlDefault,
  foldMapDefault: foldMapDefault,
  foldableWithIndexArray: foldableWithIndexArray,
  foldableWithIndexMaybe: foldableWithIndexMaybe,
  foldableWithIndexFirst: foldableWithIndexFirst,
  foldableWithIndexLast: foldableWithIndexLast,
  foldableWithIndexAdditive: foldableWithIndexAdditive,
  foldableWithIndexDual: foldableWithIndexDual,
  foldableWithIndexDisj: foldableWithIndexDisj,
  foldableWithIndexConj: foldableWithIndexConj,
  foldableWithIndexMultiplicative: foldableWithIndexMultiplicative
};
},{"../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Category/index.js":"../output/Control.Category/index.js","../Data.Foldable/index.js":"../output/Data.Foldable/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.FunctorWithIndex/index.js":"../output/Data.FunctorWithIndex/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Monoid.Conj/index.js":"../output/Data.Monoid.Conj/index.js","../Data.Monoid.Disj/index.js":"../output/Data.Monoid.Disj/index.js","../Data.Monoid.Dual/index.js":"../output/Data.Monoid.Dual/index.js","../Data.Monoid.Endo/index.js":"../output/Data.Monoid.Endo/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js"}],"../output/Data.Ord.Max/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Max = function Max(x) {
  return x;
};

var showMax = function showMax(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Max " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semigroupMax = function semigroupMax(dictOrd) {
  return new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      return Data_Ord.max(dictOrd)(v)(v1);
    };
  });
};

var newtypeMax = new Data_Newtype.Newtype(function (n) {
  return n;
}, Max);

var monoidMax = function monoidMax(dictBounded) {
  return new Data_Monoid.Monoid(function () {
    return semigroupMax(dictBounded.Ord0());
  }, Data_Bounded.bottom(dictBounded));
};

var eqMax = function eqMax(dictEq) {
  return dictEq;
};

var ordMax = function ordMax(dictOrd) {
  return new Data_Ord.Ord(function () {
    return eqMax(dictOrd.Eq0());
  }, function (v) {
    return function (v1) {
      return Data_Ord.compare(dictOrd)(v)(v1);
    };
  });
};

module.exports = {
  Max: Max,
  newtypeMax: newtypeMax,
  eqMax: eqMax,
  ordMax: ordMax,
  semigroupMax: semigroupMax,
  monoidMax: monoidMax,
  showMax: showMax
};
},{"../Data.Bounded/index.js":"../output/Data.Bounded/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Show/index.js":"../output/Data.Show/index.js"}],"../output/Data.Ord.Min/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Min = function Min(x) {
  return x;
};

var showMin = function showMin(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Min " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semigroupMin = function semigroupMin(dictOrd) {
  return new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      return Data_Ord.min(dictOrd)(v)(v1);
    };
  });
};

var newtypeMin = new Data_Newtype.Newtype(function (n) {
  return n;
}, Min);

var monoidMin = function monoidMin(dictBounded) {
  return new Data_Monoid.Monoid(function () {
    return semigroupMin(dictBounded.Ord0());
  }, Data_Bounded.top(dictBounded));
};

var eqMin = function eqMin(dictEq) {
  return dictEq;
};

var ordMin = function ordMin(dictOrd) {
  return new Data_Ord.Ord(function () {
    return eqMin(dictOrd.Eq0());
  }, function (v) {
    return function (v1) {
      return Data_Ord.compare(dictOrd)(v)(v1);
    };
  });
};

module.exports = {
  Min: Min,
  newtypeMin: newtypeMin,
  eqMin: eqMin,
  ordMin: ordMin,
  semigroupMin: semigroupMin,
  monoidMin: monoidMin,
  showMin: showMin
};
},{"../Data.Bounded/index.js":"../output/Data.Bounded/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Show/index.js":"../output/Data.Show/index.js"}],"../output/Data.Semigroup.Foldable/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Apply = require("../Control.Apply/index.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord_Max = require("../Data.Ord.Max/index.js");

var Data_Ord_Min = require("../Data.Ord.Min/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var JoinWith = function JoinWith(x) {
  return x;
};

var Act = function Act(x) {
  return x;
};

var Foldable1 = function Foldable1(Foldable0, fold1, foldMap1) {
  this.Foldable0 = Foldable0;
  this.fold1 = fold1;
  this.foldMap1 = foldMap1;
};

var semigroupJoinWith = function semigroupJoinWith(dictSemigroup) {
  return new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      return JoinWith(function (j) {
        return Data_Semigroup.append(dictSemigroup)(v(j))(Data_Semigroup.append(dictSemigroup)(j)(v1(j)));
      });
    };
  });
};

var semigroupAct = function semigroupAct(dictApply) {
  return new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      return Control_Apply.applySecond(dictApply)(v)(v1);
    };
  });
};

var joinee = function joinee(v) {
  return v;
};

var getAct = function getAct(v) {
  return v;
};

var foldMap1 = function foldMap1(dict) {
  return dict.foldMap1;
};

var intercalateMap = function intercalateMap(dictFoldable1) {
  return function (dictSemigroup) {
    return function (j) {
      return function (f) {
        return function (foldable) {
          return joinee(foldMap1(dictFoldable1)(semigroupJoinWith(dictSemigroup))(function ($43) {
            return JoinWith(Data_Function["const"](f($43)));
          })(foldable))(j);
        };
      };
    };
  };
};

var intercalate = function intercalate(dictFoldable1) {
  return function (dictSemigroup) {
    return Data_Function.flip(intercalateMap(dictFoldable1)(dictSemigroup))(Control_Category.identity(Control_Category.categoryFn));
  };
};

var maximum = function maximum(dictOrd) {
  return function (dictFoldable1) {
    return Data_Newtype.ala(Data_Functor.functorFn)(Data_Ord_Max.newtypeMax)(Data_Ord_Max.newtypeMax)(Data_Ord_Max.Max)(foldMap1(dictFoldable1)(Data_Ord_Max.semigroupMax(dictOrd)));
  };
};

var minimum = function minimum(dictOrd) {
  return function (dictFoldable1) {
    return Data_Newtype.ala(Data_Functor.functorFn)(Data_Ord_Min.newtypeMin)(Data_Ord_Min.newtypeMin)(Data_Ord_Min.Min)(foldMap1(dictFoldable1)(Data_Ord_Min.semigroupMin(dictOrd)));
  };
};

var traverse1_ = function traverse1_(dictFoldable1) {
  return function (dictApply) {
    return function (f) {
      return function (t) {
        return Data_Functor.voidRight(dictApply.Functor0())(Data_Unit.unit)(getAct(foldMap1(dictFoldable1)(semigroupAct(dictApply))(function ($44) {
          return Act(f($44));
        })(t)));
      };
    };
  };
};

var for1_ = function for1_(dictFoldable1) {
  return function (dictApply) {
    return Data_Function.flip(traverse1_(dictFoldable1)(dictApply));
  };
};

var sequence1_ = function sequence1_(dictFoldable1) {
  return function (dictApply) {
    return traverse1_(dictFoldable1)(dictApply)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var fold1Default = function fold1Default(dictFoldable1) {
  return function (dictSemigroup) {
    return foldMap1(dictFoldable1)(dictSemigroup)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var foldableDual = new Foldable1(function () {
  return Data_Foldable.foldableDual;
}, function (dictSemigroup) {
  return fold1Default(foldableDual)(dictSemigroup);
}, function (dictSemigroup) {
  return function (f) {
    return function (v) {
      return f(v);
    };
  };
});
var foldableMultiplicative = new Foldable1(function () {
  return Data_Foldable.foldableMultiplicative;
}, function (dictSemigroup) {
  return fold1Default(foldableMultiplicative)(dictSemigroup);
}, function (dictSemigroup) {
  return function (f) {
    return function (v) {
      return f(v);
    };
  };
});

var fold1 = function fold1(dict) {
  return dict.fold1;
};

var foldMap1Default = function foldMap1Default(dictFoldable1) {
  return function (dictFunctor) {
    return function (dictSemigroup) {
      return function (f) {
        var $45 = fold1(dictFoldable1)(dictSemigroup);
        var $46 = Data_Functor.map(dictFunctor)(f);
        return function ($47) {
          return $45($46($47));
        };
      };
    };
  };
};

module.exports = {
  Foldable1: Foldable1,
  foldMap1: foldMap1,
  fold1: fold1,
  traverse1_: traverse1_,
  for1_: for1_,
  sequence1_: sequence1_,
  foldMap1Default: foldMap1Default,
  fold1Default: fold1Default,
  intercalate: intercalate,
  intercalateMap: intercalateMap,
  maximum: maximum,
  minimum: minimum,
  foldableDual: foldableDual,
  foldableMultiplicative: foldableMultiplicative
};
},{"../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Category/index.js":"../output/Control.Category/index.js","../Data.Foldable/index.js":"../output/Data.Foldable/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Ord.Max/index.js":"../output/Data.Ord.Max/index.js","../Data.Ord.Min/index.js":"../output/Data.Ord.Min/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js"}],"../output/Data.Semigroup.Traversable/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");

var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative/index.js");

var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Traversable1 = function Traversable1(Foldable10, _Traversable, sequence1, traverse1) {
  this.Foldable10 = Foldable10;
  this.Traversable1 = _Traversable;
  this.sequence1 = sequence1;
  this.traverse1 = traverse1;
};

var traverse1 = function traverse1(dict) {
  return dict.traverse1;
};

var sequence1Default = function sequence1Default(dictTraversable1) {
  return function (dictApply) {
    return traverse1(dictTraversable1)(dictApply)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var traversableDual = new Traversable1(function () {
  return Data_Semigroup_Foldable.foldableDual;
}, function () {
  return Data_Traversable.traversableDual;
}, function (dictApply) {
  return sequence1Default(traversableDual)(dictApply);
}, function (dictApply) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApply.Functor0())(Data_Monoid_Dual.Dual)(f(v));
    };
  };
});
var traversableMultiplicative = new Traversable1(function () {
  return Data_Semigroup_Foldable.foldableMultiplicative;
}, function () {
  return Data_Traversable.traversableMultiplicative;
}, function (dictApply) {
  return sequence1Default(traversableMultiplicative)(dictApply);
}, function (dictApply) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApply.Functor0())(Data_Monoid_Multiplicative.Multiplicative)(f(v));
    };
  };
});

var sequence1 = function sequence1(dict) {
  return dict.sequence1;
};

var traverse1Default = function traverse1Default(dictTraversable1) {
  return function (dictApply) {
    return function (f) {
      return function (ta) {
        return sequence1(dictTraversable1)(dictApply)(Data_Functor.map(dictTraversable1.Traversable1().Functor0())(f)(ta));
      };
    };
  };
};

module.exports = {
  sequence1: sequence1,
  traverse1: traverse1,
  Traversable1: Traversable1,
  traverse1Default: traverse1Default,
  sequence1Default: sequence1Default,
  traversableDual: traversableDual,
  traversableMultiplicative: traversableMultiplicative
};
},{"../Control.Category/index.js":"../output/Control.Category/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Monoid.Dual/index.js":"../output/Data.Monoid.Dual/index.js","../Data.Monoid.Multiplicative/index.js":"../output/Data.Monoid.Multiplicative/index.js","../Data.Semigroup.Foldable/index.js":"../output/Data.Semigroup.Foldable/index.js","../Data.Traversable/index.js":"../output/Data.Traversable/index.js"}],"../output/Data.TraversableWithIndex/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Traversable_Accum_Internal = require("../Data.Traversable.Accum.Internal/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var TraversableWithIndex = function TraversableWithIndex(FoldableWithIndex1, FunctorWithIndex0, Traversable2, traverseWithIndex) {
  this.FoldableWithIndex1 = FoldableWithIndex1;
  this.FunctorWithIndex0 = FunctorWithIndex0;
  this.Traversable2 = Traversable2;
  this.traverseWithIndex = traverseWithIndex;
};

var traverseWithIndexDefault = function traverseWithIndexDefault(dictTraversableWithIndex) {
  return function (dictApplicative) {
    return function (f) {
      var $19 = Data_Traversable.sequence(dictTraversableWithIndex.Traversable2())(dictApplicative);
      var $20 = Data_FunctorWithIndex.mapWithIndex(dictTraversableWithIndex.FunctorWithIndex0())(f);
      return function ($21) {
        return $19($20($21));
      };
    };
  };
};

var traverseWithIndex = function traverseWithIndex(dict) {
  return dict.traverseWithIndex;
};

var traverseDefault = function traverseDefault(dictTraversableWithIndex) {
  return function (dictApplicative) {
    return function (f) {
      return traverseWithIndex(dictTraversableWithIndex)(dictApplicative)(Data_Function["const"](f));
    };
  };
};

var traversableWithIndexMultiplicative = new TraversableWithIndex(function () {
  return Data_FoldableWithIndex.foldableWithIndexMultiplicative;
}, function () {
  return Data_FunctorWithIndex.functorWithIndexMultiplicative;
}, function () {
  return Data_Traversable.traversableMultiplicative;
}, function (dictApplicative) {
  return function (f) {
    return Data_Traversable.traverse(Data_Traversable.traversableMultiplicative)(dictApplicative)(f(Data_Unit.unit));
  };
});
var traversableWithIndexMaybe = new TraversableWithIndex(function () {
  return Data_FoldableWithIndex.foldableWithIndexMaybe;
}, function () {
  return Data_FunctorWithIndex.functorWithIndexMaybe;
}, function () {
  return Data_Traversable.traversableMaybe;
}, function (dictApplicative) {
  return function (f) {
    return Data_Traversable.traverse(Data_Traversable.traversableMaybe)(dictApplicative)(f(Data_Unit.unit));
  };
});
var traversableWithIndexLast = new TraversableWithIndex(function () {
  return Data_FoldableWithIndex.foldableWithIndexLast;
}, function () {
  return Data_FunctorWithIndex.functorWithIndexLast;
}, function () {
  return Data_Traversable.traversableLast;
}, function (dictApplicative) {
  return function (f) {
    return Data_Traversable.traverse(Data_Traversable.traversableLast)(dictApplicative)(f(Data_Unit.unit));
  };
});
var traversableWithIndexFirst = new TraversableWithIndex(function () {
  return Data_FoldableWithIndex.foldableWithIndexFirst;
}, function () {
  return Data_FunctorWithIndex.functorWithIndexFirst;
}, function () {
  return Data_Traversable.traversableFirst;
}, function (dictApplicative) {
  return function (f) {
    return Data_Traversable.traverse(Data_Traversable.traversableFirst)(dictApplicative)(f(Data_Unit.unit));
  };
});
var traversableWithIndexDual = new TraversableWithIndex(function () {
  return Data_FoldableWithIndex.foldableWithIndexDual;
}, function () {
  return Data_FunctorWithIndex.functorWithIndexDual;
}, function () {
  return Data_Traversable.traversableDual;
}, function (dictApplicative) {
  return function (f) {
    return Data_Traversable.traverse(Data_Traversable.traversableDual)(dictApplicative)(f(Data_Unit.unit));
  };
});
var traversableWithIndexDisj = new TraversableWithIndex(function () {
  return Data_FoldableWithIndex.foldableWithIndexDisj;
}, function () {
  return Data_FunctorWithIndex.functorWithIndexDisj;
}, function () {
  return Data_Traversable.traversableDisj;
}, function (dictApplicative) {
  return function (f) {
    return Data_Traversable.traverse(Data_Traversable.traversableDisj)(dictApplicative)(f(Data_Unit.unit));
  };
});
var traversableWithIndexConj = new TraversableWithIndex(function () {
  return Data_FoldableWithIndex.foldableWithIndexConj;
}, function () {
  return Data_FunctorWithIndex.functorWithIndexConj;
}, function () {
  return Data_Traversable.traversableConj;
}, function (dictApplicative) {
  return function (f) {
    return Data_Traversable.traverse(Data_Traversable.traversableConj)(dictApplicative)(f(Data_Unit.unit));
  };
});
var traversableWithIndexArray = new TraversableWithIndex(function () {
  return Data_FoldableWithIndex.foldableWithIndexArray;
}, function () {
  return Data_FunctorWithIndex.functorWithIndexArray;
}, function () {
  return Data_Traversable.traversableArray;
}, function (dictApplicative) {
  return traverseWithIndexDefault(traversableWithIndexArray)(dictApplicative);
});
var traversableWithIndexAdditive = new TraversableWithIndex(function () {
  return Data_FoldableWithIndex.foldableWithIndexAdditive;
}, function () {
  return Data_FunctorWithIndex.functorWithIndexAdditive;
}, function () {
  return Data_Traversable.traversableAdditive;
}, function (dictApplicative) {
  return function (f) {
    return Data_Traversable.traverse(Data_Traversable.traversableAdditive)(dictApplicative)(f(Data_Unit.unit));
  };
});

var mapAccumRWithIndex = function mapAccumRWithIndex(dictTraversableWithIndex) {
  return function (f) {
    return function (s0) {
      return function (xs) {
        return Data_Traversable_Accum_Internal.stateR(traverseWithIndex(dictTraversableWithIndex)(Data_Traversable_Accum_Internal.applicativeStateR)(function (i) {
          return function (a) {
            return function (s) {
              return f(i)(s)(a);
            };
          };
        })(xs))(s0);
      };
    };
  };
};

var scanrWithIndex = function scanrWithIndex(dictTraversableWithIndex) {
  return function (f) {
    return function (b0) {
      return function (xs) {
        return mapAccumRWithIndex(dictTraversableWithIndex)(function (i) {
          return function (b) {
            return function (a) {
              var b$prime = f(i)(a)(b);
              return {
                accum: b$prime,
                value: b$prime
              };
            };
          };
        })(b0)(xs).value;
      };
    };
  };
};

var mapAccumLWithIndex = function mapAccumLWithIndex(dictTraversableWithIndex) {
  return function (f) {
    return function (s0) {
      return function (xs) {
        return Data_Traversable_Accum_Internal.stateL(traverseWithIndex(dictTraversableWithIndex)(Data_Traversable_Accum_Internal.applicativeStateL)(function (i) {
          return function (a) {
            return function (s) {
              return f(i)(s)(a);
            };
          };
        })(xs))(s0);
      };
    };
  };
};

var scanlWithIndex = function scanlWithIndex(dictTraversableWithIndex) {
  return function (f) {
    return function (b0) {
      return function (xs) {
        return mapAccumLWithIndex(dictTraversableWithIndex)(function (i) {
          return function (b) {
            return function (a) {
              var b$prime = f(i)(b)(a);
              return {
                accum: b$prime,
                value: b$prime
              };
            };
          };
        })(b0)(xs).value;
      };
    };
  };
};

var forWithIndex = function forWithIndex(dictApplicative) {
  return function (dictTraversableWithIndex) {
    return Data_Function.flip(traverseWithIndex(dictTraversableWithIndex)(dictApplicative));
  };
};

module.exports = {
  TraversableWithIndex: TraversableWithIndex,
  traverseWithIndex: traverseWithIndex,
  traverseWithIndexDefault: traverseWithIndexDefault,
  forWithIndex: forWithIndex,
  scanlWithIndex: scanlWithIndex,
  mapAccumLWithIndex: mapAccumLWithIndex,
  scanrWithIndex: scanrWithIndex,
  mapAccumRWithIndex: mapAccumRWithIndex,
  traverseDefault: traverseDefault,
  traversableWithIndexArray: traversableWithIndexArray,
  traversableWithIndexMaybe: traversableWithIndexMaybe,
  traversableWithIndexFirst: traversableWithIndexFirst,
  traversableWithIndexLast: traversableWithIndexLast,
  traversableWithIndexAdditive: traversableWithIndexAdditive,
  traversableWithIndexDual: traversableWithIndexDual,
  traversableWithIndexConj: traversableWithIndexConj,
  traversableWithIndexDisj: traversableWithIndexDisj,
  traversableWithIndexMultiplicative: traversableWithIndexMultiplicative
};
},{"../Data.FoldableWithIndex/index.js":"../output/Data.FoldableWithIndex/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.FunctorWithIndex/index.js":"../output/Data.FunctorWithIndex/index.js","../Data.Traversable/index.js":"../output/Data.Traversable/index.js","../Data.Traversable.Accum.Internal/index.js":"../output/Data.Traversable.Accum.Internal/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js"}],"../output/Data.Identity/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Comonad = require("../Control.Comonad/index.js");

var Control_Extend = require("../Control.Extend/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");

var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Identity = function Identity(x) {
  return x;
};

var showIdentity = function showIdentity(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Identity " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semiringIdentity = function semiringIdentity(dictSemiring) {
  return dictSemiring;
};

var semigroupIdenity = function semigroupIdenity(dictSemigroup) {
  return dictSemigroup;
};

var ringIdentity = function ringIdentity(dictRing) {
  return dictRing;
};

var ordIdentity = function ordIdentity(dictOrd) {
  return dictOrd;
};

var newtypeIdentity = new Data_Newtype.Newtype(function (n) {
  return n;
}, Identity);

var monoidIdentity = function monoidIdentity(dictMonoid) {
  return dictMonoid;
};

var lazyIdentity = function lazyIdentity(dictLazy) {
  return dictLazy;
};

var heytingAlgebraIdentity = function heytingAlgebraIdentity(dictHeytingAlgebra) {
  return dictHeytingAlgebra;
};

var functorIdentity = new Data_Functor.Functor(function (f) {
  return function (m) {
    return f(m);
  };
});
var functorWithIndexIdentity = new Data_FunctorWithIndex.FunctorWithIndex(function () {
  return functorIdentity;
}, function (f) {
  return function (v) {
    return f(Data_Unit.unit)(v);
  };
});
var invariantIdentity = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorIdentity));
var foldableIdentity = new Data_Foldable.Foldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      return f(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(z)(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(v)(z);
    };
  };
});
var foldableWithIndexIdentity = new Data_FoldableWithIndex.FoldableWithIndex(function () {
  return foldableIdentity;
}, function (dictMonoid) {
  return function (f) {
    return function (v) {
      return f(Data_Unit.unit)(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(Data_Unit.unit)(z)(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(Data_Unit.unit)(v)(z);
    };
  };
});
var traversableIdentity = new Data_Traversable.Traversable(function () {
  return foldableIdentity;
}, function () {
  return functorIdentity;
}, function (dictApplicative) {
  return function (v) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(Identity)(v);
  };
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Identity)(f(v));
    };
  };
});
var traversableWithIndexIdentity = new Data_TraversableWithIndex.TraversableWithIndex(function () {
  return foldableWithIndexIdentity;
}, function () {
  return functorWithIndexIdentity;
}, function () {
  return traversableIdentity;
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Identity)(f(Data_Unit.unit)(v));
    };
  };
});
var foldable1Identity = new Data_Semigroup_Foldable.Foldable1(function () {
  return foldableIdentity;
}, function (dictSemigroup) {
  return function (v) {
    return v;
  };
}, function (dictSemigroup) {
  return function (f) {
    return function (v) {
      return f(v);
    };
  };
});
var traversable1Identity = new Data_Semigroup_Traversable.Traversable1(function () {
  return foldable1Identity;
}, function () {
  return traversableIdentity;
}, function (dictApply) {
  return function (v) {
    return Data_Functor.map(dictApply.Functor0())(Identity)(v);
  };
}, function (dictApply) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApply.Functor0())(Identity)(f(v));
    };
  };
});
var extendIdentity = new Control_Extend.Extend(function () {
  return functorIdentity;
}, function (f) {
  return function (m) {
    return f(m);
  };
});

var euclideanRingIdentity = function euclideanRingIdentity(dictEuclideanRing) {
  return dictEuclideanRing;
};

var eqIdentity = function eqIdentity(dictEq) {
  return dictEq;
};

var eq1Identity = new Data_Eq.Eq1(function (dictEq) {
  return Data_Eq.eq(eqIdentity(dictEq));
});
var ord1Identity = new Data_Ord.Ord1(function () {
  return eq1Identity;
}, function (dictOrd) {
  return Data_Ord.compare(ordIdentity(dictOrd));
});
var comonadIdentity = new Control_Comonad.Comonad(function () {
  return extendIdentity;
}, function (v) {
  return v;
});

var commutativeRingIdentity = function commutativeRingIdentity(dictCommutativeRing) {
  return dictCommutativeRing;
};

var boundedIdentity = function boundedIdentity(dictBounded) {
  return dictBounded;
};

var booleanAlgebraIdentity = function booleanAlgebraIdentity(dictBooleanAlgebra) {
  return dictBooleanAlgebra;
};

var applyIdentity = new Control_Apply.Apply(function () {
  return functorIdentity;
}, function (v) {
  return function (v1) {
    return v(v1);
  };
});
var bindIdentity = new Control_Bind.Bind(function () {
  return applyIdentity;
}, function (v) {
  return function (f) {
    return f(v);
  };
});
var applicativeIdentity = new Control_Applicative.Applicative(function () {
  return applyIdentity;
}, Identity);
var monadIdentity = new Control_Monad.Monad(function () {
  return applicativeIdentity;
}, function () {
  return bindIdentity;
});
var altIdentity = new Control_Alt.Alt(function () {
  return functorIdentity;
}, function (x) {
  return function (v) {
    return x;
  };
});
module.exports = {
  Identity: Identity,
  newtypeIdentity: newtypeIdentity,
  eqIdentity: eqIdentity,
  ordIdentity: ordIdentity,
  boundedIdentity: boundedIdentity,
  heytingAlgebraIdentity: heytingAlgebraIdentity,
  booleanAlgebraIdentity: booleanAlgebraIdentity,
  semigroupIdenity: semigroupIdenity,
  monoidIdentity: monoidIdentity,
  semiringIdentity: semiringIdentity,
  euclideanRingIdentity: euclideanRingIdentity,
  ringIdentity: ringIdentity,
  commutativeRingIdentity: commutativeRingIdentity,
  lazyIdentity: lazyIdentity,
  showIdentity: showIdentity,
  eq1Identity: eq1Identity,
  ord1Identity: ord1Identity,
  functorIdentity: functorIdentity,
  functorWithIndexIdentity: functorWithIndexIdentity,
  invariantIdentity: invariantIdentity,
  altIdentity: altIdentity,
  applyIdentity: applyIdentity,
  applicativeIdentity: applicativeIdentity,
  bindIdentity: bindIdentity,
  monadIdentity: monadIdentity,
  extendIdentity: extendIdentity,
  comonadIdentity: comonadIdentity,
  foldableIdentity: foldableIdentity,
  foldable1Identity: foldable1Identity,
  foldableWithIndexIdentity: foldableWithIndexIdentity,
  traversableIdentity: traversableIdentity,
  traversable1Identity: traversable1Identity,
  traversableWithIndexIdentity: traversableWithIndexIdentity
};
},{"../Control.Alt/index.js":"../output/Control.Alt/index.js","../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Comonad/index.js":"../output/Control.Comonad/index.js","../Control.Extend/index.js":"../output/Control.Extend/index.js","../Control.Monad/index.js":"../output/Control.Monad/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Foldable/index.js":"../output/Data.Foldable/index.js","../Data.FoldableWithIndex/index.js":"../output/Data.FoldableWithIndex/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Functor.Invariant/index.js":"../output/Data.Functor.Invariant/index.js","../Data.FunctorWithIndex/index.js":"../output/Data.FunctorWithIndex/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Semigroup.Foldable/index.js":"../output/Data.Semigroup.Foldable/index.js","../Data.Semigroup.Traversable/index.js":"../output/Data.Semigroup.Traversable/index.js","../Data.Show/index.js":"../output/Data.Show/index.js","../Data.Traversable/index.js":"../output/Data.Traversable/index.js","../Data.TraversableWithIndex/index.js":"../output/Data.TraversableWithIndex/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js"}],"../output/Data.Distributive/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Distributive = function Distributive(Functor0, collect, distribute) {
  this.Functor0 = Functor0;
  this.collect = collect;
  this.distribute = distribute;
};

var distributiveIdentity = new Distributive(function () {
  return Data_Identity.functorIdentity;
}, function (dictFunctor) {
  return function (f) {
    var $11 = Data_Functor.map(dictFunctor)(function () {
      var $13 = Data_Newtype.unwrap(Data_Identity.newtypeIdentity);
      return function ($14) {
        return $13(f($14));
      };
    }());
    return function ($12) {
      return Data_Identity.Identity($11($12));
    };
  };
}, function (dictFunctor) {
  var $15 = Data_Functor.map(dictFunctor)(Data_Newtype.unwrap(Data_Identity.newtypeIdentity));
  return function ($16) {
    return Data_Identity.Identity($15($16));
  };
});

var distribute = function distribute(dict) {
  return dict.distribute;
};

var distributiveFunction = new Distributive(function () {
  return Data_Functor.functorFn;
}, function (dictFunctor) {
  return function (f) {
    var $17 = distribute(distributiveFunction)(dictFunctor);
    var $18 = Data_Functor.map(dictFunctor)(f);
    return function ($19) {
      return $17($18($19));
    };
  };
}, function (dictFunctor) {
  return function (a) {
    return function (e) {
      return Data_Functor.map(dictFunctor)(function (v) {
        return v(e);
      })(a);
    };
  };
});

var cotraverse = function cotraverse(dictDistributive) {
  return function (dictFunctor) {
    return function (f) {
      var $20 = Data_Functor.map(dictDistributive.Functor0())(f);
      var $21 = distribute(dictDistributive)(dictFunctor);
      return function ($22) {
        return $20($21($22));
      };
    };
  };
};

var collectDefault = function collectDefault(dictDistributive) {
  return function (dictFunctor) {
    return function (f) {
      var $23 = distribute(dictDistributive)(dictFunctor);
      var $24 = Data_Functor.map(dictFunctor)(f);
      return function ($25) {
        return $23($24($25));
      };
    };
  };
};

var collect = function collect(dict) {
  return dict.collect;
};

var distributeDefault = function distributeDefault(dictDistributive) {
  return function (dictFunctor) {
    return collect(dictDistributive)(dictFunctor)(Control_Category.identity(Control_Category.categoryFn));
  };
};

module.exports = {
  collect: collect,
  distribute: distribute,
  Distributive: Distributive,
  distributeDefault: distributeDefault,
  collectDefault: collectDefault,
  cotraverse: cotraverse,
  distributiveIdentity: distributiveIdentity,
  distributiveFunction: distributiveFunction
};
},{"../Control.Category/index.js":"../output/Control.Category/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Identity/index.js":"../output/Data.Identity/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js"}],"../output/Type.Equality/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var TypeEquals = function TypeEquals(from, to) {
  this.from = from;
  this.to = to;
};

var to = function to(dict) {
  return dict.to;
};

var refl = new TypeEquals(function (a) {
  return a;
}, function (a) {
  return a;
});

var from = function from(dict) {
  return dict.from;
};

module.exports = {
  TypeEquals: TypeEquals,
  to: to,
  from: from,
  refl: refl
};
},{}],"../output/Data.Tuple/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Biapplicative = require("../Control.Biapplicative/index.js");

var Control_Biapply = require("../Control.Biapply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Comonad = require("../Control.Comonad/index.js");

var Control_Extend = require("../Control.Extend/index.js");

var Control_Lazy = require("../Control.Lazy/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Bifoldable = require("../Data.Bifoldable/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Bitraversable = require("../Data.Bitraversable/index.js");

var Data_BooleanAlgebra = require("../Data.BooleanAlgebra/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");

var Data_Distributive = require("../Data.Distributive/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Maybe_First = require("../Data.Maybe.First/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");

var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Type_Equality = require("../Type.Equality/index.js");

var Tuple = function () {
  function Tuple(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Tuple.create = function (value0) {
    return function (value1) {
      return new Tuple(value0, value1);
    };
  };

  return Tuple;
}();

var uncurry = function uncurry(f) {
  return function (v) {
    return f(v.value0)(v.value1);
  };
};

var swap = function swap(v) {
  return new Tuple(v.value1, v.value0);
};

var snd = function snd(v) {
  return v.value1;
};

var showTuple = function showTuple(dictShow) {
  return function (dictShow1) {
    return new Data_Show.Show(function (v) {
      return "(Tuple " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
    });
  };
};

var semiringTuple = function semiringTuple(dictSemiring) {
  return function (dictSemiring1) {
    return new Data_Semiring.Semiring(function (v) {
      return function (v1) {
        return new Tuple(Data_Semiring.add(dictSemiring)(v.value0)(v1.value0), Data_Semiring.add(dictSemiring1)(v.value1)(v1.value1));
      };
    }, function (v) {
      return function (v1) {
        return new Tuple(Data_Semiring.mul(dictSemiring)(v.value0)(v1.value0), Data_Semiring.mul(dictSemiring1)(v.value1)(v1.value1));
      };
    }, new Tuple(Data_Semiring.one(dictSemiring), Data_Semiring.one(dictSemiring1)), new Tuple(Data_Semiring.zero(dictSemiring), Data_Semiring.zero(dictSemiring1)));
  };
};

var semigroupoidTuple = new Control_Semigroupoid.Semigroupoid(function (v) {
  return function (v1) {
    return new Tuple(v1.value0, v.value1);
  };
});

var semigroupTuple = function semigroupTuple(dictSemigroup) {
  return function (dictSemigroup1) {
    return new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
        return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), Data_Semigroup.append(dictSemigroup1)(v.value1)(v1.value1));
      };
    });
  };
};

var ringTuple = function ringTuple(dictRing) {
  return function (dictRing1) {
    return new Data_Ring.Ring(function () {
      return semiringTuple(dictRing.Semiring0())(dictRing1.Semiring0());
    }, function (v) {
      return function (v1) {
        return new Tuple(Data_Ring.sub(dictRing)(v.value0)(v1.value0), Data_Ring.sub(dictRing1)(v.value1)(v1.value1));
      };
    });
  };
};

var monoidTuple = function monoidTuple(dictMonoid) {
  return function (dictMonoid1) {
    return new Data_Monoid.Monoid(function () {
      return semigroupTuple(dictMonoid.Semigroup0())(dictMonoid1.Semigroup0());
    }, new Tuple(Data_Monoid.mempty(dictMonoid), Data_Monoid.mempty(dictMonoid1)));
  };
};

var lookup = function lookup(dictFoldable) {
  return function (dictEq) {
    return function (a) {
      var $312 = Data_Newtype.unwrap(Data_Maybe_First.newtypeFirst);
      var $313 = Data_Foldable.foldMap(dictFoldable)(Data_Maybe_First.monoidFirst)(function (v) {
        var $163 = Data_Eq.eq(dictEq)(a)(v.value0);

        if ($163) {
          return new Data_Maybe.Just(v.value1);
        }

        ;
        return Data_Maybe.Nothing.value;
      });
      return function ($314) {
        return $312($313($314));
      };
    };
  };
};

var heytingAlgebraTuple = function heytingAlgebraTuple(dictHeytingAlgebra) {
  return function (dictHeytingAlgebra1) {
    return new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
      return function (v1) {
        return new Tuple(Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.conj(dictHeytingAlgebra1)(v.value1)(v1.value1));
      };
    }, function (v) {
      return function (v1) {
        return new Tuple(Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.disj(dictHeytingAlgebra1)(v.value1)(v1.value1));
      };
    }, new Tuple(Data_HeytingAlgebra.ff(dictHeytingAlgebra), Data_HeytingAlgebra.ff(dictHeytingAlgebra1)), function (v) {
      return function (v1) {
        return new Tuple(Data_HeytingAlgebra.implies(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.implies(dictHeytingAlgebra1)(v.value1)(v1.value1));
      };
    }, function (v) {
      return new Tuple(Data_HeytingAlgebra.not(dictHeytingAlgebra)(v.value0), Data_HeytingAlgebra.not(dictHeytingAlgebra1)(v.value1));
    }, new Tuple(Data_HeytingAlgebra.tt(dictHeytingAlgebra), Data_HeytingAlgebra.tt(dictHeytingAlgebra1)));
  };
};

var functorTuple = new Data_Functor.Functor(function (f) {
  return function (m) {
    return new Tuple(m.value0, f(m.value1));
  };
});
var functorWithIndexTuple = new Data_FunctorWithIndex.FunctorWithIndex(function () {
  return functorTuple;
}, function (f) {
  return Data_Functor.map(functorTuple)(f(Data_Unit.unit));
});
var invariantTuple = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorTuple));

var fst = function fst(v) {
  return v.value0;
};

var lazyTuple = function lazyTuple(dictLazy) {
  return function (dictLazy1) {
    return new Control_Lazy.Lazy(function (f) {
      return new Tuple(Control_Lazy.defer(dictLazy)(function (v) {
        return fst(f(Data_Unit.unit));
      }), Control_Lazy.defer(dictLazy1)(function (v) {
        return snd(f(Data_Unit.unit));
      }));
    });
  };
};

var foldableTuple = new Data_Foldable.Foldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      return f(v.value1);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(z)(v.value1);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(v.value1)(z);
    };
  };
});
var foldableWithIndexTuple = new Data_FoldableWithIndex.FoldableWithIndex(function () {
  return foldableTuple;
}, function (dictMonoid) {
  return function (f) {
    return function (v) {
      return f(Data_Unit.unit)(v.value1);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(Data_Unit.unit)(z)(v.value1);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(Data_Unit.unit)(v.value1)(z);
    };
  };
});
var traversableTuple = new Data_Traversable.Traversable(function () {
  return foldableTuple;
}, function () {
  return functorTuple;
}, function (dictApplicative) {
  return function (v) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(Tuple.create(v.value0))(v.value1);
  };
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Tuple.create(v.value0))(f(v.value1));
    };
  };
});
var traversableWithIndexTuple = new Data_TraversableWithIndex.TraversableWithIndex(function () {
  return foldableWithIndexTuple;
}, function () {
  return functorWithIndexTuple;
}, function () {
  return traversableTuple;
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Tuple.create(v.value0))(f(Data_Unit.unit)(v.value1));
    };
  };
});
var foldable1Tuple = new Data_Semigroup_Foldable.Foldable1(function () {
  return foldableTuple;
}, function (dictSemigroup) {
  return function (v) {
    return v.value1;
  };
}, function (dictSemigroup) {
  return function (f) {
    return function (v) {
      return f(v.value1);
    };
  };
});
var traversable1Tuple = new Data_Semigroup_Traversable.Traversable1(function () {
  return foldable1Tuple;
}, function () {
  return traversableTuple;
}, function (dictApply) {
  return function (v) {
    return Data_Functor.map(dictApply.Functor0())(Tuple.create(v.value0))(v.value1);
  };
}, function (dictApply) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApply.Functor0())(Tuple.create(v.value0))(f(v.value1));
    };
  };
});
var extendTuple = new Control_Extend.Extend(function () {
  return functorTuple;
}, function (f) {
  return function (v) {
    return new Tuple(v.value0, f(v));
  };
});

var eqTuple = function eqTuple(dictEq) {
  return function (dictEq1) {
    return new Data_Eq.Eq(function (x) {
      return function (y) {
        return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq(dictEq1)(x.value1)(y.value1);
      };
    });
  };
};

var ordTuple = function ordTuple(dictOrd) {
  return function (dictOrd1) {
    return new Data_Ord.Ord(function () {
      return eqTuple(dictOrd.Eq0())(dictOrd1.Eq0());
    }, function (x) {
      return function (y) {
        var v = Data_Ord.compare(dictOrd)(x.value0)(y.value0);

        if (v instanceof Data_Ordering.LT) {
          return Data_Ordering.LT.value;
        }

        ;

        if (v instanceof Data_Ordering.GT) {
          return Data_Ordering.GT.value;
        }

        ;
        return Data_Ord.compare(dictOrd1)(x.value1)(y.value1);
      };
    });
  };
};

var eq1Tuple = function eq1Tuple(dictEq) {
  return new Data_Eq.Eq1(function (dictEq1) {
    return Data_Eq.eq(eqTuple(dictEq)(dictEq1));
  });
};

var ord1Tuple = function ord1Tuple(dictOrd) {
  return new Data_Ord.Ord1(function () {
    return eq1Tuple(dictOrd.Eq0());
  }, function (dictOrd1) {
    return Data_Ord.compare(ordTuple(dictOrd)(dictOrd1));
  });
};

var distributiveTuple = function distributiveTuple(dictTypeEquals) {
  return new Data_Distributive.Distributive(function () {
    return functorTuple;
  }, function (dictFunctor) {
    return Data_Distributive.collectDefault(distributiveTuple(dictTypeEquals))(dictFunctor);
  }, function (dictFunctor) {
    var $315 = Tuple.create(Type_Equality.from(dictTypeEquals)(Data_Unit.unit));
    var $316 = Data_Functor.map(dictFunctor)(snd);
    return function ($317) {
      return $315($316($317));
    };
  });
};

var curry = function curry(f) {
  return function (a) {
    return function (b) {
      return f(new Tuple(a, b));
    };
  };
};

var comonadTuple = new Control_Comonad.Comonad(function () {
  return extendTuple;
}, snd);

var commutativeRingTuple = function commutativeRingTuple(dictCommutativeRing) {
  return function (dictCommutativeRing1) {
    return new Data_CommutativeRing.CommutativeRing(function () {
      return ringTuple(dictCommutativeRing.Ring0())(dictCommutativeRing1.Ring0());
    });
  };
};

var boundedTuple = function boundedTuple(dictBounded) {
  return function (dictBounded1) {
    return new Data_Bounded.Bounded(function () {
      return ordTuple(dictBounded.Ord0())(dictBounded1.Ord0());
    }, new Tuple(Data_Bounded.bottom(dictBounded), Data_Bounded.bottom(dictBounded1)), new Tuple(Data_Bounded.top(dictBounded), Data_Bounded.top(dictBounded1)));
  };
};

var booleanAlgebraTuple = function booleanAlgebraTuple(dictBooleanAlgebra) {
  return function (dictBooleanAlgebra1) {
    return new Data_BooleanAlgebra.BooleanAlgebra(function () {
      return heytingAlgebraTuple(dictBooleanAlgebra.HeytingAlgebra0())(dictBooleanAlgebra1.HeytingAlgebra0());
    });
  };
};

var bifunctorTuple = new Data_Bifunctor.Bifunctor(function (f) {
  return function (g) {
    return function (v) {
      return new Tuple(f(v.value0), g(v.value1));
    };
  };
});
var bifoldableTuple = new Data_Bifoldable.Bifoldable(function (dictMonoid) {
  return function (f) {
    return function (g) {
      return function (v) {
        return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(g(v.value1));
      };
    };
  };
}, function (f) {
  return function (g) {
    return function (z) {
      return function (v) {
        return g(f(z)(v.value0))(v.value1);
      };
    };
  };
}, function (f) {
  return function (g) {
    return function (z) {
      return function (v) {
        return f(v.value0)(g(v.value1)(z));
      };
    };
  };
});
var bitraversableTuple = new Data_Bitraversable.Bitraversable(function () {
  return bifoldableTuple;
}, function () {
  return bifunctorTuple;
}, function (dictApplicative) {
  return function (v) {
    return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(Tuple.create)(v.value0))(v.value1);
  };
}, function (dictApplicative) {
  return function (f) {
    return function (g) {
      return function (v) {
        return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(Tuple.create)(f(v.value0)))(g(v.value1));
      };
    };
  };
});
var biapplyTuple = new Control_Biapply.Biapply(function () {
  return bifunctorTuple;
}, function (v) {
  return function (v1) {
    return new Tuple(v.value0(v1.value0), v.value1(v1.value1));
  };
});
var biapplicativeTuple = new Control_Biapplicative.Biapplicative(function () {
  return biapplyTuple;
}, Tuple.create);

var applyTuple = function applyTuple(dictSemigroup) {
  return new Control_Apply.Apply(function () {
    return functorTuple;
  }, function (v) {
    return function (v1) {
      return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), v.value1(v1.value1));
    };
  });
};

var bindTuple = function bindTuple(dictSemigroup) {
  return new Control_Bind.Bind(function () {
    return applyTuple(dictSemigroup);
  }, function (v) {
    return function (f) {
      var v1 = f(v.value1);
      return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), v1.value1);
    };
  });
};

var applicativeTuple = function applicativeTuple(dictMonoid) {
  return new Control_Applicative.Applicative(function () {
    return applyTuple(dictMonoid.Semigroup0());
  }, Tuple.create(Data_Monoid.mempty(dictMonoid)));
};

var monadTuple = function monadTuple(dictMonoid) {
  return new Control_Monad.Monad(function () {
    return applicativeTuple(dictMonoid);
  }, function () {
    return bindTuple(dictMonoid.Semigroup0());
  });
};

module.exports = {
  Tuple: Tuple,
  fst: fst,
  snd: snd,
  curry: curry,
  uncurry: uncurry,
  swap: swap,
  lookup: lookup,
  showTuple: showTuple,
  eqTuple: eqTuple,
  eq1Tuple: eq1Tuple,
  ordTuple: ordTuple,
  ord1Tuple: ord1Tuple,
  boundedTuple: boundedTuple,
  semigroupoidTuple: semigroupoidTuple,
  semigroupTuple: semigroupTuple,
  monoidTuple: monoidTuple,
  semiringTuple: semiringTuple,
  ringTuple: ringTuple,
  commutativeRingTuple: commutativeRingTuple,
  heytingAlgebraTuple: heytingAlgebraTuple,
  booleanAlgebraTuple: booleanAlgebraTuple,
  functorTuple: functorTuple,
  functorWithIndexTuple: functorWithIndexTuple,
  invariantTuple: invariantTuple,
  bifunctorTuple: bifunctorTuple,
  applyTuple: applyTuple,
  biapplyTuple: biapplyTuple,
  applicativeTuple: applicativeTuple,
  biapplicativeTuple: biapplicativeTuple,
  bindTuple: bindTuple,
  monadTuple: monadTuple,
  extendTuple: extendTuple,
  comonadTuple: comonadTuple,
  lazyTuple: lazyTuple,
  foldableTuple: foldableTuple,
  foldable1Tuple: foldable1Tuple,
  foldableWithIndexTuple: foldableWithIndexTuple,
  bifoldableTuple: bifoldableTuple,
  traversableTuple: traversableTuple,
  traversable1Tuple: traversable1Tuple,
  traversableWithIndexTuple: traversableWithIndexTuple,
  bitraversableTuple: bitraversableTuple,
  distributiveTuple: distributiveTuple
};
},{"../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Biapplicative/index.js":"../output/Control.Biapplicative/index.js","../Control.Biapply/index.js":"../output/Control.Biapply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Comonad/index.js":"../output/Control.Comonad/index.js","../Control.Extend/index.js":"../output/Control.Extend/index.js","../Control.Lazy/index.js":"../output/Control.Lazy/index.js","../Control.Monad/index.js":"../output/Control.Monad/index.js","../Control.Semigroupoid/index.js":"../output/Control.Semigroupoid/index.js","../Data.Bifoldable/index.js":"../output/Data.Bifoldable/index.js","../Data.Bifunctor/index.js":"../output/Data.Bifunctor/index.js","../Data.Bitraversable/index.js":"../output/Data.Bitraversable/index.js","../Data.BooleanAlgebra/index.js":"../output/Data.BooleanAlgebra/index.js","../Data.Bounded/index.js":"../output/Data.Bounded/index.js","../Data.CommutativeRing/index.js":"../output/Data.CommutativeRing/index.js","../Data.Distributive/index.js":"../output/Data.Distributive/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Foldable/index.js":"../output/Data.Foldable/index.js","../Data.FoldableWithIndex/index.js":"../output/Data.FoldableWithIndex/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Functor.Invariant/index.js":"../output/Data.Functor.Invariant/index.js","../Data.FunctorWithIndex/index.js":"../output/Data.FunctorWithIndex/index.js","../Data.HeytingAlgebra/index.js":"../output/Data.HeytingAlgebra/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Maybe.First/index.js":"../output/Data.Maybe.First/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Ordering/index.js":"../output/Data.Ordering/index.js","../Data.Ring/index.js":"../output/Data.Ring/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Semigroup.Foldable/index.js":"../output/Data.Semigroup.Foldable/index.js","../Data.Semigroup.Traversable/index.js":"../output/Data.Semigroup.Traversable/index.js","../Data.Semiring/index.js":"../output/Data.Semiring/index.js","../Data.Show/index.js":"../output/Data.Show/index.js","../Data.Traversable/index.js":"../output/Data.Traversable/index.js","../Data.TraversableWithIndex/index.js":"../output/Data.TraversableWithIndex/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js","../Type.Equality/index.js":"../output/Type.Equality/index.js"}],"../output/Effect.Console/foreign.js":[function(require,module,exports) {
"use strict";

exports.log = function (s) {
  return function () {
    console.log(s);
    return {};
  };
};

exports.warn = function (s) {
  return function () {
    console.warn(s);
    return {};
  };
};

exports.error = function (s) {
  return function () {
    console.error(s);
    return {};
  };
};

exports.info = function (s) {
  return function () {
    console.info(s);
    return {};
  };
};

exports.time = function (s) {
  return function () {
    console.time(s);
    return {};
  };
};

exports.timeLog = function (s) {
  return function () {
    console.timeLog(s);
    return {};
  };
};

exports.timeEnd = function (s) {
  return function () {
    console.timeEnd(s);
    return {};
  };
};

exports.clear = function () {
  console.clear();
  return {};
};
},{}],"../output/Effect.Console/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Data_Show = require("../Data.Show/index.js");

var warnShow = function warnShow(dictShow) {
  return function (a) {
    return $foreign.warn(Data_Show.show(dictShow)(a));
  };
};

var logShow = function logShow(dictShow) {
  return function (a) {
    return $foreign.log(Data_Show.show(dictShow)(a));
  };
};

var infoShow = function infoShow(dictShow) {
  return function (a) {
    return $foreign.info(Data_Show.show(dictShow)(a));
  };
};

var errorShow = function errorShow(dictShow) {
  return function (a) {
    return $foreign.error(Data_Show.show(dictShow)(a));
  };
};

module.exports = {
  logShow: logShow,
  warnShow: warnShow,
  errorShow: errorShow,
  infoShow: infoShow,
  log: $foreign.log,
  warn: $foreign.warn,
  error: $foreign.error,
  info: $foreign.info,
  time: $foreign.time,
  timeLog: $foreign.timeLog,
  timeEnd: $foreign.timeEnd,
  clear: $foreign.clear
};
},{"./foreign.js":"../output/Effect.Console/foreign.js","../Data.Show/index.js":"../output/Data.Show/index.js"}],"../node_modules/@thi.ng/checks/exists-not-null.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.existsAndNotNull = void 0;

const existsAndNotNull = x => x != null;

exports.existsAndNotNull = existsAndNotNull;
},{}],"../node_modules/@thi.ng/checks/exists.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.exists = void 0;

const exists = t => t !== undefined;

exports.exists = exists;
},{}],"../node_modules/@thi.ng/checks/has-bigint.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hasBigInt = void 0;

const hasBigInt = () => typeof BigInt === "function";

exports.hasBigInt = hasBigInt;
},{}],"../node_modules/@thi.ng/checks/has-crypto.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hasCrypto = void 0;

const hasCrypto = () => typeof window !== "undefined" && window["crypto"] !== undefined;

exports.hasCrypto = hasCrypto;
},{}],"../node_modules/@thi.ng/checks/has-max-length.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hasMaxLength = void 0;

const hasMaxLength = (len, x) => x != null && x.length <= len;

exports.hasMaxLength = hasMaxLength;
},{}],"../node_modules/@thi.ng/checks/has-min-length.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hasMinLength = void 0;

const hasMinLength = (len, x) => x != null && x.length >= len;

exports.hasMinLength = hasMinLength;
},{}],"../node_modules/@thi.ng/checks/is-function.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isFunction = void 0;

const isFunction = x => typeof x === "function";

exports.isFunction = isFunction;
},{}],"../node_modules/@thi.ng/checks/has-performance.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hasPerformance = void 0;

var _isFunction = require("./is-function");

const hasPerformance = () => typeof performance !== "undefined" && (0, _isFunction.isFunction)(performance.now);

exports.hasPerformance = hasPerformance;
},{"./is-function":"../node_modules/@thi.ng/checks/is-function.js"}],"../node_modules/@thi.ng/checks/has-wasm.js":[function(require,module,exports) {
var global = arguments[3];
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hasWASM = void 0;

const hasWASM = () => typeof window !== "undefined" && typeof window["WebAssembly"] !== "undefined" || typeof global !== "undefined" && typeof global["WebAssembly"] !== "undefined";

exports.hasWASM = hasWASM;
},{}],"../node_modules/@thi.ng/checks/has-webgl.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hasWebGL = void 0;

const hasWebGL = () => {
  try {
    document.createElement("canvas").getContext("webgl");
    return true;
  } catch (e) {
    return false;
  }
};

exports.hasWebGL = hasWebGL;
},{}],"../node_modules/@thi.ng/checks/has-websocket.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hasWebSocket = void 0;

const hasWebSocket = () => typeof WebSocket !== "undefined";

exports.hasWebSocket = hasWebSocket;
},{}],"../node_modules/@thi.ng/checks/implements-function.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.implementsFunction = void 0;

const implementsFunction = (x, fn) => x != null && typeof x[fn] === "function";

exports.implementsFunction = implementsFunction;
},{}],"../node_modules/@thi.ng/checks/is-alphanum.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isNumeric = exports.isAlphaNum = exports.isAlpha = void 0;

const isAlpha = x => /^[a-z]+$/i.test(x);

exports.isAlpha = isAlpha;

const isAlphaNum = x => /^[a-z0-9]+$/i.test(x);

exports.isAlphaNum = isAlphaNum;

const isNumeric = x => /^[0-9]+$/.test(x);

exports.isNumeric = isNumeric;
},{}],"../node_modules/@thi.ng/checks/is-array.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isArray = void 0;
const isArray = Array.isArray;
exports.isArray = isArray;
},{}],"../node_modules/@thi.ng/checks/is-arraylike.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isArrayLike = void 0;

const isArrayLike = x => x != null && typeof x !== "function" && x.length !== undefined;

exports.isArrayLike = isArrayLike;
},{}],"../node_modules/@thi.ng/checks/is-ascii.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isPrintableASCII = exports.isASCII = void 0;

/**
 * Returns true iff all chars are in ASCII range [0x00 .. 0x7f]
 *
 * @param x
 */
const isASCII = x => /^[\x00-\x7f]+$/.test(x);
/**
 * Returns true iff all chars are in printable ASCII range [0x20 .. 0x7e]
 *
 * @param x
 */


exports.isASCII = isASCII;

const isPrintableASCII = x => /^[\x20-\x7e]+$/.test(x);

exports.isPrintableASCII = isPrintableASCII;
},{}],"../node_modules/@thi.ng/checks/is-async-iterable.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isAsyncIterable = void 0;

const isAsyncIterable = x => x != null && typeof x[Symbol.asyncIterator] === "function";

exports.isAsyncIterable = isAsyncIterable;
},{}],"../node_modules/@thi.ng/checks/is-blob.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isBlob = void 0;

const isBlob = x => x instanceof Blob;

exports.isBlob = isBlob;
},{}],"../node_modules/@thi.ng/checks/is-boolean.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isBoolean = void 0;

const isBoolean = x => typeof x === "boolean";

exports.isBoolean = isBoolean;
},{}],"../node_modules/@thi.ng/checks/is-chrome.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isChrome = void 0;

const isChrome = () => typeof window !== "undefined" && !!window["chrome"];

exports.isChrome = isChrome;
},{}],"../node_modules/@thi.ng/checks/is-data-url.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isDataURL = void 0;

const isDataURL = x => /^data:.+\/(.+);base64,/.test(x);

exports.isDataURL = isDataURL;
},{}],"../node_modules/@thi.ng/checks/is-date.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isDate = void 0;

const isDate = x => x instanceof Date;

exports.isDate = isDate;
},{}],"../node_modules/@thi.ng/checks/is-even.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isEven = void 0;

const isEven = x => x % 2 === 0;

exports.isEven = isEven;
},{}],"../node_modules/@thi.ng/checks/is-false.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isFalse = void 0;

const isFalse = x => x === false;

exports.isFalse = isFalse;
},{}],"../node_modules/@thi.ng/checks/is-file.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isFile = void 0;

const isFile = x => x instanceof File;

exports.isFile = isFile;
},{}],"../node_modules/@thi.ng/checks/is-firefox.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isFirefox = void 0;

const isFirefox = () => typeof window !== "undefined" && !!window["InstallTrigger"];

exports.isFirefox = isFirefox;
},{}],"../node_modules/@thi.ng/checks/is-float-string.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isFloatString = void 0;
const RE = /^(?:[-+]?(?:[0-9]+))?(?:\.[0-9]*)?(?:[eE][\+\-]?(?:[0-9]+))?$/;

const isFloatString = x => x.length > 0 && RE.test(x);

exports.isFloatString = isFloatString;
},{}],"../node_modules/@thi.ng/checks/is-hex.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isHex = void 0;

const isHex = x => /^[a-f0-9]+$/i.test(x);

exports.isHex = isHex;
},{}],"../node_modules/@thi.ng/checks/is-string.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isString = void 0;

const isString = x => typeof x === "string";

exports.isString = isString;
},{}],"../node_modules/@thi.ng/checks/is-hex-color.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isHexColor = void 0;

var _isString = require("./is-string");

const RE = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;

const isHexColor = x => (0, _isString.isString)(x) && RE.test(x);

exports.isHexColor = isHexColor;
},{"./is-string":"../node_modules/@thi.ng/checks/is-string.js"}],"../node_modules/@thi.ng/checks/is-ie.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isIE = void 0;

const isIE = () => typeof document !== "undefined" && (typeof document["documentMode"] !== "undefined" || navigator.userAgent.indexOf("MSIE") > 0);

exports.isIE = isIE;
},{}],"../node_modules/@thi.ng/checks/is-in-range.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isInRange = void 0;

const isInRange = (min, max, x) => x >= min && x <= max;

exports.isInRange = isInRange;
},{}],"../node_modules/@thi.ng/checks/is-int32.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isInt32 = void 0;

const isInt32 = x => typeof x === "number" && (x | 0) === x;

exports.isInt32 = isInt32;
},{}],"../node_modules/@thi.ng/checks/is-int-string.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isIntString = void 0;
const RE = /^(?:[-+]?(?:0|[1-9][0-9]*))$/;

const isIntString = x => RE.test(x);

exports.isIntString = isIntString;
},{}],"../node_modules/@thi.ng/checks/is-iterable.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isIterable = void 0;

const isIterable = x => x != null && typeof x[Symbol.iterator] === "function";

exports.isIterable = isIterable;
},{}],"../node_modules/@thi.ng/checks/is-map.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isMap = void 0;

const isMap = x => x instanceof Map;

exports.isMap = isMap;
},{}],"../node_modules/@thi.ng/checks/is-mobile.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isMobile = void 0;

const isMobile = () => typeof navigator !== "undefined" && /mobile|tablet|ip(ad|hone|od)|android|silk|crios/i.test(navigator.userAgent);

exports.isMobile = isMobile;
},{}],"../node_modules/@thi.ng/checks/is-nan.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isNaN = void 0;

const isNaN = x => x !== x;

exports.isNaN = isNaN;
},{}],"../node_modules/@thi.ng/checks/is-negative.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isNegative = void 0;

const isNegative = x => typeof x === "number" && x < 0;

exports.isNegative = isNegative;
},{}],"../node_modules/@thi.ng/checks/is-nil.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isNil = void 0;

/**
 * Checks if x is null or undefined.
 *
 */
const isNil = x => x == null;

exports.isNil = isNil;
},{}],"../../../../AppData/Roaming/npm/node_modules/parcel/src/builtins/_empty.js":[function(require,module,exports) {

},{}],"../node_modules/@thi.ng/checks/is-node.js":[function(require,module,exports) {
var process = require("process");
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isNode = void 0;

const isNode = () => typeof process === "object" && typeof process.versions === "object" && typeof process.versions.node !== "undefined";

exports.isNode = isNode;
},{"process":"../../../../AppData/Roaming/npm/node_modules/parcel/src/builtins/_empty.js"}],"../node_modules/@thi.ng/checks/is-not-string-iterable.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isNotStringAndIterable = void 0;

const isNotStringAndIterable = x => x != null && typeof x !== "string" && typeof x[Symbol.iterator] === "function";

exports.isNotStringAndIterable = isNotStringAndIterable;
},{}],"../node_modules/@thi.ng/checks/is-null.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isNull = void 0;

const isNull = x => x === null;

exports.isNull = isNull;
},{}],"../node_modules/@thi.ng/checks/is-number.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isNumber = void 0;

const isNumber = x => typeof x === "number";

exports.isNumber = isNumber;
},{}],"../node_modules/@thi.ng/checks/is-object.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isObject = void 0;

const isObject = x => x !== null && typeof x === "object";

exports.isObject = isObject;
},{}],"../node_modules/@thi.ng/checks/is-odd.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isOdd = void 0;

const isOdd = x => x % 2 !== 0;

exports.isOdd = isOdd;
},{}],"../node_modules/@thi.ng/checks/is-plain-object.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isPlainObject = void 0;
const OBJP = Object.getPrototypeOf;
/**
 * Similar to {@link isObject}, but also checks if prototype is that of
 * `Object` (or `null`).
 *
 * @param x -
 */

const isPlainObject = x => {
  let p;
  return x != null && typeof x === "object" && ((p = OBJP(x)) === null || OBJP(p) === null);
};

exports.isPlainObject = isPlainObject;
},{}],"../node_modules/@thi.ng/checks/is-positive.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isPositive = void 0;

const isPositive = x => typeof x === "number" && x > 0;

exports.isPositive = isPositive;
},{}],"../node_modules/@thi.ng/checks/is-primitive.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isPrimitive = void 0;

const isPrimitive = x => {
  const t = typeof x;
  return t === "string" || t === "number";
};

exports.isPrimitive = isPrimitive;
},{}],"../node_modules/@thi.ng/checks/is-promise.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isPromise = void 0;

const isPromise = x => x instanceof Promise;

exports.isPromise = isPromise;
},{}],"../node_modules/@thi.ng/checks/is-promiselike.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isPromiseLike = void 0;

var _implementsFunction = require("./implements-function");

const isPromiseLike = x => x instanceof Promise || (0, _implementsFunction.implementsFunction)(x, "then") && (0, _implementsFunction.implementsFunction)(x, "catch");

exports.isPromiseLike = isPromiseLike;
},{"./implements-function":"../node_modules/@thi.ng/checks/implements-function.js"}],"../node_modules/@thi.ng/checks/is-regexp.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isRegExp = void 0;

const isRegExp = x => x instanceof RegExp;

exports.isRegExp = isRegExp;
},{}],"../node_modules/@thi.ng/checks/is-safari.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isSafari = void 0;

var _isChrome = require("./is-chrome");

const isSafari = () => typeof navigator !== "undefined" && /Safari/.test(navigator.userAgent) && !(0, _isChrome.isChrome)();

exports.isSafari = isSafari;
},{"./is-chrome":"../node_modules/@thi.ng/checks/is-chrome.js"}],"../node_modules/@thi.ng/checks/is-set.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isSet = void 0;

const isSet = x => x instanceof Set;

exports.isSet = isSet;
},{}],"../node_modules/@thi.ng/checks/is-symbol.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isSymbol = void 0;

const isSymbol = x => typeof x === "symbol";

exports.isSymbol = isSymbol;
},{}],"../node_modules/@thi.ng/checks/is-transferable.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isTransferable = void 0;

const isTransferable = x => x instanceof ArrayBuffer || typeof SharedArrayBuffer !== "undefined" && x instanceof SharedArrayBuffer || typeof MessagePort !== "undefined" && x instanceof MessagePort;

exports.isTransferable = isTransferable;
},{}],"../node_modules/@thi.ng/checks/is-true.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isTrue = void 0;

const isTrue = x => x === true;

exports.isTrue = isTrue;
},{}],"../node_modules/@thi.ng/checks/is-typedarray.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isTypedArray = void 0;

const isTypedArray = x => x && (x instanceof Float32Array || x instanceof Float64Array || x instanceof Uint32Array || x instanceof Int32Array || x instanceof Uint8Array || x instanceof Int8Array || x instanceof Uint16Array || x instanceof Int16Array || x instanceof Uint8ClampedArray);

exports.isTypedArray = isTypedArray;
},{}],"../node_modules/@thi.ng/checks/is-uint32.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isUint32 = void 0;

const isUint32 = x => typeof x === "number" && x >>> 0 === x;

exports.isUint32 = isUint32;
},{}],"../node_modules/@thi.ng/checks/is-undefined.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isUndefined = void 0;

const isUndefined = x => x === undefined;

exports.isUndefined = isUndefined;
},{}],"../node_modules/@thi.ng/checks/is-uuid.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isUUID = void 0;
const RE = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;

const isUUID = x => RE.test(x);

exports.isUUID = isUUID;
},{}],"../node_modules/@thi.ng/checks/is-uuid4.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isUUIDv4 = void 0;
const RE = /^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;

const isUUIDv4 = x => RE.test(x);

exports.isUUIDv4 = isUUIDv4;
},{}],"../node_modules/@thi.ng/checks/is-zero.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isZero = void 0;

const isZero = x => x === 0;

exports.isZero = isZero;
},{}],"../node_modules/@thi.ng/checks/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _existsNotNull = require("./exists-not-null");

Object.keys(_existsNotNull).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _existsNotNull[key];
    }
  });
});

var _exists = require("./exists");

Object.keys(_exists).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _exists[key];
    }
  });
});

var _hasBigint = require("./has-bigint");

Object.keys(_hasBigint).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _hasBigint[key];
    }
  });
});

var _hasCrypto = require("./has-crypto");

Object.keys(_hasCrypto).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _hasCrypto[key];
    }
  });
});

var _hasMaxLength = require("./has-max-length");

Object.keys(_hasMaxLength).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _hasMaxLength[key];
    }
  });
});

var _hasMinLength = require("./has-min-length");

Object.keys(_hasMinLength).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _hasMinLength[key];
    }
  });
});

var _hasPerformance = require("./has-performance");

Object.keys(_hasPerformance).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _hasPerformance[key];
    }
  });
});

var _hasWasm = require("./has-wasm");

Object.keys(_hasWasm).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _hasWasm[key];
    }
  });
});

var _hasWebgl = require("./has-webgl");

Object.keys(_hasWebgl).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _hasWebgl[key];
    }
  });
});

var _hasWebsocket = require("./has-websocket");

Object.keys(_hasWebsocket).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _hasWebsocket[key];
    }
  });
});

var _implementsFunction = require("./implements-function");

Object.keys(_implementsFunction).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _implementsFunction[key];
    }
  });
});

var _isAlphanum = require("./is-alphanum");

Object.keys(_isAlphanum).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isAlphanum[key];
    }
  });
});

var _isArray = require("./is-array");

Object.keys(_isArray).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isArray[key];
    }
  });
});

var _isArraylike = require("./is-arraylike");

Object.keys(_isArraylike).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isArraylike[key];
    }
  });
});

var _isAscii = require("./is-ascii");

Object.keys(_isAscii).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isAscii[key];
    }
  });
});

var _isAsyncIterable = require("./is-async-iterable");

Object.keys(_isAsyncIterable).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isAsyncIterable[key];
    }
  });
});

var _isBlob = require("./is-blob");

Object.keys(_isBlob).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isBlob[key];
    }
  });
});

var _isBoolean = require("./is-boolean");

Object.keys(_isBoolean).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isBoolean[key];
    }
  });
});

var _isChrome = require("./is-chrome");

Object.keys(_isChrome).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isChrome[key];
    }
  });
});

var _isDataUrl = require("./is-data-url");

Object.keys(_isDataUrl).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isDataUrl[key];
    }
  });
});

var _isDate = require("./is-date");

Object.keys(_isDate).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isDate[key];
    }
  });
});

var _isEven = require("./is-even");

Object.keys(_isEven).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isEven[key];
    }
  });
});

var _isFalse = require("./is-false");

Object.keys(_isFalse).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isFalse[key];
    }
  });
});

var _isFile = require("./is-file");

Object.keys(_isFile).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isFile[key];
    }
  });
});

var _isFirefox = require("./is-firefox");

Object.keys(_isFirefox).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isFirefox[key];
    }
  });
});

var _isFloatString = require("./is-float-string");

Object.keys(_isFloatString).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isFloatString[key];
    }
  });
});

var _isFunction = require("./is-function");

Object.keys(_isFunction).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isFunction[key];
    }
  });
});

var _isHex = require("./is-hex");

Object.keys(_isHex).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isHex[key];
    }
  });
});

var _isHexColor = require("./is-hex-color");

Object.keys(_isHexColor).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isHexColor[key];
    }
  });
});

var _isIe = require("./is-ie");

Object.keys(_isIe).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isIe[key];
    }
  });
});

var _isInRange = require("./is-in-range");

Object.keys(_isInRange).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isInRange[key];
    }
  });
});

var _isInt = require("./is-int32");

Object.keys(_isInt).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isInt[key];
    }
  });
});

var _isIntString = require("./is-int-string");

Object.keys(_isIntString).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isIntString[key];
    }
  });
});

var _isIterable = require("./is-iterable");

Object.keys(_isIterable).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isIterable[key];
    }
  });
});

var _isMap = require("./is-map");

Object.keys(_isMap).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isMap[key];
    }
  });
});

var _isMobile = require("./is-mobile");

Object.keys(_isMobile).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isMobile[key];
    }
  });
});

var _isNan = require("./is-nan");

Object.keys(_isNan).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isNan[key];
    }
  });
});

var _isNegative = require("./is-negative");

Object.keys(_isNegative).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isNegative[key];
    }
  });
});

var _isNil = require("./is-nil");

Object.keys(_isNil).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isNil[key];
    }
  });
});

var _isNode = require("./is-node");

Object.keys(_isNode).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isNode[key];
    }
  });
});

var _isNotStringIterable = require("./is-not-string-iterable");

Object.keys(_isNotStringIterable).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isNotStringIterable[key];
    }
  });
});

var _isNull = require("./is-null");

Object.keys(_isNull).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isNull[key];
    }
  });
});

var _isNumber = require("./is-number");

Object.keys(_isNumber).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isNumber[key];
    }
  });
});

var _isObject = require("./is-object");

Object.keys(_isObject).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isObject[key];
    }
  });
});

var _isOdd = require("./is-odd");

Object.keys(_isOdd).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isOdd[key];
    }
  });
});

var _isPlainObject = require("./is-plain-object");

Object.keys(_isPlainObject).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isPlainObject[key];
    }
  });
});

var _isPositive = require("./is-positive");

Object.keys(_isPositive).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isPositive[key];
    }
  });
});

var _isPrimitive = require("./is-primitive");

Object.keys(_isPrimitive).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isPrimitive[key];
    }
  });
});

var _isPromise = require("./is-promise");

Object.keys(_isPromise).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isPromise[key];
    }
  });
});

var _isPromiselike = require("./is-promiselike");

Object.keys(_isPromiselike).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isPromiselike[key];
    }
  });
});

var _isRegexp = require("./is-regexp");

Object.keys(_isRegexp).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isRegexp[key];
    }
  });
});

var _isSafari = require("./is-safari");

Object.keys(_isSafari).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isSafari[key];
    }
  });
});

var _isSet = require("./is-set");

Object.keys(_isSet).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isSet[key];
    }
  });
});

var _isString = require("./is-string");

Object.keys(_isString).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isString[key];
    }
  });
});

var _isSymbol = require("./is-symbol");

Object.keys(_isSymbol).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isSymbol[key];
    }
  });
});

var _isTransferable = require("./is-transferable");

Object.keys(_isTransferable).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isTransferable[key];
    }
  });
});

var _isTrue = require("./is-true");

Object.keys(_isTrue).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isTrue[key];
    }
  });
});

var _isTypedarray = require("./is-typedarray");

Object.keys(_isTypedarray).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isTypedarray[key];
    }
  });
});

var _isUint = require("./is-uint32");

Object.keys(_isUint).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isUint[key];
    }
  });
});

var _isUndefined = require("./is-undefined");

Object.keys(_isUndefined).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isUndefined[key];
    }
  });
});

var _isUuid = require("./is-uuid");

Object.keys(_isUuid).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isUuid[key];
    }
  });
});

var _isUuid2 = require("./is-uuid4");

Object.keys(_isUuid2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isUuid2[key];
    }
  });
});

var _isZero = require("./is-zero");

Object.keys(_isZero).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isZero[key];
    }
  });
});
},{"./exists-not-null":"../node_modules/@thi.ng/checks/exists-not-null.js","./exists":"../node_modules/@thi.ng/checks/exists.js","./has-bigint":"../node_modules/@thi.ng/checks/has-bigint.js","./has-crypto":"../node_modules/@thi.ng/checks/has-crypto.js","./has-max-length":"../node_modules/@thi.ng/checks/has-max-length.js","./has-min-length":"../node_modules/@thi.ng/checks/has-min-length.js","./has-performance":"../node_modules/@thi.ng/checks/has-performance.js","./has-wasm":"../node_modules/@thi.ng/checks/has-wasm.js","./has-webgl":"../node_modules/@thi.ng/checks/has-webgl.js","./has-websocket":"../node_modules/@thi.ng/checks/has-websocket.js","./implements-function":"../node_modules/@thi.ng/checks/implements-function.js","./is-alphanum":"../node_modules/@thi.ng/checks/is-alphanum.js","./is-array":"../node_modules/@thi.ng/checks/is-array.js","./is-arraylike":"../node_modules/@thi.ng/checks/is-arraylike.js","./is-ascii":"../node_modules/@thi.ng/checks/is-ascii.js","./is-async-iterable":"../node_modules/@thi.ng/checks/is-async-iterable.js","./is-blob":"../node_modules/@thi.ng/checks/is-blob.js","./is-boolean":"../node_modules/@thi.ng/checks/is-boolean.js","./is-chrome":"../node_modules/@thi.ng/checks/is-chrome.js","./is-data-url":"../node_modules/@thi.ng/checks/is-data-url.js","./is-date":"../node_modules/@thi.ng/checks/is-date.js","./is-even":"../node_modules/@thi.ng/checks/is-even.js","./is-false":"../node_modules/@thi.ng/checks/is-false.js","./is-file":"../node_modules/@thi.ng/checks/is-file.js","./is-firefox":"../node_modules/@thi.ng/checks/is-firefox.js","./is-float-string":"../node_modules/@thi.ng/checks/is-float-string.js","./is-function":"../node_modules/@thi.ng/checks/is-function.js","./is-hex":"../node_modules/@thi.ng/checks/is-hex.js","./is-hex-color":"../node_modules/@thi.ng/checks/is-hex-color.js","./is-ie":"../node_modules/@thi.ng/checks/is-ie.js","./is-in-range":"../node_modules/@thi.ng/checks/is-in-range.js","./is-int32":"../node_modules/@thi.ng/checks/is-int32.js","./is-int-string":"../node_modules/@thi.ng/checks/is-int-string.js","./is-iterable":"../node_modules/@thi.ng/checks/is-iterable.js","./is-map":"../node_modules/@thi.ng/checks/is-map.js","./is-mobile":"../node_modules/@thi.ng/checks/is-mobile.js","./is-nan":"../node_modules/@thi.ng/checks/is-nan.js","./is-negative":"../node_modules/@thi.ng/checks/is-negative.js","./is-nil":"../node_modules/@thi.ng/checks/is-nil.js","./is-node":"../node_modules/@thi.ng/checks/is-node.js","./is-not-string-iterable":"../node_modules/@thi.ng/checks/is-not-string-iterable.js","./is-null":"../node_modules/@thi.ng/checks/is-null.js","./is-number":"../node_modules/@thi.ng/checks/is-number.js","./is-object":"../node_modules/@thi.ng/checks/is-object.js","./is-odd":"../node_modules/@thi.ng/checks/is-odd.js","./is-plain-object":"../node_modules/@thi.ng/checks/is-plain-object.js","./is-positive":"../node_modules/@thi.ng/checks/is-positive.js","./is-primitive":"../node_modules/@thi.ng/checks/is-primitive.js","./is-promise":"../node_modules/@thi.ng/checks/is-promise.js","./is-promiselike":"../node_modules/@thi.ng/checks/is-promiselike.js","./is-regexp":"../node_modules/@thi.ng/checks/is-regexp.js","./is-safari":"../node_modules/@thi.ng/checks/is-safari.js","./is-set":"../node_modules/@thi.ng/checks/is-set.js","./is-string":"../node_modules/@thi.ng/checks/is-string.js","./is-symbol":"../node_modules/@thi.ng/checks/is-symbol.js","./is-transferable":"../node_modules/@thi.ng/checks/is-transferable.js","./is-true":"../node_modules/@thi.ng/checks/is-true.js","./is-typedarray":"../node_modules/@thi.ng/checks/is-typedarray.js","./is-uint32":"../node_modules/@thi.ng/checks/is-uint32.js","./is-undefined":"../node_modules/@thi.ng/checks/is-undefined.js","./is-uuid":"../node_modules/@thi.ng/checks/is-uuid.js","./is-uuid4":"../node_modules/@thi.ng/checks/is-uuid4.js","./is-zero":"../node_modules/@thi.ng/checks/is-zero.js"}],"../node_modules/@thi.ng/geom-api/accel.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/geom-api/convex.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Convexity = void 0;

/**
 * Polygon convexity classifier.
 */
var Convexity;
exports.Convexity = Convexity;

(function (Convexity) {
  Convexity[Convexity["ILLEGAL"] = -1] = "ILLEGAL";
  Convexity[Convexity["COLINEAR"] = 0] = "COLINEAR";
  Convexity[Convexity["CONVEX"] = 1] = "CONVEX";
  Convexity[Convexity["CONCAVE"] = 2] = "CONCAVE";
})(Convexity || (exports.Convexity = Convexity = {}));
},{}],"../node_modules/@thi.ng/geom-api/cubic.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/geom-api/isec.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IntersectionType = void 0;
var IntersectionType;
exports.IntersectionType = IntersectionType;

(function (IntersectionType) {
  IntersectionType[IntersectionType["NONE"] = 0] = "NONE";
  IntersectionType[IntersectionType["PARALLEL"] = 1] = "PARALLEL";
  IntersectionType[IntersectionType["COINCIDENT"] = 2] = "COINCIDENT";
  IntersectionType[IntersectionType["COINCIDENT_NO_INTERSECT"] = 3] = "COINCIDENT_NO_INTERSECT";
  IntersectionType[IntersectionType["INTERSECT"] = 4] = "INTERSECT";
  IntersectionType[IntersectionType["INTERSECT_OUTSIDE"] = 5] = "INTERSECT_OUTSIDE";
})(IntersectionType || (exports.IntersectionType = IntersectionType = {}));
},{}],"../node_modules/@thi.ng/geom-api/path.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SegmentType = void 0;
var SegmentType;
exports.SegmentType = SegmentType;

(function (SegmentType) {
  SegmentType[SegmentType["MOVE"] = 0] = "MOVE";
  SegmentType[SegmentType["LINE"] = 1] = "LINE";
  SegmentType[SegmentType["POLYLINE"] = 2] = "POLYLINE";
  SegmentType[SegmentType["ARC"] = 3] = "ARC";
  SegmentType[SegmentType["CUBIC"] = 4] = "CUBIC";
  SegmentType[SegmentType["QUADRATIC"] = 5] = "QUADRATIC";
  SegmentType[SegmentType["CLOSE"] = 6] = "CLOSE";
})(SegmentType || (exports.SegmentType = SegmentType = {}));
},{}],"../node_modules/@thi.ng/geom-api/sample.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setDefaultSamples = exports.DEFAULT_SAMPLES = void 0;
let DEFAULT_SAMPLES = 20;
exports.DEFAULT_SAMPLES = DEFAULT_SAMPLES;

const setDefaultSamples = n => exports.DEFAULT_SAMPLES = DEFAULT_SAMPLES = n;

exports.setDefaultSamples = setDefaultSamples;
},{}],"../node_modules/@thi.ng/geom-api/shape.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Type = void 0;
var Type;
exports.Type = Type;

(function (Type) {
  Type[Type["AABB"] = 1] = "AABB";
  Type[Type["ARC"] = 2] = "ARC";
  Type[Type["CIRCLE"] = 3] = "CIRCLE";
  Type[Type["CONE"] = 4] = "CONE";
  Type[Type["CUBIC"] = 5] = "CUBIC";
  Type[Type["CUBIC3"] = 6] = "CUBIC3";
  Type[Type["CYLINDER"] = 7] = "CYLINDER";
  Type[Type["ELLIPSE"] = 8] = "ELLIPSE";
  Type[Type["GROUP"] = 9] = "GROUP";
  Type[Type["LINE"] = 10] = "LINE";
  Type[Type["LINE3"] = 11] = "LINE3";
  Type[Type["PATH"] = 12] = "PATH";
  Type[Type["PLANE"] = 13] = "PLANE";
  Type[Type["POINTS"] = 14] = "POINTS";
  Type[Type["POINTS3"] = 15] = "POINTS3";
  Type[Type["POLYGON"] = 16] = "POLYGON";
  Type[Type["POLYGON3"] = 17] = "POLYGON3";
  Type[Type["POLYLINE"] = 18] = "POLYLINE";
  Type[Type["POLYLINE3"] = 19] = "POLYLINE3";
  Type[Type["QUAD"] = 20] = "QUAD";
  Type[Type["QUAD3"] = 21] = "QUAD3";
  Type[Type["QUADRATIC"] = 22] = "QUADRATIC";
  Type[Type["QUADRATIC3"] = 23] = "QUADRATIC3";
  Type[Type["RECT"] = 24] = "RECT";
  Type[Type["SPHERE"] = 25] = "SPHERE";
  Type[Type["TRIANGLE"] = 26] = "TRIANGLE";
  Type[Type["TRIANGLE3"] = 27] = "TRIANGLE3";
  Type[Type["RAY"] = 28] = "RAY";
  Type[Type["RAY3"] = 29] = "RAY3";
  Type[Type["TEXT"] = 30] = "TEXT";
  Type[Type["TEXT3"] = 31] = "TEXT3";
})(Type || (exports.Type = Type = {}));
},{}],"../node_modules/@thi.ng/geom-api/subdiv.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/geom-api/tessel.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/geom-api/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _accel = require("./accel");

Object.keys(_accel).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _accel[key];
    }
  });
});

var _convex = require("./convex");

Object.keys(_convex).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _convex[key];
    }
  });
});

var _cubic = require("./cubic");

Object.keys(_cubic).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _cubic[key];
    }
  });
});

var _isec = require("./isec");

Object.keys(_isec).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isec[key];
    }
  });
});

var _path = require("./path");

Object.keys(_path).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _path[key];
    }
  });
});

var _sample = require("./sample");

Object.keys(_sample).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _sample[key];
    }
  });
});

var _shape = require("./shape");

Object.keys(_shape).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _shape[key];
    }
  });
});

var _subdiv = require("./subdiv");

Object.keys(_subdiv).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _subdiv[key];
    }
  });
});

var _tessel = require("./tessel");

Object.keys(_tessel).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _tessel[key];
    }
  });
});
},{"./accel":"../node_modules/@thi.ng/geom-api/accel.js","./convex":"../node_modules/@thi.ng/geom-api/convex.js","./cubic":"../node_modules/@thi.ng/geom-api/cubic.js","./isec":"../node_modules/@thi.ng/geom-api/isec.js","./path":"../node_modules/@thi.ng/geom-api/path.js","./sample":"../node_modules/@thi.ng/geom-api/sample.js","./shape":"../node_modules/@thi.ng/geom-api/shape.js","./subdiv":"../node_modules/@thi.ng/geom-api/subdiv.js","./tessel":"../node_modules/@thi.ng/geom-api/tessel.js"}],"../node_modules/@thi.ng/vectors/api.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.W4 = exports.Z4 = exports.Y4 = exports.X4 = exports.ZERO4 = exports.ONE4 = exports.MAX4 = exports.MIN4 = exports.Z3 = exports.Y3 = exports.X3 = exports.ZERO3 = exports.ONE3 = exports.MAX3 = exports.MIN3 = exports.Y2 = exports.X2 = exports.ZERO2 = exports.ONE2 = exports.MAX2 = exports.MIN2 = void 0;
const mi = -Infinity;
const mx = Infinity;
const MIN2 = Object.freeze([mi, mi]);
exports.MIN2 = MIN2;
const MAX2 = Object.freeze([mx, mx]);
exports.MAX2 = MAX2;
const ONE2 = Object.freeze([1, 1]);
exports.ONE2 = ONE2;
const ZERO2 = Object.freeze([0, 0]);
exports.ZERO2 = ZERO2;
const X2 = Object.freeze([1, 0]);
exports.X2 = X2;
const Y2 = Object.freeze([0, 1]);
exports.Y2 = Y2;
const MIN3 = Object.freeze([mi, mi, mi]);
exports.MIN3 = MIN3;
const MAX3 = Object.freeze([mx, mx, mx]);
exports.MAX3 = MAX3;
const ONE3 = Object.freeze([1, 1, 1]);
exports.ONE3 = ONE3;
const ZERO3 = Object.freeze([0, 0, 0]);
exports.ZERO3 = ZERO3;
const X3 = Object.freeze([1, 0, 0]);
exports.X3 = X3;
const Y3 = Object.freeze([0, 1, 0]);
exports.Y3 = Y3;
const Z3 = Object.freeze([0, 0, 1]);
exports.Z3 = Z3;
const MIN4 = Object.freeze([mi, mi, mi, mi]);
exports.MIN4 = MIN4;
const MAX4 = Object.freeze([mx, mx, mx, mx]);
exports.MAX4 = MAX4;
const ONE4 = Object.freeze([1, 1, 1, 1]);
exports.ONE4 = ONE4;
const ZERO4 = Object.freeze([0, 0, 0, 0]);
exports.ZERO4 = ZERO4;
const X4 = Object.freeze([1, 0, 0, 0]);
exports.X4 = X4;
const Y4 = Object.freeze([0, 1, 0, 0]);
exports.Y4 = Y4;
const Z4 = Object.freeze([0, 0, 1, 0]);
exports.Z4 = Z4;
const W4 = Object.freeze([0, 0, 0, 1]);
exports.W4 = W4;
},{}],"../node_modules/@thi.ng/vectors/internal/accessors.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.declareIndices = exports.declareIndex = void 0;

/** @internal */
const declareIndex = (proto, id, idx, strided = true, defNumeric = true) => {
  const get = idx > 0 ? strided ? function () {
    return this.buf[this.offset + idx * this.stride];
  } : function () {
    return this.buf[this.offset + idx];
  } : function () {
    return this.buf[this.offset];
  };
  const set = idx > 0 ? strided ? function (n) {
    this.buf[this.offset + idx * this.stride] = n;
  } : function (n) {
    this.buf[this.offset + idx] = n;
  } : function (n) {
    this.buf[this.offset] = n;
  };
  defNumeric && Object.defineProperty(proto, idx, {
    get,
    set,
    enumerable: true
  });
  Object.defineProperty(proto, id, {
    get,
    set,
    enumerable: true
  });
};
/** @internal */


exports.declareIndex = declareIndex;

const declareIndices = (proto, props, strided, defNumeric) => props.forEach((id, i) => declareIndex(proto, id, i, strided, defNumeric));

exports.declareIndices = declareIndices;
},{}],"../node_modules/@thi.ng/vectors/internal/avec.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AVec = void 0;

class AVec {
  constructor(buf, offset = 0, stride = 1) {
    this.buf = buf;
    this.offset = offset;
    this.stride = stride;
  }

}

exports.AVec = AVec;
},{}],"../node_modules/@thi.ng/transducers/api.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/api/assoc.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/api/bind.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/api/buffered.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/api/clear.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/api/compare.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/api/contains.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/api/copy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/api/deref.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.deref = exports.isDeref = void 0;

/**
 * Returns true iff `x` implements {@link IDeref}.
 *
 * @param x
 */
const isDeref = x => x != null && typeof x["deref"] === "function";
/**
 * If `x` implements {@link IDeref}, returns its wrapped value, else
 * returns `x` itself.
 *
 * @param x -
 */


exports.isDeref = isDeref;

const deref = x => isDeref(x) ? x.deref() : x;

exports.deref = deref;
},{}],"../node_modules/@thi.ng/api/api/dissoc.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/api/empty.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/api/enable.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/api/equiv.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/api/event.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/api/fn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/api/get.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/api/hash.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/api/hiccup.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/api/id.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/api/indexed.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/api/into.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/api/keyval.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/api/length.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/api/logger.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LogLevel = void 0;
var LogLevel;
exports.LogLevel = LogLevel;

(function (LogLevel) {
  LogLevel[LogLevel["FINE"] = 0] = "FINE";
  LogLevel[LogLevel["DEBUG"] = 1] = "DEBUG";
  LogLevel[LogLevel["INFO"] = 2] = "INFO";
  LogLevel[LogLevel["WARN"] = 3] = "WARN";
  LogLevel[LogLevel["SEVERE"] = 4] = "SEVERE";
  LogLevel[LogLevel["NONE"] = 5] = "NONE";
})(LogLevel || (exports.LogLevel = LogLevel = {}));
},{}],"../node_modules/@thi.ng/api/api/meta.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/api/null.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/api/object.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/api/path.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/api/predicate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/api/prim.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/api/range.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/api/release.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/api/reset.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/api/select.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/api/seq.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/api/set.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/api/stack.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/api/tuple.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/api/typedarray.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.typedArray = typedArray;
exports.intType = exports.uintType = exports.TYPEDARRAY_CTORS = exports.SIZEOF = exports.TYPE2GL = exports.GL2TYPE = exports.GLType = exports.Type = void 0;

/**
 * Type enums for Typedarray-backed buffers.
 *
 * {@link GLType}
 * {@link GL2TYPE}
 * {@link TYPE2GL}
 */
var Type;
exports.Type = Type;

(function (Type) {
  Type[Type["U8"] = 0] = "U8";
  Type[Type["U8C"] = 1] = "U8C";
  Type[Type["I8"] = 2] = "I8";
  Type[Type["U16"] = 3] = "U16";
  Type[Type["I16"] = 4] = "I16";
  Type[Type["U32"] = 5] = "U32";
  Type[Type["I32"] = 6] = "I32";
  Type[Type["F32"] = 7] = "F32";
  Type[Type["F64"] = 8] = "F64";
})(Type || (exports.Type = Type = {}));
/**
 * WebGL numeric type constants. Use {@link GL2TYPE} to convert, if needed.
 *
 * {@link Type}
 * {@link GL2TYPE}
 * {@link TYPE2GL}
 */


var GLType;
exports.GLType = GLType;

(function (GLType) {
  GLType[GLType["I8"] = 5120] = "I8";
  GLType[GLType["U8"] = 5121] = "U8";
  GLType[GLType["I16"] = 5122] = "I16";
  GLType[GLType["U16"] = 5123] = "U16";
  GLType[GLType["I32"] = 5124] = "I32";
  GLType[GLType["U32"] = 5125] = "U32";
  GLType[GLType["F32"] = 5126] = "F32";
})(GLType || (exports.GLType = GLType = {}));
/**
 * Conversion from {@link GLType} to {@link Type} enums.
 */


const GL2TYPE = {
  [GLType.I8]: Type.I8,
  [GLType.U8]: Type.U8,
  [GLType.I16]: Type.I16,
  [GLType.U16]: Type.U16,
  [GLType.I32]: Type.I32,
  [GLType.U32]: Type.U32,
  [GLType.F32]: Type.F32
};
/**
 * Potentially lossy conversion from {@link Type} to {@link GLType} enums.
 *
 * Not all enums are mappable:
 *
 * - `F64` maps to `undefined`, since unsupported by WebGL
 * - `U8C` maps to U8
 */

exports.GL2TYPE = GL2TYPE;
const TYPE2GL = {
  [Type.I8]: GLType.I8,
  [Type.U8]: GLType.U8,
  [Type.U8C]: GLType.U8,
  [Type.I16]: GLType.I16,
  [Type.U16]: GLType.U16,
  [Type.I32]: GLType.I32,
  [Type.I32]: GLType.I32,
  [Type.U32]: GLType.U32,
  [Type.F32]: GLType.F32,
  [Type.F64]: undefined
};
/**
 * Size information (in bytes) for {@link Type} enums. For {@link GLType}, use this
 * form, e.g. `SIZEOF[GL2TYPE[GLType.F32]]`
 */

exports.TYPE2GL = TYPE2GL;
const SIZEOF = {
  [Type.U8]: 1,
  [Type.U8C]: 1,
  [Type.I8]: 1,
  [Type.U16]: 2,
  [Type.I16]: 2,
  [Type.U32]: 4,
  [Type.I32]: 4,
  [Type.F32]: 4,
  [Type.F64]: 8
};
exports.SIZEOF = SIZEOF;
const TYPEDARRAY_CTORS = {
  [Type.U8]: Uint8Array,
  [Type.U8C]: Uint8ClampedArray,
  [Type.I8]: Int8Array,
  [Type.U16]: Uint16Array,
  [Type.I16]: Int16Array,
  [Type.U32]: Uint32Array,
  [Type.I32]: Int32Array,
  [Type.F32]: Float32Array,
  [Type.F64]: Float64Array,
  [GLType.U8]: Uint8Array,
  [GLType.I8]: Int8Array,
  [GLType.U16]: Uint16Array,
  [GLType.I16]: Int16Array,
  [GLType.U32]: Uint32Array,
  [GLType.I32]: Int32Array,
  [GLType.F32]: Float32Array
};
exports.TYPEDARRAY_CTORS = TYPEDARRAY_CTORS;

function typedArray(type, ...xs) {
  return new TYPEDARRAY_CTORS[type](...xs);
}
/**
 * Returns the smallest possible *unsigned* int type enum for given `x`.
 * E.g. if `x <= 256`, the function returns `Type.U8`.
 *
 * @param x - value to classify
 */


const uintType = x => x <= 0x100 ? Type.U8 : x <= 0x10000 ? Type.U16 : Type.U32;
/**
 * Returns the smallest possible *signed* int type enum for given `x`.
 * E.g. if `x >= -128 && x < 128`, the function returns `Type.I8`.
 *
 * @param x - value to classify
 */


exports.uintType = uintType;

const intType = x => x >= -0x80 && x < 0x80 ? Type.I8 : x >= -0x8000 && x < 0x8000 ? Type.I16 : Type.I32;

exports.intType = intType;
},{}],"../node_modules/@thi.ng/api/api/watch.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/api/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EVENT_DISABLE = exports.EVENT_ENABLE = exports.EVENT_ALL = exports.NO_OP = exports.SEMAPHORE = exports.DEFAULT_EPS = void 0;
const DEFAULT_EPS = 1e-6;
/**
 * Internal use only. **Do NOT use in user land code!**
 *
 * @internal
 */

exports.DEFAULT_EPS = DEFAULT_EPS;
const SEMAPHORE = Symbol();
/**
 * No-effect placeholder function.
 */

exports.SEMAPHORE = SEMAPHORE;

const NO_OP = () => {};
/**
 * Catch-all event ID
 */


exports.NO_OP = NO_OP;
const EVENT_ALL = "*";
exports.EVENT_ALL = EVENT_ALL;
const EVENT_ENABLE = "enable";
exports.EVENT_ENABLE = EVENT_ENABLE;
const EVENT_DISABLE = "disable";
exports.EVENT_DISABLE = EVENT_DISABLE;
},{}],"../node_modules/@thi.ng/api/assert.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.assert = void 0;

var _constants = require("./constants");

/**
 * Takes a `test` result or predicate function without args and throws
 * error with given `msg` if test failed (i.e. is falsy).
 *
 * @remarks
 * The function is only enabled if `process.env.NODE_ENV != "production"`
 * or if the `UMBRELLA_ASSERTS` env var is set to 1.
 */
const assert = (() => {
  try {
    return "development" !== "production" || undefined === "1";
  } catch (e) {}

  return false;
})() ? (test, msg = "assertion failed") => {
  if (typeof test === "function" && !test() || !test) {
    throw new Error(typeof msg === "function" ? msg() : msg);
  }
} : _constants.NO_OP;
exports.assert = assert;
},{"./constants":"../node_modules/@thi.ng/api/constants.js"}],"../node_modules/@thi.ng/api/expose.js":[function(require,module,exports) {
var global = arguments[3];
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.exposeGlobal = void 0;

/**
 * Exposes given `value` as `id` in global scope, iff `always = true`
 * (default: false) or if `process.env.NODE_ENV != "production"` or if the
 * `UMBRELLA_GLOBALS` env var is set to 1.
 *
 * @param id -
 * @param value -
 * @param always -
 */
const exposeGlobal = (id, value, always = false) => {
  const glob = typeof global !== "undefined" ? global : typeof window !== "undefined" ? window : undefined;

  if (glob && (always || (() => {
    try {
      return "development" !== "production" || undefined === "1";
    } catch (e) {}

    return false;
  })())) {
    glob[id] = value;
  }
};

exports.exposeGlobal = exposeGlobal;
},{}],"../node_modules/@thi.ng/api/logger.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ConsoleLogger = exports.NULL_LOGGER = void 0;

var _logger = require("./api/logger");

const NULL_LOGGER = Object.freeze({
  level: _logger.LogLevel.NONE,

  fine() {},

  debug() {},

  info() {},

  warn() {},

  severe() {}

});
exports.NULL_LOGGER = NULL_LOGGER;

class ConsoleLogger {
  constructor(id, level = _logger.LogLevel.FINE) {
    this.id = id;
    this.level = level;
  }

  fine(...args) {
    this.level <= _logger.LogLevel.FINE && this.log("FINE", args);
  }

  debug(...args) {
    this.level <= _logger.LogLevel.DEBUG && this.log("DEBUG", args);
  }

  info(...args) {
    this.level <= _logger.LogLevel.INFO && this.log("INFO", args);
  }

  warn(...args) {
    this.level <= _logger.LogLevel.WARN && this.log("WARN", args);
  }

  severe(...args) {
    this.level <= _logger.LogLevel.SEVERE && this.log("SEVERE", args);
  }

  log(level, args) {
    console.log(`[${level}] ${this.id}:`, ...args);
  }

}

exports.ConsoleLogger = ConsoleLogger;
},{"./api/logger":"../node_modules/@thi.ng/api/api/logger.js"}],"../node_modules/@thi.ng/api/mixin.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mixin = void 0;

/**
 * Class behavior mixin based on:
 * {@link http://raganwald.com/2015/06/26/decorators-in-es7.html}
 *
 * Additionally only injects/overwrites properties in target, which are
 * NOT marked with `@nomixin` (i.e. haven't set their `configurable`
 * property descriptor flag to `false`)
 *
 * @param behaviour - to mixin
 * @param sharedBehaviour -
 * @returns decorator function
 */
const mixin = (behaviour, sharedBehaviour = {}) => {
  const instanceKeys = Reflect.ownKeys(behaviour);
  const sharedKeys = Reflect.ownKeys(sharedBehaviour);
  const typeTag = Symbol("isa");

  function _mixin(clazz) {
    for (let key of instanceKeys) {
      const existing = Object.getOwnPropertyDescriptor(clazz.prototype, key);

      if (!existing || existing.configurable) {
        Object.defineProperty(clazz.prototype, key, {
          value: behaviour[key],
          writable: true
        });
      } else {
        console.log(`not patching: ${clazz.name}.${key.toString()}`);
      }
    }

    Object.defineProperty(clazz.prototype, typeTag, {
      value: true
    });
    return clazz;
  }

  for (let key of sharedKeys) {
    Object.defineProperty(_mixin, key, {
      value: sharedBehaviour[key],
      enumerable: sharedBehaviour.propertyIsEnumerable(key)
    });
  }

  Object.defineProperty(_mixin, Symbol.hasInstance, {
    value: x => !!x[typeTag]
  });
  return _mixin;
};

exports.mixin = mixin;
},{}],"../node_modules/@thi.ng/api/decorators/configurable.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.configurable = void 0;

/**
 * Property decorator factory. Sets `configurable` flag of PropertyDescriptor
 * to given state.
 *
 * @param state - true, if propoerty is configurable
 */
const configurable = state => function (_, __, descriptor) {
  descriptor.configurable = state;
};

exports.configurable = configurable;
},{}],"../node_modules/@thi.ng/api/decorators/deprecated.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.deprecated = void 0;

var _assert = require("../assert");

/**
 * Method property decorator factory. Augments original method with
 * deprecation message (via console), shown when method is invoked.
 * Accepts optional message arg. Throws error if assigned property
 * is not a function.
 *
 * @param msg - deprecation message
 */
const deprecated = (msg, log = console.log) => function (target, prop, descriptor) {
  const signature = `${target.constructor.name}#${prop.toString()}`;
  const fn = descriptor.value;
  (0, _assert.assert)(typeof fn === "function", `${signature} is not a function`);

  descriptor.value = function () {
    log(`DEPRECATED ${signature}: ${msg || "will be removed soon"}`);
    return fn.apply(this, arguments);
  };

  return descriptor;
};

exports.deprecated = deprecated;
},{"../assert":"../node_modules/@thi.ng/api/assert.js"}],"../node_modules/@thi.ng/api/decorators/nomixin.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.nomixin = void 0;

/**
 * Method property decorator. Sets `configurable` flag of
 * PropertyDescriptor to `false` (same as `@configurable(false)`).
 * Intended to be used in combination with mixin decorators to enable
 * partial implementations of mixed-in behaviors in target class and
 * avoid them being overidden by mixed-in behaviour.
 */
const nomixin = (_, __, descriptor) => {
  descriptor.configurable = false;
};

exports.nomixin = nomixin;
},{}],"../node_modules/@thi.ng/api/decorators/sealed.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sealed = void 0;

/**
 * Class decorator. Seals both constructor and prototype.
 *
 * @param constructor - class ctor to seal
 */
const sealed = constructor => {
  Object.seal(constructor);
  Object.seal(constructor.prototype);
};

exports.sealed = sealed;
},{}],"../node_modules/@thi.ng/api/mixins/ienable.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IEnableMixin = void 0;

var _constants = require("../constants");

var _mixin = require("../mixin");

/**
 * Mixin class decorator, injects IEnable default implementation, incl.
 * a `_enabled` property. If the target also implements the
 * {@link @thi.ng/api#INotify} interface, {@link IEnable.enable} and
 * {@link IEnable.disable} will automatically emit the respective
 * events.
 */
const IEnableMixin = (0, _mixin.mixin)({
  _enabled: true,

  isEnabled() {
    return this._enabled;
  },

  enable() {
    this._enabled = true;

    if (this.notify) {
      this.notify({
        id: _constants.EVENT_ENABLE,
        target: this
      });
    }
  },

  disable() {
    this._enabled = false;

    if (this.notify) {
      this.notify({
        id: _constants.EVENT_DISABLE,
        target: this
      });
    }
  },

  toggle() {
    this._enabled ? this.disable() : this.enable();
    return this._enabled;
  }

});
exports.IEnableMixin = IEnableMixin;
},{"../constants":"../node_modules/@thi.ng/api/constants.js","../mixin":"../node_modules/@thi.ng/api/mixin.js"}],"../node_modules/@thi.ng/api/mixins/inotify.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.INotifyMixin = exports.inotify_dispatch = void 0;

var _constants = require("../constants");

var _mixin = require("../mixin");

const inotify_dispatch = (listeners, e) => {
  if (!listeners) return;

  for (let i = 0, n = listeners.length, l; i < n; i++) {
    l = listeners[i];
    l[0].call(l[1], e);

    if (e.canceled) {
      return;
    }
  }
};
/**
 * Mixin class decorator, injects INotify default implementation, incl.
 * a lazily instantiated `_listeners` property object, storing
 * registered listeners.
 */


exports.inotify_dispatch = inotify_dispatch;
const INotifyMixin = (0, _mixin.mixin)({
  addListener(id, fn, scope) {
    let l = (this._listeners = this._listeners || {})[id];
    !l && (l = this._listeners[id] = []);

    if (this.__listener(l, fn, scope) === -1) {
      l.push([fn, scope]);
      return true;
    }

    return false;
  },

  removeListener(id, fn, scope) {
    let listeners;
    if (!(listeners = this._listeners)) return false;
    const l = listeners[id];

    if (l) {
      const idx = this.__listener(l, fn, scope);

      if (idx !== -1) {
        l.splice(idx, 1);
        !l.length && delete listeners[id];
        return true;
      }
    }

    return false;
  },

  notify(e) {
    let listeners;
    if (!(listeners = this._listeners)) return false;
    e.target === undefined && (e.target = this);
    inotify_dispatch(listeners[e.id], e);
    inotify_dispatch(listeners[_constants.EVENT_ALL], e);
  },

  __listener(listeners, f, scope) {
    let i = listeners.length;

    while (--i >= 0) {
      const l = listeners[i];

      if (l[0] === f && l[1] === scope) {
        break;
      }
    }

    return i;
  }

});
exports.INotifyMixin = INotifyMixin;
},{"../constants":"../node_modules/@thi.ng/api/constants.js","../mixin":"../node_modules/@thi.ng/api/mixin.js"}],"../node_modules/@thi.ng/api/mixins/iterable.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.iterable = void 0;

var _mixin = require("../mixin");

const iterable = prop => (0, _mixin.mixin)({
  *[Symbol.iterator]() {
    yield* this[prop];
  }

});

exports.iterable = iterable;
},{"../mixin":"../node_modules/@thi.ng/api/mixin.js"}],"../node_modules/@thi.ng/api/mixins/iwatch.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IWatchMixin = void 0;

var _mixin = require("../mixin");

const IWatchMixin = (0, _mixin.mixin)({
  addWatch(id, fn) {
    this._watches = this._watches || {};

    if (this._watches[id]) {
      return false;
    }

    this._watches[id] = fn;
    return true;
  },

  removeWatch(id) {
    if (!this._watches) return;

    if (this._watches[id]) {
      delete this._watches[id];
      return true;
    }

    return false;
  },

  notifyWatches(oldState, newState) {
    if (!this._watches) return;
    const w = this._watches;

    for (let id in w) {
      w[id](id, oldState, newState);
    }
  }

});
exports.IWatchMixin = IWatchMixin;
},{"../mixin":"../node_modules/@thi.ng/api/mixin.js"}],"../node_modules/@thi.ng/api/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _assoc = require("./api/assoc");

Object.keys(_assoc).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _assoc[key];
    }
  });
});

var _bind = require("./api/bind");

Object.keys(_bind).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _bind[key];
    }
  });
});

var _buffered = require("./api/buffered");

Object.keys(_buffered).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _buffered[key];
    }
  });
});

var _clear = require("./api/clear");

Object.keys(_clear).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _clear[key];
    }
  });
});

var _compare = require("./api/compare");

Object.keys(_compare).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _compare[key];
    }
  });
});

var _contains = require("./api/contains");

Object.keys(_contains).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _contains[key];
    }
  });
});

var _copy = require("./api/copy");

Object.keys(_copy).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _copy[key];
    }
  });
});

var _deref = require("./api/deref");

Object.keys(_deref).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _deref[key];
    }
  });
});

var _dissoc = require("./api/dissoc");

Object.keys(_dissoc).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _dissoc[key];
    }
  });
});

var _empty = require("./api/empty");

Object.keys(_empty).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _empty[key];
    }
  });
});

var _enable = require("./api/enable");

Object.keys(_enable).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _enable[key];
    }
  });
});

var _equiv = require("./api/equiv");

Object.keys(_equiv).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _equiv[key];
    }
  });
});

var _event = require("./api/event");

Object.keys(_event).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _event[key];
    }
  });
});

var _fn = require("./api/fn");

Object.keys(_fn).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _fn[key];
    }
  });
});

var _get = require("./api/get");

Object.keys(_get).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _get[key];
    }
  });
});

var _hash = require("./api/hash");

Object.keys(_hash).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _hash[key];
    }
  });
});

var _hiccup = require("./api/hiccup");

Object.keys(_hiccup).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _hiccup[key];
    }
  });
});

var _id = require("./api/id");

Object.keys(_id).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _id[key];
    }
  });
});

var _indexed = require("./api/indexed");

Object.keys(_indexed).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _indexed[key];
    }
  });
});

var _into = require("./api/into");

Object.keys(_into).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _into[key];
    }
  });
});

var _keyval = require("./api/keyval");

Object.keys(_keyval).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _keyval[key];
    }
  });
});

var _length = require("./api/length");

Object.keys(_length).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _length[key];
    }
  });
});

var _logger = require("./api/logger");

Object.keys(_logger).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _logger[key];
    }
  });
});

var _meta = require("./api/meta");

Object.keys(_meta).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _meta[key];
    }
  });
});

var _null = require("./api/null");

Object.keys(_null).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _null[key];
    }
  });
});

var _object = require("./api/object");

Object.keys(_object).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _object[key];
    }
  });
});

var _path = require("./api/path");

Object.keys(_path).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _path[key];
    }
  });
});

var _predicate = require("./api/predicate");

Object.keys(_predicate).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _predicate[key];
    }
  });
});

var _prim = require("./api/prim");

Object.keys(_prim).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _prim[key];
    }
  });
});

var _range = require("./api/range");

Object.keys(_range).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _range[key];
    }
  });
});

var _release = require("./api/release");

Object.keys(_release).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _release[key];
    }
  });
});

var _reset = require("./api/reset");

Object.keys(_reset).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _reset[key];
    }
  });
});

var _select = require("./api/select");

Object.keys(_select).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _select[key];
    }
  });
});

var _seq = require("./api/seq");

Object.keys(_seq).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _seq[key];
    }
  });
});

var _set = require("./api/set");

Object.keys(_set).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _set[key];
    }
  });
});

var _stack = require("./api/stack");

Object.keys(_stack).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _stack[key];
    }
  });
});

var _tuple = require("./api/tuple");

Object.keys(_tuple).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _tuple[key];
    }
  });
});

var _typedarray = require("./api/typedarray");

Object.keys(_typedarray).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _typedarray[key];
    }
  });
});

var _watch = require("./api/watch");

Object.keys(_watch).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _watch[key];
    }
  });
});

var _assert = require("./assert");

Object.keys(_assert).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _assert[key];
    }
  });
});

var _constants = require("./constants");

Object.keys(_constants).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _constants[key];
    }
  });
});

var _expose = require("./expose");

Object.keys(_expose).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _expose[key];
    }
  });
});

var _logger2 = require("./logger");

Object.keys(_logger2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _logger2[key];
    }
  });
});

var _mixin = require("./mixin");

Object.keys(_mixin).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _mixin[key];
    }
  });
});

var _configurable = require("./decorators/configurable");

Object.keys(_configurable).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _configurable[key];
    }
  });
});

var _deprecated = require("./decorators/deprecated");

Object.keys(_deprecated).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _deprecated[key];
    }
  });
});

var _nomixin = require("./decorators/nomixin");

Object.keys(_nomixin).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _nomixin[key];
    }
  });
});

var _sealed = require("./decorators/sealed");

Object.keys(_sealed).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _sealed[key];
    }
  });
});

var _ienable = require("./mixins/ienable");

Object.keys(_ienable).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _ienable[key];
    }
  });
});

var _inotify = require("./mixins/inotify");

Object.keys(_inotify).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _inotify[key];
    }
  });
});

var _iterable = require("./mixins/iterable");

Object.keys(_iterable).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _iterable[key];
    }
  });
});

var _iwatch = require("./mixins/iwatch");

Object.keys(_iwatch).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _iwatch[key];
    }
  });
});
},{"./api/assoc":"../node_modules/@thi.ng/api/api/assoc.js","./api/bind":"../node_modules/@thi.ng/api/api/bind.js","./api/buffered":"../node_modules/@thi.ng/api/api/buffered.js","./api/clear":"../node_modules/@thi.ng/api/api/clear.js","./api/compare":"../node_modules/@thi.ng/api/api/compare.js","./api/contains":"../node_modules/@thi.ng/api/api/contains.js","./api/copy":"../node_modules/@thi.ng/api/api/copy.js","./api/deref":"../node_modules/@thi.ng/api/api/deref.js","./api/dissoc":"../node_modules/@thi.ng/api/api/dissoc.js","./api/empty":"../node_modules/@thi.ng/api/api/empty.js","./api/enable":"../node_modules/@thi.ng/api/api/enable.js","./api/equiv":"../node_modules/@thi.ng/api/api/equiv.js","./api/event":"../node_modules/@thi.ng/api/api/event.js","./api/fn":"../node_modules/@thi.ng/api/api/fn.js","./api/get":"../node_modules/@thi.ng/api/api/get.js","./api/hash":"../node_modules/@thi.ng/api/api/hash.js","./api/hiccup":"../node_modules/@thi.ng/api/api/hiccup.js","./api/id":"../node_modules/@thi.ng/api/api/id.js","./api/indexed":"../node_modules/@thi.ng/api/api/indexed.js","./api/into":"../node_modules/@thi.ng/api/api/into.js","./api/keyval":"../node_modules/@thi.ng/api/api/keyval.js","./api/length":"../node_modules/@thi.ng/api/api/length.js","./api/logger":"../node_modules/@thi.ng/api/api/logger.js","./api/meta":"../node_modules/@thi.ng/api/api/meta.js","./api/null":"../node_modules/@thi.ng/api/api/null.js","./api/object":"../node_modules/@thi.ng/api/api/object.js","./api/path":"../node_modules/@thi.ng/api/api/path.js","./api/predicate":"../node_modules/@thi.ng/api/api/predicate.js","./api/prim":"../node_modules/@thi.ng/api/api/prim.js","./api/range":"../node_modules/@thi.ng/api/api/range.js","./api/release":"../node_modules/@thi.ng/api/api/release.js","./api/reset":"../node_modules/@thi.ng/api/api/reset.js","./api/select":"../node_modules/@thi.ng/api/api/select.js","./api/seq":"../node_modules/@thi.ng/api/api/seq.js","./api/set":"../node_modules/@thi.ng/api/api/set.js","./api/stack":"../node_modules/@thi.ng/api/api/stack.js","./api/tuple":"../node_modules/@thi.ng/api/api/tuple.js","./api/typedarray":"../node_modules/@thi.ng/api/api/typedarray.js","./api/watch":"../node_modules/@thi.ng/api/api/watch.js","./assert":"../node_modules/@thi.ng/api/assert.js","./constants":"../node_modules/@thi.ng/api/constants.js","./expose":"../node_modules/@thi.ng/api/expose.js","./logger":"../node_modules/@thi.ng/api/logger.js","./mixin":"../node_modules/@thi.ng/api/mixin.js","./decorators/configurable":"../node_modules/@thi.ng/api/decorators/configurable.js","./decorators/deprecated":"../node_modules/@thi.ng/api/decorators/deprecated.js","./decorators/nomixin":"../node_modules/@thi.ng/api/decorators/nomixin.js","./decorators/sealed":"../node_modules/@thi.ng/api/decorators/sealed.js","./mixins/ienable":"../node_modules/@thi.ng/api/mixins/ienable.js","./mixins/inotify":"../node_modules/@thi.ng/api/mixins/inotify.js","./mixins/iterable":"../node_modules/@thi.ng/api/mixins/iterable.js","./mixins/iwatch":"../node_modules/@thi.ng/api/mixins/iwatch.js"}],"../node_modules/@thi.ng/transducers/internal/ensure.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ensureTransducer = void 0;

var _checks = require("@thi.ng/checks");

const ensureTransducer = x => (0, _checks.implementsFunction)(x, "xform") ? x.xform() : x;

exports.ensureTransducer = ensureTransducer;
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js"}],"../node_modules/@thi.ng/transducers/reduced.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.unreduced = exports.ensureReduced = exports.isReduced = exports.reduced = exports.Reduced = void 0;

class Reduced {
  constructor(val) {
    this.value = val;
  }

  deref() {
    return this.value;
  }

}

exports.Reduced = Reduced;

const reduced = x => new Reduced(x);

exports.reduced = reduced;

const isReduced = x => x instanceof Reduced;

exports.isReduced = isReduced;

const ensureReduced = x => x instanceof Reduced ? x : new Reduced(x);

exports.ensureReduced = ensureReduced;

const unreduced = x => x instanceof Reduced ? x.deref() : x;

exports.unreduced = unreduced;
},{}],"../node_modules/@thi.ng/errors/deferror.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defError = void 0;

const defError = (prefix, suffix = msg => msg !== undefined ? ": " + msg : "") => class extends Error {
  constructor(msg) {
    super(prefix(msg) + suffix(msg));
  }

};

exports.defError = defError;
},{}],"../node_modules/@thi.ng/errors/illegal-arguments.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.illegalArgs = exports.IllegalArgumentError = void 0;

var _deferror = require("./deferror");

const IllegalArgumentError = (0, _deferror.defError)(() => "illegal argument(s)");
exports.IllegalArgumentError = IllegalArgumentError;

const illegalArgs = msg => {
  throw new IllegalArgumentError(msg);
};

exports.illegalArgs = illegalArgs;
},{"./deferror":"../node_modules/@thi.ng/errors/deferror.js"}],"../node_modules/@thi.ng/errors/illegal-arity.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.illegalArity = exports.IllegalArityError = void 0;

var _deferror = require("./deferror");

const IllegalArityError = (0, _deferror.defError)(() => "illegal arity");
exports.IllegalArityError = IllegalArityError;

const illegalArity = n => {
  throw new IllegalArityError(n);
};

exports.illegalArity = illegalArity;
},{"./deferror":"../node_modules/@thi.ng/errors/deferror.js"}],"../node_modules/@thi.ng/errors/illegal-state.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.illegalState = exports.IllegalStateError = void 0;

var _deferror = require("./deferror");

const IllegalStateError = (0, _deferror.defError)(() => "illegal state");
exports.IllegalStateError = IllegalStateError;

const illegalState = msg => {
  throw new IllegalStateError(msg);
};

exports.illegalState = illegalState;
},{"./deferror":"../node_modules/@thi.ng/errors/deferror.js"}],"../node_modules/@thi.ng/errors/unsupported.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.unsupported = exports.UnsupportedOperationError = void 0;

var _deferror = require("./deferror");

const UnsupportedOperationError = (0, _deferror.defError)(() => "unsupported operation");
exports.UnsupportedOperationError = UnsupportedOperationError;

const unsupported = msg => {
  throw new UnsupportedOperationError(msg);
};

exports.unsupported = unsupported;
},{"./deferror":"../node_modules/@thi.ng/errors/deferror.js"}],"../node_modules/@thi.ng/errors/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _deferror = require("./deferror");

Object.keys(_deferror).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _deferror[key];
    }
  });
});

var _illegalArguments = require("./illegal-arguments");

Object.keys(_illegalArguments).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _illegalArguments[key];
    }
  });
});

var _illegalArity = require("./illegal-arity");

Object.keys(_illegalArity).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _illegalArity[key];
    }
  });
});

var _illegalState = require("./illegal-state");

Object.keys(_illegalState).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _illegalState[key];
    }
  });
});

var _unsupported = require("./unsupported");

Object.keys(_unsupported).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _unsupported[key];
    }
  });
});
},{"./deferror":"../node_modules/@thi.ng/errors/deferror.js","./illegal-arguments":"../node_modules/@thi.ng/errors/illegal-arguments.js","./illegal-arity":"../node_modules/@thi.ng/errors/illegal-arity.js","./illegal-state":"../node_modules/@thi.ng/errors/illegal-state.js","./unsupported":"../node_modules/@thi.ng/errors/unsupported.js"}],"../node_modules/@thi.ng/transducers/reduce.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.reduce = reduce;
exports.$$reduce = exports.reducer = void 0;

var _checks = require("@thi.ng/checks");

var _errors = require("@thi.ng/errors");

var _reduced = require("./reduced");

const parseArgs = args => args.length === 2 ? [undefined, args[1]] : args.length === 3 ? [args[1], args[2]] : (0, _errors.illegalArity)(args.length);

function reduce(...args) {
  const rfn = args[0];
  const init = rfn[0];
  const complete = rfn[1];
  const reduce = rfn[2];
  args = parseArgs(args);
  const acc = args[0] == null ? init() : args[0];
  const xs = args[1];
  return (0, _reduced.unreduced)(complete((0, _checks.implementsFunction)(xs, "$reduce") ? xs.$reduce(reduce, acc) : (0, _checks.isArrayLike)(xs) ? reduceArray(reduce, acc, xs) : reduceIterable(reduce, acc, xs)));
}

const reduceArray = (rfn, acc, xs) => {
  for (let i = 0, n = xs.length; i < n; i++) {
    acc = rfn(acc, xs[i]);

    if ((0, _reduced.isReduced)(acc)) {
      acc = acc.deref();
      break;
    }
  }

  return acc;
};

const reduceIterable = (rfn, acc, xs) => {
  for (let x of xs) {
    acc = rfn(acc, x);

    if ((0, _reduced.isReduced)(acc)) {
      acc = acc.deref();
      break;
    }
  }

  return acc;
};
/**
 * Convenience helper for building a full {@link Reducer} using the identity
 * function (i.e. `(x) => x`) as completion step (true for 90% of all
 * bundled transducers).
 *
 * @param init - init step of reducer
 * @param rfn - reduction step of reducer
 */


const reducer = (init, rfn) => [init, acc => acc, rfn];

exports.reducer = reducer;

const $$reduce = (rfn, args) => {
  const n = args.length - 1;
  return (0, _checks.isIterable)(args[n]) ? args.length > 1 ? reduce(rfn.apply(null, args.slice(0, n)), args[n]) : reduce(rfn(), args[0]) : undefined;
};

exports.$$reduce = $$reduce;
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","@thi.ng/errors":"../node_modules/@thi.ng/errors/index.js","./reduced":"../node_modules/@thi.ng/transducers/reduced.js"}],"../node_modules/@thi.ng/transducers/rfn/push.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.push = push;

var _reduce = require("../reduce");

function push(xs) {
  return xs ? [...xs] : (0, _reduce.reducer)(() => [], (acc, x) => (acc.push(x), acc));
}
},{"../reduce":"../node_modules/@thi.ng/transducers/reduce.js"}],"../node_modules/@thi.ng/transducers/iterator.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.iterator = iterator;
exports.iterator1 = iterator1;
exports.$iter = void 0;

var _api = require("@thi.ng/api");

var _checks = require("@thi.ng/checks");

var _ensure = require("./internal/ensure");

var _reduced = require("./reduced");

var _push = require("./rfn/push");

/**
 * Takes a transducer and input iterable. Returns iterator of
 * transformed results.
 *
 * @param xform -
 * @param xs -
 */
function* iterator(xform, xs) {
  const rfn = (0, _ensure.ensureTransducer)(xform)((0, _push.push)());
  const complete = rfn[1];
  const reduce = rfn[2];

  for (let x of xs) {
    const y = reduce([], x);

    if ((0, _reduced.isReduced)(y)) {
      yield* (0, _reduced.unreduced)(complete(y.deref()));
      return;
    }

    if (y.length) {
      yield* y;
    }
  }

  yield* (0, _reduced.unreduced)(complete([]));
}
/**
 * Optimized version of {@link iterator} for transducers which are
 * guaranteed to:
 *
 * 1) Only produce none or a single result per input
 * 2) Do not require a `completion` reduction step
 *
 * @param xform -
 * @param xs -
 */


function* iterator1(xform, xs) {
  const reduce = (0, _ensure.ensureTransducer)(xform)([_api.NO_OP, _api.NO_OP, (_, x) => x])[2];

  for (let x of xs) {
    let y = reduce(_api.SEMAPHORE, x);

    if ((0, _reduced.isReduced)(y)) {
      y = (0, _reduced.unreduced)(y.deref());

      if (y !== _api.SEMAPHORE) {
        yield y;
      }

      return;
    }

    if (y !== _api.SEMAPHORE) {
      yield y;
    }
  }
}
/**
 * Helper function used by various transducers to wrap themselves as
 * transforming iterators. Delegates to {@link iterator1} by default.
 *
 * @param xform -
 * @param args -
 * @param impl -
 *
 * @internal
 */


const $iter = (xform, args, impl = iterator1) => {
  const n = args.length - 1;
  return (0, _checks.isIterable)(args[n]) ? args.length > 1 ? impl(xform.apply(null, args.slice(0, n)), args[n]) : impl(xform(), args[0]) : undefined;
};

exports.$iter = $iter;
},{"@thi.ng/api":"../node_modules/@thi.ng/api/index.js","@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","./internal/ensure":"../node_modules/@thi.ng/transducers/internal/ensure.js","./reduced":"../node_modules/@thi.ng/transducers/reduced.js","./rfn/push":"../node_modules/@thi.ng/transducers/rfn/push.js"}],"../node_modules/@thi.ng/transducers/func/compr.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.compR = void 0;

/**
 * Reducer composition helper, internally used by various transducers
 * during initialization. Takes existing reducer `rfn` (a 3-tuple) and a
 * reducing function `fn`. Returns a new reducer tuple.
 *
 * @remarks
 * `rfn[2]` reduces values of type `B` into an accumulator of type `A`.
 * `fn` accepts values of type `C` and produces interim results of type
 * `B`, which are then (possibly) passed to the "inner" `rfn[2]`
 * function. Therefore the resulting reducer takes inputs of `C` and an
 * accumulator of type `A`.
 *
 * It is assumed that `fn` internally calls `rfn[2]` to pass its own
 * results for further processing by the nested reducer `rfn`.
 *
 * @example
 * ```ts
 * compR(rfn, fn)
 * // [rfn[0], rfn[1], fn]
 * ```
 *
 * @param rfn -
 * @param fn -
 */
const compR = (rfn, fn) => [rfn[0], rfn[1], fn];

exports.compR = compR;
},{}],"../node_modules/@thi.ng/transducers/xform/map.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.map = map;

var _checks = require("@thi.ng/checks");

var _compr = require("../func/compr");

var _iterator = require("../iterator");

function map(fn, src) {
  return (0, _checks.isIterable)(src) ? (0, _iterator.iterator1)(map(fn), src) : rfn => {
    const r = rfn[2];
    return (0, _compr.compR)(rfn, (acc, x) => r(acc, fn(x)));
  };
}
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","../func/compr":"../node_modules/@thi.ng/transducers/func/compr.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js"}],"../node_modules/@thi.ng/transducers/transduce.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.transduce = transduce;

var _errors = require("@thi.ng/errors");

var _ensure = require("./internal/ensure");

var _reduce = require("./reduce");

var _map = require("./xform/map");

function transduce(...args) {
  let acc, xs;

  switch (args.length) {
    case 4:
      xs = args[3];
      acc = args[2];
      break;

    case 3:
      xs = args[2];
      break;

    case 2:
      return (0, _map.map)(x => transduce(args[0], args[1], x));

    default:
      (0, _errors.illegalArity)(args.length);
  }

  return (0, _reduce.reduce)((0, _ensure.ensureTransducer)(args[0])(args[1]), acc, xs);
}
},{"@thi.ng/errors":"../node_modules/@thi.ng/errors/index.js","./internal/ensure":"../node_modules/@thi.ng/transducers/internal/ensure.js","./reduce":"../node_modules/@thi.ng/transducers/reduce.js","./xform/map":"../node_modules/@thi.ng/transducers/xform/map.js"}],"../node_modules/@thi.ng/transducers/run.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.run = run;

var _api = require("@thi.ng/api");

var _transduce = require("./transduce");

const NO_OP_REDUCER = [_api.NO_OP, _api.NO_OP, _api.NO_OP];

function run(tx, ...args) {
  if (args.length === 1) {
    (0, _transduce.transduce)(tx, NO_OP_REDUCER, args[0]);
  } else {
    const fx = args[0];
    (0, _transduce.transduce)(tx, [_api.NO_OP, _api.NO_OP, (_, x) => fx(x)], args[1]);
  }
}
},{"@thi.ng/api":"../node_modules/@thi.ng/api/index.js","./transduce":"../node_modules/@thi.ng/transducers/transduce.js"}],"../node_modules/@thi.ng/transducers/step.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.step = void 0;

var _ensure = require("./internal/ensure");

var _reduced = require("./reduced");

var _push = require("./rfn/push");

/**
 * Single-step transducer execution wrapper.
 * Returns array if transducer produces multiple results
 * and undefined if there was no output. Else returns single
 * result value.
 *
 * @remarks
 * Likewise, once a transducer has produced a final / reduced
 * value, all further invocations of the stepper function will
 * return undefined.
 *
 * @example
 * ```ts
 * // single result
 * step(map(x => x * 10))(1);
 * // 10
 *
 * // multiple results
 * step(mapcat(x => [x, x + 1, x + 2]))(1)
 * // [ 1, 2, 3 ]
 *
 * // no result
 * f = step(filter((x) => !(x & 1)))
 * f(1); // undefined
 * f(2); // 2
 *
 * // reduced value termination
 * f = step(take(2));
 * f(1); // 1
 * f(1); // 1
 * f(1); // undefined
 * f(1); // undefined
 * ```
 *
 * @param tx -
 */
const step = tx => {
  const {
    1: complete,
    2: reduce
  } = (0, _ensure.ensureTransducer)(tx)((0, _push.push)());
  let done = false;
  return x => {
    if (!done) {
      let acc = reduce([], x);
      done = (0, _reduced.isReduced)(acc);

      if (done) {
        acc = complete(acc.deref());
      }

      return acc.length === 1 ? acc[0] : acc.length > 0 ? acc : undefined;
    }
  };
};

exports.step = step;
},{"./internal/ensure":"../node_modules/@thi.ng/transducers/internal/ensure.js","./reduced":"../node_modules/@thi.ng/transducers/reduced.js","./rfn/push":"../node_modules/@thi.ng/transducers/rfn/push.js"}],"../node_modules/@thi.ng/transducers/internal/mathop.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.__mathop = void 0;

var _reduce = require("../reduce");

/**
 * Higher-order reducer for math operations.
 *
 * @param rfn -
 * @param fn -
 * @param initDefault -
 * @param args -
 *
 * @internal
 */
const __mathop = (rfn, fn, initDefault, args) => {
  const res = (0, _reduce.$$reduce)(rfn, args);

  if (res !== undefined) {
    return res;
  }

  const init = args[0] || initDefault;
  return (0, _reduce.reducer)(() => init, fn);
};

exports.__mathop = __mathop;
},{"../reduce":"../node_modules/@thi.ng/transducers/reduce.js"}],"../node_modules/@thi.ng/transducers/rfn/add.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.add = add;

var _mathop = require("../internal/mathop");

function add(...args) {
  return (0, _mathop.__mathop)(add, (acc, x) => acc + x, 0, args);
}
},{"../internal/mathop":"../node_modules/@thi.ng/transducers/internal/mathop.js"}],"../node_modules/@thi.ng/transducers/rfn/assoc-map.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.assocMap = assocMap;

var _reduce = require("../reduce");

function assocMap(xs) {
  return xs ? (0, _reduce.reduce)(assocMap(), xs) : (0, _reduce.reducer)(() => new Map(), (acc, [k, v]) => acc.set(k, v));
}
},{"../reduce":"../node_modules/@thi.ng/transducers/reduce.js"}],"../node_modules/@thi.ng/transducers/rfn/assoc-obj.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.assocObj = assocObj;

var _reduce = require("../reduce");

function assocObj(xs) {
  return xs ? (0, _reduce.reduce)(assocObj(), xs) : (0, _reduce.reducer)(() => ({}), (acc, [k, v]) => (acc[k] = v, acc));
}
},{"../reduce":"../node_modules/@thi.ng/transducers/reduce.js"}],"../node_modules/@thi.ng/transducers/rfn/auto-obj.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.autoObj = autoObj;

var _reduce = require("../reduce");

function autoObj(prefix, xs) {
  let id = 0;
  return xs ? (0, _reduce.reduce)(autoObj(prefix), xs) : (0, _reduce.reducer)(() => ({}), (acc, v) => (acc[prefix + id++] = v, acc));
}
},{"../reduce":"../node_modules/@thi.ng/transducers/reduce.js"}],"../node_modules/@thi.ng/transducers/rfn/conj.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.conj = conj;

var _reduce = require("../reduce");

function conj(xs) {
  return xs ? (0, _reduce.reduce)(conj(), xs) : (0, _reduce.reducer)(() => new Set(), (acc, x) => acc.add(x));
}
},{"../reduce":"../node_modules/@thi.ng/transducers/reduce.js"}],"../node_modules/@thi.ng/transducers/rfn/count.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.count = count;

var _reduce = require("../reduce");

function count(...args) {
  const res = (0, _reduce.$$reduce)(count, args);

  if (res !== undefined) {
    return res;
  }

  let offset = args[0] || 0;
  let step = args[1] || 1;
  return (0, _reduce.reducer)(() => offset, (acc, _) => acc + step);
}
},{"../reduce":"../node_modules/@thi.ng/transducers/reduce.js"}],"../node_modules/@thi.ng/transducers/rfn/div.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.div = div;

var _reduce = require("../reduce");

function div(init, xs) {
  return xs ? (0, _reduce.reduce)(div(init), xs) : (0, _reduce.reducer)(() => init, (acc, x) => acc / x);
}
},{"../reduce":"../node_modules/@thi.ng/transducers/reduce.js"}],"../node_modules/@thi.ng/transducers/rfn/every.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.every = every;

var _reduce = require("../reduce");

var _reduced = require("../reduced");

function every(...args) {
  const res = (0, _reduce.$$reduce)(every, args);

  if (res !== undefined) {
    return res;
  }

  const pred = args[0];
  return (0, _reduce.reducer)(() => true, pred ? (acc, x) => pred(x) ? acc : (0, _reduced.reduced)(false) : (acc, x) => x ? acc : (0, _reduced.reduced)(false));
}
},{"../reduce":"../node_modules/@thi.ng/transducers/reduce.js","../reduced":"../node_modules/@thi.ng/transducers/reduced.js"}],"../node_modules/@thi.ng/transducers/rfn/fill.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fill = fill;
exports.fillN = fillN;

var _reduce = require("../reduce");

function fill(...args) {
  const res = (0, _reduce.$$reduce)(fill, args);

  if (res !== undefined) {
    return res;
  }

  let start = args[0] || 0;
  return (0, _reduce.reducer)(() => [], (acc, x) => (acc[start++] = x, acc));
}

function fillN(...args) {
  return fill(...args);
}
},{"../reduce":"../node_modules/@thi.ng/transducers/reduce.js"}],"../node_modules/@thi.ng/compose/comp.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.comp = comp;
exports.compL = compL;
exports.compI = void 0;

var _errors = require("@thi.ng/errors");

function comp(...fns) {
  let [a, b, c, d, e, f, g, h, i, j] = fns;

  switch (fns.length) {
    case 0:
      (0, _errors.illegalArity)(0);

    case 1:
      return a;

    case 2:
      return (...xs) => a(b(...xs));

    case 3:
      return (...xs) => a(b(c(...xs)));

    case 4:
      return (...xs) => a(b(c(d(...xs))));

    case 5:
      return (...xs) => a(b(c(d(e(...xs)))));

    case 6:
      return (...xs) => a(b(c(d(e(f(...xs))))));

    case 7:
      return (...xs) => a(b(c(d(e(f(g(...xs)))))));

    case 8:
      return (...xs) => a(b(c(d(e(f(g(h(...xs))))))));

    case 9:
      return (...xs) => a(b(c(d(e(f(g(h(i(...xs)))))))));

    case 10:
    default:
      const fn = (...xs) => a(b(c(d(e(f(g(h(i(j(...xs))))))))));

      return fns.length === 10 ? fn : comp(fn, ...fns.slice(10));
  }
}

function compL(...fns) {
  return comp.apply(null, fns.reverse());
}
/**
 * @deprecated renamed to {@link (compL:1)}
 */


const compI = compL;
exports.compI = compI;
},{"@thi.ng/errors":"../node_modules/@thi.ng/errors/index.js"}],"../node_modules/@thi.ng/compose/complement.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.complement = complement;

function complement(f) {
  return (...xs) => !f(...xs);
}
},{}],"../node_modules/@thi.ng/compose/constantly.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.constantly = void 0;

const constantly = x => () => x;

exports.constantly = constantly;
},{}],"../node_modules/@thi.ng/compose/delay.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Delay = exports.delay = void 0;

const delay = body => new Delay(body);

exports.delay = delay;

class Delay {
  constructor(body) {
    this.body = body;
    this.realized = false;
  }

  deref() {
    if (!this.realized) {
      this.value = this.body();
      this.realized = true;
    }

    return this.value;
  }

  isRealized() {
    return this.realized;
  }

}

exports.Delay = Delay;
},{}],"../node_modules/@thi.ng/compose/delayed.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.delayed = void 0;

const delayed = (x, t) => new Promise(resolve => setTimeout(() => resolve(x), t));

exports.delayed = delayed;
},{}],"../node_modules/@thi.ng/compose/identity.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.identity = void 0;

const identity = x => x;

exports.identity = identity;
},{}],"../node_modules/@thi.ng/compose/ifdef.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ifDef = void 0;

/**
 * Returns f(x) iff `x` is not null or undefined.
 *
 * @param f - function
 * @param x - value
 */
const ifDef = (f, x) => x != null ? f(x) : undefined;

exports.ifDef = ifDef;
},{}],"../node_modules/@thi.ng/compose/juxt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.juxt = juxt;

function juxt(...fns) {
  const [a, b, c, d, e, f, g, h] = fns;

  switch (fns.length) {
    case 1:
      return x => [a(x)];

    case 2:
      return x => [a(x), b(x)];

    case 3:
      return x => [a(x), b(x), c(x)];

    case 4:
      return x => [a(x), b(x), c(x), d(x)];

    case 5:
      return x => [a(x), b(x), c(x), d(x), e(x)];

    case 6:
      return x => [a(x), b(x), c(x), d(x), e(x), f(x)];

    case 7:
      return x => [a(x), b(x), c(x), d(x), e(x), f(x), g(x)];

    case 8:
      return x => [a(x), b(x), c(x), d(x), e(x), f(x), g(x), h(x)];

    default:
      return x => {
        let res = new Array(fns.length);

        for (let i = fns.length; --i >= 0;) {
          res[i] = fns[i](x);
        }

        return res;
      };
  }
}
},{}],"../node_modules/@thi.ng/compose/partial.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.partial = partial;

var _errors = require("@thi.ng/errors");

function partial(fn, ...args) {
  let [a, b, c, d, e, f, g, h] = args;

  switch (args.length) {
    case 1:
      return (...xs) => fn(a, ...xs);

    case 2:
      return (...xs) => fn(a, b, ...xs);

    case 3:
      return (...xs) => fn(a, b, c, ...xs);

    case 4:
      return (...xs) => fn(a, b, c, d, ...xs);

    case 5:
      return (...xs) => fn(a, b, c, d, e, ...xs);

    case 6:
      return (...xs) => fn(a, b, c, d, e, f, ...xs);

    case 7:
      return (...xs) => fn(a, b, c, d, e, f, g, ...xs);

    case 8:
      return (...xs) => fn(a, b, c, d, e, f, g, h, ...xs);

    default:
      (0, _errors.illegalArgs)();
  }
}
},{"@thi.ng/errors":"../node_modules/@thi.ng/errors/index.js"}],"../node_modules/@thi.ng/compose/promisify.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.promisify = void 0;

/**
 * Takes a function accepting a NodeJS-like callback w/ (error, result)
 * args and converts it into a Promise, e.g. for use in async contexts.
 *
 * @remarks
 * The constructed promise calls the given function with a custom
 * callback, which then either resolves or rejects the promise.
 *
 * @example
 * ```ts
 * (async () => {
 *    const body = await promisify(partial(fs.readFile, "foo.txt"));
 *    console.log(body.toString());
 * })();
 * ```
 *
 * @param fn - function accepting a callback
 */
const promisify = fn => new Promise((resolve, reject) => fn((err, result) => err != null ? reject(err) : resolve(result)));

exports.promisify = promisify;
},{}],"../node_modules/@thi.ng/compose/thread-first.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.threadFirst = void 0;

/**
 * Takes an `init` value and a number of functions and/or function
 * tuples, consisting of: `[fn, ...args]`. Executes each function
 * (or tuple) with the return value of the previous expression inserted
 * as first argument, using `init` for the first expression.
 *
 * @example
 * ```ts
 * const neg = (x) => -x;
 * const sub = (a, b) => a - b;
 * const div = (a, b) => a / b;
 *
 * threadFirst(
 *   5,
 *   neg,       // -5
 *   [sub, 20], // -5 - 20 = -25
 *   [div, 10]  // -25 / 10 = -2.5
 * );
 *
 * // -2.5
 * ```
 *
 * {@link threadLast}
 *
 * @param init - start value
 * @param fns - functions / S-expressions
 */
const threadFirst = (init, ...fns) => fns.reduce((acc, expr) => typeof expr === "function" ? expr(acc) : expr[0](acc, ...expr.slice(1)), init);

exports.threadFirst = threadFirst;
},{}],"../node_modules/@thi.ng/compose/thread-last.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.threadLast = void 0;

/**
 * Takes an `init` value and a number of functions and/or function
 * tuples, consisting of: `[fn, ...args]`. Executes each function
 * (or tuple) with the return value of the previous expression inserted
 * as last argument, using `init` for the first expression.
 *
 * @example
 * ```ts
 * const neg = (x) => -x;
 * const sub = (a, b) => a - b;
 * const div = (a, b) => a / b;
 *
 * threadLast(
 *   5,
 *   neg,       // -5
 *   [sub, 10], // 20 - (-5) = 25
 *   [div, 10]  // 10 / 25 = 0.4
 * );
 *
 * // 0.4
 * ```
 *
 * {@link threadFirst}
 *
 * @param init - start value
 * @param fns - functions / S-expressions
 */
const threadLast = (init, ...fns) => fns.reduce((acc, expr) => typeof expr === "function" ? expr(acc) : expr[0](...expr.slice(1), acc), init);

exports.threadLast = threadLast;
},{}],"../node_modules/@thi.ng/compose/trampoline.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.trampoline = void 0;

/**
 * Takes a function returning either a no-arg function (thunk) or its
 * already realized (non-function) result. Re-executes thunk for as long
 * as it returns another function/thunk. Once a non-function result has
 * been produced, `trampoline` returns that value itself.
 *
 * @remarks
 * If the final result should be function, it needs to wrapped (e.g. as
 * a 1-elem array).
 *
 * This function should be used for non-stack consuming recursion. I.e.
 * a trampoline is a form of continuation passing style and only ever
 * consumes max. 2 extra stack frames, independent from recursion depth.
 *
 * @example
 * ```ts
 * const countdown = (acc, x) =>
 *   x >= 0 ?
 *     () => (acc.push(x), countdown(acc, x-1)) :
 *     acc;
 *
 * trampoline(countdown([], 4))
 * // [ 4, 3, 2, 1, 0 ]
 *
 * trampoline(countdown([], -1))
 * // []
 * ```
 *
 * @param f - function
 */
const trampoline = f => {
  while (typeof f === "function") {
    f = f();
  }

  return f;
};

exports.trampoline = trampoline;
},{}],"../node_modules/@thi.ng/compose/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _comp = require("./comp");

Object.keys(_comp).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _comp[key];
    }
  });
});

var _complement = require("./complement");

Object.keys(_complement).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _complement[key];
    }
  });
});

var _constantly = require("./constantly");

Object.keys(_constantly).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _constantly[key];
    }
  });
});

var _delay = require("./delay");

Object.keys(_delay).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _delay[key];
    }
  });
});

var _delayed = require("./delayed");

Object.keys(_delayed).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _delayed[key];
    }
  });
});

var _identity = require("./identity");

Object.keys(_identity).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _identity[key];
    }
  });
});

var _ifdef = require("./ifdef");

Object.keys(_ifdef).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _ifdef[key];
    }
  });
});

var _juxt = require("./juxt");

Object.keys(_juxt).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _juxt[key];
    }
  });
});

var _partial = require("./partial");

Object.keys(_partial).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _partial[key];
    }
  });
});

var _promisify = require("./promisify");

Object.keys(_promisify).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _promisify[key];
    }
  });
});

var _threadFirst = require("./thread-first");

Object.keys(_threadFirst).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _threadFirst[key];
    }
  });
});

var _threadLast = require("./thread-last");

Object.keys(_threadLast).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _threadLast[key];
    }
  });
});

var _trampoline = require("./trampoline");

Object.keys(_trampoline).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _trampoline[key];
    }
  });
});
},{"./comp":"../node_modules/@thi.ng/compose/comp.js","./complement":"../node_modules/@thi.ng/compose/complement.js","./constantly":"../node_modules/@thi.ng/compose/constantly.js","./delay":"../node_modules/@thi.ng/compose/delay.js","./delayed":"../node_modules/@thi.ng/compose/delayed.js","./identity":"../node_modules/@thi.ng/compose/identity.js","./ifdef":"../node_modules/@thi.ng/compose/ifdef.js","./juxt":"../node_modules/@thi.ng/compose/juxt.js","./partial":"../node_modules/@thi.ng/compose/partial.js","./promisify":"../node_modules/@thi.ng/compose/promisify.js","./thread-first":"../node_modules/@thi.ng/compose/thread-first.js","./thread-last":"../node_modules/@thi.ng/compose/thread-last.js","./trampoline":"../node_modules/@thi.ng/compose/trampoline.js"}],"../node_modules/@thi.ng/transducers/internal/group-opts.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.__groupByOpts = void 0;

var _compose = require("@thi.ng/compose");

var _push = require("../rfn/push");

/**
 * Shared helper function for `groupBy*` reducers
 *
 * @param opts -
 *
 * @internal
 */
const __groupByOpts = opts => Object.assign({
  key: _compose.identity,
  group: (0, _push.push)()
}, opts);

exports.__groupByOpts = __groupByOpts;
},{"@thi.ng/compose":"../node_modules/@thi.ng/compose/index.js","../rfn/push":"../node_modules/@thi.ng/transducers/rfn/push.js"}],"../node_modules/@thi.ng/transducers/rfn/group-by-map.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.groupByMap = groupByMap;

var _groupOpts = require("../internal/group-opts");

var _reduce = require("../reduce");

function groupByMap(...args) {
  const res = (0, _reduce.$$reduce)(groupByMap, args);

  if (res !== undefined) {
    return res;
  }

  const opts = (0, _groupOpts.__groupByOpts)(args[0]);
  const [init, complete, reduce] = opts.group;
  return [() => new Map(), acc => {
    for (let k of acc.keys()) {
      acc.set(k, complete(acc.get(k)));
    }

    return acc;
  }, (acc, x) => {
    const k = opts.key(x);
    return acc.set(k, acc.has(k) ? reduce(acc.get(k), x) : reduce(init(), x));
  }];
}
},{"../internal/group-opts":"../node_modules/@thi.ng/transducers/internal/group-opts.js","../reduce":"../node_modules/@thi.ng/transducers/reduce.js"}],"../node_modules/@thi.ng/transducers/rfn/frequencies.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.frequencies = frequencies;

var _compose = require("@thi.ng/compose");

var _reduce = require("../reduce");

var _count = require("./count");

var _groupByMap = require("./group-by-map");

function frequencies(...args) {
  return (0, _reduce.$$reduce)(frequencies, args) || (0, _groupByMap.groupByMap)({
    key: args[0] || _compose.identity,
    group: (0, _count.count)()
  });
}
},{"@thi.ng/compose":"../node_modules/@thi.ng/compose/index.js","../reduce":"../node_modules/@thi.ng/transducers/reduce.js","./count":"../node_modules/@thi.ng/transducers/rfn/count.js","./group-by-map":"../node_modules/@thi.ng/transducers/rfn/group-by-map.js"}],"../node_modules/@thi.ng/transducers/rfn/group-by-obj.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.groupByObj = groupByObj;

var _groupOpts = require("../internal/group-opts");

var _reduce2 = require("../reduce");

function groupByObj(...args) {
  const res = (0, _reduce2.$$reduce)(groupByObj, args);

  if (res) {
    return res;
  }

  const opts = (0, _groupOpts.__groupByOpts)(args[0]);
  const [_init, complete, _reduce] = opts.group;
  return [() => ({}), acc => {
    for (let k in acc) {
      acc[k] = complete(acc[k]);
    }

    return acc;
  }, (acc, x) => {
    const k = opts.key(x);
    acc[k] = acc[k] ? _reduce(acc[k], x) : _reduce(_init(), x);
    return acc;
  }];
}
},{"../internal/group-opts":"../node_modules/@thi.ng/transducers/internal/group-opts.js","../reduce":"../node_modules/@thi.ng/transducers/reduce.js"}],"../node_modules/@thi.ng/transducers/rfn/group-binary.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.groupBinary = void 0;

var _groupByObj = require("./group-by-obj");

var _push = require("./push");

const branchPred = (key, b, l, r) => x => key(x) & b ? r : l;
/**
 * Creates a bottom-up, unbalanced binary tree of desired depth and
 * choice of data structures. Any value can be indexed, as long as a
 * numeric representation (key) can be obtained. This numeric key is
 * produced by the supplied `key` function. IMPORTANT: the returned
 * values MUST be unsigned and less than the provided bit length (i.e.
 * `0 .. (2^bits) - 1` range).
 *
 * By default the tree is constructed using plain objects for branches,
 * with left branches stored as "l" and right ones as "r". The original
 * values are stored at the lowest tree level using a customizable
 * nested reducer. By default leaves are collected in arrays (using the
 * {@link (push:1)} reducer), but any suitable reducer can be used (e.g.
 * {@link (conj:1)} to collect values into sets).
 *
 * Index by lowest 4-bits of ID value:
 *
 * @example
 * ```ts
 * tree = reduce(
 *   groupBinary(4, x => x.id & 0xf),
 *   [{id: 3}, {id: 8}, {id: 15}, {id: 0}]
 * )
 *
 * tree.l.l.l.l
 * // [ { id: 0 } ]
 * tree.r.r.r.r
 * // [ { id: 15 } ]
 * tree.l.l.r.r
 * // [ { id: 3 } ]
 * ```
 *
 * Collecting as array:
 *
 * @example
 * ```ts
 * tree = reduce(
 *   groupBinary(4, identity, ()=>[], push(), 0, 1),
 *   [1,2,3,4,5,6,7]
 * )
 *
 * tree[0][1][0][1] // 0101 == 5 in binary
 * // [ 5 ]
 *
 * tree[0][1][1]    // 011* == branch
 * // [ [ 6 ], [ 7 ] ]
 * ```
 *
 * Using {@link (frequencies:1)} as leaf reducer:
 *
 * @example
 * ```ts
 * tree = reduce(
 *   groupBinary(3, (x: string) => x.length, null, frequencies()),
 *   "aa bbb dddd ccccc bbb eeee fff".split(" ")
 * )
 * // [ [ undefined,
 * //     [ Map { 'aa' => 1 },
 * //       Map { 'bbb' => 2, 'fff' => 1 } ] ],
 * //   [ [ Map { 'dddd' => 1, 'eeee' => 1 },
 * //       Map { 'ccccc' => 1 } ] ] ]
 *
 * tree[0][1][1]
 * // Map { 'bbb' => 2, 'fff' => 1 }
 * ```
 *
 * @param bits - index range (always from 0)
 * @param key - key function
 * @param branch - function to create a new branch container (object or
 * array)
 * @param leaf - reducer for leaf collection
 * @param left - key for storing left branches (e.g. `0` for arrays)
 * @param right - key for storing right branches (e.g. `1` for arrays)
 */


const groupBinary = (bits, key, branch, leaf, left = "l", right = "r") => {
  const init = branch || (() => ({}));

  let rfn = (0, _groupByObj.groupByObj)({
    key: branchPred(key, 1, left, right),
    group: leaf || (0, _push.push)()
  });

  for (let i = 2, maxIndex = 1 << bits; i < maxIndex; i <<= 1) {
    rfn = (0, _groupByObj.groupByObj)({
      key: branchPred(key, i, left, right),
      group: [init, rfn[1], rfn[2]]
    });
  }

  return [init, rfn[1], rfn[2]];
};

exports.groupBinary = groupBinary;
},{"./group-by-obj":"../node_modules/@thi.ng/transducers/rfn/group-by-obj.js","./push":"../node_modules/@thi.ng/transducers/rfn/push.js"}],"../node_modules/@thi.ng/transducers/rfn/last.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.last = last;

var _api = require("@thi.ng/api");

var _reduce = require("../reduce");

function last(xs) {
  return xs ? (0, _reduce.reduce)(last(), xs) : (0, _reduce.reducer)(_api.NO_OP, (_, x) => x);
}
},{"@thi.ng/api":"../node_modules/@thi.ng/api/index.js","../reduce":"../node_modules/@thi.ng/transducers/reduce.js"}],"../node_modules/@thi.ng/compare/compare.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.compare = void 0;

const compare = (a, b) => {
  if (a === b) {
    return 0;
  }

  if (a == null) {
    return b == null ? 0 : -1;
  }

  if (b == null) {
    return a == null ? 0 : 1;
  }

  if (typeof a.compare === "function") {
    return a.compare(b);
  }

  if (typeof b.compare === "function") {
    return -b.compare(a);
  }

  return a < b ? -1 : a > b ? 1 : 0;
};

exports.compare = compare;
},{}],"../node_modules/@thi.ng/compare/keys.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.compareByKey = compareByKey;
exports.compareByKeys2 = compareByKeys2;
exports.compareByKeys3 = compareByKeys3;
exports.compareByKeys4 = compareByKeys4;

var _compare = require("./compare");

const getKey = k => typeof k === "function" ? k : x => x[k];

function compareByKey(a, cmp = _compare.compare) {
  const k = getKey(a);
  return (x, y) => cmp(k(x), k(y));
}

function compareByKeys2(a, b, cmpA = _compare.compare, cmpB = _compare.compare) {
  const ka = getKey(a);
  const kb = getKey(b);
  return (x, y) => {
    let res = cmpA(ka(x), ka(y));
    return res === 0 ? cmpB(kb(x), kb(y)) : res;
  };
}

function compareByKeys3(a, b, c, cmpA = _compare.compare, cmpB = _compare.compare, cmpC = _compare.compare) {
  const ka = getKey(a);
  const kb = getKey(b);
  const kc = getKey(c);
  return (x, y) => {
    let res = cmpA(ka(x), ka(y));
    return res === 0 ? (res = cmpB(kb(x), kb(y))) === 0 ? cmpC(kc(x), kc(y)) : res : res;
  };
}

function compareByKeys4(a, b, c, d, cmpA = _compare.compare, cmpB = _compare.compare, cmpC = _compare.compare, cmpD = _compare.compare) {
  const ka = getKey(a);
  const kb = getKey(b);
  const kc = getKey(c);
  const kd = getKey(d);
  return (x, y) => {
    let res = cmpA(ka(x), ka(y));
    return res === 0 ? (res = cmpB(kb(x), kb(y))) === 0 ? (res = cmpC(kc(x), kc(y))) === 0 ? cmpD(kd(x), kd(y)) : res : res : res;
  };
}
},{"./compare":"../node_modules/@thi.ng/compare/compare.js"}],"../node_modules/@thi.ng/compare/numeric.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.compareNumDesc = exports.compareNumAsc = void 0;

/**
 * Numeric comparator (ascending order)
 *
 * @param a -
 * @param b -
 */
const compareNumAsc = (a, b) => a - b;
/**
 * Numeric comparator (descending order)
 *
 * @param a -
 * @param b -
 */


exports.compareNumAsc = compareNumAsc;

const compareNumDesc = (a, b) => b - a;

exports.compareNumDesc = compareNumDesc;
},{}],"../node_modules/@thi.ng/compare/reverse.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.reverse = void 0;

/**
 * HOF comparator. Returns new comparator with reversed order of given
 * comparator.
 *
 * @param cmp
 */
const reverse = cmp => (a, b) => -cmp(a, b);

exports.reverse = reverse;
},{}],"../node_modules/@thi.ng/compare/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _compare = require("./compare");

Object.keys(_compare).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _compare[key];
    }
  });
});

var _keys = require("./keys");

Object.keys(_keys).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _keys[key];
    }
  });
});

var _numeric = require("./numeric");

Object.keys(_numeric).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _numeric[key];
    }
  });
});

var _reverse = require("./reverse");

Object.keys(_reverse).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _reverse[key];
    }
  });
});
},{"./compare":"../node_modules/@thi.ng/compare/compare.js","./keys":"../node_modules/@thi.ng/compare/keys.js","./numeric":"../node_modules/@thi.ng/compare/numeric.js","./reverse":"../node_modules/@thi.ng/compare/reverse.js"}],"../node_modules/@thi.ng/transducers/rfn/max-compare.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.maxCompare = maxCompare;

var _compare = require("@thi.ng/compare");

var _reduce = require("../reduce");

function maxCompare(...args) {
  const res = (0, _reduce.$$reduce)(maxCompare, args);

  if (res !== undefined) {
    return res;
  }

  const init = args[0];
  const cmp = args[1] || _compare.compare;
  return (0, _reduce.reducer)(init, (acc, x) => cmp(acc, x) >= 0 ? acc : x);
}
},{"@thi.ng/compare":"../node_modules/@thi.ng/compare/index.js","../reduce":"../node_modules/@thi.ng/transducers/reduce.js"}],"../node_modules/@thi.ng/transducers/rfn/max.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.max = max;

var _reduce = require("../reduce");

function max(xs) {
  return xs ? (0, _reduce.reduce)(max(), xs) : (0, _reduce.reducer)(() => -Infinity, (acc, x) => Math.max(acc, x));
}
},{"../reduce":"../node_modules/@thi.ng/transducers/reduce.js"}],"../node_modules/@thi.ng/transducers/rfn/mean.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mean = mean;

var _reduce = require("../reduce");

function mean(xs) {
  let n = 1;
  return xs ? (0, _reduce.reduce)(mean(), xs) : [() => n = 0, acc => n > 1 ? acc / n : acc, (acc, x) => (n++, acc + x)];
}
},{"../reduce":"../node_modules/@thi.ng/transducers/reduce.js"}],"../node_modules/@thi.ng/transducers/rfn/min-compare.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.minCompare = minCompare;

var _compare = require("@thi.ng/compare");

var _reduce = require("../reduce");

function minCompare(...args) {
  const res = (0, _reduce.$$reduce)(minCompare, args);

  if (res !== undefined) {
    return res;
  }

  const init = args[0];
  const cmp = args[1] || _compare.compare;
  return (0, _reduce.reducer)(init, (acc, x) => cmp(acc, x) <= 0 ? acc : x);
}
},{"@thi.ng/compare":"../node_modules/@thi.ng/compare/index.js","../reduce":"../node_modules/@thi.ng/transducers/reduce.js"}],"../node_modules/@thi.ng/transducers/rfn/min.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.min = min;

var _reduce = require("../reduce");

function min(xs) {
  return xs ? (0, _reduce.reduce)(min(), xs) : (0, _reduce.reducer)(() => Infinity, (acc, x) => Math.min(acc, x));
}
},{"../reduce":"../node_modules/@thi.ng/transducers/reduce.js"}],"../node_modules/@thi.ng/transducers/rfn/mul.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mul = mul;

var _mathop = require("../internal/mathop");

function mul(...args) {
  return (0, _mathop.__mathop)(mul, (acc, x) => acc * x, 1, args);
}
},{"../internal/mathop":"../node_modules/@thi.ng/transducers/internal/mathop.js"}],"../node_modules/@thi.ng/transducers/rfn/push-copy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pushCopy = void 0;

var _reduce = require("../reduce");

const pushCopy = () => (0, _reduce.reducer)(() => [], (acc, x) => ((acc = acc.slice()).push(x), acc));

exports.pushCopy = pushCopy;
},{"../reduce":"../node_modules/@thi.ng/transducers/reduce.js"}],"../node_modules/@thi.ng/transducers/rfn/push-sort.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pushSort = pushSort;

var _compare = require("@thi.ng/compare");

function pushSort(cmp = _compare.compare, xs) {
  return xs ? [...xs].sort(cmp) : [() => [], acc => acc.sort(cmp), (acc, x) => (acc.push(x), acc)];
}
},{"@thi.ng/compare":"../node_modules/@thi.ng/compare/index.js"}],"../node_modules/@thi.ng/transducers/rfn/reductions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.reductions = reductions;

var _reduce2 = require("../reduce");

var _reduced = require("../reduced");

function reductions(rfn, xs) {
  const [init, complete, _reduce] = rfn;
  return xs ? (0, _reduce2.reduce)(reductions(rfn), xs) : [() => [init()], acc => (acc[acc.length - 1] = complete(acc[acc.length - 1]), acc), (acc, x) => {
    const res = _reduce(acc[acc.length - 1], x);

    if ((0, _reduced.isReduced)(res)) {
      acc.push(res.deref());
      return (0, _reduced.reduced)(acc);
    }

    acc.push(res);
    return acc;
  }];
}
},{"../reduce":"../node_modules/@thi.ng/transducers/reduce.js","../reduced":"../node_modules/@thi.ng/transducers/reduced.js"}],"../node_modules/@thi.ng/transducers/rfn/some.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.some = some;

var _reduce = require("../reduce");

var _reduced = require("../reduced");

function some(...args) {
  const res = (0, _reduce.$$reduce)(some, args);

  if (res !== undefined) {
    return res;
  }

  const pred = args[0];
  return (0, _reduce.reducer)(() => false, pred ? (acc, x) => pred(x) ? (0, _reduced.reduced)(true) : acc : (acc, x) => x ? (0, _reduced.reduced)(true) : acc);
}
},{"../reduce":"../node_modules/@thi.ng/transducers/reduce.js","../reduced":"../node_modules/@thi.ng/transducers/reduced.js"}],"../node_modules/@thi.ng/transducers/rfn/str.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.str = str;

var _reduce = require("../reduce");

function str(sep, xs) {
  sep = sep || "";
  let first = true;
  return xs ? [...xs].join(sep) : (0, _reduce.reducer)(() => "", (acc, x) => (acc = first ? acc + x : acc + sep + x, first = false, acc));
}
},{"../reduce":"../node_modules/@thi.ng/transducers/reduce.js"}],"../node_modules/@thi.ng/transducers/rfn/sub.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sub = sub;

var _mathop = require("../internal/mathop");

function sub(...args) {
  return (0, _mathop.__mathop)(sub, (acc, x) => acc - x, 0, args);
}
},{"../internal/mathop":"../node_modules/@thi.ng/transducers/internal/mathop.js"}],"../node_modules/@thi.ng/transducers/xform/benchmark.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.benchmark = benchmark;

var _checks = require("@thi.ng/checks");

var _compr = require("../func/compr");

var _iterator = require("../iterator");

function benchmark(src) {
  return (0, _checks.isIterable)(src) ? (0, _iterator.iterator1)(benchmark(), src) : rfn => {
    const r = rfn[2];
    let prev = Date.now();
    return (0, _compr.compR)(rfn, (acc, _) => {
      const t = Date.now();
      const x = t - prev;
      prev = t;
      return r(acc, x);
    });
  };
}
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","../func/compr":"../node_modules/@thi.ng/transducers/func/compr.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js"}],"../node_modules/@thi.ng/transducers/xform/cat.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cat = void 0;

var _compr = require("../func/compr");

var _reduced = require("../reduced");

/**
 * Transducer to concatenate iterable values. Iterates over each input
 * and emits individual values down stream, therefore removing one level
 * of nesting from the input.
 *
 * @remarks
 * If, during processing, the transducer is given a wrapped reduced
 * input iterable, it will still be processed as normal, but then
 * immediately triggers early termination by wrapping its own result in
 * {@link reduced}. E.g. this behavior allows a {@link (mapcat:1)} user
 * functions to benefit from reduced results.
 *
 * Also see:
 * - {@link concat}
 * - {@link (mapcat:1)}
 *
 * @example
 * ```ts
 * [...iterator(comp(map((x) => [x, x]), cat()), [1, 2, 3, 4])]
 * // [ 1, 1, 2, 2, 3, 3, 4, 4 ]
 *
 * [...iterator(
 *   comp(
 *     mapIndexed((i, x) => [[i], [x, x]]),
 *     cat(),
 *     cat()
 *   ),
 *   "abc"
 * )]
 * // [ 0, 'a', 'a', 1, 'b', 'b', 2, 'c', 'c' ]
 *
 * [...mapcat((x)=>(x > 1 ? reduced([x, x]) : [x, x]), [1, 2, 3, 4])]
 * // [ 1, 1, 2, 2 ]
 * ```
 *
 * @param rfn -
 */
const cat = () => rfn => {
  const r = rfn[2];
  return (0, _compr.compR)(rfn, (acc, x) => {
    if (x) {
      for (let y of (0, _reduced.unreduced)(x)) {
        acc = r(acc, y);

        if ((0, _reduced.isReduced)(acc)) {
          break;
        }
      }
    }

    return (0, _reduced.isReduced)(x) ? (0, _reduced.ensureReduced)(acc) : acc;
  });
};

exports.cat = cat;
},{"../func/compr":"../node_modules/@thi.ng/transducers/func/compr.js","../reduced":"../node_modules/@thi.ng/transducers/reduced.js"}],"../node_modules/@thi.ng/transducers/xform/converge.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.converge = converge;

var _api = require("@thi.ng/api");

var _compr = require("../func/compr");

var _iterator = require("../iterator");

var _reduced = require("../reduced");

function converge(...args) {
  return (0, _iterator.$iter)(converge, args) || (rfn => {
    const r = rfn[2];
    const pred = args[0];
    let prev = _api.SEMAPHORE;
    let done = false;
    return (0, _compr.compR)(rfn, (acc, x) => {
      if (done || prev !== _api.SEMAPHORE && pred(prev, x)) {
        done = true;
        return (0, _reduced.ensureReduced)(r(acc, x));
      }

      prev = x;
      return r(acc, x);
    });
  });
}
},{"@thi.ng/api":"../node_modules/@thi.ng/api/index.js","../func/compr":"../node_modules/@thi.ng/transducers/func/compr.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js","../reduced":"../node_modules/@thi.ng/transducers/reduced.js"}],"../node_modules/@thi.ng/transducers/iter/range.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.range = range;
exports.Range = void 0;

var _reduced = require("../reduced");

function range(from, to, step) {
  return new Range(from, to, step);
}
/**
 * Simple class wrapper around given range interval and implementing
 * `Iterable` and {@link IReducible} interfaces, the latter is used to
 * accelerate use with {@link (reduce:1)}.
 */


class Range {
  constructor(from, to, step) {
    if (from === undefined) {
      from = 0;
      to = Infinity;
    } else if (to === undefined) {
      to = from;
      from = 0;
    }

    step = step === undefined ? from < to ? 1 : -1 : step;
    this.from = from;
    this.to = to;
    this.step = step;
  }

  *[Symbol.iterator]() {
    const step = this.step;
    const to = this.to;
    let from = this.from;

    if (step > 0) {
      while (from < to) {
        yield from;
        from += step;
      }
    } else if (step < 0) {
      while (from > to) {
        yield from;
        from += step;
      }
    }
  }

  $reduce(rfn, acc) {
    const step = this.step;

    if (step > 0) {
      for (let i = this.from, n = this.to; i < n && !(0, _reduced.isReduced)(acc); i += step) {
        acc = rfn(acc, i);
      }
    } else {
      for (let i = this.from, n = this.to; i > n && !(0, _reduced.isReduced)(acc); i += step) {
        acc = rfn(acc, i);
      }
    }

    return acc;
  }

}

exports.Range = Range;
},{"../reduced":"../node_modules/@thi.ng/transducers/reduced.js"}],"../node_modules/@thi.ng/transducers/iter/range2d.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.range2d = range2d;

var _errors = require("@thi.ng/errors");

var _range = require("./range");

function* range2d(...args) {
  let fromX, toX, stepX;
  let fromY, toY, stepY;

  switch (args.length) {
    case 6:
      stepX = args[4];
      stepY = args[5];

    case 4:
      [fromX, toX, fromY, toY] = args;
      break;

    case 2:
      [toX, toY] = args;
      fromX = fromY = 0;
      break;

    default:
      (0, _errors.illegalArity)(args.length);
  }

  const rx = (0, _range.range)(fromX, toX, stepX);

  for (let y of (0, _range.range)(fromY, toY, stepY)) {
    for (let x of rx) {
      yield [x, y];
    }
  }
}
},{"@thi.ng/errors":"../node_modules/@thi.ng/errors/index.js","./range":"../node_modules/@thi.ng/transducers/iter/range.js"}],"../node_modules/@thi.ng/transducers/iter/zip.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.zip = zip;

function* zip(...src) {
  const iters = src.map(s => s[Symbol.iterator]());

  while (true) {
    const tuple = [];

    for (let i of iters) {
      let v = i.next();

      if (v.done) {
        return;
      }

      tuple.push(v.value);
    }

    yield tuple;
  }
}
},{}],"../node_modules/@thi.ng/transducers/xform/convolve.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.convolve1d = convolve1d;
exports.convolve2d = convolve2d;
exports.buildKernel2d = exports.buildKernel1d = void 0;

var _errors = require("@thi.ng/errors");

var _range = require("../iter/range");

var _range2d = require("../iter/range2d");

var _zip = require("../iter/zip");

var _iterator = require("../iterator");

var _add = require("../rfn/add");

var _transduce = require("../transduce");

var _map = require("./map");

const buildKernel1d = (weights, w) => {
  const w2 = w >> 1;
  return [...(0, _zip.zip)(weights, (0, _range.range)(-w2, w2 + 1))];
};

exports.buildKernel1d = buildKernel1d;

const buildKernel2d = (weights, w, h = w) => {
  const w2 = w >> 1;
  const h2 = h >> 1;
  return [...(0, _zip.zip)(weights, (0, _range2d.range2d)(-w2, w2 + 1, -h2, h2 + 1))];
};

exports.buildKernel2d = buildKernel2d;

const kernelLookup1d = (src, x, width, wrap, border) => wrap ? ({
  0: w,
  1: ox
}) => {
  const xx = x < -ox ? width + ox : x >= width - ox ? ox - 1 : x + ox;
  return w * src[xx];
} : ({
  0: w,
  1: ox
}) => {
  return x < -ox || x >= width - ox ? border : w * src[x + ox];
};

const kernelLookup2d = (src, x, y, width, height, wrap, border) => wrap ? ({
  0: w,
  1: {
    0: ox,
    1: oy
  }
}) => {
  const xx = x < -ox ? width + ox : x >= width - ox ? ox - 1 : x + ox;
  const yy = y < -oy ? height + oy : y >= height - oy ? oy - 1 : y + oy;
  return w * src[yy * width + xx];
} : ({
  0: w,
  1: {
    0: ox,
    1: oy
  }
}) => {
  return x < -ox || y < -oy || x >= width - ox || y >= height - oy ? border : w * src[(y + oy) * width + x + ox];
};

const kernelError = () => (0, _errors.illegalArgs)(`no kernel or kernel config`);

function convolve1d(opts, indices) {
  if (indices) {
    return (0, _iterator.iterator1)(convolve1d(opts), indices);
  }

  const {
    src,
    width
  } = opts;
  const wrap = opts.wrap !== false;
  const border = opts.border || 0;
  const rfn = opts.reduce || _add.add;
  let kernel = opts.kernel;

  if (!kernel) {
    !(opts.weights && opts.kwidth) && kernelError();
    kernel = buildKernel1d(opts.weights, opts.kwidth);
  }

  return (0, _map.map)(p => (0, _transduce.transduce)((0, _map.map)(kernelLookup1d(src, p, width, wrap, border)), rfn(), kernel));
}

function convolve2d(opts, indices) {
  if (indices) {
    return (0, _iterator.iterator1)(convolve2d(opts), indices);
  }

  const {
    src,
    width,
    height
  } = opts;
  const wrap = opts.wrap !== false;
  const border = opts.border || 0;
  const rfn = opts.reduce || _add.add;
  let kernel = opts.kernel;

  if (!kernel) {
    !(opts.weights && opts.kwidth && opts.kheight) && kernelError();
    kernel = buildKernel2d(opts.weights, opts.kwidth, opts.kheight);
  }

  return (0, _map.map)(p => (0, _transduce.transduce)((0, _map.map)(kernelLookup2d(src, p[0], p[1], width, height, wrap, border)), rfn(), kernel));
}
},{"@thi.ng/errors":"../node_modules/@thi.ng/errors/index.js","../iter/range":"../node_modules/@thi.ng/transducers/iter/range.js","../iter/range2d":"../node_modules/@thi.ng/transducers/iter/range2d.js","../iter/zip":"../node_modules/@thi.ng/transducers/iter/zip.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js","../rfn/add":"../node_modules/@thi.ng/transducers/rfn/add.js","../transduce":"../node_modules/@thi.ng/transducers/transduce.js","./map":"../node_modules/@thi.ng/transducers/xform/map.js"}],"../node_modules/@thi.ng/transducers/xform/dedupe.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dedupe = dedupe;

var _api = require("@thi.ng/api");

var _compr = require("../func/compr");

var _iterator = require("../iterator");

function dedupe(...args) {
  return (0, _iterator.$iter)(dedupe, args) || (rfn => {
    const r = rfn[2];
    const equiv = args[0];
    let prev = _api.SEMAPHORE;
    return (0, _compr.compR)(rfn, equiv ? (acc, x) => {
      acc = prev !== _api.SEMAPHORE && equiv(prev, x) ? acc : r(acc, x);
      prev = x;
      return acc;
    } : (acc, x) => {
      acc = prev === x ? acc : r(acc, x);
      prev = x;
      return acc;
    });
  });
}
},{"@thi.ng/api":"../node_modules/@thi.ng/api/index.js","../func/compr":"../node_modules/@thi.ng/transducers/func/compr.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js"}],"../node_modules/@thi.ng/transducers/xform/delayed.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.delayed = void 0;

var _compose = require("@thi.ng/compose");

var _map = require("./map");

/**
 * Yields transducer which wraps incoming values in promises, which each
 * resolve after specified delay time (in ms).
 *
 * @remarks
 * Only to be used in async contexts and NOT with {@link (transduce:1)}
 * directly.
 *
 * @param t -
 */
const delayed = t => (0, _map.map)(x => (0, _compose.delayed)(x, t));

exports.delayed = delayed;
},{"@thi.ng/compose":"../node_modules/@thi.ng/compose/index.js","./map":"../node_modules/@thi.ng/transducers/xform/map.js"}],"../node_modules/@thi.ng/transducers/xform/distinct.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.distinct = distinct;

var _compr = require("../func/compr");

var _iterator = require("../iterator");

function distinct(...args) {
  return (0, _iterator.$iter)(distinct, args) || (rfn => {
    const r = rfn[2];
    const opts = args[0] || {};
    const key = opts.key;

    const seen = (opts.cache || (() => new Set()))();

    return (0, _compr.compR)(rfn, key ? (acc, x) => {
      const k = key(x);
      return !seen.has(k) ? (seen.add(k), r(acc, x)) : acc;
    } : (acc, x) => !seen.has(x) ? (seen.add(x), r(acc, x)) : acc);
  });
}
},{"../func/compr":"../node_modules/@thi.ng/transducers/func/compr.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js"}],"../node_modules/@thi.ng/transducers/xform/throttle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.throttle = throttle;

var _checks = require("@thi.ng/checks");

var _compr = require("../func/compr");

var _iterator = require("../iterator");

function throttle(pred, src) {
  return (0, _checks.isIterable)(src) ? (0, _iterator.iterator1)(throttle(pred), src) : rfn => {
    const r = rfn[2];

    const _pred = pred();

    return (0, _compr.compR)(rfn, (acc, x) => _pred(x) ? r(acc, x) : acc);
  };
}
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","../func/compr":"../node_modules/@thi.ng/transducers/func/compr.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js"}],"../node_modules/@thi.ng/transducers/xform/drop-nth.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dropNth = dropNth;

var _checks = require("@thi.ng/checks");

var _iterator = require("../iterator");

var _throttle = require("./throttle");

function dropNth(n, src) {
  if ((0, _checks.isIterable)(src)) {
    return (0, _iterator.iterator1)(dropNth(n), src);
  }

  n = Math.max(0, n - 1);
  return (0, _throttle.throttle)(() => {
    let skip = n;
    return () => skip-- > 0 ? true : (skip = n, false);
  });
}
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js","./throttle":"../node_modules/@thi.ng/transducers/xform/throttle.js"}],"../node_modules/@thi.ng/transducers/xform/drop-while.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dropWhile = dropWhile;

var _compr = require("../func/compr");

var _iterator = require("../iterator");

function dropWhile(...args) {
  return (0, _iterator.$iter)(dropWhile, args) || (rfn => {
    const r = rfn[2];
    const pred = args[0];
    let ok = true;
    return (0, _compr.compR)(rfn, (acc, x) => (ok = ok && pred(x)) ? acc : r(acc, x));
  });
}
},{"../func/compr":"../node_modules/@thi.ng/transducers/func/compr.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js"}],"../node_modules/@thi.ng/transducers/xform/drop.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.drop = drop;

var _checks = require("@thi.ng/checks");

var _compr = require("../func/compr");

var _iterator = require("../iterator");

function drop(n, src) {
  return (0, _checks.isIterable)(src) ? (0, _iterator.iterator1)(drop(n), src) : rfn => {
    const r = rfn[2];
    let m = n;
    return (0, _compr.compR)(rfn, (acc, x) => m > 0 ? (m--, acc) : r(acc, x));
  };
}
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","../func/compr":"../node_modules/@thi.ng/transducers/func/compr.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js"}],"../node_modules/@thi.ng/transducers/xform/duplicate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.duplicate = duplicate;

var _checks = require("@thi.ng/checks");

var _compr = require("../func/compr");

var _iterator = require("../iterator");

var _reduced = require("../reduced");

function duplicate(n = 1, src) {
  return (0, _checks.isIterable)(src) ? (0, _iterator.iterator)(duplicate(n), src) : rfn => {
    const r = rfn[2];
    return (0, _compr.compR)(rfn, (acc, x) => {
      for (let i = n; i >= 0 && !(0, _reduced.isReduced)(acc); i--) {
        acc = r(acc, x);
      }

      return acc;
    });
  };
}
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","../func/compr":"../node_modules/@thi.ng/transducers/func/compr.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js","../reduced":"../node_modules/@thi.ng/transducers/reduced.js"}],"../node_modules/@thi.ng/transducers/xform/filter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.filter = filter;

var _checks = require("@thi.ng/checks");

var _compr = require("../func/compr");

var _iterator = require("../iterator");

function filter(pred, src) {
  return (0, _checks.isIterable)(src) ? (0, _iterator.iterator1)(filter(pred), src) : rfn => {
    const r = rfn[2];
    return (0, _compr.compR)(rfn, (acc, x) => pred(x) ? r(acc, x) : acc);
  };
}
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","../func/compr":"../node_modules/@thi.ng/transducers/func/compr.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js"}],"../node_modules/@thi.ng/arrays/api.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/arrays/binary-search.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bsEQ = exports.bsGE = exports.bsGT = exports.bsLE = exports.bsLT = exports.binarySearch32 = exports.binarySearch16 = exports.binarySearch8 = exports.binarySearch4 = exports.binarySearchNumeric = exports.binarySearch = void 0;

var _compare = require("@thi.ng/compare");

/**
 * Returns the supposed index of `x` in pre-sorted array-like collection
 * `buf`.
 *
 * @remarks
 * If `x` can't be found, returns `-index-1`, representing the negative
 * of the index, were `x` to be inserted into `buf`. E.g if the return
 * value is -3, `x` would appear/insert at index 2.
 *
 * The optional `key` function is used to obtain the actual sort value
 * of `x` and each array item (default: identity).
 *
 * The optional `cmp` comparator (default:
 * {@link @thi.ng/compare#compare}) is then used to identify the index
 * of `x`. The sort order of `buf` MUST be compatible with that of
 * `cmp`.
 *
 * @example
 * ```ts
 * binarySearch([2, 4, 6], 5);
 * // -3
 * ```
 *
 * @param buf - array
 * @param x - search value
 * @param key - key function
 * @param cmp - comparator
 * @param low - min index
 * @param high - max index
 */
const binarySearch = (buf, x, key = x => x, cmp = _compare.compare, low = 0, high = buf.length - 1) => {
  const kx = key(x);

  while (low <= high) {
    const mid = low + high >>> 1;
    const c = cmp(key(buf[mid]), kx);

    if (c < 0) {
      low = mid + 1;
    } else if (c > 0) {
      high = mid - 1;
    } else {
      return mid;
    }
  }

  return -low - 1;
};
/**
 * Similar to {@link binarySearch}, but optimized for numeric arrays and
 * supporting custom comparators (default:
 * {@link @thi.ng/compare#compareNumAsc}).
 *
 * @param buf - array
 * @param x - search value
 * @param cmp - comparator
 * @param low - min index
 * @param high - max index
 */


exports.binarySearch = binarySearch;

const binarySearchNumeric = (buf, x, cmp = _compare.compareNumAsc, low = 0, high = buf.length - 1) => {
  while (low <= high) {
    const mid = low + high >>> 1;
    const c = cmp(buf[mid], x);

    if (c < 0) {
      low = mid + 1;
    } else if (c > 0) {
      high = mid - 1;
    } else {
      return mid;
    }
  }

  return -low - 1;
};
/**
 * Non-recursive, optimized binary search for fixed size numeric arrays of 4
 * values. Returns index of `x` or `-index-1` if not found.
 *
 * @param buf
 * @param x
 */


exports.binarySearchNumeric = binarySearchNumeric;

const binarySearch4 = (buf, x) => {
  let idx = buf[2] <= x ? 2 : 0;
  idx |= buf[idx + 1] <= x ? 1 : 0;
  return buf[idx] === x ? idx : -idx - 1;
};
/**
 * Non-recursive, optimized binary search for fixed size numeric arrays of 8
 * values. Returns index of `x` or `-index-1` if not found.
 *
 * @param buf
 * @param x
 */


exports.binarySearch4 = binarySearch4;

const binarySearch8 = (buf, x) => {
  let idx = buf[4] <= x ? 4 : 0;
  idx |= buf[idx + 2] <= x ? 2 : 0;
  idx |= buf[idx + 1] <= x ? 1 : 0;
  return buf[idx] === x ? idx : -idx - 1;
};
/**
 * Non-recursive, optimized binary search for fixed size numeric arrays of 16
 * values. Returns index of `x` or `-index-1` if not found.
 *
 * @param buf
 * @param x
 */


exports.binarySearch8 = binarySearch8;

const binarySearch16 = (buf, x) => {
  let idx = buf[8] <= x ? 8 : 0;
  idx |= buf[idx + 4] <= x ? 4 : 0;
  idx |= buf[idx + 2] <= x ? 2 : 0;
  idx |= buf[idx + 1] <= x ? 1 : 0;
  return buf[idx] === x ? idx : -idx - 1;
};
/**
 * Non-recursive, optimized binary search for fixed size numeric arrays of 32
 * values. Returns index of `x` or `-index-1` if not found.
 *
 * @param buf
 * @param x
 */


exports.binarySearch16 = binarySearch16;

const binarySearch32 = (buf, x) => {
  let idx = buf[16] <= x ? 16 : 0;
  idx |= buf[idx + 4] <= x ? 8 : 0;
  idx |= buf[idx + 4] <= x ? 4 : 0;
  idx |= buf[idx + 2] <= x ? 2 : 0;
  idx |= buf[idx + 1] <= x ? 1 : 0;
  return buf[idx] === x ? idx : -idx - 1;
};
/**
 * {@link binarySearch} result index classifier for predecessor queries.
 * Returns index of last item less than search value or -1 if no such
 * values exist.
 *
 * @example
 * ```ts
 * bsLT(binarySearch([10, 20, 30, 40], 25))
 * // 1
 * ```
 *
 * @param i - binarySearch result index
 */


exports.binarySearch32 = binarySearch32;

const bsLT = i => i < 0 ? -i - 2 : i - 1;
/**
 * Similar to {@link bsLT}, but for less-than-equals queries.
 *
 * @param i - binarySearch result index
 */


exports.bsLT = bsLT;

const bsLE = i => i < 0 ? -i - 2 : i;
/**
 * {@link binarySearch} result index classifier for successor queries.
 * Returns index of first item greater than search value or -1 if no
 * such values exist.
 *
 * @example
 * ```ts
 * src = [10, 20, 30, 40];
 *
 * bsGT(binarySearch(src, 25), src.length)
 * // 2
 *
 * bsGT(binarySearch(src, 40), src.length)
 * // -1
 * ```
 *
 * @param i - binarySearch result index
 * @param n - array length
 */


exports.bsLE = bsLE;

const bsGT = (i, n) => (i = i < 0 ? -i - 1 : i + 1, i < n ? i : -1);
/**
 * Similar to {@link bsGT}, but for greater-than-equals queries.
 *
 * @param i - binarySearch result index
 * @param n - array length
 */


exports.bsGT = bsGT;

const bsGE = (i, n) => (i = i < 0 ? -i - 1 : i, i < n ? i : -1);
/**
 * {@link binarySearch} result index classifier for equals queries.
 * Merely syntax sugar, casting any non-found result indices to -1.
 *
 * @param i - binarySearch result index
 */


exports.bsGE = bsGE;

const bsEQ = i => i < 0 ? -1 : i;

exports.bsEQ = bsEQ;
},{"@thi.ng/compare":"../node_modules/@thi.ng/compare/index.js"}],"../node_modules/@thi.ng/equiv/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.equivObject = exports.equivMap = exports.equivSet = exports.equivArrayLike = exports.equiv = void 0;
const OBJP = Object.getPrototypeOf({});
const FN = "function";
const STR = "string";

const equiv = (a, b) => {
  let proto;

  if (a === b) {
    return true;
  }

  if (a != null) {
    if (typeof a.equiv === FN) {
      return a.equiv(b);
    }
  } else {
    return a == b;
  }

  if (b != null) {
    if (typeof b.equiv === FN) {
      return b.equiv(a);
    }
  } else {
    return a == b;
  }

  if (typeof a === STR || typeof b === STR) {
    return false;
  }

  if ((proto = Object.getPrototypeOf(a), proto == null || proto === OBJP) && (proto = Object.getPrototypeOf(b), proto == null || proto === OBJP)) {
    return equivObject(a, b);
  }

  if (typeof a !== FN && a.length !== undefined && typeof b !== FN && b.length !== undefined) {
    return equivArrayLike(a, b);
  }

  if (a instanceof Set && b instanceof Set) {
    return equivSet(a, b);
  }

  if (a instanceof Map && b instanceof Map) {
    return equivMap(a, b);
  }

  if (a instanceof Date && b instanceof Date) {
    return a.getTime() === b.getTime();
  }

  if (a instanceof RegExp && b instanceof RegExp) {
    return a.toString() === b.toString();
  } // NaN


  return a !== a && b !== b;
};

exports.equiv = equiv;

const equivArrayLike = (a, b, _equiv = equiv) => {
  let l = a.length;

  if (l === b.length) {
    while (--l >= 0 && _equiv(a[l], b[l]));
  }

  return l < 0;
};

exports.equivArrayLike = equivArrayLike;

const equivSet = (a, b, _equiv = equiv) => a.size === b.size && _equiv([...a.keys()].sort(), [...b.keys()].sort());

exports.equivSet = equivSet;

const equivMap = (a, b, _equiv = equiv) => a.size === b.size && _equiv([...a].sort(), [...b].sort());

exports.equivMap = equivMap;

const equivObject = (a, b, _equiv = equiv) => {
  if (Object.keys(a).length !== Object.keys(b).length) {
    return false;
  }

  for (let k in a) {
    if (!b.hasOwnProperty(k) || !_equiv(a[k], b[k])) {
      return false;
    }
  }

  return true;
};

exports.equivObject = equivObject;
},{}],"../node_modules/@thi.ng/arrays/ends-with.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.endsWith = void 0;

var _equiv = require("@thi.ng/equiv");

/**
 * Returns true if the last items of `buf` are the same items as in
 * `needle`.
 *
 * @remarks
 * This means `buf` should have at least the same length as `needle` for
 * this to be true.
 *
 * By default, uses {@link @thi.ng/equiv#equiv} for equality checking.
 *
 * {@link startsWith}
 *
 * @param buf - array
 * @param needle - search values (array)
 * @param equiv - equivalence predicate
 */
const endsWith = (buf, needle, equiv = _equiv.equiv) => {
  let i = buf.length;
  let j = needle.length;
  if (i < j) return false;

  while (--i, --j >= 0 && equiv(buf[i], needle[j])) {}

  return j < 0;
};

exports.endsWith = endsWith;
},{"@thi.ng/equiv":"../node_modules/@thi.ng/equiv/index.js"}],"../node_modules/@thi.ng/arrays/ensure-iterable.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ensureIterable = void 0;

var _errors = require("@thi.ng/errors");

/**
 * Attempts to obtain an iterator from `x` and throws error if `x` is
 * not iterable.
 *
 * @param x -
 */
const ensureIterable = x => {
  (x == null || !x[Symbol.iterator]) && (0, _errors.illegalArgs)(`value is not iterable: ${x}`);
  return x;
};

exports.ensureIterable = ensureIterable;
},{"@thi.ng/errors":"../node_modules/@thi.ng/errors/index.js"}],"../node_modules/@thi.ng/arrays/ensure-array.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ensureArrayLike = exports.ensureArray = void 0;

var _checks = require("@thi.ng/checks");

var _ensureIterable = require("./ensure-iterable");

/**
 * Helper function to avoid unnecessary copying if `x` is already an
 * array.
 *
 * @remarks
 * First checks if `x` is an array and if so returns it. Else attempts
 * to obtain an iterator from `x` and if successful collects it as array
 * and returns it. Throws error if `x` isn't iterable.
 *
 * @param x -
 */
const ensureArray = x => (0, _checks.isArray)(x) ? x : [...(0, _ensureIterable.ensureIterable)(x)];
/**
 * Similar to {@link ensureArray}, but for `ArrayLike` types.
 *
 * {@link ensureArray}
 *
 * @param x -
 */


exports.ensureArray = ensureArray;

const ensureArrayLike = x => (0, _checks.isArrayLike)(x) ? x : [...(0, _ensureIterable.ensureIterable)(x)];

exports.ensureArrayLike = ensureArrayLike;
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","./ensure-iterable":"../node_modules/@thi.ng/arrays/ensure-iterable.js"}],"../node_modules/@thi.ng/arrays/find.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.findIndex = exports.find = void 0;

var _equiv2 = require("@thi.ng/equiv");

/**
 * Similar to `Array.find()`, but uses {@link @thi.ng/equiv#equiv} as
 * default predicate.
 *
 * @param buf - array
 * @param x - search value
 * @param equiv - equivalence predicate
 */
const find = (buf, x, equiv = _equiv2.equiv) => {
  const i = findIndex(buf, x, equiv);
  return i !== -1 ? buf[i] : undefined;
};
/**
 * Similar to `Array.findIndex()`, but uses {@link @thi.ng/equiv#equiv}
 * as default predicate.
 *
 * @param buf - array
 * @param x - search value
 * @param equiv - equivalence predicate
 */


exports.find = find;

const findIndex = (buf, x, equiv = _equiv2.equiv) => {
  for (let i = buf.length; --i >= 0;) {
    if (equiv(x, buf[i])) return i;
  }

  return -1;
};

exports.findIndex = findIndex;
},{"@thi.ng/equiv":"../node_modules/@thi.ng/equiv/index.js"}],"../node_modules/@thi.ng/arrays/fill-range.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fillRange = void 0;

/**
 * Fills given array with values in [start .. end) interval from `index`
 * and with optional `step` size.
 *
 * @remarks
 * `start` and `end` default to 0 and array length, `step` defaults to 1
 * or -1 (depending on range). Returns array.
 *
 * @example
 * ```ts
 * fillRange(new Array(5))
 * // [ 0, 1, 2, 3, 4 ]
 *
 * fillRange(fillRange([], 0, 10, 20, 2), 5, 20, 8, -2)
 * // [ 10, 12, 14, 16, 18, 20, 18, 16, 14, 12, 10 ]
 * ```
 *
 * @param buf -
 * @param index -
 * @param start -
 * @param end -
 * @param step -
 */
const fillRange = (buf, index = 0, start = 0, end = buf.length, step = end > start ? 1 : -1) => {
  if (step > 0) {
    for (; start < end; start += step) buf[index++] = start;
  } else {
    for (; start > end; start += step) buf[index++] = start;
  }

  return buf;
};

exports.fillRange = fillRange;
},{}],"../node_modules/@thi.ng/arrays/fuzzy-match.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fuzzyMatch = void 0;

var _equiv = require("@thi.ng/equiv");

/**
 * Performs a fuzzy search of `query` in `domain` and returns `true` if
 * successful.
 *
 * @remarks
 * The optional `equiv` predicate can be used to customize item equality
 * checking. Uses {@link @thi.ng/equiv#equiv} by default.
 *
 * Adapted and generalized from:
 * {@link https://github.com/bevacqua/fufuzzyzzysearch} (MIT)
 *
 * {@link @thi.ng/transducers#(filterFuzzy:1)}
 *
 * @param domain - array
 * @param query - search value
 * @param equiv - equivalence predicate
 */
const fuzzyMatch = (domain, query, equiv = _equiv.equiv) => {
  const nd = domain.length;
  const nq = query.length;

  if (nq > nd) {
    return false;
  }

  if (nq === nd) {
    return equiv(query, domain);
  }

  next: for (let i = 0, j = 0; i < nq; i++) {
    const q = query[i];

    while (j < nd) {
      if (equiv(domain[j++], q)) {
        continue next;
      }
    }

    return false;
  }

  return true;
};

exports.fuzzyMatch = fuzzyMatch;
},{"@thi.ng/equiv":"../node_modules/@thi.ng/equiv/index.js"}],"../node_modules/@thi.ng/arrays/is-sorted.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isSorted = void 0;

var _compare = require("@thi.ng/compare");

/**
 * Returns true if the given array and its elements in the selected
 * index range (entire array, by default) are in the order defined by
 * the given comparator ({@link @thi.ng/compare#compare} by default).
 *
 * @remarks
 * Always returns true, if effective index range (or array length) has
 * less than two elements. No bounds checking.
 *
 * @example
 * ```ts
 * isSorted([3, 2, 1])
 * // false
 *
 * // w/ custom comparator
 * isSorted([3, 2, 1], (a, b) => b - a)
 * // true
 * ```
 *
 * @param arr - array
 * @param cmp - comparator
 * @param start - start index
 * @param end - end index
 */
const isSorted = (arr, cmp = _compare.compare, start = 0, end = arr.length) => {
  let prev = arr[start];

  while (++start < end) {
    const curr = arr[start];
    if (cmp(prev, curr) > 0) return false;
    prev = curr;
  }

  return true;
};

exports.isSorted = isSorted;
},{"@thi.ng/compare":"../node_modules/@thi.ng/compare/index.js"}],"../node_modules/@thi.ng/arrays/iterator.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.arrayIterator = arrayIterator;

/**
 * Returns iterator of nullable array w/ optional index range support
 * and/or reverse iteration order. The default range covers the entire
 * array.
 *
 * @remarks
 * If `start` > `end`, yields values in reverse order. No bounds
 * checking is performed.
 *
 * @param buf - array or null
 * @param start - start index
 * @param end - end index (excluded)
 */
function* arrayIterator(buf, start = 0, end) {
  if (!buf) return;
  start = start;
  end === undefined && (end = buf.length);
  const step = start <= end ? 1 : -1;

  for (; start !== end; start += step) {
    yield buf[start];
  }
}
},{}],"../node_modules/@thi.ng/arrays/levenshtein.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.normalizedLevenshtein = exports.levenshtein = void 0;

const eqStrict = (a, b) => a === b;
/**
 * Computes Levenshtein distance w/ optionally given `maxDist` (for
 * early termination, default: ∞) and equality predicate (default:
 * `===`). Returns 0 if both `a` and `b` are equal (based on predicate).
 * Returns `Infinity` if actual distance > `maxDist`.
 *
 * @remarks
 *
 * Based on:
 * - https://en.wikipedia.org/wiki/Levenshtein_distance
 * - https://en.wikipedia.org/wiki/Wagner%E2%80%93Fischer_algorithm
 * - https://github.com/gustf/js-levenshtein/blob/develop/index.js
 *
 * @example
 * ```ts
 * levenshtein([1, 2, 3, 4, 5], [1, 2, 4, 3, 5]);
 * // 2
 *
 * levenshtein(
 *   [{ id: 1 }, { id: 2 }, { id: 3 }, { id: 4 }, { id: 5 }],
 *   [{ id: 4 }, { id: 5 }, { id: 3 }, { id: 1 }, { id: 2 }],
 *   // max dist
 *   2,
 *   // predicate
 *   (a, b) => a.id === b.id
 * )
 * // Infinity
 * ```
 *
 * @param a -
 * @param b -
 * @param maxDist -
 * @param equiv -
 */


const levenshtein = (a, b, maxDist = Infinity, equiv = eqStrict) => {
  if (a === b) {
    return 0;
  }

  if (a.length > b.length) {
    const tmp = a;
    a = b;
    b = tmp;
  }

  let la = a.length;
  let lb = b.length;

  while (la > 0 && equiv(a[~-la], b[~-lb])) {
    la--;
    lb--;
  }

  let offset = 0;

  while (offset < la && equiv(a[offset], b[offset])) {
    offset++;
  }

  la -= offset;
  lb -= offset;

  if (la === 0 || lb < 3) {
    return lb;
  }

  let x = 0;
  let y;
  let minDist;
  let d0;
  let d1;
  let d2;
  let d3;
  let dd;
  let dy;
  let ay;
  let bx0;
  let bx1;
  let bx2;
  let bx3;

  const _min = (d0, d1, d2, bx, ay) => {
    return d0 < d1 || d2 < d1 ? d0 > d2 ? d2 + 1 : d0 + 1 : equiv(ay, bx) ? d1 : d1 + 1;
  };

  const vector = [];

  for (y = 0; y < la; y++) {
    vector.push(y + 1, a[offset + y]);
  }

  const len = vector.length - 1;
  const lb3 = lb - 3;

  for (; x < lb3;) {
    bx0 = b[offset + (d0 = x)];
    bx1 = b[offset + (d1 = x + 1)];
    bx2 = b[offset + (d2 = x + 2)];
    bx3 = b[offset + (d3 = x + 3)];
    dd = x += 4;
    minDist = Infinity;

    for (y = 0; y < len; y += 2) {
      dy = vector[y];
      ay = vector[y + 1];
      d0 = _min(dy, d0, d1, bx0, ay);
      d1 = _min(d0, d1, d2, bx1, ay);
      d2 = _min(d1, d2, d3, bx2, ay);
      dd = _min(d2, d3, dd, bx3, ay);
      dd < minDist && (minDist = dd);
      vector[y] = dd;
      d3 = d2;
      d2 = d1;
      d1 = d0;
      d0 = dy;
    }

    if (minDist > maxDist) return Infinity;
  }

  for (; x < lb;) {
    bx0 = b[offset + (d0 = x)];
    dd = ++x;
    minDist = Infinity;

    for (y = 0; y < len; y += 2) {
      dy = vector[y];
      vector[y] = dd = _min(dy, d0, dd, bx0, vector[y + 1]);
      dd < minDist && (minDist = dd);
      d0 = dy;
    }

    if (minDist > maxDist) return Infinity;
  }

  return dd;
};
/**
 * Normalized version of {@link levenshtein}, i.e. the actual L-dist
 * divided by the length of the longest input (or `Infinity` if actual
 * distance > `maxDist`).
 *
 * @param a -
 * @param b -
 * @param maxDist -
 * @param equiv -
 */


exports.levenshtein = levenshtein;

const normalizedLevenshtein = (a, b, maxDist = Infinity, equiv = eqStrict) => {
  const n = Math.max(a.length, b.length);
  return n > 0 ? levenshtein(a, b, maxDist, equiv) / n : 0;
};

exports.normalizedLevenshtein = normalizedLevenshtein;
},{}],"../node_modules/@thi.ng/arrays/peek.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.peek = exports.first = void 0;

/**
 * Returns first element of given array or `undefined` if array is empty.
 *
 * @param buf - array
 */
const first = buf => buf[0];
/**
 * Returns last element of given array or `undefined` if array is empty.
 *
 * @param buf - array
 */


exports.first = first;

const peek = buf => buf[buf.length - 1];

exports.peek = peek;
},{}],"../node_modules/@thi.ng/arrays/swap.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.multiSwap = exports.swap = void 0;

/**
 * Swaps values at index `x`/`y` in given array.
 *
 * @param arr - array
 * @param x - first index
 * @param y - other index
 */
const swap = (arr, x, y) => {
  const t = arr[x];
  arr[x] = arr[y];
  arr[y] = t;
};
/**
 * Higher-order version of {@link swap} for swapping elements in
 * multiple arrays at once and hence useful for sorting multiple arrays
 * based on a single criteria.
 *
 * @remarks
 * The returned function takes the same args as `swap`, and when called
 * swaps 2 elements in the array given to that function AND in the
 * arrays given to {@link multiSwap} itself. Provides fast routes for up to 3
 * extra arrays, then falls back to a loop-based approach.
 *
 * {@link (quickSort:1)}
 *
 * @example
 * ```ts
 * a = [2, 1];
 * b = [20, 10];
 * c = [40, 30];
 *
 * ms = multiSwap(b, c);
 * ms(a, 0, 1);
 *
 * // a: [1, 2]
 * // b: [10, 20]
 * // c: [30, 40]
 * ```
 *
 * @param xs - arrays to swap in later
 */


exports.swap = swap;

const multiSwap = (...xs) => {
  const [b, c, d] = xs;
  const n = xs.length;

  switch (n) {
    case 0:
      return swap;

    case 1:
      return (a, x, y) => {
        swap(a, x, y);
        swap(b, x, y);
      };

    case 2:
      return (a, x, y) => {
        swap(a, x, y);
        swap(b, x, y);
        swap(c, x, y);
      };

    case 3:
      return (a, x, y) => {
        swap(a, x, y);
        swap(b, x, y);
        swap(c, x, y);
        swap(d, x, y);
      };

    default:
      return (a, x, y) => {
        swap(a, x, y);

        for (let i = n; --i >= 0;) swap(xs[i], x, y);
      };
  }
};

exports.multiSwap = multiSwap;
},{}],"../node_modules/@thi.ng/arrays/quicksort.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.quickSort = quickSort;

var _compare = require("@thi.ng/compare");

var _swap2 = require("./swap");

// prettier-ignore
function quickSort(arr, _cmp = _compare.compare, _swap = _swap2.swap, start = 0, end = arr.length - 1) {
  if (start < end) {
    const pivot = arr[start + (end - start >> 1)];
    let s = start - 1;
    let e = end + 1;

    while (true) {
      do {
        s++;
      } while (_cmp(arr[s], pivot) < 0);

      do {
        e--;
      } while (_cmp(arr[e], pivot) > 0);

      if (s >= e) break;

      _swap(arr, s, e);
    }

    quickSort(arr, _cmp, _swap, start, e);
    quickSort(arr, _cmp, _swap, e + 1, end);
  }

  return arr;
}
},{"@thi.ng/compare":"../node_modules/@thi.ng/compare/index.js","./swap":"../node_modules/@thi.ng/arrays/swap.js"}],"../node_modules/@thi.ng/random/api.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/random/arandom.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ARandom = void 0;
const INV_MAX = 1 / 0xffffffff;

class ARandom {
  float(norm = 1) {
    return this.int() * INV_MAX * norm;
  }

  norm(norm = 1) {
    return (this.int() * INV_MAX - 0.5) * 2 * norm;
  }

  minmax(min, max) {
    return this.float() * (max - min) + min;
  }

}

exports.ARandom = ARandom;
},{}],"../node_modules/@thi.ng/random/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DEFAULT_SEED_160 = exports.DEFAULT_SEED_128 = exports.DEFAULT_SEED_32 = void 0;
const DEFAULT_SEED_32 = 0xdecafbad;
exports.DEFAULT_SEED_32 = DEFAULT_SEED_32;
const DEFAULT_SEED_128 = [0xdecafbad, 0x2fa9d75b, 0xe41f67e3, 0x5c83ec1a];
exports.DEFAULT_SEED_128 = DEFAULT_SEED_128;
const DEFAULT_SEED_160 = [...DEFAULT_SEED_128, 0xf69a5c71];
exports.DEFAULT_SEED_160 = DEFAULT_SEED_160;
},{}],"../node_modules/@thi.ng/random/smush32.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Smush32 = void 0;

var _arandom = require("./arandom");

var _constants = require("./constants");

// https://github.com/thi-ng/ct-head/blob/develop/random.h
// https://gist.github.com/voidqk/d112165a26b45244a65298933c0349a4
class Smush32 extends _arandom.ARandom {
  constructor(seed = _constants.DEFAULT_SEED_32) {
    super();
    this.buffer = new Uint32Array([seed, 0]);
  }

  copy() {
    const gen = new Smush32();
    gen.buffer.set(this.buffer);
    return gen;
  }

  seed(s) {
    this.buffer.set([s, 0]);
    return this;
  }

  int() {
    const b = this.buffer;
    const m = 0x5bd1e995;
    const k = b[1]++ * m >>> 0;
    const s = b[0] = (k ^ k >> 24 ^ b[0] * m >>> 0) * m >>> 0;
    return (s ^ s >>> 13) >>> 0;
  }

}

exports.Smush32 = Smush32;
},{"./arandom":"../node_modules/@thi.ng/random/arandom.js","./constants":"../node_modules/@thi.ng/random/constants.js"}],"../node_modules/@thi.ng/random/system.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SYSTEM = exports.SystemRandom = void 0;

var _arandom = require("./arandom");

const random = Math.random;

class SystemRandom extends _arandom.ARandom {
  int() {
    return random() * 4294967296 >>>
    /* 2**32 */
    0;
  }

  float(norm = 1) {
    return random() * norm;
  }

  norm(norm = 1) {
    return (random() - 0.5) * 2 * norm;
  }

}

exports.SystemRandom = SystemRandom;
const SYSTEM = new SystemRandom();
exports.SYSTEM = SYSTEM;
},{"./arandom":"../node_modules/@thi.ng/random/arandom.js"}],"../node_modules/@thi.ng/random/xoshiro128.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Xoshiro128 = void 0;

var _arandom = require("./arandom");

var _constants = require("./constants");

// http://prng.di.unimi.it/
// http://prng.di.unimi.it/xoshiro128plusplus.c
class Xoshiro128 extends _arandom.ARandom {
  constructor(seed = _constants.DEFAULT_SEED_128) {
    super();
    this.buffer = new Uint32Array(4);
    this.seed(seed);
  }

  copy() {
    return new Xoshiro128(this.buffer);
  }

  bytes() {
    return new Uint8Array(this.buffer.buffer);
  }

  seed(seed) {
    this.buffer.set(seed);
    return this;
  }

  int() {
    const s = this.buffer;
    let t = s[0] + s[3];
    const res = (t << 7 | t >>> 25) >>> 0;
    t = s[1] << 9;
    s[2] ^= s[0];
    s[3] ^= s[1];
    s[1] ^= s[2];
    s[0] ^= s[3];
    s[2] ^= t;
    t = s[3];
    s[3] = (t << 11 | t >>> 21) >>> 0;
    return res;
  }

}

exports.Xoshiro128 = Xoshiro128;
},{"./arandom":"../node_modules/@thi.ng/random/arandom.js","./constants":"../node_modules/@thi.ng/random/constants.js"}],"../node_modules/@thi.ng/random/xorshift128.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.XorShift128 = void 0;

var _arandom = require("./arandom");

var _constants = require("./constants");

// https://en.wikipedia.org/wiki/Xorshift
class XorShift128 extends _arandom.ARandom {
  constructor(seed = _constants.DEFAULT_SEED_128) {
    super();
    this.buffer = new Uint32Array(4);
    this.seed(seed);
  }

  copy() {
    return new XorShift128(this.buffer);
  }

  bytes() {
    return new Uint8Array(this.buffer.buffer);
  }

  seed(seed) {
    this.buffer.set(seed);
    return this;
  }

  int() {
    const s = this.buffer;
    let t = s[3];
    let w;
    t ^= t << 11;
    t ^= t >>> 8;
    s[3] = s[2];
    s[2] = s[1];
    w = s[1] = s[0];
    return s[0] = (t ^ w ^ w >>> 19) >>> 0;
  }

}

exports.XorShift128 = XorShift128;
},{"./arandom":"../node_modules/@thi.ng/random/arandom.js","./constants":"../node_modules/@thi.ng/random/constants.js"}],"../node_modules/@thi.ng/random/xorwow.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.XorWow = void 0;

var _arandom = require("./arandom");

var _constants = require("./constants");

// https://en.wikipedia.org/wiki/Xorshift#xorwow
class XorWow extends _arandom.ARandom {
  constructor(seed = _constants.DEFAULT_SEED_160) {
    super();
    this.buffer = new Uint32Array(5);
    this.seed(seed);
  }

  copy() {
    return new XorWow(this.buffer);
  }

  seed(seed) {
    this.buffer.set(seed);
    return this;
  }

  bytes() {
    return new Uint8Array(this.buffer.buffer);
  }

  int() {
    const s = this.buffer;
    let t = s[3];
    let w;
    t ^= t >>> 2;
    t ^= t << 1;
    s[3] = s[2];
    s[2] = s[1];
    w = s[1] = s[0];
    t ^= w;
    t ^= w << 4;
    s[0] = t;
    return t + (s[4] += 0x587c5) >>> 0;
  }

}

exports.XorWow = XorWow;
},{"./arandom":"../node_modules/@thi.ng/random/arandom.js","./constants":"../node_modules/@thi.ng/random/constants.js"}],"../node_modules/@thi.ng/random/xsadd.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.XsAdd = void 0;

var _arandom = require("./arandom");

var _constants = require("./constants");

// https://github.com/MersenneTwister-Lab/XSadd/blob/develop/xsadd.h
class XsAdd extends _arandom.ARandom {
  constructor(seed = _constants.DEFAULT_SEED_32) {
    super();
    this.buffer = new Uint32Array(4);
    this.seed(seed);
  }

  bytes() {
    return new Uint8Array(this.buffer.buffer);
  }

  copy() {
    const gen = new XsAdd();
    gen.buffer.set(this.buffer);
    return gen;
  }

  seed(seed) {
    const s = this.buffer;
    s.set([seed, 0, 0, 0]);

    for (let j = 0, i = 1; i < 8; j = i++) {
      let x = (s[j & 3] ^ s[j & 3] >>> 30) >>> 0;
      x = 0x8965 * x + ((0x6c07 * x & 0xffff) << 16) >>> 0;
      s[i & 3] ^= i + x >>> 0;
    }

    return this;
  }

  int() {
    const s = this.buffer;
    let t = s[0];
    t ^= t << 15;
    t ^= t >>> 18;
    t ^= s[3] << 11;
    s[0] = s[1];
    s[1] = s[2];
    s[2] = s[3];
    s[3] = t;
    return t + s[2] >>> 0;
  }

}

exports.XsAdd = XsAdd;
},{"./arandom":"../node_modules/@thi.ng/random/arandom.js","./constants":"../node_modules/@thi.ng/random/constants.js"}],"../node_modules/@thi.ng/random/gaussian-clt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.gaussian = void 0;

var _system = require("./system");

/**
 * Higher order function. Takes a {@link IRandom} instance and returns a no-arg
 * function which produces values with approx. normal distribution using CLT
 * (Central Limit Theorem).
 *
 * @remarks
 * The default configuration produces samples in the approx. [-0.5 .. 0.5] range
 * with a ~12% standard deviation.
 *
 * Reference: {@link https://en.wikipedia.org/wiki/Central_limit_theorem}
 *
 * @param rnd - default `SYSTEM`
 * @param n - num samples, default 24
 * @param offset - center offset / bias, default 0
 * @param scale - scale, default 1
 */
const gaussian = (rnd = _system.SYSTEM, n = 24, offset = 0, scale = 1) => () => {
  let sum = 0;
  let m = n;

  while (m-- > 0) sum += rnd.norm(scale);

  return sum / n + offset;
};

exports.gaussian = gaussian;
},{"./system":"../node_modules/@thi.ng/random/system.js"}],"../node_modules/@thi.ng/random/random-bytes.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.randomBytes = void 0;

var _checks = require("@thi.ng/checks");

var _system = require("./system");

/**
 * Fills given byte array with random values. Wrapper for
 * `crypto.getRandomValues()` with automatic fallback to using
 * `Math.random` if platform doesn't provide global crypto instance.
 */
const randomBytes = (0, _checks.hasCrypto)() ? buf => window.crypto.getRandomValues(buf) : buf => {
  const n = buf.length;

  for (let i = 0; i < n; i++) {
    buf[i] = _system.SYSTEM.int() & 0xff;
  }

  return buf;
};
exports.randomBytes = randomBytes;
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","./system":"../node_modules/@thi.ng/random/system.js"}],"../node_modules/@thi.ng/random/random-id.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.randomID = void 0;

var _system = require("./system");

/**
 * Generates and returns a random string of `len` characters (default
 * 4), plus optional given `prefix` and using only provided `syms`
 * characters (default lowercase a-z).
 *
 * @example
 * ```ts
 * randomID()
 * "qgdt"
 *
 * randomID(8, "id-", "0123456789ABCDEF")
 * "id-94EF6E1A"
 * ```
 *
 * @param len -
 * @param prefix -
 * @param syms -
 * @param rnd -
 */
const randomID = (len = 4, prefix = "", syms = "abcdefghijklmnopqrstuvwxyz", rnd = _system.SYSTEM) => {
  const n = syms.length;

  for (; --len >= 0;) {
    prefix += syms[rnd.float(n) | 0];
  }

  return prefix;
};

exports.randomID = randomID;
},{"./system":"../node_modules/@thi.ng/random/system.js"}],"../node_modules/@thi.ng/random/uuid.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.uuidv4Bytes = void 0;

var _randomBytes = require("./random-bytes");

/**
 * Uses {@link randomBytes} to fill given (optional) byte array with a UUIDv4.
 * Creates new Uint8Array if none given.
 *
 * @param buf -
 */
const uuidv4Bytes = buf => {
  buf = (0, _randomBytes.randomBytes)(buf || new Uint8Array(16));
  buf[6] = 0x40 | buf[6] & 0x0f;
  buf[8] = 0x80 | buf[8] & 0x3f;
  return buf;
};

exports.uuidv4Bytes = uuidv4Bytes;
},{"./random-bytes":"../node_modules/@thi.ng/random/random-bytes.js"}],"../node_modules/@thi.ng/random/weighted-random.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.weightedRandom = void 0;

var _api = require("@thi.ng/api");

var _system = require("./system");

/**
 * Returns a no-arg function which produces a random choice of given
 * weighted `choices` and using given {@link IRandom} instance (default
 * {@link SYSTEM}. If `weights` are given, it must be the same size as
 * `choices`. If omitted, each choice will have same probability.
 *
 * {@link https://www.electricmonk.nl/log/2009/12/23/weighted-random-distribution/}
 *
 * @param choices -
 * @param weights -
 */
const weightedRandom = (choices, weights, rnd = _system.SYSTEM) => {
  const n = choices.length;
  (0, _api.assert)(n > 0, "no choices given");
  const opts = choices.map(weights ? (x, i) => [x, weights[i]] : x => [x, 1]).sort((a, b) => b[1] - a[1]);
  const total = opts.reduce((acc, o) => acc + o[1], 0);
  (0, _api.assert)(total > 0, "no choices given");
  return () => {
    const r = rnd.float(total);
    let sum = total;

    for (let i = 0; i < n; i++) {
      sum -= opts[i][1];

      if (sum <= r) {
        return opts[i][0];
      }
    }

    return undefined;
  };
};

exports.weightedRandom = weightedRandom;
},{"@thi.ng/api":"../node_modules/@thi.ng/api/index.js","./system":"../node_modules/@thi.ng/random/system.js"}],"../node_modules/@thi.ng/random/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _api = require("./api");

Object.keys(_api).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _api[key];
    }
  });
});

var _arandom = require("./arandom");

Object.keys(_arandom).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _arandom[key];
    }
  });
});

var _smush = require("./smush32");

Object.keys(_smush).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _smush[key];
    }
  });
});

var _system = require("./system");

Object.keys(_system).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _system[key];
    }
  });
});

var _xoshiro = require("./xoshiro128");

Object.keys(_xoshiro).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _xoshiro[key];
    }
  });
});

var _xorshift = require("./xorshift128");

Object.keys(_xorshift).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _xorshift[key];
    }
  });
});

var _xorwow = require("./xorwow");

Object.keys(_xorwow).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _xorwow[key];
    }
  });
});

var _xsadd = require("./xsadd");

Object.keys(_xsadd).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _xsadd[key];
    }
  });
});

var _gaussianClt = require("./gaussian-clt");

Object.keys(_gaussianClt).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _gaussianClt[key];
    }
  });
});

var _randomBytes = require("./random-bytes");

Object.keys(_randomBytes).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _randomBytes[key];
    }
  });
});

var _randomId = require("./random-id");

Object.keys(_randomId).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _randomId[key];
    }
  });
});

var _uuid = require("./uuid");

Object.keys(_uuid).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _uuid[key];
    }
  });
});

var _weightedRandom = require("./weighted-random");

Object.keys(_weightedRandom).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _weightedRandom[key];
    }
  });
});
},{"./api":"../node_modules/@thi.ng/random/api.js","./arandom":"../node_modules/@thi.ng/random/arandom.js","./smush32":"../node_modules/@thi.ng/random/smush32.js","./system":"../node_modules/@thi.ng/random/system.js","./xoshiro128":"../node_modules/@thi.ng/random/xoshiro128.js","./xorshift128":"../node_modules/@thi.ng/random/xorshift128.js","./xorwow":"../node_modules/@thi.ng/random/xorwow.js","./xsadd":"../node_modules/@thi.ng/random/xsadd.js","./gaussian-clt":"../node_modules/@thi.ng/random/gaussian-clt.js","./random-bytes":"../node_modules/@thi.ng/random/random-bytes.js","./random-id":"../node_modules/@thi.ng/random/random-id.js","./uuid":"../node_modules/@thi.ng/random/uuid.js","./weighted-random":"../node_modules/@thi.ng/random/weighted-random.js"}],"../node_modules/@thi.ng/arrays/shuffle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.shuffle = exports.shuffleRange = void 0;

var _api = require("@thi.ng/api");

var _random = require("@thi.ng/random");

/**
 * Shuffles the items in the given index range of array `buf` using
 * Fisher-yates and optional `rnd` PRNG.
 *
 * @remarks
 * If neither `start` / `end` are given, the entire array will be
 * shuffled. Mutates original array.
 *
 * See {@link @thi.ng/random#IRandom}
 *
 * @param buf - array
 * @param n - num items
 * @param rnd - PRNG
 */
const shuffleRange = (buf, start = 0, end = buf.length, rnd = _random.SYSTEM) => {
  (0, _api.assert)(start >= 0 && end >= start && end <= buf.length, `illegal range ${start}..${end}`);
  let n = end - start;
  const l = n;

  if (l > 1) {
    while (--n >= 0) {
      const a = start + rnd.float(l) | 0;
      const b = start + rnd.float(l) | 0;
      const t = buf[a];
      buf[a] = buf[b];
      buf[b] = t;
    }
  }

  return buf;
};
/**
 * Applies {@link shuffleRange} to the given array. If `n` is given,
 * only the first `n` items are shuffled. Mutates original array.
 *
 * {@link shuffleRange}
 *
 * @param buf - array
 * @param n - num items
 * @param rnd - PRNG
 */


exports.shuffleRange = shuffleRange;

const shuffle = (buf, n = buf.length, rnd = _random.SYSTEM) => shuffleRange(buf, 0, n, rnd);

exports.shuffle = shuffle;
},{"@thi.ng/api":"../node_modules/@thi.ng/api/index.js","@thi.ng/random":"../node_modules/@thi.ng/random/index.js"}],"../node_modules/@thi.ng/arrays/starts-with.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.startsWith = void 0;

var _equiv = require("@thi.ng/equiv");

/**
 * Returns true if the first items of `buf` are the same items as in
 * `needle`.
 *
 * @remarks
 * This means `buf` should have at least the same length as `needle` for
 * this to be true.
 *
 * By default, uses {@link @thi.ng/equiv#equiv} for equality checking.
 *
 * {@link endsWith}
 *
 * @param buf - array
 * @param needle - search value
 * @param equiv - equivalence predicate
 */
const startsWith = (buf, needle, equiv = _equiv.equiv) => {
  let i = buf.length;
  let j = needle.length;
  if (i < j) return false;

  while (-j >= 0 && equiv(buf[j], needle[j])) {}

  return j < 0;
};

exports.startsWith = startsWith;
},{"@thi.ng/equiv":"../node_modules/@thi.ng/equiv/index.js"}],"../node_modules/@thi.ng/arrays/swizzle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.swizzle = void 0;

/**
 * Returns optimized function to immutably select, repeat, reshape and /
 * or reorder array / object values in the specified index order.
 *
 * @remarks
 * Fast paths for up to 8 indices are provided, before a loop based
 * approach is used.
 *
 * @example
 * ```ts
 * swizzle([0, 0, 0])([1, 2, 3, 4])    // [ 1, 1, 1 ]
 * swizzle([1, 1, 3, 3])([1, 2, 3, 4]) // [ 2, 2, 4, 4 ]
 * swizzle([2, 0])([1, 2, 3])          // [ 3, 1 ]
 * ```
 *
 * @example
 * Objects can be used as input to the generated function, but the
 * result will always be in array form.

 * ```ts
 * swizzle(["a", "c", "b"])({a: 1, b: 2, c: 3}) // [ 1, 3, 2 ]
 * ```
 *
 * @param order - indices
 */
const swizzle = order => {
  const [a, b, c, d, e, f, g, h] = order;

  switch (order.length) {
    case 0:
      return () => [];

    case 1:
      return x => [x[a]];

    case 2:
      return x => [x[a], x[b]];

    case 3:
      return x => [x[a], x[b], x[c]];

    case 4:
      return x => [x[a], x[b], x[c], x[d]];

    case 5:
      return x => [x[a], x[b], x[c], x[d], x[e]];

    case 6:
      return x => [x[a], x[b], x[c], x[d], x[e], x[f]];

    case 7:
      return x => [x[a], x[b], x[c], x[d], x[e], x[f], x[g]];

    case 8:
      return x => [x[a], x[b], x[c], x[d], x[e], x[f], x[g], x[h]];

    default:
      return x => {
        const res = [];

        for (let i = order.length; --i >= 0;) {
          res[i] = x[order[i]];
        }

        return res;
      };
  }
};

exports.swizzle = swizzle;
},{}],"../node_modules/@thi.ng/arrays/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _api = require("./api");

Object.keys(_api).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _api[key];
    }
  });
});

var _binarySearch = require("./binary-search");

Object.keys(_binarySearch).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _binarySearch[key];
    }
  });
});

var _endsWith = require("./ends-with");

Object.keys(_endsWith).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _endsWith[key];
    }
  });
});

var _ensureArray = require("./ensure-array");

Object.keys(_ensureArray).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _ensureArray[key];
    }
  });
});

var _ensureIterable = require("./ensure-iterable");

Object.keys(_ensureIterable).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _ensureIterable[key];
    }
  });
});

var _find = require("./find");

Object.keys(_find).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _find[key];
    }
  });
});

var _fillRange = require("./fill-range");

Object.keys(_fillRange).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _fillRange[key];
    }
  });
});

var _fuzzyMatch = require("./fuzzy-match");

Object.keys(_fuzzyMatch).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _fuzzyMatch[key];
    }
  });
});

var _isSorted = require("./is-sorted");

Object.keys(_isSorted).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isSorted[key];
    }
  });
});

var _iterator = require("./iterator");

Object.keys(_iterator).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _iterator[key];
    }
  });
});

var _levenshtein = require("./levenshtein");

Object.keys(_levenshtein).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _levenshtein[key];
    }
  });
});

var _peek = require("./peek");

Object.keys(_peek).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _peek[key];
    }
  });
});

var _quicksort = require("./quicksort");

Object.keys(_quicksort).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _quicksort[key];
    }
  });
});

var _shuffle = require("./shuffle");

Object.keys(_shuffle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _shuffle[key];
    }
  });
});

var _startsWith = require("./starts-with");

Object.keys(_startsWith).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _startsWith[key];
    }
  });
});

var _swap = require("./swap");

Object.keys(_swap).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _swap[key];
    }
  });
});

var _swizzle = require("./swizzle");

Object.keys(_swizzle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _swizzle[key];
    }
  });
});
},{"./api":"../node_modules/@thi.ng/arrays/api.js","./binary-search":"../node_modules/@thi.ng/arrays/binary-search.js","./ends-with":"../node_modules/@thi.ng/arrays/ends-with.js","./ensure-array":"../node_modules/@thi.ng/arrays/ensure-array.js","./ensure-iterable":"../node_modules/@thi.ng/arrays/ensure-iterable.js","./find":"../node_modules/@thi.ng/arrays/find.js","./fill-range":"../node_modules/@thi.ng/arrays/fill-range.js","./fuzzy-match":"../node_modules/@thi.ng/arrays/fuzzy-match.js","./is-sorted":"../node_modules/@thi.ng/arrays/is-sorted.js","./iterator":"../node_modules/@thi.ng/arrays/iterator.js","./levenshtein":"../node_modules/@thi.ng/arrays/levenshtein.js","./peek":"../node_modules/@thi.ng/arrays/peek.js","./quicksort":"../node_modules/@thi.ng/arrays/quicksort.js","./shuffle":"../node_modules/@thi.ng/arrays/shuffle.js","./starts-with":"../node_modules/@thi.ng/arrays/starts-with.js","./swap":"../node_modules/@thi.ng/arrays/swap.js","./swizzle":"../node_modules/@thi.ng/arrays/swizzle.js"}],"../node_modules/@thi.ng/transducers/xform/filter-fuzzy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.filterFuzzy = filterFuzzy;

var _arrays = require("@thi.ng/arrays");

var _iterator = require("../iterator");

var _filter = require("./filter");

function filterFuzzy(...args) {
  const iter = args.length > 1 && (0, _iterator.$iter)(filterFuzzy, args);

  if (iter) {
    return iter;
  }

  const query = args[0];
  const {
    key,
    equiv
  } = args[1] || {};
  return (0, _filter.filter)(x => (0, _arrays.fuzzyMatch)(key != null ? key(x) : x, query, equiv));
}
},{"@thi.ng/arrays":"../node_modules/@thi.ng/arrays/index.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js","./filter":"../node_modules/@thi.ng/transducers/xform/filter.js"}],"../node_modules/@thi.ng/transducers/xform/flatten-with.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.flattenWith = flattenWith;

var _checks = require("@thi.ng/checks");

var _compr = require("../func/compr");

var _iterator = require("../iterator");

var _reduced = require("../reduced");

function flattenWith(fn, src) {
  return (0, _checks.isIterable)(src) ? (0, _iterator.iterator)(flattenWith(fn), (0, _checks.isString)(src) ? [src] : src) : rfn => {
    const reduce = rfn[2];

    const flatten = (acc, x) => {
      const xx = fn(x);

      if (xx) {
        for (let y of xx) {
          acc = flatten(acc, y);

          if ((0, _reduced.isReduced)(acc)) {
            break;
          }
        }

        return acc;
      }

      return reduce(acc, x);
    };

    return (0, _compr.compR)(rfn, flatten);
  };
}
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","../func/compr":"../node_modules/@thi.ng/transducers/func/compr.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js","../reduced":"../node_modules/@thi.ng/transducers/reduced.js"}],"../node_modules/@thi.ng/transducers/xform/flatten.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.flatten = flatten;

var _checks = require("@thi.ng/checks");

var _flattenWith = require("./flatten-with");

function flatten(src) {
  return (0, _flattenWith.flattenWith)(x => (0, _checks.isNotStringAndIterable)(x) ? x : undefined, src);
}
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","./flatten-with":"../node_modules/@thi.ng/transducers/xform/flatten-with.js"}],"../node_modules/@thi.ng/transducers/xform/map-indexed.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mapIndexed = mapIndexed;

var _compr = require("../func/compr");

var _iterator = require("../iterator");

function mapIndexed(...args) {
  return (0, _iterator.$iter)(mapIndexed, args) || (rfn => {
    const r = rfn[2];
    const fn = args[0];
    let i = args[1] || 0;
    return (0, _compr.compR)(rfn, (acc, x) => r(acc, fn(i++, x)));
  });
}
},{"../func/compr":"../node_modules/@thi.ng/transducers/func/compr.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js"}],"../node_modules/@thi.ng/transducers/xform/indexed.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.indexed = indexed;

var _iterator = require("../iterator");

var _mapIndexed = require("./map-indexed");

function indexed(...args) {
  const iter = (0, _iterator.$iter)(indexed, args);

  if (iter) {
    return iter;
  }

  const from = args[0] || 0;
  return (0, _mapIndexed.mapIndexed)((i, x) => [from + i, x]);
}
},{"../iterator":"../node_modules/@thi.ng/transducers/iterator.js","./map-indexed":"../node_modules/@thi.ng/transducers/xform/map-indexed.js"}],"../node_modules/@thi.ng/transducers/xform/interleave.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.interleave = interleave;

var _checks = require("@thi.ng/checks");

var _compr = require("../func/compr");

var _iterator = require("../iterator");

var _reduced = require("../reduced");

function interleave(sep, src) {
  return (0, _checks.isIterable)(src) ? (0, _iterator.iterator)(interleave(sep), src) : rfn => {
    const r = rfn[2];

    const _sep = typeof sep === "function" ? sep : () => sep;

    return (0, _compr.compR)(rfn, (acc, x) => {
      acc = r(acc, _sep());
      return (0, _reduced.isReduced)(acc) ? acc : r(acc, x);
    });
  };
}
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","../func/compr":"../node_modules/@thi.ng/transducers/func/compr.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js","../reduced":"../node_modules/@thi.ng/transducers/reduced.js"}],"../node_modules/@thi.ng/transducers/func/comp.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.comp = comp;

var _compose = require("@thi.ng/compose");

var _ensure = require("../internal/ensure");

function comp(...fns) {
  fns = fns.map(_ensure.ensureTransducer);
  return _compose.comp.apply(null, fns);
}
},{"@thi.ng/compose":"../node_modules/@thi.ng/compose/index.js","../internal/ensure":"../node_modules/@thi.ng/transducers/internal/ensure.js"}],"../node_modules/@thi.ng/transducers/iter/norm-range.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.normRange = normRange;
exports.normRange2d = normRange2d;
exports.normRange3d = normRange3d;

var _map = require("../xform/map");

/**
 * Yields sequence of `n+1` monotonically increasing numbers in the
 * closed interval (0.0 .. 1.0). If `n <= 0`, yields nothing.
 *
 * @example
 * ```ts
 * [...normRange(4)]
 * // [0, 0.25, 0.5, 0.75, 1.0]
 * ```
 *
 * @param n - number of steps
 * @param includeLast - include last value (i.e. `1.0`)
 */
function* normRange(n, includeLast = true) {
  if (n > 0) {
    for (let i = 0, m = includeLast ? n + 1 : n; i < m; i++) {
      yield i / n;
    }
  }
}
/**
 * 2D version of {@link normRange} in Y-major order (i.e. X is inner loop).
 *
 * @param nx
 * @param ny
 * @param includeLastX
 * @param includeLastY
 */


function* normRange2d(nx, ny, includeLastX = true, includeLastY = true) {
  const rx = [...normRange(nx, includeLastX)];

  for (let y of normRange(ny, includeLastY)) {
    yield* (0, _map.map)(x => [x, y], rx);
  }
}
/**
 * 3D version of {@link normRange} in Z-major order (i.e. X being innermost
 * loop).
 *
 * @param nx
 * @param ny
 * @param includeLastX
 * @param includeLastY
 */


function* normRange3d(nx, ny, nz, includeLastX = true, includeLastY = true, includeLastZ = true) {
  const sliceXY = [...normRange2d(nx, ny, includeLastX, includeLastY)];

  for (let z of normRange(nz, includeLastZ)) {
    yield* (0, _map.map)(xy => [...xy, z], sliceXY);
  }
}
},{"../xform/map":"../node_modules/@thi.ng/transducers/xform/map.js"}],"../node_modules/@thi.ng/transducers/xform/mapcat.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mapcat = mapcat;

var _checks = require("@thi.ng/checks");

var _comp = require("../func/comp");

var _iterator = require("../iterator");

var _cat = require("./cat");

var _map = require("./map");

function mapcat(fn, src) {
  return (0, _checks.isIterable)(src) ? (0, _iterator.iterator)(mapcat(fn), src) : (0, _comp.comp)((0, _map.map)(fn), (0, _cat.cat)());
}
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","../func/comp":"../node_modules/@thi.ng/transducers/func/comp.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js","./cat":"../node_modules/@thi.ng/transducers/xform/cat.js","./map":"../node_modules/@thi.ng/transducers/xform/map.js"}],"../node_modules/@thi.ng/transducers/xform/partition.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.partition = partition;

var _iterator = require("../iterator");

function partition(...args) {
  const iter = (0, _iterator.$iter)(partition, args, _iterator.iterator);

  if (iter) {
    return iter;
  }

  let size = args[0],
      all,
      step;

  if (typeof args[1] == "number") {
    step = args[1];
    all = args[2];
  } else {
    step = size;
    all = args[1];
  }

  return ([init, complete, reduce]) => {
    let buf = [];
    let skip = 0;
    return [init, acc => {
      if (all && buf.length > 0) {
        acc = reduce(acc, buf);
        buf = [];
      }

      return complete(acc);
    }, (acc, x) => {
      if (skip <= 0) {
        if (buf.length < size) {
          buf.push(x);
        }

        if (buf.length === size) {
          acc = reduce(acc, buf);
          buf = step < size ? buf.slice(step) : [];
          skip = step - size;
        }
      } else {
        skip--;
      }

      return acc;
    }];
  };
}
},{"../iterator":"../node_modules/@thi.ng/transducers/iterator.js"}],"../node_modules/@thi.ng/transducers/xform/interpolate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.interpolate = interpolate;

var _checks = require("@thi.ng/checks");

var _comp = require("../func/comp");

var _normRange = require("../iter/norm-range");

var _iterator = require("../iterator");

var _map = require("./map");

var _mapcat = require("./mapcat");

var _partition = require("./partition");

// prettier-ignore
function interpolate(fn, window, n, src) {
  return (0, _checks.isIterable)(src) ? (0, _iterator.iterator)(interpolate(fn, window, n), src) : (0, _comp.comp)((0, _partition.partition)(window, 1), (0, _mapcat.mapcat)(chunk => (0, _map.map)(t => fn(chunk, t), (0, _normRange.normRange)(n, false))));
}
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","../func/comp":"../node_modules/@thi.ng/transducers/func/comp.js","../iter/norm-range":"../node_modules/@thi.ng/transducers/iter/norm-range.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js","./map":"../node_modules/@thi.ng/transducers/xform/map.js","./mapcat":"../node_modules/@thi.ng/transducers/xform/mapcat.js","./partition":"../node_modules/@thi.ng/transducers/xform/partition.js"}],"../node_modules/@thi.ng/math/api.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Crossing = exports.EPS = exports.SIXTH = exports.TWO_THIRD = exports.THIRD = exports.SQRT2_3 = exports.SQRT2_2 = exports.SQRT3 = exports.SQRT2 = exports.PHI = exports.RAD2DEG = exports.DEG2RAD = exports.INV_HALF_PI = exports.INV_TAU = exports.INV_PI = exports.SIXTH_PI = exports.QUARTER_PI = exports.THIRD_PI = exports.HALF_PI = exports.TAU = exports.PI = void 0;
const PI = Math.PI;
exports.PI = PI;
const TAU = PI * 2;
exports.TAU = TAU;
const HALF_PI = PI / 2;
exports.HALF_PI = HALF_PI;
const THIRD_PI = PI / 3;
exports.THIRD_PI = THIRD_PI;
const QUARTER_PI = PI / 4;
exports.QUARTER_PI = QUARTER_PI;
const SIXTH_PI = PI / 6;
exports.SIXTH_PI = SIXTH_PI;
const INV_PI = 1 / PI;
exports.INV_PI = INV_PI;
const INV_TAU = 1 / TAU;
exports.INV_TAU = INV_TAU;
const INV_HALF_PI = 1 / HALF_PI;
exports.INV_HALF_PI = INV_HALF_PI;
const DEG2RAD = PI / 180;
exports.DEG2RAD = DEG2RAD;
const RAD2DEG = 180 / PI;
exports.RAD2DEG = RAD2DEG;
const PHI = (1 + Math.sqrt(5)) / 2;
exports.PHI = PHI;
const SQRT2 = Math.SQRT2;
exports.SQRT2 = SQRT2;
const SQRT3 = Math.sqrt(3);
exports.SQRT3 = SQRT3;
const SQRT2_2 = SQRT2 / 2;
exports.SQRT2_2 = SQRT2_2;
const SQRT2_3 = SQRT3 / 2;
exports.SQRT2_3 = SQRT2_3;
const THIRD = 1 / 3;
exports.THIRD = THIRD;
const TWO_THIRD = 2 / 3;
exports.TWO_THIRD = TWO_THIRD;
const SIXTH = 1 / 6;
exports.SIXTH = SIXTH;
let EPS = 1e-6;
exports.EPS = EPS;
var Crossing;
exports.Crossing = Crossing;

(function (Crossing) {
  /**
   * lines A & B are equal
   */
  Crossing[Crossing["EQUAL"] = 0] = "EQUAL";
  /**
   * lines A & B are flat (all same values)
   */

  Crossing[Crossing["FLAT"] = 1] = "FLAT";
  /**
   * line A crossed under B
   */

  Crossing[Crossing["UNDER"] = 2] = "UNDER";
  /**
   * line A crossed over B
   */

  Crossing[Crossing["OVER"] = 3] = "OVER";
  Crossing[Crossing["OTHER"] = 4] = "OTHER";
})(Crossing || (exports.Crossing = Crossing = {}));
},{}],"../node_modules/@thi.ng/math/abs.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sign = exports.absDiff = void 0;

var _api = require("./api");

const absDiff = (x, y) => Math.abs(x - y);

exports.absDiff = absDiff;

const sign = (x, eps = _api.EPS) => x > eps ? 1 : x < -eps ? -1 : 0;

exports.sign = sign;
},{"./api":"../node_modules/@thi.ng/math/api.js"}],"../node_modules/@thi.ng/math/angle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fastSin = exports.fastCos = exports.normCos = exports.loc = exports.cot = exports.sec = exports.csc = exports.rad = exports.deg = exports.quadrant = exports.atan2Abs = exports.angleDist = exports.absInnerAngle = exports.absTheta = exports.cossin = exports.sincos = void 0;

var _api = require("./api");

/**
 * Returns vector of `[sin(theta)*n, cos(theta)*n]`.
 *
 * @param theta -
 * @param n -
 */
const sincos = (theta, n = 1) => [Math.sin(theta) * n, Math.cos(theta) * n];
/**
 * Returns vector of `[cos(theta)*n, sin(theta)*n]`.
 *
 * @param theta -
 * @param n -
 */


exports.sincos = sincos;

const cossin = (theta, n = 1) => [Math.cos(theta) * n, Math.sin(theta) * n];
/**
 * Projects `theta` into [0 .. 2π] interval.
 *
 * @param theta -
 */


exports.cossin = cossin;

const absTheta = theta => (theta %= _api.TAU, theta < 0 ? _api.TAU + theta : theta);

exports.absTheta = absTheta;

const absInnerAngle = theta => (theta = Math.abs(theta), theta > _api.PI ? _api.TAU - theta : theta);
/**
 * Returns smallest absolute angle difference between `a` and `b`.
 * Result will be in [0 .. π] interval.
 *
 * @param a -
 * @param b -
 */


exports.absInnerAngle = absInnerAngle;

const angleDist = (a, b) => absInnerAngle(absTheta(b % _api.TAU - a % _api.TAU));
/**
 * Like `Math.atan2`, but always returns angle in [0 .. TAU) interval.
 *
 * @param y -
 * @param x -
 */


exports.angleDist = angleDist;

const atan2Abs = (y, x) => absTheta(Math.atan2(y, x));
/**
 * Returns quadrant ID (0-3) of given angle (in radians).
 *
 * @param theta -
 */


exports.atan2Abs = atan2Abs;

const quadrant = theta => absTheta(theta) * _api.INV_HALF_PI | 0;
/**
 * Converts angle to degrees.
 *
 * @param theta - angle in radians
 */


exports.quadrant = quadrant;

const deg = theta => theta * _api.RAD2DEG;
/**
 * Converts angle to radians.
 *
 * @param theta - angle in degrees
 */


exports.deg = deg;

const rad = theta => theta * _api.DEG2RAD;
/**
 * Cosecant. Approaches `±Infinity` for `theta` near multiples of π.
 *
 * @param theta - angle in radians
 */


exports.rad = rad;

const csc = theta => 1 / Math.sin(theta);
/**
 * Secant. Approaches `±Infinity` for `theta` near π/2 ± nπ
 *
 * @param theta - angle in radians
 */


exports.csc = csc;

const sec = theta => 1 / Math.cos(theta);
/**
 * Cotangent. Approaches `±Infinity` for `theta` near multiples of π.
 *
 * @param theta - angle in radians
 */


exports.sec = sec;

const cot = theta => 1 / Math.tan(theta);
/**
 * Law of Cosines. Takes length of two sides of a triangle and the inner
 * angle (in radians) between them. Returns length of third side.
 *
 * @param a -
 * @param b -
 * @param gamma -
 */


exports.cot = cot;

const loc = (a, b, gamma) => Math.sqrt(a * a + b * b - 2 * a * b * Math.cos(gamma));
/**
 * Approximates cos(xπ) for x in [-1,1]
 *
 * @param x -
 */


exports.loc = loc;

const normCos = x => {
  const x2 = x * x;
  return 1.0 + x2 * (-4 + 2 * x2);
};

exports.normCos = normCos;

const __fastCos = x => {
  const x2 = x * x;
  return 0.99940307 + x2 * (-0.49558072 + 0.03679168 * x2);
};
/**
 * Fast cosine approximation using {@link normCos} (polynomial). Max. error
 * ~0.00059693
 *
 * In [0 .. 2π] interval, approx. 18-20% faster than `Math.cos` on V8.
 *
 * @param theta - in radians
 */


const fastCos = theta => {
  theta %= _api.TAU;
  theta < 0 && (theta = -theta);

  switch (theta * _api.INV_HALF_PI | 0) {
    case 0:
      return __fastCos(theta);

    case 1:
      return -__fastCos(_api.PI - theta);

    case 2:
      return -__fastCos(theta - _api.PI);

    default:
      return __fastCos(_api.TAU - theta);
  }
};
/**
 * {@link fastCos}
 *
 * @param theta - in radians
 */


exports.fastCos = fastCos;

const fastSin = theta => fastCos(_api.HALF_PI - theta);

exports.fastSin = fastSin;
},{"./api":"../node_modules/@thi.ng/math/api.js"}],"../node_modules/@thi.ng/math/eqdelta.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.eqDeltaScaled = exports.eqDeltaFixed = exports.eqDelta = void 0;

var _api = require("./api");

const abs = Math.abs;
const max = Math.max;
/**
 * Similar to {@link eqDelta}, but used given `eps` as is.
 *
 * @param a - left value
 * @param b - right value
 * @param eps - epsilon / tolerance, default `1e-6`
 */

const eqDelta = (a, b, eps = _api.EPS) => abs(a - b) <= eps;
/**
 * @deprecated
 */


exports.eqDelta = eqDelta;
const eqDeltaFixed = eqDelta;
/**
 * Checks if `|a - b| <= ε` and adapts given epsilon value to the given
 * arguments:
 *
 * ε is factored with the largest absolute value of `a` or `b` (but
 * never lesser than the given `eps` value):
 *
 * `ε = ε * max(1, |a|, |b|)`
 *
 * @param a - left value
 * @param b - right value
 * @param eps - epsilon / tolerance, default `1e-6`
 */

exports.eqDeltaFixed = eqDeltaFixed;

const eqDeltaScaled = (a, b, eps = _api.EPS) => abs(a - b) <= eps * max(1, abs(a), abs(b));

exports.eqDeltaScaled = eqDeltaScaled;
},{"./api":"../node_modules/@thi.ng/math/api.js"}],"../node_modules/@thi.ng/math/crossing.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.classifyCrossing = exports.isCrossUnder = exports.isCrossOver = void 0;

var _api = require("./api");

var _eqdelta = require("./eqdelta");

/**
 * Returns true if line A rises up over B.
 *
 * @example
 * ```ts
 * b1  a2
 *   \/
 *   /\
 * a1  b2
 * ```
 *
 * @param a1 -
 * @param a2 -
 * @param b1 -
 * @param b2 -
 */
const isCrossOver = (a1, a2, b1, b2) => a1 < b1 && a2 > b2;
/**
 * Returns true if line A rises up over B.
 *
 * @example
 * ```ts
 * a1  b2
 *   \/
 *   /\
 * b1  a2
 * ```
 *
 * @param a1 -
 * @param a2 -
 * @param b1 -
 * @param b2 -
 */


exports.isCrossOver = isCrossOver;

const isCrossUnder = (a1, a2, b1, b2) => a1 > b1 && a2 < b2;
/**
 * Returns {@link Crossing} classifier indicating the relationship of line A
 * to line B. The optional epsilon value is used to determine if both
 * lines are considered equal or flat.
 *
 * - {@link isCrossOver}
 * - {@link isCrossUnder}
 * - {@link Crossing}
 *
 * @param a1 -
 * @param a2 -
 * @param b1 -
 * @param b2 -
 * @param eps -
 */


exports.isCrossUnder = isCrossUnder;

const classifyCrossing = (a1, a2, b1, b2, eps = _api.EPS) => {
  if (isCrossOver(a1, a2, b1, b2)) {
    return _api.Crossing.OVER;
  } else if (isCrossUnder(a1, a2, b1, b2)) {
    return _api.Crossing.UNDER;
  }

  return (0, _eqdelta.eqDelta)(a1, b1, eps) && (0, _eqdelta.eqDelta)(a2, b2, eps) ? (0, _eqdelta.eqDelta)(a1, b2, eps) ? _api.Crossing.FLAT : _api.Crossing.EQUAL : _api.Crossing.OTHER;
};

exports.classifyCrossing = classifyCrossing;
},{"./api":"../node_modules/@thi.ng/math/api.js","./eqdelta":"../node_modules/@thi.ng/math/eqdelta.js"}],"../node_modules/@thi.ng/math/extrema.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.maximaIndices = exports.minimaIndices = exports.maximaIndex = exports.minimaIndex = exports.isMaxima = exports.isMinima = void 0;

/**
 * Returns true if `b` is a local minima, i.e. iff a > b and b < c.
 *
 * @param a -
 * @param b -
 * @param c -
 */
const isMinima = (a, b, c) => a > b && b < c;
/**
 * Returns true if `b` is a local maxima, i.e. iff a < b and b > c.
 *
 * @param a -
 * @param b -
 * @param c -
 */


exports.isMinima = isMinima;

const isMaxima = (a, b, c) => a < b && b > c;

exports.isMaxima = isMaxima;

const index = (pred, values, from = 0, to = values.length) => {
  to--;

  for (let i = from + 1; i < to; i++) {
    if (pred(values[i - 1], values[i], values[i + 1])) {
      return i;
    }
  }

  return -1;
};
/**
 * Returns index of the first local & internal minima found in given
 * `values` array, or -1 if no such minima exists. The search range can
 * be optionally defined via semi-open [from, to) index interval.
 *
 * @param values -
 * @param from -
 * @param to -
 */


const minimaIndex = (values, from = 0, to = values.length) => index(isMinima, values, from, to);
/**
 * Returns index of the first local & internal maxima found in given
 * `values` array, or -1 if no such maxima exists. The search range can
 * be optionally defined via semi-open [from, to) index interval.
 *
 * @param values -
 * @param from -
 * @param to -
 */


exports.minimaIndex = minimaIndex;

const maximaIndex = (values, from = 0, to = values.length) => index(isMaxima, values, from, to);

exports.maximaIndex = maximaIndex;

function* indices(fn, vals, from = 0, to = vals.length) {
  while (from < to) {
    const i = fn(vals, from, to);
    if (i < 0) return;
    yield i;
    from = i + 1;
  }
}
/**
 * Returns an iterator yielding all minima indices in given `values`
 * array. The search range can be optionally defined via semi-open
 * [from, to) index interval.
 *
 * @param values -
 * @param from -
 * @param to -
 */


const minimaIndices = (values, from = 0, to = values.length) => indices(minimaIndex, values, from, to);
/**
 * Returns an iterator yielding all maxima indices in given `values`
 * array. The search range can be optionally defined via semi-open
 * [from, to) index interval.
 *
 * @param values -
 * @param from -
 * @param to -
 */


exports.minimaIndices = minimaIndices;

const maximaIndices = (values, from = 0, to = values.length) => indices(minimaIndex, values, from, to);

exports.maximaIndices = maximaIndices;
},{}],"../node_modules/@thi.ng/math/interval.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.inOpenRange = exports.inRange = exports.foldback = exports.absMax = exports.absMin = exports.sclamp = exports.smax = exports.smin = exports.minNonZero3 = exports.minNonZero2 = exports.max4id = exports.max3id = exports.max2id = exports.min4id = exports.min3id = exports.min2id = exports.wrap11 = exports.wrap01 = exports.wrapOnce = exports.wrap = exports.clamp05 = exports.clamp11 = exports.clamp01 = exports.clamp = void 0;

/**
 * Clamps value `x` to given closed interval.
 *
 * @param x - value to clamp
 * @param min - lower bound
 * @param max - upper bound
 */
const clamp = (x, min, max) => x < min ? min : x > max ? max : x;
/**
 * Clamps value `x` to closed [0 .. 1] interval.
 *
 * @param x
 */


exports.clamp = clamp;

const clamp01 = x => x < 0 ? 0 : x > 1 ? 1 : x;
/**
 * Clamps value `x` to closed [-1 .. 1] interval.
 *
 * @param x
 */


exports.clamp01 = clamp01;

const clamp11 = x => x < -1 ? -1 : x > 1 ? 1 : x;
/**
 * Clamps value `x` to closed [0 .. 0.5] interval.
 *
 * @param x
 */


exports.clamp11 = clamp11;

const clamp05 = x => x < 0 ? 0 : x > 0.5 ? 0.5 : x;
/**
 * Folds `x` back inside closed [min..max] interval. Also see
 * {@link wrapOnce}.
 *
 * @param x -
 * @param min -
 * @param max -
 */


exports.clamp05 = clamp05;

const wrap = (x, min, max) => {
  if (min === max) return min;

  if (x > max) {
    const d = max - min;
    x -= d;
    if (x > max) x -= d * ((x - min) / d | 0);
  } else if (x < min) {
    const d = max - min;
    x += d;
    if (x < min) x += d * ((min - x) / d + 1 | 0);
  }

  return x;
};
/**
 * Like {@link wrap}, but optimized for cases where `x` is guaranteed to
 * be in `[min - d, max + d]` interval, where `d = max - min`. Result
 * will be in closed `[min..max]` interval.
 *
 * @param x -
 * @param min -
 * @param max -
 */


exports.wrap = wrap;

const wrapOnce = (x, min, max) => x < min ? x - min + max : x > max ? x - max + min : x;
/**
 * Similar to {@link wrapOnce} for [0..1] interval.
 *
 * @param x -
 */


exports.wrapOnce = wrapOnce;

const wrap01 = x => x < 0 ? x + 1 : x > 1 ? x - 1 : x;
/**
 * Similar to {@link wrapOnce} for [-1..1] interval.
 *
 * @param x -
 */


exports.wrap01 = wrap01;

const wrap11 = x => x < -1 ? x + 2 : x > 1 ? x - 2 : x;

exports.wrap11 = wrap11;

const min2id = (a, b) => a <= b ? 0 : 1;

exports.min2id = min2id;

const min3id = (a, b, c) => a <= b ? a <= c ? 0 : 2 : b <= c ? 1 : 2;

exports.min3id = min3id;

const min4id = (a, b, c, d) => a <= b ? a <= c ? a <= d ? 0 : 3 : c <= d ? 2 : 3 : b <= c ? b <= d ? 1 : 3 : c <= d ? 2 : 3;

exports.min4id = min4id;

const max2id = (a, b) => a >= b ? 0 : 1;

exports.max2id = max2id;

const max3id = (a, b, c) => a >= b ? a >= c ? 0 : 2 : b >= c ? 1 : 2;

exports.max3id = max3id;

const max4id = (a, b, c, d) => a >= b ? a >= c ? a >= d ? 0 : 3 : c >= d ? 2 : 3 : b >= c ? b >= d ? 1 : 3 : c >= d ? 2 : 3;
/**
 * Returns the non-zero minimum value of the given `a`, `b` args.
 *
 * @param a
 * @param b
 */


exports.max4id = max4id;

const minNonZero2 = (a, b) => a !== 0 ? b !== 0 ? Math.min(a, b) : a : b;
/**
 * Returns the non-zero minimum value of the given `a`, `b`, `c` args.
 *
 * @param a
 * @param b
 * @param c
 */


exports.minNonZero2 = minNonZero2;

const minNonZero3 = (a, b, c) => minNonZero2(minNonZero2(a, b), c);
/**
 * See `smax()`.
 *
 * @param a -
 * @param b -
 * @param k - smooth exponent (MUST be > 0)
 */


exports.minNonZero3 = minNonZero3;

const smin = (a, b, k) => smax(a, b, -k);
/**
 * Smooth maximum. Note: Result values will be slightly larger than max
 * value near max(a,b) + eps due to exponential decay. Higher `k` values
 * reduce the error, but also reduce the smoothing. Recommended k=16.
 *
 * {@link https://en.wikipedia.org/wiki/Smooth_maximum}
 *
 * @param a -
 * @param b -
 * @param k - smooth exponent (MUST be > 0)
 */


exports.smin = smin;

const smax = (a, b, k) => {
  const ea = Math.exp(a * k);
  const eb = Math.exp(b * k);
  return (a * ea + b * eb) / (ea + eb);
};
/**
 * Same as `smin(smax(x, min, k), max, k)`.
 *
 * @param x -
 * @param min -
 * @param max -
 * @param k -
 */


exports.smax = smax;

const sclamp = (x, min, max, k) => smin(smax(x, min, k), max, k);

exports.sclamp = sclamp;

const absMin = (a, b) => Math.abs(a) < Math.abs(b) ? a : b;

exports.absMin = absMin;

const absMax = (a, b) => Math.abs(a) > Math.abs(b) ? a : b;
/**
 * If `abs(x) > abs(e)`, recursively mirrors `x` back into `[-e .. +e]`
 * interval at respective positive/negative boundary.
 *
 * @remarks
 * References:
 * - https://www.desmos.com/calculator/lkyf2ag3ta
 * - https://www.musicdsp.org/en/latest/Effects/203-fold-back-distortion.html
 *
 * @param e - threshold (> 0)
 * @param x - input value
 */


exports.absMax = absMax;

const foldback = (e, x) => x < -e || x > e ? Math.abs(Math.abs((x - e) % (4 * e)) - 2 * e) - e : x;
/**
 * Returns true iff `x` is in closed interval `[min .. max]`
 *
 * @param x -
 * @param min -
 * @param max -
 */


exports.foldback = foldback;

const inRange = (x, min, max) => x >= min && x <= max;
/**
 * Returns true iff `x` is in open interval `(min .. max)`
 *
 * @param x -
 * @param min -
 * @param max -
 */


exports.inRange = inRange;

const inOpenRange = (x, min, max) => x > min && x < max;

exports.inOpenRange = inOpenRange;
},{}],"../node_modules/@thi.ng/math/fit.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fit11 = exports.fit10 = exports.fit01 = exports.fitClamped = exports.fit = exports.norm = void 0;

var _interval = require("./interval");

/**
 * Returns normalized value of `x` WRT to interval `a .. b`. If `a`
 * equals `b`, returns 0.
 *
 * @param x -
 * @param a -
 * @param b -
 */
const norm = (x, a, b) => b !== a ? (x - a) / (b - a) : 0;

exports.norm = norm;

const fit = (x, a, b, c, d) => c + (d - c) * norm(x, a, b);

exports.fit = fit;

const fitClamped = (x, a, b, c, d) => c + (d - c) * (0, _interval.clamp01)(norm(x, a, b));

exports.fitClamped = fitClamped;

const fit01 = (x, a, b) => a + (b - a) * (0, _interval.clamp01)(x);

exports.fit01 = fit01;

const fit10 = (x, a, b) => b + (a - b) * (0, _interval.clamp01)(x);

exports.fit10 = fit10;

const fit11 = (x, a, b) => a + (b - a) * (0.5 + 0.5 * (0, _interval.clamp11)(x));

exports.fit11 = fit11;
},{"./interval":"../node_modules/@thi.ng/math/interval.js"}],"../node_modules/@thi.ng/math/int.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rshiftu32 = exports.lshiftu32 = exports.notu32 = exports.xoru32 = exports.oru32 = exports.andu32 = exports.subu32 = exports.mulu32 = exports.divu32 = exports.addu32 = exports.rshiftu16 = exports.lshiftu16 = exports.notu16 = exports.xoru16 = exports.oru16 = exports.andu16 = exports.subu16 = exports.mulu16 = exports.divu16 = exports.addu16 = exports.rshiftu8 = exports.lshiftu8 = exports.notu8 = exports.xoru8 = exports.oru8 = exports.andu8 = exports.subu8 = exports.mulu8 = exports.divu8 = exports.addu8 = exports.noti32 = exports.rshifti32 = exports.lshifti32 = exports.xori32 = exports.ori32 = exports.andi32 = exports.subi32 = exports.muli32 = exports.divi32 = exports.addi32 = exports.rshifti16 = exports.lshifti16 = exports.noti16 = exports.xori16 = exports.ori16 = exports.andi16 = exports.subi16 = exports.muli16 = exports.divi16 = exports.addi16 = exports.rshifti8 = exports.lshifti8 = exports.noti8 = exports.xori8 = exports.ori8 = exports.andi8 = exports.subi8 = exports.muli8 = exports.divi8 = exports.addi8 = exports.signExtend16 = exports.signExtend8 = void 0;
const M8 = 0xff;
const M16 = 0xffff;

const signExtend8 = a => (a &= M8, a & 0x80 ? a | ~M8 : a);

exports.signExtend8 = signExtend8;

const signExtend16 = a => (a &= M16, a & 0x8000 ? a | ~M16 : a);

exports.signExtend16 = signExtend16;

const addi8 = (a, b) => signExtend8((a | 0) + (b | 0));

exports.addi8 = addi8;

const divi8 = (a, b) => signExtend8((a | 0) / (b | 0));

exports.divi8 = divi8;

const muli8 = (a, b) => signExtend8((a | 0) * (b | 0));

exports.muli8 = muli8;

const subi8 = (a, b) => signExtend8((a | 0) - (b | 0));

exports.subi8 = subi8;

const andi8 = (a, b) => signExtend8((a | 0) & (b | 0));

exports.andi8 = andi8;

const ori8 = (a, b) => signExtend8(a | 0 | (b | 0));

exports.ori8 = ori8;

const xori8 = (a, b) => signExtend8((a | 0) ^ (b | 0));

exports.xori8 = xori8;

const noti8 = a => signExtend8(~a);

exports.noti8 = noti8;

const lshifti8 = (a, b) => signExtend8((a | 0) << (b | 0));

exports.lshifti8 = lshifti8;

const rshifti8 = (a, b) => signExtend8((a | 0) >> (b | 0));

exports.rshifti8 = rshifti8;

const addi16 = (a, b) => signExtend16((a | 0) + (b | 0));

exports.addi16 = addi16;

const divi16 = (a, b) => signExtend16((a | 0) / (b | 0));

exports.divi16 = divi16;

const muli16 = (a, b) => signExtend16((a | 0) * (b | 0));

exports.muli16 = muli16;

const subi16 = (a, b) => signExtend16((a | 0) - (b | 0));

exports.subi16 = subi16;

const andi16 = (a, b) => signExtend16((a | 0) & (b | 0));

exports.andi16 = andi16;

const ori16 = (a, b) => signExtend16(a | 0 | (b | 0));

exports.ori16 = ori16;

const xori16 = (a, b) => signExtend16((a | 0) ^ (b | 0));

exports.xori16 = xori16;

const noti16 = a => signExtend16(~a);

exports.noti16 = noti16;

const lshifti16 = (a, b) => signExtend16((a | 0) << (b | 0));

exports.lshifti16 = lshifti16;

const rshifti16 = (a, b) => signExtend16((a | 0) >> (b | 0));

exports.rshifti16 = rshifti16;

const addi32 = (a, b) => (a | 0) + (b | 0) | 0;

exports.addi32 = addi32;

const divi32 = (a, b) => (a | 0) / (b | 0) | 0;

exports.divi32 = divi32;

const muli32 = (a, b) => (a | 0) * (b | 0) | 0;

exports.muli32 = muli32;

const subi32 = (a, b) => (a | 0) - (b | 0) | 0;

exports.subi32 = subi32;

const andi32 = (a, b) => (a | 0) & (b | 0);

exports.andi32 = andi32;

const ori32 = (a, b) => a | 0 | (b | 0);

exports.ori32 = ori32;

const xori32 = (a, b) => (a | 0) ^ (b | 0);

exports.xori32 = xori32;

const lshifti32 = (a, b) => (a | 0) << (b | 0);

exports.lshifti32 = lshifti32;

const rshifti32 = (a, b) => (a | 0) >> (b | 0);

exports.rshifti32 = rshifti32;

const noti32 = a => ~a;

exports.noti32 = noti32;

const addu8 = (a, b) => (a & M8) + (b & M8) & M8;

exports.addu8 = addu8;

const divu8 = (a, b) => (a & M8) / (b & M8) & M8;

exports.divu8 = divu8;

const mulu8 = (a, b) => (a & M8) * (b & M8) & M8;

exports.mulu8 = mulu8;

const subu8 = (a, b) => (a & M8) - (b & M8) & M8;

exports.subu8 = subu8;

const andu8 = (a, b) => a & M8 & (b & M8) & M8;

exports.andu8 = andu8;

const oru8 = (a, b) => (a & M8 | b & M8) & M8;

exports.oru8 = oru8;

const xoru8 = (a, b) => (a & M8 ^ b & M8) & M8;

exports.xoru8 = xoru8;

const notu8 = a => ~a & M8;

exports.notu8 = notu8;

const lshiftu8 = (a, b) => (a & M8) << (b & M8) & M8;

exports.lshiftu8 = lshiftu8;

const rshiftu8 = (a, b) => (a & M8) >>> (b & M8) & M8;

exports.rshiftu8 = rshiftu8;

const addu16 = (a, b) => (a & M16) + (b & M16) & M16;

exports.addu16 = addu16;

const divu16 = (a, b) => (a & M16) / (b & M16) & M16;

exports.divu16 = divu16;

const mulu16 = (a, b) => (a & M16) * (b & M16) & M16;

exports.mulu16 = mulu16;

const subu16 = (a, b) => (a & M16) - (b & M16) & M16;

exports.subu16 = subu16;

const andu16 = (a, b) => a & M16 & (b & M16) & M16;

exports.andu16 = andu16;

const oru16 = (a, b) => (a & M16 | b & M16) & M16;

exports.oru16 = oru16;

const xoru16 = (a, b) => (a & M16 ^ b & M16) & M16;

exports.xoru16 = xoru16;

const notu16 = a => ~a & M16;

exports.notu16 = notu16;

const lshiftu16 = (a, b) => (a & M16) << (b & M16) & M16;

exports.lshiftu16 = lshiftu16;

const rshiftu16 = (a, b) => (a & M16) >>> (b & M16) & M16;

exports.rshiftu16 = rshiftu16;

const addu32 = (a, b) => (a >>> 0) + (b >>> 0) >>> 0;

exports.addu32 = addu32;

const divu32 = (a, b) => (a >>> 0) / (b >>> 0) >>> 0;

exports.divu32 = divu32;

const mulu32 = (a, b) => (a >>> 0) * (b >>> 0) >>> 0;

exports.mulu32 = mulu32;

const subu32 = (a, b) => (a >>> 0) - (b >>> 0) >>> 0;

exports.subu32 = subu32;

const andu32 = (a, b) => (a >>> 0 & b >>> 0) >>> 0;

exports.andu32 = andu32;

const oru32 = (a, b) => (a >>> 0 | b >>> 0) >>> 0;

exports.oru32 = oru32;

const xoru32 = (a, b) => (a >>> 0 ^ b >>> 0) >>> 0;

exports.xoru32 = xoru32;

const notu32 = a => ~a >>> 0;

exports.notu32 = notu32;

const lshiftu32 = (a, b) => a >>> 0 << (b >>> 0) >>> 0;

exports.lshiftu32 = lshiftu32;

const rshiftu32 = (a, b) => a >>> 0 >>> (b >>> 0) >>> 0;

exports.rshiftu32 = rshiftu32;
},{}],"../node_modules/@thi.ng/math/min-error.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.minError = void 0;

var _api = require("./api");

/**
 * Recursively evaluates function `fn` for `res` uniformly spaced values
 * `t` in the closed parametric interval `[start,end]` and computes
 * corresponding sample values `p`. For each `p` then calls `error`
 * function to compute the error to query target value `q` and
 * eventually returns the `t` producing the overall minimum error. At
 * each level of recursion the search interval is increasingly narrowed
 * / centered around the best `t` of the current iteration.
 *
 * The search is terminated early if the best error value is less than
 * `eps`.
 *
 * The interval end points `start` and `end` MUST be normalized values
 * in the closed [0,1] interval.
 *
 * @param fn - function to evaluate
 * @param error - error function
 * @param q - target value
 * @param res - number of samples per interval
 * @param iter - max number of iterations / recursion limit
 * @param start - interval start
 * @param end - interval end
 */
const minError = (fn, error, q, res = 16, iter = 8, start = 0, end = 1, eps = _api.EPS) => {
  if (iter <= 0) return (start + end) / 2;
  const delta = (end - start) / res;
  let minT = start;
  let minE = Infinity;

  for (let i = 0; i <= res; i++) {
    const t = start + i * delta;
    const e = error(q, fn(t));

    if (e < minE) {
      if (e <= eps) return t;
      minE = e;
      minT = t;
    }
  }

  return minError(fn, error, q, res, iter - 1, Math.max(minT - delta, 0), Math.min(minT + delta, 1));
};

exports.minError = minError;
},{"./api":"../node_modules/@thi.ng/math/api.js"}],"../node_modules/@thi.ng/math/mix.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.expFactor = exports.sigmoid11 = exports.sigmoid = exports.sinc = exports.cubicPulse = exports.parabola = exports.gain = exports.impulse = exports.ease = exports.bounce = exports.decimated = exports.cosine = exports.lens = exports.invCircular = exports.circular = exports.tween = exports.tangentDiff3 = exports.tangentCardinal = exports.mixCubicHermite = exports.mixHermite = exports.mixCubic = exports.mixQuadratic = exports.mixBilinear = exports.mix = void 0;

var _api = require("./api");

const mix = (a, b, t) => a + (b - a) * t;
/**
 * @example
 * ```ts
 * c    d
 * +----+
 * |    |
 * +----+
 * a    b
 * ```
 *
 * @param a - BL value
 * @param b - BR value
 * @param c - TL value
 * @param d - TR value
 * @param u - 1st interpolation factor
 * @param v - 2nd interpolation factor
 */


exports.mix = mix;

const mixBilinear = (a, b, c, d, u, v) => mix(mix(a, b, u), mix(c, d, u), v);

exports.mixBilinear = mixBilinear;

const mixQuadratic = (a, b, c, t) => {
  const s = 1 - t;
  return a * s * s + b * 2 * s * t + c * t * t;
};

exports.mixQuadratic = mixQuadratic;

const mixCubic = (a, b, c, d, t) => {
  const t2 = t * t;
  const s = 1 - t;
  const s2 = s * s;
  return a * s2 * s + b * 3 * s2 * t + c * 3 * t2 * s + d * t2 * t;
};
/**
 * Returns hermite interpolation of `a, b, c, d` at normalized position
 * `t`, where `a` and `d` are used as predecessor/successor of `b` / `c`
 * and only inform the tangent of the interpolation curve. The
 * interpolated result is that of `b` and `c`.
 *
 * Assumes all inputs are uniformly spaced. If that's not the case, use
 * {@link mixCubicHermite} with one of the tangent generators supporting
 * non-uniform spacing of points.
 *
 * See: {@link https://www.desmos.com/calculator/j4gf8g9vkr}
 *
 * Source:
 * {@link https://www.musicdsp.org/en/latest/Other/93-hermite-interpollation.html}
 *
 * - {@link mixCubicHermite}
 * - {@link tangentCardinal}
 * - {@link tangentDiff3}
 *
 * @param a -
 * @param b -
 * @param c -
 * @param d -
 * @param t -
 */


exports.mixCubic = mixCubic;

const mixHermite = (a, b, c, d, t) => {
  const y1 = 0.5 * (c - a);
  const y2 = 1.5 * (b - c) + 0.5 * (d - a);
  return ((y2 * t + a - b + y1 - y2) * t + y1) * t + b;
};
/**
 * Computes cubic-hermite interpolation between `a` / `b` at normalized
 * time `t` and using respective tangents `ta` / `tb`.
 *
 * {@link https://en.wikipedia.org/wiki/Cubic_Hermite_spline}
 *
 * - {@link mixHermite}
 * - {@link tangentCardinal}
 * - {@link tangentDiff3}
 *
 * @param a -
 * @param ta -
 * @param b -
 * @param tb -
 * @param t -
 */


exports.mixHermite = mixHermite;

const mixCubicHermite = (a, ta, b, tb, t) => {
  const s = t - 1;
  const t2 = t * t;
  const s2 = s * s;
  const h00 = (1 + 2 * t) * s2;
  const h10 = t * s2;
  const h01 = t2 * (3 - 2 * t);
  const h11 = t2 * s;
  return h00 * a + h10 * ta + h01 * b + h11 * tb;
};
/**
 * Helper function for {@link mixCubicHermite}. Computes cardinal tangents
 * based on point neighbors of a point B (not given), i.e. `a`
 * (predecessor) and `c` (successor) and their times (defaults to
 * uniformly spaced). The optional `tension` parameter can be used to
 * scale the tangent where 0.0 produces a Cardinal spline tangent and
 * 1.0 a Catmull-Rom (opposite to the Wikipedia ref).
 *
 * {@link https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Cardinal_spline}
 *
 * @param prev -
 * @param next -
 * @param scale -
 * @param ta -
 * @param tc -
 */


exports.mixCubicHermite = mixCubicHermite;

const tangentCardinal = (prev, next, scale = 0.5, ta = 0, tc = 2) => scale * ((next - prev) / (tc - ta));
/**
 * Helper function for {@link mixCubicHermite}. Computes tangent for `curr`,
 * based on 3-point finite difference, where `prev` & `next` are
 * `curr`'s neighbors and the `tX` the three points' respective time
 * values. The latter are equally spaced by default (each 1.0 apart).
 *
 * Using this function with equal spacing of 1.0 and together with
 * {@link mixCubicHermite} will produce same results as the somewhat
 * optimized variant {@link mixHermite}.
 *
 * {@link https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Finite_difference}
 *
 * @param prev -
 * @param curr -
 * @param next -
 * @param ta -
 * @param tb -
 * @param tc -
 */


exports.tangentCardinal = tangentCardinal;

const tangentDiff3 = (prev, curr, next, ta = 0, tb = 1, tc = 2) => 0.5 * ((next - curr) / (tc - tb) + (curr - prev) / (tb - ta));
/**
 * HOF interpolator. Takes a timing function `f` and interval `[from,
 * to]`. Returns function which takes normalized time as single arg and
 * returns interpolated value.
 *
 * @param f -
 * @param from -
 * @param to -
 */


exports.tangentDiff3 = tangentDiff3;

const tween = (f, from, to) => t => mix(from, to, f(t));
/**
 * Circular interpolation (ease out): `sqrt(1 - (1 - t)^2)`
 *
 * Reference: https://www.desmos.com/calculator/tisoiazdrw
 *
 * @param t - interpolation factor [0..1]
 */


exports.tween = tween;

const circular = t => {
  t = 1 - t;
  return Math.sqrt(1 - t * t);
};
/**
 * Inverse/flipped version of {@link circular} (ease in).
 *
 * Reference: https://www.desmos.com/calculator/tisoiazdrw
 *
 * @param t - interpolation factor [0..1]
 */


exports.circular = circular;

const invCircular = t => 1 - circular(1 - t);
/**
 * Zoomlens interpolation with customizable lens position, behavior and
 * strength.
 *
 * @remarks
 * Lens position must be given in (0..1) interval. Lens strength must be in
 * [-1,1] range. If negative, the lens will be bundling values near `pos`, if
 * positive the lens has dilating characteristics and will spread values near
 * `pos` towards the edges.
 *
 * @example
 * ```ts
 * // interpolated position in [100..400] interval for given `t`
 * y = mix(100, 400, lens(0.5, 1, t));
 *
 * // or build tween function via `tween()`
 * f = tween(partial(lens, 0.5, 1), 100, 400);
 *
 * f(t)
 * ```
 *
 * @param pos - lens pos
 * @param strength - lens strength
 * @param t - interpolation factor [0..1]
 */


exports.invCircular = invCircular;

const lens = (pos, strength, t) => {
  const impl = strength > 0 ? invCircular : circular;
  const tp = 1 - pos;
  const tl = t <= pos ? impl(t / pos) * pos : 1 - impl((1 - t) / tp) * tp;
  return mix(t, tl, Math.abs(strength));
};

exports.lens = lens;

const cosine = t => 1 - (Math.cos(t * _api.PI) * 0.5 + 0.5);

exports.cosine = cosine;

const decimated = (n, t) => Math.floor(t * n) / n;

exports.decimated = decimated;

const bounce = (k, amp, t) => {
  const tk = t * k;
  return 1 - amp * Math.sin(tk) / tk * Math.cos(t * _api.HALF_PI);
};
/**
 * Exponential easing.
 *
 * - `ease = 1` -> linear
 * - `ease > 1` -> ease in
 * - `ease < 1` -> ease out
 *
 * @param ease - easing behavior [0.0 .. ∞]
 * @param t -
 */


exports.bounce = bounce;

const ease = (ease, t) => Math.pow(t, ease);
/**
 * Impulse generator. Peaks at `t = 1/k`
 *
 * @param k - impulse width (higher values => shorter impulse)
 */


exports.ease = ease;

const impulse = (k, t) => {
  const h = k * t;
  return h * Math.exp(1 - h);
};

exports.impulse = impulse;

const gain = (k, t) => t < 0.5 ? 0.5 * Math.pow(2 * t, k) : 1 - 0.5 * Math.pow(2 - 2 * t, k);

exports.gain = gain;

const parabola = (k, t) => Math.pow(4.0 * t * (1.0 - t), k);

exports.parabola = parabola;

const cubicPulse = (w, c, t) => {
  t = Math.abs(t - c);
  return t > w ? 0 : (t /= w, 1 - t * t * (3 - 2 * t));
};

exports.cubicPulse = cubicPulse;

const sinc = (k, t) => {
  t = _api.PI * (k * t - 1.0);
  return Math.sin(t) / t;
};
/**
 * Sigmoid function for inputs in [0..1] interval.
 *
 * @param k -
 * @param t -
 */


exports.sinc = sinc;

const sigmoid = (k, t) => 1 / (1 + Math.exp(-k * (2 * t - 1)));
/**
 * Sigmoid function for inputs in [-1..+1] interval.
 *
 * @param k -
 * @param t -
 */


exports.sigmoid = sigmoid;

const sigmoid11 = (k, t) => 1 / (1 + Math.exp(-k * t));
/**
 * Computes exponential factor to interpolate from `a` to `b` over
 * `num` steps. I.e. multiplying `a` with the returned factor will yield
 * `b` after `num` steps. All args must be > 0.
 *
 * @param a
 * @param b
 * @param num
 */


exports.sigmoid11 = sigmoid11;

const expFactor = (a, b, num) => (b / a) ** (1 / num);

exports.expFactor = expFactor;
},{"./api":"../node_modules/@thi.ng/math/api.js"}],"../node_modules/@thi.ng/math/prec.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.roundEps = exports.roundTo = exports.trunc = exports.fract = exports.fmod = void 0;

var _api = require("./api");

/**
 * Returns `a - b * floor(a/b)`
 *
 * @param a -
 * @param b -
 */
const fmod = (a, b) => a - b * Math.floor(a / b);

exports.fmod = fmod;

const fract = x => x - Math.floor(x);

exports.fract = fract;

const trunc = x => x < 0 ? Math.ceil(x) : Math.floor(x);

exports.trunc = trunc;

const roundTo = (x, prec = 1) => Math.round(x / prec) * prec;
/**
 * Only rounds `x` to nearest int if `fract(x)` <= `eps` or >= `1-eps`.
 *
 * @param x -
 * @param eps -
 */


exports.roundTo = roundTo;

const roundEps = (x, eps = _api.EPS) => {
  const f = fract(x);
  return f <= eps || f >= 1 - eps ? Math.round(x) : x;
};

exports.roundEps = roundEps;
},{"./api":"../node_modules/@thi.ng/math/api.js"}],"../node_modules/@thi.ng/math/ratio.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.simplifyRatio = void 0;

const simplifyRatio = (num, denom) => {
  let e1 = Math.abs(num);
  let e2 = Math.abs(denom);

  while (true) {
    if (e1 < e2) {
      const t = e1;
      e1 = e2;
      e2 = t;
    }

    const r = e1 % e2;

    if (r) {
      e1 = r;
    } else {
      return [num / e2, denom / e2];
    }
  }
};

exports.simplifyRatio = simplifyRatio;
},{}],"../node_modules/@thi.ng/math/safe-div.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.safeDiv = void 0;

/**
 * Returns `a` divided by `b` or zero if `b = 0`.
 *
 * @param a
 * @param b
 */
const safeDiv = (a, b) => b !== 0 ? a / b : 0;

exports.safeDiv = safeDiv;
},{}],"../node_modules/@thi.ng/math/solve.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.solveCubic = exports.solveQuadratic = exports.solveLinear = exports.derivative = void 0;

var _api = require("./api");

var _safeDiv = require("./safe-div");

/**
 * Produces a new function which computes derivative of the given
 * single-arg function. The extra optional arg `eps` is used to
 * define the step width for computing derived values:
 *
 * `f'(x) = (f(x + eps) - f(x)) / eps`
 *
 * The original function is assumed to be fully differentiable
 * in the interval the returned function is going to be used.
 * No validity checks of any form are done.
 *
 * {@link https://en.wikipedia.org/wiki/Derivative#Continuity_and_differentiability}
 *
 * @param fn -
 * @param eps -
 */
const derivative = (f, eps = _api.EPS) => x => (f(x + eps) - f(x)) / eps;
/**
 * Computes solution for linear equation: `ax + b = 0`.
 *
 * Note: Returns 0 iff `a == 0`
 *
 * @param a - slope
 * @param b - constant offset
 */


exports.derivative = derivative;

const solveLinear = (a, b) => (0, _safeDiv.safeDiv)(-b, a);
/**
 * Computes solutions for quadratic equation: `ax^2 + bx + c = 0`.
 * Returns array of real solutions.
 * Note: `a` MUST NOT be zero. If the quadratic term is missing,
 * use {@link solveLinear} instead.
 *
 * - {@link https://en.wikipedia.org/wiki/Quadratic_function}
 * - {@link https://en.wikipedia.org/wiki/Quadratic_equation}
 *
 * @param a - quadratic coefficient
 * @param b - linear coefficient
 * @param c - constant offset
 * @param eps - tolerance to determine multiple roots
 */


exports.solveLinear = solveLinear;

const solveQuadratic = (a, b, c, eps = 1e-9) => {
  const d = 2 * a;
  let r = b * b - 4 * a * c;
  return r < 0 ? [] : r < eps ? [-b / d] : (r = Math.sqrt(r), [(-b - r) / d, (-b + r) / d]);
};
/**
 * Computes solutions for quadratic equation: `ax^3 + bx^2 + c*x + d = 0`.
 * Returns array of solutions, both real & imaginary.
 * Note: `a` MUST NOT be zero. If the cubic term is missing (i.e. zero),
 * use {@link solveQuadratic} or {@link solveLinear} instead.
 *
 * {@link https://en.wikipedia.org/wiki/Cubic_function}
 *
 * @param a - cubic coefficient
 * @param b - quadratic coefficient
 * @param c - linear coefficient
 * @param d - constant offset
 * @param eps - tolerance to determine multiple roots
 */


exports.solveQuadratic = solveQuadratic;

const solveCubic = (a, b, c, d, eps = 1e-9) => {
  const aa = a * a;
  const bb = b * b;
  const ba3 = b / (3 * a);
  const p = (3 * a * c - bb) / (3 * aa);
  const q = (2 * bb * b - 9 * a * b * c + 27 * aa * d) / (27 * aa * a);

  if (Math.abs(p) < eps) {
    return [Math.cbrt(-q) - ba3];
  } else if (Math.abs(q) < eps) {
    return p < 0 ? [-Math.sqrt(-p) - ba3, -ba3, Math.sqrt(-p) - ba3] : [-ba3];
  } else {
    const denom = q * q / 4 + p * p * p / 27;

    if (Math.abs(denom) < eps) {
      return [-1.5 * q / p - ba3, 3 * q / p - ba3];
    } else if (denom > 0) {
      const u = Math.cbrt(-q / 2 - Math.sqrt(denom));
      return [u - p / (3 * u) - ba3];
    } else {
      const u = 2 * Math.sqrt(-p / 3),
            t = Math.acos(3 * q / p / u) / 3,
            k = 2 * Math.PI / 3;
      return [u * Math.cos(t) - ba3, u * Math.cos(t - k) - ba3, u * Math.cos(t - 2 * k) - ba3];
    }
  }
};

exports.solveCubic = solveCubic;
},{"./api":"../node_modules/@thi.ng/math/api.js","./safe-div":"../node_modules/@thi.ng/math/safe-div.js"}],"../node_modules/@thi.ng/math/step.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.expStep = exports.smootherStep = exports.smoothStep = exports.step = void 0;

var _interval = require("./interval");

/**
 * Step/threshold function.
 *
 * @param edge - threshold
 * @param x - test value
 * @returns 0, if `x < e`, else 1
 */
const step = (edge, x) => x < edge ? 0 : 1;
/**
 * GLSL-style smoothStep threshold function.
 *
 * @param edge - lower threshold
 * @param edge2 - upper threshold
 * @param x - test value
 * @returns 0, if `x < edge1`, 1 if `x > edge2`, else sigmoid interpolation
 */


exports.step = step;

const smoothStep = (edge, edge2, x) => {
  x = (0, _interval.clamp01)((x - edge) / (edge2 - edge));
  return (3 - 2 * x) * x * x;
};
/**
 * Similar to {@link smoothStep} but using different polynomial.
 *
 * @param edge -
 * @param edge2 -
 * @param x -
 */


exports.smoothStep = smoothStep;

const smootherStep = (edge, edge2, x) => {
  x = (0, _interval.clamp01)((x - edge) / (edge2 - edge));
  return x * x * x * (x * (x * 6 - 15) + 10);
};
/**
 * Exponential ramp with variable shape, e.g.
 *
 * - S-curve: k=8, n=4
 * - Step near 1.0: k=8, n=20
 * - Pulse: k=0.005, n=-10
 * - Ease-in: k=0.5, n=0.25
 *
 * @param k -
 * @param n -
 * @param x -
 */


exports.smootherStep = smootherStep;

const expStep = (k, n, x) => 1 - Math.exp(-k * Math.pow(x, n));

exports.expStep = expStep;
},{"./interval":"../node_modules/@thi.ng/math/interval.js"}],"../node_modules/@thi.ng/math/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _api = require("./api");

Object.keys(_api).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _api[key];
    }
  });
});

var _abs = require("./abs");

Object.keys(_abs).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _abs[key];
    }
  });
});

var _angle = require("./angle");

Object.keys(_angle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _angle[key];
    }
  });
});

var _crossing = require("./crossing");

Object.keys(_crossing).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _crossing[key];
    }
  });
});

var _eqdelta = require("./eqdelta");

Object.keys(_eqdelta).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _eqdelta[key];
    }
  });
});

var _extrema = require("./extrema");

Object.keys(_extrema).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _extrema[key];
    }
  });
});

var _fit = require("./fit");

Object.keys(_fit).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _fit[key];
    }
  });
});

var _int = require("./int");

Object.keys(_int).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _int[key];
    }
  });
});

var _interval = require("./interval");

Object.keys(_interval).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _interval[key];
    }
  });
});

var _minError = require("./min-error");

Object.keys(_minError).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _minError[key];
    }
  });
});

var _mix = require("./mix");

Object.keys(_mix).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _mix[key];
    }
  });
});

var _prec = require("./prec");

Object.keys(_prec).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _prec[key];
    }
  });
});

var _ratio = require("./ratio");

Object.keys(_ratio).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _ratio[key];
    }
  });
});

var _safeDiv = require("./safe-div");

Object.keys(_safeDiv).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _safeDiv[key];
    }
  });
});

var _solve = require("./solve");

Object.keys(_solve).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _solve[key];
    }
  });
});

var _step = require("./step");

Object.keys(_step).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _step[key];
    }
  });
});
},{"./api":"../node_modules/@thi.ng/math/api.js","./abs":"../node_modules/@thi.ng/math/abs.js","./angle":"../node_modules/@thi.ng/math/angle.js","./crossing":"../node_modules/@thi.ng/math/crossing.js","./eqdelta":"../node_modules/@thi.ng/math/eqdelta.js","./extrema":"../node_modules/@thi.ng/math/extrema.js","./fit":"../node_modules/@thi.ng/math/fit.js","./int":"../node_modules/@thi.ng/math/int.js","./interval":"../node_modules/@thi.ng/math/interval.js","./min-error":"../node_modules/@thi.ng/math/min-error.js","./mix":"../node_modules/@thi.ng/math/mix.js","./prec":"../node_modules/@thi.ng/math/prec.js","./ratio":"../node_modules/@thi.ng/math/ratio.js","./safe-div":"../node_modules/@thi.ng/math/safe-div.js","./solve":"../node_modules/@thi.ng/math/solve.js","./step":"../node_modules/@thi.ng/math/step.js"}],"../node_modules/@thi.ng/transducers/xform/interpolate-hermite.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.interpolateHermite = interpolateHermite;

var _math = require("@thi.ng/math");

var _interpolate = require("./interpolate");

function interpolateHermite(n, src) {
  return (0, _interpolate.interpolate)((chunk, t) => (0, _math.mixHermite)(...chunk, t), 4, n, src);
}
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","./interpolate":"../node_modules/@thi.ng/transducers/xform/interpolate.js"}],"../node_modules/@thi.ng/transducers/xform/interpolate-linear.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.interpolateLinear = interpolateLinear;

var _math = require("@thi.ng/math");

var _interpolate = require("./interpolate");

function interpolateLinear(n, src) {
  return (0, _interpolate.interpolate)((chunk, t) => (0, _math.mix)(...chunk, t), 2, n, src);
}
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","./interpolate":"../node_modules/@thi.ng/transducers/xform/interpolate.js"}],"../node_modules/@thi.ng/transducers/xform/interpose.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.interpose = interpose;

var _checks = require("@thi.ng/checks");

var _compr = require("../func/compr");

var _iterator = require("../iterator");

var _reduced = require("../reduced");

function interpose(sep, src) {
  return (0, _checks.isIterable)(src) ? (0, _iterator.iterator)(interpose(sep), src) : rfn => {
    const r = rfn[2];

    const _sep = typeof sep === "function" ? sep : () => sep;

    let first = true;
    return (0, _compr.compR)(rfn, (acc, x) => {
      if (first) {
        first = false;
        return r(acc, x);
      }

      acc = r(acc, _sep());
      return (0, _reduced.isReduced)(acc) ? acc : r(acc, x);
    });
  };
}
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","../func/compr":"../node_modules/@thi.ng/transducers/func/compr.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js","../reduced":"../node_modules/@thi.ng/transducers/reduced.js"}],"../node_modules/@thi.ng/transducers/xform/keep.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.keep = keep;

var _compose = require("@thi.ng/compose");

var _compr = require("../func/compr");

var _iterator = require("../iterator");

function keep(...args) {
  return (0, _iterator.$iter)(keep, args) || (rfn => {
    const r = rfn[2];
    const pred = args[0] || _compose.identity;
    return (0, _compr.compR)(rfn, (acc, x) => pred(x) != null ? r(acc, x) : acc);
  });
}
},{"@thi.ng/compose":"../node_modules/@thi.ng/compose/index.js","../func/compr":"../node_modules/@thi.ng/transducers/func/compr.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js"}],"../node_modules/@thi.ng/transducers/xform/labeled.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.labeled = labeled;

var _checks = require("@thi.ng/checks");

var _iterator = require("../iterator");

var _map = require("./map");

function labeled(id, src) {
  return (0, _checks.isIterable)(src) ? (0, _iterator.iterator1)(labeled(id), src) : (0, _map.map)((0, _checks.isFunction)(id) ? x => [id(x), x] : x => [id, x]);
}
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js","./map":"../node_modules/@thi.ng/transducers/xform/map.js"}],"../node_modules/@thi.ng/transducers/func/deep-transform.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.deepTransform = void 0;

var _checks = require("@thi.ng/checks");

/**
 * Higher-order deep object transformer used by {@link (mapDeep:1)}.
 * Accepts a nested `spec` array reflecting same key structure as the
 * object to be mapped, but with functions or sub-specs as their values.
 * Returns a new function, which when called, recursively applies nested
 * transformers in post-order traversal (child transformers are run
 * first) and returns the result of the root transformer.
 *
 * @remarks
 * The transform specs are given as arrays in this format:
 *
 * ```ts
 * [tx-function, { key1: [tx-function, {...}], key2: tx-fn }]
 * ```
 *
 * If a key in the spec has no further sub maps, its transform function
 * can be given directly without having to wrap it into the usual array
 * structure.
 *
 * @example
 * ```ts
 * // source object to be transformed
 * src = {
 *    meta: {
 *      author: { name: "Alice", email: "a@b.com" },
 *      date: 1041510896000
 *    },
 *    type: "post",
 *    title: "Hello world",
 *    body: "Ratione necessitatibus doloremque itaque."
 * };
 *
 * // deep transformation spec
 * spec = [
 *    // root transform (called last)
 *    ({type, meta, title, body}) => ["div", {class: type}, title, meta, body],
 *    // object of transform sub-specs
 *    {
 *      meta: [
 *        ({author, date}) => ["div.meta", author, `(${date})`],
 *        {
 *          author: ({email, name}) => ["a", {href: `mailto:${email}`}, name],
 *          date: (d) => new Date(d).toLocaleString()
 *        }
 *      ],
 *      title: (title) => ["h1", title]
 *    }
 * ];
 *
 * // build transformer & apply to src
 * deepTransform(spec)(src);
 *
 * // [ "div",
 * //   { class: "article" },
 * //   [ "h1", "Hello world" ],
 * //   [ "div.meta",
 * //     [ "a", { href: "mailto:a@.b.com" }, "Alice" ],
 * //     "(1/2/2003, 12:34:56 PM)" ],
 * //   "Ratione necessitatibus doloremque itaque." ]
 * ```
 *
 * @param spec - transformation spec
 */
const deepTransform = spec => {
  if ((0, _checks.isFunction)(spec)) {
    return spec;
  }

  const mapfns = Object.keys(spec[1] || {}).reduce((acc, k) => (acc[k] = deepTransform(spec[1][k]), acc), {});
  return x => {
    const res = Object.assign({}, x);

    for (let k in mapfns) {
      res[k] = mapfns[k](res[k]);
    }

    return spec[0](res);
  };
};

exports.deepTransform = deepTransform;
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js"}],"../node_modules/@thi.ng/transducers/xform/map-deep.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mapDeep = mapDeep;

var _checks = require("@thi.ng/checks");

var _deepTransform = require("../func/deep-transform");

var _iterator = require("../iterator");

var _map = require("./map");

function mapDeep(spec, src) {
  return (0, _checks.isIterable)(src) ? (0, _iterator.iterator1)(mapDeep(spec), src) : (0, _map.map)((0, _deepTransform.deepTransform)(spec));
}
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","../func/deep-transform":"../node_modules/@thi.ng/transducers/func/deep-transform.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js","./map":"../node_modules/@thi.ng/transducers/xform/map.js"}],"../node_modules/@thi.ng/transducers/xform/map-keys.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mapKeys = mapKeys;

var _iterator = require("../iterator");

var _map = require("./map");

function mapKeys(...args) {
  const iter = (0, _iterator.$iter)(mapKeys, args);

  if (iter) {
    return iter;
  }

  const keys = args[0];
  const copy = args[1] !== false;
  return (0, _map.map)(x => {
    const res = copy ? Object.assign({}, x) : x;

    for (let k in keys) {
      res[k] = keys[k](x[k], x);
    }

    return res;
  });
}
},{"../iterator":"../node_modules/@thi.ng/transducers/iterator.js","./map":"../node_modules/@thi.ng/transducers/xform/map.js"}],"../node_modules/@thi.ng/transducers/xform/map-nth.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mapNth = mapNth;

var _compr = require("../func/compr");

var _iterator = require("../iterator");

function mapNth(...args) {
  const iter = (0, _iterator.$iter)(mapNth, args);

  if (iter) {
    return iter;
  }

  let n = args[0] - 1;
  let offset;
  let fn;

  if (typeof args[1] === "number") {
    offset = args[1];
    fn = args[2];
  } else {
    fn = args[1];
    offset = 0;
  }

  return rfn => {
    const r = rfn[2];
    let skip = 0,
        off = offset;
    return (0, _compr.compR)(rfn, (acc, x) => {
      if (off === 0) {
        if (skip === 0) {
          skip = n;
          return r(acc, fn(x));
        }

        skip--;
      } else {
        off--;
      }

      return r(acc, x);
    });
  };
}
},{"../func/compr":"../node_modules/@thi.ng/transducers/func/compr.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js"}],"../node_modules/@thi.ng/transducers/xform/map-vals.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mapVals = mapVals;

var _iterator = require("../iterator");

var _map = require("./map");

function mapVals(...args) {
  const iter = (0, _iterator.$iter)(mapVals, args);

  if (iter) {
    return iter;
  }

  const fn = args[0];
  const copy = args[1] !== false;
  return (0, _map.map)(x => {
    const res = copy ? {} : x;

    for (let k in x) {
      res[k] = fn(x[k]);
    }

    return res;
  });
}
},{"../iterator":"../node_modules/@thi.ng/transducers/iterator.js","./map":"../node_modules/@thi.ng/transducers/xform/map.js"}],"../node_modules/@thi.ng/transducers/xform/mapcat-indexed.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mapcatIndexed = mapcatIndexed;

var _comp = require("../func/comp");

var _iterator = require("../iterator");

var _cat = require("./cat");

var _mapIndexed = require("./map-indexed");

function mapcatIndexed(...args) {
  return (0, _iterator.$iter)(mapcatIndexed, args, _iterator.iterator) || (0, _comp.comp)((0, _mapIndexed.mapIndexed)(args[0], args[1]), (0, _cat.cat)());
}
},{"../func/comp":"../node_modules/@thi.ng/transducers/func/comp.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js","./cat":"../node_modules/@thi.ng/transducers/xform/cat.js","./map-indexed":"../node_modules/@thi.ng/transducers/xform/map-indexed.js"}],"../node_modules/@thi.ng/transducers/xform/take.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.take = take;

var _checks = require("@thi.ng/checks");

var _compr = require("../func/compr");

var _iterator = require("../iterator");

var _reduced = require("../reduced");

function take(n, src) {
  return (0, _checks.isIterable)(src) ? (0, _iterator.iterator)(take(n), src) : rfn => {
    const r = rfn[2];
    let m = n;
    return (0, _compr.compR)(rfn, (acc, x) => --m > 0 ? r(acc, x) : m === 0 ? (0, _reduced.ensureReduced)(r(acc, x)) : (0, _reduced.reduced)(acc));
  };
}
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","../func/compr":"../node_modules/@thi.ng/transducers/func/compr.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js","../reduced":"../node_modules/@thi.ng/transducers/reduced.js"}],"../node_modules/@thi.ng/transducers/xform/match-first.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.matchFirst = matchFirst;

var _checks = require("@thi.ng/checks");

var _comp = require("../func/comp");

var _iterator = require("../iterator");

var _filter = require("./filter");

var _take = require("./take");

function matchFirst(pred, src) {
  return (0, _checks.isIterable)(src) ? [...(0, _iterator.iterator1)(matchFirst(pred), src)][0] : (0, _comp.comp)((0, _filter.filter)(pred), (0, _take.take)(1));
}
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","../func/comp":"../node_modules/@thi.ng/transducers/func/comp.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js","./filter":"../node_modules/@thi.ng/transducers/xform/filter.js","./take":"../node_modules/@thi.ng/transducers/xform/take.js"}],"../node_modules/@thi.ng/transducers/internal/drain.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.__drain = void 0;

var _reduced = require("../reduced");

/**
 * Helper HOF yielding a buffer drain completion function for some
 * transducers.
 *
 * @param buf -
 * @param complete -
 * @param reduce -
 *
 * @internal
 */
const __drain = (buf, complete, reduce) => acc => {
  while (buf.length && !(0, _reduced.isReduced)(acc)) {
    acc = reduce(acc, buf.shift());
  }

  return complete(acc);
};

exports.__drain = __drain;
},{"../reduced":"../node_modules/@thi.ng/transducers/reduced.js"}],"../node_modules/@thi.ng/transducers/xform/take-last.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.takeLast = takeLast;

var _checks = require("@thi.ng/checks");

var _drain = require("../internal/drain");

var _iterator = require("../iterator");

function takeLast(n, src) {
  return (0, _checks.isIterable)(src) ? (0, _iterator.iterator)(takeLast(n), src) : ([init, complete, reduce]) => {
    const buf = [];
    return [init, (0, _drain.__drain)(buf, complete, reduce), (acc, x) => {
      if (buf.length === n) {
        buf.shift();
      }

      buf.push(x);
      return acc;
    }];
  };
}
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","../internal/drain":"../node_modules/@thi.ng/transducers/internal/drain.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js"}],"../node_modules/@thi.ng/transducers/xform/match-last.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.matchLast = matchLast;

var _checks = require("@thi.ng/checks");

var _comp = require("../func/comp");

var _iterator = require("../iterator");

var _filter = require("./filter");

var _takeLast = require("./take-last");

function matchLast(pred, src) {
  return (0, _checks.isIterable)(src) ? [...(0, _iterator.iterator)(matchLast(pred), src)][0] : (0, _comp.comp)((0, _filter.filter)(pred), (0, _takeLast.takeLast)(1));
}
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","../func/comp":"../node_modules/@thi.ng/transducers/func/comp.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js","./filter":"../node_modules/@thi.ng/transducers/xform/filter.js","./take-last":"../node_modules/@thi.ng/transducers/xform/take-last.js"}],"../node_modules/@thi.ng/transducers/xform/moving-average.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.movingAverage = movingAverage;

var _checks = require("@thi.ng/checks");

var _errors = require("@thi.ng/errors");

var _compr = require("../func/compr");

var _iterator = require("../iterator");

function movingAverage(period, src) {
  return (0, _checks.isIterable)(src) ? (0, _iterator.iterator1)(movingAverage(period), src) : rfn => {
    period |= 0;
    period < 2 && (0, _errors.illegalArgs)("period must be >= 2");
    const reduce = rfn[2];
    const window = [];
    let sum = 0;
    return (0, _compr.compR)(rfn, (acc, x) => {
      const n = window.push(x);
      sum += x;
      n > period && (sum -= window.shift());
      return n >= period ? reduce(acc, sum / period) : acc;
    });
  };
}
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","@thi.ng/errors":"../node_modules/@thi.ng/errors/index.js","../func/compr":"../node_modules/@thi.ng/transducers/func/compr.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js"}],"../node_modules/@thi.ng/transducers/internal/sort-opts.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.__sortOpts = void 0;

var _compare = require("@thi.ng/compare");

var _compose = require("@thi.ng/compose");

/**
 * Helper function to inject default {@link SortOpts}.
 *
 * @param opts -
 *
 * @internal
 */
const __sortOpts = opts => Object.assign({
  key: _compose.identity,
  compare: _compare.compare
}, opts);

exports.__sortOpts = __sortOpts;
},{"@thi.ng/compare":"../node_modules/@thi.ng/compare/index.js","@thi.ng/compose":"../node_modules/@thi.ng/compose/index.js"}],"../node_modules/@thi.ng/transducers/xform/moving-median.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.movingMedian = movingMedian;

var _comp = require("../func/comp");

var _sortOpts = require("../internal/sort-opts");

var _iterator = require("../iterator");

var _map = require("./map");

var _partition = require("./partition");

function movingMedian(...args) {
  const iter = (0, _iterator.$iter)(movingMedian, args);

  if (iter) {
    return iter;
  }

  const {
    key,
    compare
  } = (0, _sortOpts.__sortOpts)(args[1]);
  const n = args[0];
  const m = n >> 1;
  return (0, _comp.comp)((0, _partition.partition)(n, 1, true), (0, _map.map)(window => window.slice().sort((a, b) => compare(key(a), key(b)))[m]));
}
},{"../func/comp":"../node_modules/@thi.ng/transducers/func/comp.js","../internal/sort-opts":"../node_modules/@thi.ng/transducers/internal/sort-opts.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js","./map":"../node_modules/@thi.ng/transducers/xform/map.js","./partition":"../node_modules/@thi.ng/transducers/xform/partition.js"}],"../node_modules/@thi.ng/transducers/xform/multiplex.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.multiplex = multiplex;

var _compose = require("@thi.ng/compose");

var _step = require("../step");

var _map = require("./map");

function multiplex(...args) {
  return (0, _map.map)(_compose.juxt.apply(null, args.map(_step.step)));
}
},{"@thi.ng/compose":"../node_modules/@thi.ng/compose/index.js","../step":"../node_modules/@thi.ng/transducers/step.js","./map":"../node_modules/@thi.ng/transducers/xform/map.js"}],"../node_modules/@thi.ng/transducers/func/renamer.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.renamer = void 0;

const renamer = kmap => {
  const ks = Object.keys(kmap);
  const [a2, b2, c2] = ks;
  const [a1, b1, c1] = ks.map(k => kmap[k]);

  switch (ks.length) {
    case 3:
      return x => {
        const res = {};
        let v;
        v = x[c1], v !== undefined && (res[c2] = v);
        v = x[b1], v !== undefined && (res[b2] = v);
        v = x[a1], v !== undefined && (res[a2] = v);
        return res;
      };

    case 2:
      return x => {
        const res = {};
        let v;
        v = x[b1], v !== undefined && (res[b2] = v);
        v = x[a1], v !== undefined && (res[a2] = v);
        return res;
      };

    case 1:
      return x => {
        const res = {};
        let v = x[a1];
        v !== undefined && (res[a2] = v);
        return res;
      };

    default:
      return x => {
        let k, v;
        const res = {};

        for (let i = ks.length - 1; i >= 0; i--) {
          k = ks[i], v = x[kmap[k]], v !== undefined && (res[k] = v);
        }

        return res;
      };
  }
};

exports.renamer = renamer;
},{}],"../node_modules/@thi.ng/transducers/xform/rename.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rename = rename;

var _checks = require("@thi.ng/checks");

var _comp = require("../func/comp");

var _renamer = require("../func/renamer");

var _iterator = require("../iterator");

var _transduce = require("../transduce");

var _filter = require("./filter");

var _map = require("./map");

function rename(...args) {
  const iter = args.length > 2 && (0, _iterator.$iter)(rename, args);

  if (iter) {
    return iter;
  }

  let kmap = args[0];

  if ((0, _checks.isArray)(kmap)) {
    kmap = kmap.reduce((acc, k, i) => (acc[k] = i, acc), {});
  }

  if (args[1]) {
    const ks = Object.keys(kmap);
    return (0, _map.map)(y => (0, _transduce.transduce)((0, _comp.comp)((0, _map.map)(k => [k, y[kmap[k]]]), (0, _filter.filter)(x => x[1] !== undefined)), args[1], ks));
  } else {
    return (0, _map.map)((0, _renamer.renamer)(kmap));
  }
}
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","../func/comp":"../node_modules/@thi.ng/transducers/func/comp.js","../func/renamer":"../node_modules/@thi.ng/transducers/func/renamer.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js","../transduce":"../node_modules/@thi.ng/transducers/transduce.js","./filter":"../node_modules/@thi.ng/transducers/xform/filter.js","./map":"../node_modules/@thi.ng/transducers/xform/map.js"}],"../node_modules/@thi.ng/transducers/xform/multiplex-obj.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.multiplexObj = multiplexObj;

var _comp = require("../func/comp");

var _iterator = require("../iterator");

var _multiplex = require("./multiplex");

var _rename = require("./rename");

function multiplexObj(...args) {
  const iter = (0, _iterator.$iter)(multiplexObj, args);

  if (iter) {
    return iter;
  }

  const [xforms, rfn] = args;
  const ks = Object.keys(xforms);
  return (0, _comp.comp)(_multiplex.multiplex.apply(null, ks.map(k => xforms[k])), (0, _rename.rename)(ks, rfn));
}
},{"../func/comp":"../node_modules/@thi.ng/transducers/func/comp.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js","./multiplex":"../node_modules/@thi.ng/transducers/xform/multiplex.js","./rename":"../node_modules/@thi.ng/transducers/xform/rename.js"}],"../node_modules/@thi.ng/transducers/xform/noop.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.noop = void 0;

/**
 * No-op / pass-through transducer, essentially the same as:
 * `map((x) => x)`, but faster. Useful for testing and / or to keep
 * existing values in a {@link (multiplex:1)} tuple lane.
 */
const noop = () => rfn => rfn;

exports.noop = noop;
},{}],"../node_modules/@thi.ng/transducers/xform/pad-last.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.padLast = padLast;

var _checks = require("@thi.ng/checks");

var _iterator = require("../iterator");

var _reduced = require("../reduced");

function padLast(n, fill, src) {
  return (0, _checks.isIterable)(src) ? (0, _iterator.iterator)(padLast(n, fill), src) : ([init, complete, reduce]) => {
    let m = 0;
    return [init, acc => {
      let rem = m % n;

      if (rem > 0) {
        while (++rem <= n && !(0, _reduced.isReduced)(acc)) {
          acc = reduce(acc, fill);
        }
      }

      return complete(acc);
    }, (acc, x) => (m++, reduce(acc, x))];
  };
}
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js","../reduced":"../node_modules/@thi.ng/transducers/reduced.js"}],"../node_modules/@thi.ng/transducers/xform/page.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.page = page;

var _comp = require("../func/comp");

var _iterator = require("../iterator");

var _drop = require("./drop");

var _take = require("./take");

function page(...args) {
  return (0, _iterator.$iter)(page, args) || (0, _comp.comp)((0, _drop.drop)(args[0] * (args[1] || 10)), (0, _take.take)(args[1] || 10));
}
},{"../func/comp":"../node_modules/@thi.ng/transducers/func/comp.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js","./drop":"../node_modules/@thi.ng/transducers/xform/drop.js","./take":"../node_modules/@thi.ng/transducers/xform/take.js"}],"../node_modules/@thi.ng/transducers/xform/partition-by.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.partitionBy = partitionBy;

var _api = require("@thi.ng/api");

var _iterator = require("../iterator");

var _reduced = require("../reduced");

function partitionBy(...args) {
  return (0, _iterator.$iter)(partitionBy, args, _iterator.iterator) || (([init, complete, reduce]) => {
    const fn = args[0];
    const f = args[1] === true ? fn() : fn;
    let prev = _api.SEMAPHORE;
    let chunk;
    return [init, acc => {
      if (chunk && chunk.length) {
        acc = reduce(acc, chunk);
        chunk = null;
      }

      return complete(acc);
    }, (acc, x) => {
      const curr = f(x);

      if (prev === _api.SEMAPHORE) {
        prev = curr;
        chunk = [x];
      } else if (curr === prev) {
        chunk.push(x);
      } else {
        chunk && (acc = reduce(acc, chunk));
        chunk = (0, _reduced.isReduced)(acc) ? null : [x];
        prev = curr;
      }

      return acc;
    }];
  });
}
},{"@thi.ng/api":"../node_modules/@thi.ng/api/index.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js","../reduced":"../node_modules/@thi.ng/transducers/reduced.js"}],"../node_modules/@thi.ng/transducers/xform/partition-of.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.partitionOf = partitionOf;

var _checks = require("@thi.ng/checks");

var _iterator = require("../iterator");

var _partitionBy = require("./partition-by");

function partitionOf(sizes, src) {
  return (0, _checks.isIterable)(src) ? (0, _iterator.iterator)(partitionOf(sizes), src) : (0, _partitionBy.partitionBy)(() => {
    let i = 0,
        j = 0;
    return () => {
      if (i++ === sizes[j]) {
        i = 1;
        j = (j + 1) % sizes.length;
      }

      return j;
    };
  }, true);
}
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js","./partition-by":"../node_modules/@thi.ng/transducers/xform/partition-by.js"}],"../node_modules/@thi.ng/transducers/xform/partition-sort.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.partitionSort = partitionSort;

var _comp = require("../func/comp");

var _sortOpts = require("../internal/sort-opts");

var _iterator = require("../iterator");

var _mapcat = require("./mapcat");

var _partition = require("./partition");

function partitionSort(...args) {
  const iter = (0, _iterator.$iter)(partitionSort, args, _iterator.iterator);

  if (iter) {
    return iter;
  }

  const {
    key,
    compare
  } = (0, _sortOpts.__sortOpts)(args[1]);
  return (0, _comp.comp)((0, _partition.partition)(args[0], true), (0, _mapcat.mapcat)(window => window.slice().sort((a, b) => compare(key(a), key(b)))));
}
},{"../func/comp":"../node_modules/@thi.ng/transducers/func/comp.js","../internal/sort-opts":"../node_modules/@thi.ng/transducers/internal/sort-opts.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js","./mapcat":"../node_modules/@thi.ng/transducers/xform/mapcat.js","./partition":"../node_modules/@thi.ng/transducers/xform/partition.js"}],"../node_modules/@thi.ng/transducers/xform/partition-sync.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.partitionSync = partitionSync;

var _checks = require("@thi.ng/checks");

var _compose = require("@thi.ng/compose");

var _errors = require("@thi.ng/errors");

var _iterator = require("../iterator");

var _reduced = require("../reduced");

function partitionSync(...args) {
  const iter = (0, _iterator.$iter)(partitionSync, args, _iterator.iterator);
  if (iter) return iter;
  const {
    key,
    mergeOnly,
    reset,
    all,
    backPressure
  } = Object.assign({
    key: _compose.identity,
    mergeOnly: false,
    reset: true,
    all: true,
    backPressure: 0
  }, args[1]);
  const requiredKeys = (0, _checks.isArray)(args[0]) ? new Set(args[0]) : args[0];
  const currKeys = new Set();
  const cache = new Map();
  let curr = {};

  const xform = ([init, complete, reduce]) => {
    let first = true;

    if (mergeOnly || backPressure < 1) {
      return [init, acc => {
        if (reset && all && currKeys.size > 0 || !reset && first) {
          acc = reduce(acc, curr);
          curr = {};
          currKeys.clear();
          first = false;
        }

        return complete(acc);
      }, (acc, x) => {
        const k = key(x);

        if (requiredKeys.has(k)) {
          curr[k] = x;
          currKeys.add(k);

          if (mergeOnly || requiredInputs(requiredKeys, currKeys)) {
            acc = reduce(acc, curr);
            first = false;

            if (reset) {
              curr = {};
              currKeys.clear();
            } else {
              curr = Object.assign({}, curr);
            }
          }
        }

        return acc;
      }];
    } else {
      // with backpressure / caching...
      return [init, acc => {
        if (all && currKeys.size > 0) {
          acc = reduce(acc, collect(cache, currKeys));
          cache.clear();
          currKeys.clear();
        }

        return complete(acc);
      }, (acc, x) => {
        const k = key(x);

        if (requiredKeys.has(k)) {
          let slot = cache.get(k);
          !slot && cache.set(k, slot = []);
          slot.length >= backPressure && (0, _errors.illegalState)(`max back pressure (${backPressure}) exceeded for input: ${String(k)}`);
          slot.push(x);
          currKeys.add(k);

          while (requiredInputs(requiredKeys, currKeys)) {
            acc = reduce(acc, collect(cache, currKeys));
            first = false;
            if ((0, _reduced.isReduced)(acc)) break;
          }
        }

        return acc;
      }];
    }
  };

  xform.keys = () => requiredKeys;

  xform.clear = () => {
    cache.clear();
    requiredKeys.clear();
    currKeys.clear();
    curr = {};
  };

  xform.add = id => {
    requiredKeys.add(id);
  };

  xform.delete = (id, clean = true) => {
    cache.delete(id);
    requiredKeys.delete(id);

    if (clean) {
      currKeys.delete(id);
      delete curr[id];
    }
  };

  return xform;
}

const requiredInputs = (required, curr) => {
  if (curr.size < required.size) return false;

  for (let id of required) {
    if (!curr.has(id)) return false;
  }

  return true;
};

const collect = (cache, currKeys) => {
  const curr = {};

  for (let id of currKeys) {
    const slot = cache.get(id);
    curr[id] = slot.shift();
    !slot.length && currKeys.delete(id);
  }

  return curr;
};
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","@thi.ng/compose":"../node_modules/@thi.ng/compose/index.js","@thi.ng/errors":"../node_modules/@thi.ng/errors/index.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js","../reduced":"../node_modules/@thi.ng/transducers/reduced.js"}],"../node_modules/@thi.ng/transducers/xform/partition-time.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.partitionTime = partitionTime;

var _checks = require("@thi.ng/checks");

var _iterator = require("../iterator");

var _partitionBy = require("./partition-by");

function partitionTime(period, src) {
  return (0, _checks.isIterable)(src) ? (0, _iterator.iterator)(partitionTime(period), src) : (0, _partitionBy.partitionBy)(() => {
    let last = 0;
    return () => {
      const t = Date.now();
      t - last >= period && (last = t);
      return last;
    };
  }, true);
}
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js","./partition-by":"../node_modules/@thi.ng/transducers/xform/partition-by.js"}],"../node_modules/@thi.ng/transducers/xform/peek.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.peek = peek;

var _arrays = require("@thi.ng/arrays");

var _map = require("./map");

function peek(src) {
  return (0, _map.map)(_arrays.peek, src);
}
},{"@thi.ng/arrays":"../node_modules/@thi.ng/arrays/index.js","./map":"../node_modules/@thi.ng/transducers/xform/map.js"}],"../node_modules/@thi.ng/transducers/xform/pluck.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pluck = pluck;

var _checks = require("@thi.ng/checks");

var _iterator = require("../iterator");

var _map = require("./map");

function pluck(key, src) {
  return (0, _checks.isIterable)(src) ? (0, _iterator.iterator1)(pluck(key), src) : (0, _map.map)(x => x[key]);
}
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js","./map":"../node_modules/@thi.ng/transducers/xform/map.js"}],"../node_modules/@thi.ng/transducers/xform/sample.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sample = sample;

var _random = require("@thi.ng/random");

var _compr = require("../func/compr");

var _iterator = require("../iterator");

function sample(...args) {
  const iter = (0, _iterator.$iter)(sample, args);

  if (iter) {
    return iter;
  }

  const prob = args[0];
  const rnd = args[1] || _random.SYSTEM;
  return rfn => {
    const r = rfn[2];
    return (0, _compr.compR)(rfn, (acc, x) => rnd.float() < prob ? r(acc, x) : acc);
  };
}
},{"@thi.ng/random":"../node_modules/@thi.ng/random/index.js","../func/compr":"../node_modules/@thi.ng/transducers/func/compr.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js"}],"../node_modules/@thi.ng/transducers/xform/scan.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.scan = scan;

var _iterator = require("../iterator");

var _reduced = require("../reduced");

function scan(...args) {
  return args.length > 2 && (0, _iterator.$iter)(scan, args, _iterator.iterator) || (([inito, completeo, reduceo]) => {
    const [initi, completei, reducei] = args[0];
    let acc = args.length > 1 && args[1] != null ? args[1] : initi();
    return [inito, _acc => {
      let a = completei(acc);

      if (a !== acc) {
        _acc = (0, _reduced.unreduced)(reduceo(_acc, a));
      }

      acc = a;
      return completeo(_acc);
    }, (_acc, x) => {
      acc = reducei(acc, x);

      if ((0, _reduced.isReduced)(acc)) {
        return (0, _reduced.ensureReduced)(reduceo(_acc, acc.deref()));
      }

      return reduceo(_acc, acc);
    }];
  });
}
},{"../iterator":"../node_modules/@thi.ng/transducers/iterator.js","../reduced":"../node_modules/@thi.ng/transducers/reduced.js"}],"../node_modules/@thi.ng/transducers/func/key-selector.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.keySelector = void 0;

var _renamer = require("./renamer");

const keySelector = keys => (0, _renamer.renamer)(keys.reduce((acc, x) => (acc[x] = x, acc), {}));

exports.keySelector = keySelector;
},{"./renamer":"../node_modules/@thi.ng/transducers/func/renamer.js"}],"../node_modules/@thi.ng/transducers/xform/select-keys.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.selectKeys = selectKeys;

var _checks = require("@thi.ng/checks");

var _keySelector = require("../func/key-selector");

var _iterator = require("../iterator");

var _map = require("./map");

function selectKeys(keys, src) {
  return (0, _checks.isIterable)(src) ? (0, _iterator.iterator1)(selectKeys(keys), src) : (0, _map.map)((0, _keySelector.keySelector)(keys));
}
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","../func/key-selector":"../node_modules/@thi.ng/transducers/func/key-selector.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js","./map":"../node_modules/@thi.ng/transducers/xform/map.js"}],"../node_modules/@thi.ng/transducers/xform/side-effect.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sideEffect = void 0;

var _map = require("./map");

/**
 * Helper transducer. Applies given `fn` to each input value, presumably
 * for side effects. Discards function's result and yields original
 * inputs.
 *
 * @param fn - side effect
 */
const sideEffect = fn => (0, _map.map)(x => (fn(x), x));

exports.sideEffect = sideEffect;
},{"./map":"../node_modules/@thi.ng/transducers/xform/map.js"}],"../node_modules/@thi.ng/transducers/xform/sliding-window.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.slidingWindow = slidingWindow;

var _api = require("@thi.ng/api");

var _compr = require("../func/compr");

var _iterator = require("../iterator");

function slidingWindow(...args) {
  const iter = (0, _iterator.$iter)(slidingWindow, args);
  if (iter) return iter;
  const size = args[0];
  const partial = args[1] !== false;
  return rfn => {
    const reduce = rfn[2];
    let buf = [];
    return (0, _compr.compR)(rfn, (acc, x) => {
      buf.push(x);

      const _size = (0, _api.deref)(size);

      if (partial || buf.length >= _size) {
        acc = reduce(acc, buf);
        buf = buf.slice(buf.length >= _size ? 1 : 0, _size);
      }

      return acc;
    });
  };
}
},{"@thi.ng/api":"../node_modules/@thi.ng/api/index.js","../func/compr":"../node_modules/@thi.ng/transducers/func/compr.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js"}],"../node_modules/@thi.ng/transducers/xform/stream-shuffle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.streamShuffle = streamShuffle;

var _arrays = require("@thi.ng/arrays");

var _iterator = require("../iterator");

var _reduced = require("../reduced");

function streamShuffle(...args) {
  return (0, _iterator.$iter)(streamShuffle, args, _iterator.iterator) || (([init, complete, reduce]) => {
    const n = args[0];
    const maxSwaps = args[1] || n;
    const buf = [];
    return [init, acc => {
      while (buf.length && !(0, _reduced.isReduced)(acc)) {
        (0, _arrays.shuffle)(buf, maxSwaps);
        acc = reduce(acc, buf.shift());
      }

      acc = complete(acc);
      return acc;
    }, (acc, x) => {
      buf.push(x);
      (0, _arrays.shuffle)(buf, maxSwaps);

      if (buf.length === n) {
        acc = reduce(acc, buf.shift());
      }

      return acc;
    }];
  });
}
},{"@thi.ng/arrays":"../node_modules/@thi.ng/arrays/index.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js","../reduced":"../node_modules/@thi.ng/transducers/reduced.js"}],"../node_modules/@thi.ng/transducers/xform/stream-sort.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.streamSort = streamSort;

var _arrays = require("@thi.ng/arrays");

var _drain = require("../internal/drain");

var _sortOpts = require("../internal/sort-opts");

var _iterator = require("../iterator");

function streamSort(...args) {
  const iter = (0, _iterator.$iter)(streamSort, args, _iterator.iterator);

  if (iter) {
    return iter;
  }

  const {
    key,
    compare
  } = (0, _sortOpts.__sortOpts)(args[1]);
  const n = args[0];
  return ([init, complete, reduce]) => {
    const buf = [];
    return [init, (0, _drain.__drain)(buf, complete, reduce), (acc, x) => {
      const idx = (0, _arrays.binarySearch)(buf, x, key, compare);
      buf.splice(idx < 0 ? -(idx + 1) : idx, 0, x);

      if (buf.length === n) {
        acc = reduce(acc, buf.shift());
      }

      return acc;
    }];
  };
}
},{"@thi.ng/arrays":"../node_modules/@thi.ng/arrays/index.js","../internal/drain":"../node_modules/@thi.ng/transducers/internal/drain.js","../internal/sort-opts":"../node_modules/@thi.ng/transducers/internal/sort-opts.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js"}],"../node_modules/@thi.ng/transducers/xform/struct.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.struct = struct;

var _checks = require("@thi.ng/checks");

var _comp = require("../func/comp");

var _iterator = require("../iterator");

var _mapKeys = require("./map-keys");

var _partition = require("./partition");

var _partitionOf = require("./partition-of");

var _rename = require("./rename");

function struct(fields, src) {
  return (0, _checks.isIterable)(src) ? (0, _iterator.iterator)(struct(fields), src) : (0, _comp.comp)((0, _partitionOf.partitionOf)(fields.map(f => f[1])), (0, _partition.partition)(fields.length), (0, _rename.rename)(fields.map(f => f[0])), (0, _mapKeys.mapKeys)(fields.reduce((acc, f) => f[2] ? (acc[f[0]] = f[2], acc) : acc, {}), false));
}
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","../func/comp":"../node_modules/@thi.ng/transducers/func/comp.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js","./map-keys":"../node_modules/@thi.ng/transducers/xform/map-keys.js","./partition":"../node_modules/@thi.ng/transducers/xform/partition.js","./partition-of":"../node_modules/@thi.ng/transducers/xform/partition-of.js","./rename":"../node_modules/@thi.ng/transducers/xform/rename.js"}],"../node_modules/@thi.ng/transducers/xform/swizzle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.swizzle = swizzle;

var _arrays = require("@thi.ng/arrays");

var _checks = require("@thi.ng/checks");

var _iterator = require("../iterator");

var _map = require("./map");

function swizzle(order, src) {
  return (0, _checks.isIterable)(src) ? (0, _iterator.iterator1)(swizzle(order), src) : (0, _map.map)((0, _arrays.swizzle)(order));
}
},{"@thi.ng/arrays":"../node_modules/@thi.ng/arrays/index.js","@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js","./map":"../node_modules/@thi.ng/transducers/xform/map.js"}],"../node_modules/@thi.ng/transducers/xform/take-nth.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.takeNth = takeNth;

var _checks = require("@thi.ng/checks");

var _iterator = require("../iterator");

var _throttle = require("./throttle");

function takeNth(n, src) {
  if ((0, _checks.isIterable)(src)) {
    return (0, _iterator.iterator1)(takeNth(n), src);
  }

  n = Math.max(0, n - 1);
  return (0, _throttle.throttle)(() => {
    let skip = 0;
    return () => skip === 0 ? (skip = n, true) : (skip--, false);
  });
}
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js","./throttle":"../node_modules/@thi.ng/transducers/xform/throttle.js"}],"../node_modules/@thi.ng/transducers/xform/take-while.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.takeWhile = takeWhile;

var _compr = require("../func/compr");

var _iterator = require("../iterator");

var _reduced = require("../reduced");

function takeWhile(...args) {
  return (0, _iterator.$iter)(takeWhile, args) || (rfn => {
    const r = rfn[2];
    const pred = args[0];
    let ok = true;
    return (0, _compr.compR)(rfn, (acc, x) => (ok = ok && pred(x)) ? r(acc, x) : (0, _reduced.reduced)(acc));
  });
}
},{"../func/compr":"../node_modules/@thi.ng/transducers/func/compr.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js","../reduced":"../node_modules/@thi.ng/transducers/reduced.js"}],"../node_modules/@thi.ng/transducers/xform/throttle-time.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.throttleTime = throttleTime;

var _checks = require("@thi.ng/checks");

var _iterator = require("../iterator");

var _throttle = require("./throttle");

function throttleTime(delay, src) {
  return (0, _checks.isIterable)(src) ? (0, _iterator.iterator1)(throttleTime(delay), src) : (0, _throttle.throttle)(() => {
    let last = 0;
    return () => {
      const t = Date.now();
      return t - last >= delay ? (last = t, true) : false;
    };
  });
}
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js","./throttle":"../node_modules/@thi.ng/transducers/xform/throttle.js"}],"../node_modules/@thi.ng/transducers/xform/toggle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toggle = toggle;

var _checks = require("@thi.ng/checks");

var _iterator = require("../iterator");

function toggle(on, off, initial = false, src) {
  return (0, _checks.isIterable)(src) ? (0, _iterator.iterator1)(toggle(on, off, initial), src) : ([init, complete, reduce]) => {
    let state = initial;
    return [init, complete, acc => reduce(acc, (state = !state) ? on : off)];
  };
}
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","../iterator":"../node_modules/@thi.ng/transducers/iterator.js"}],"../node_modules/@thi.ng/transducers/xform/trace.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.trace = void 0;

var _sideEffect = require("./side-effect");

const trace = (prefix = "") => (0, _sideEffect.sideEffect)(x => console.log(prefix, x));

exports.trace = trace;
},{"./side-effect":"../node_modules/@thi.ng/transducers/xform/side-effect.js"}],"../node_modules/@thi.ng/transducers/xform/word-wrap.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.wordWrap = wordWrap;

var _iterator = require("../iterator");

var _partitionBy = require("./partition-by");

function wordWrap(...args) {
  const iter = (0, _iterator.$iter)(wordWrap, args, _iterator.iterator);

  if (iter) {
    return iter;
  }

  const lineLength = args[0];
  const {
    delim,
    always
  } = Object.assign({
    delim: 1,
    always: true
  }, args[1]);
  return (0, _partitionBy.partitionBy)(() => {
    let n = 0;
    let flag = false;
    return w => {
      n += w.length + delim;

      if (n > lineLength + (always ? 0 : delim)) {
        flag = !flag;
        n = w.length + delim;
      }

      return flag;
    };
  }, true);
}
},{"../iterator":"../node_modules/@thi.ng/transducers/iterator.js","./partition-by":"../node_modules/@thi.ng/transducers/xform/partition-by.js"}],"../node_modules/@thi.ng/transducers/func/juxtr.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.juxtR = juxtR;

var _reduced = require("../reduced");

function juxtR(...rs) {
  let [a, b, c] = rs;
  const n = rs.length;

  switch (n) {
    case 1:
      {
        const r = a[2];
        return [() => [a[0]()], acc => [a[1](acc[0])], (acc, x) => {
          const aa1 = r(acc[0], x);

          if ((0, _reduced.isReduced)(aa1)) {
            return (0, _reduced.reduced)([(0, _reduced.unreduced)(aa1)]);
          }

          return [aa1];
        }];
      }

    case 2:
      {
        const ra = a[2];
        const rb = b[2];
        return [() => [a[0](), b[0]()], acc => [a[1](acc[0]), b[1](acc[1])], (acc, x) => {
          const aa1 = ra(acc[0], x);
          const aa2 = rb(acc[1], x);

          if ((0, _reduced.isReduced)(aa1) || (0, _reduced.isReduced)(aa2)) {
            return (0, _reduced.reduced)([(0, _reduced.unreduced)(aa1), (0, _reduced.unreduced)(aa2)]);
          }

          return [aa1, aa2];
        }];
      }

    case 3:
      {
        const ra = a[2];
        const rb = b[2];
        const rc = c[2];
        return [() => [a[0](), b[0](), c[0]()], acc => [a[1](acc[0]), b[1](acc[1]), c[1](acc[2])], (acc, x) => {
          const aa1 = ra(acc[0], x);
          const aa2 = rb(acc[1], x);
          const aa3 = rc(acc[2], x);

          if ((0, _reduced.isReduced)(aa1) || (0, _reduced.isReduced)(aa2) || (0, _reduced.isReduced)(aa3)) {
            return (0, _reduced.reduced)([(0, _reduced.unreduced)(aa1), (0, _reduced.unreduced)(aa2), (0, _reduced.unreduced)(aa3)]);
          }

          return [aa1, aa2, aa3];
        }];
      }

    default:
      return [() => rs.map(r => r[0]()), acc => rs.map((r, i) => r[1](acc[i])), (acc, x) => {
        let done = false;
        const res = [];

        for (let i = 0; i < n; i++) {
          let a = rs[i][2](acc[i], x);

          if ((0, _reduced.isReduced)(a)) {
            done = true;
            a = (0, _reduced.unreduced)(a);
          }

          res[i] = a;
        }

        return done ? (0, _reduced.reduced)(res) : res;
      }];
  }
}
},{"../reduced":"../node_modules/@thi.ng/transducers/reduced.js"}],"../node_modules/@thi.ng/transducers/func/lookup.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.lookup3d = exports.lookup2d = exports.lookup1d = void 0;

/**
 * Returns function accepting a single index arg used to
 * lookup value in given array. No bounds checks are done.
 *
 * @example
 * ```ts
 * [...map(lookup1d([10, 20, 30]), [2,0,1])]
 * // [ 30, 10, 20 ]
 * ```
 *
 * @param src - source data
 */
const lookup1d = src => i => src[i];
/**
 * Returns function accepting a single `[x, y]` index tuple, used to
 * lookup value in given array. Useful for transducers processing 2D
 * data.
 *
 * @remarks
 * The source data MUST be in row major linearized format, i.e. 1D
 * representation of 2D data (pixel buffer). No bounds checks are done.
 *
 * @example
 * ```ts
 * [...map(lookup2d([...range(9)], 3), range2d(2, -1, 0, 3))]
 * // [ 2, 1, 0, 5, 4, 3, 8, 7, 6 ]
 * ```
 *
 * @param src - source data
 * @param width - number of items along X (columns)
 */


exports.lookup1d = lookup1d;

const lookup2d = (src, width) => i => src[i[0] + i[1] * width];
/**
 * Same as {@link lookup2d}, but for 3D data. The index ordering of the
 * source data MUST be in Z, Y, X order (i.e. a stack of row major 2D slices).
 * No bounds checks are done.
 *
 * @param src - source data
 * @param width - number of items along X (columns)
 * @param height - number of items along Y (rows)
 */


exports.lookup2d = lookup2d;

const lookup3d = (src, width, height) => {
  const stridez = width * height;
  return i => src[i[0] + i[1] * width + i[2] * stridez];
};

exports.lookup3d = lookup3d;
},{}],"../node_modules/@thi.ng/transducers/iter/as-iterable.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.asIterable = asIterable;

/**
 * Helper function / generator to (re)provide given iterable in iterator
 * form.
 *
 * @param src -
 */
function* asIterable(src) {
  yield* src;
}
},{}],"../node_modules/@thi.ng/transducers/iter/repeatedly.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.repeatedly = repeatedly;

/**
 * Iterator yielding return values of given no-arg function `fn`. If `n`
 * is given, only that many values will be produced, else the iterator
 * is infinite.
 *
 * @example
 * ```ts
 * [...repeatedly(() => Math.floor(Math.random() * 10), 5)]
 * // [7, 0, 9, 3, 1]
 * ```
 *
 * @param fn - value producer
 * @param n - num values (default: ∞)
 */
function* repeatedly(fn, n = Infinity) {
  while (n-- > 0) {
    yield fn();
  }
}
},{}],"../node_modules/@thi.ng/transducers/iter/choices.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.choices = void 0;

var _arrays = require("@thi.ng/arrays");

var _random = require("@thi.ng/random");

var _repeatedly = require("./repeatedly");

/**
 * Returns an infinite iterator of random choices and their (optional)
 * weights. If `weights` is given, it must have at least the same size
 * as `choices`. If omitted, each choice will have same probability.
 *
 * @example
 * ```ts
 * transduce(take(1000), frequencies(), choices("abcd", [1, 0.5, 0.25, 0.125]))
 * // Map { 'c' => 132, 'a' => 545, 'b' => 251, 'd' => 72 }
 * ```
 *
 * {@link @thi.ng/random#weightedRandom}
 *
 * @param choices -
 * @param weights -
 */
const choices = (choices, weights, rnd = _random.SYSTEM) => (0, _repeatedly.repeatedly)(weights ? (0, _random.weightedRandom)((0, _arrays.ensureArray)(choices), weights, rnd) : () => choices[rnd.float(choices.length) | 0]);

exports.choices = choices;
},{"@thi.ng/arrays":"../node_modules/@thi.ng/arrays/index.js","@thi.ng/random":"../node_modules/@thi.ng/random/index.js","./repeatedly":"../node_modules/@thi.ng/transducers/iter/repeatedly.js"}],"../node_modules/@thi.ng/transducers/iter/concat.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.concat = concat;

var _arrays = require("@thi.ng/arrays");

/**
 * Yields iterator producing concatenation of given iterables.
 * Undefined & null inputs are silently ignored, however any
 * such values produced or contained in an input will remain.
 *
 * @example
 * ```ts
 * [...concat([1, 2, 3], null, [4, 5])]
 * // [ 1, 2, 3, 4, 5 ]
 *
 * [...concat([1, 2, 3, undefined], null, [4, 5])]
 * // [ 1, 2, 3, undefined, 4, 5 ]
 * ```
 *
 * @param xs -
 */
function* concat(...xs) {
  for (let x of xs) {
    x != null && (yield* (0, _arrays.ensureIterable)(x));
  }
}
},{"@thi.ng/arrays":"../node_modules/@thi.ng/arrays/index.js"}],"../node_modules/@thi.ng/transducers/iter/curve.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.curve = curve;

/**
 * Iterator producing an exponential curve (with adjustable curvature)
 * between `start` and `end` values over `num` steps. This is the
 * exponential equivalent of {@link line}.
 *
 * @remarks
 * Since `start` is the first value emitted, the `end` value is only
 * reached in the `num+1`th step.
 *
 * The curvature can be controlled via the logarithmic `rate` param.
 * Recommended range [0.0001 - 10000] (curved -> linear). Default: 0.1
 *
 * Similar functionality (w/ more options) is availble here:
 * {@link @thi.ng/dsp#curve}.
 *
 * @example
 * ```ts
 * [...curve(50, 100, 10, 2)]
 * // [
 * //   50,
 * //   73.193,
 * //   85.649,
 * //   92.339,
 * //   95.932,
 * //   97.861,
 * //   98.897,
 * //   99.454,
 * //   99.753,
 * //   99.913,
 * //   100
 * // ]
 * ```
 *
 * @param start -
 * @param end -
 * @param steps -
 * @param falloff -
 */
function* curve(start, end, steps = 10, rate = 0.1) {
  const c = Math.exp(-Math.log((Math.abs(end - start) + rate) / rate) / steps);
  const offset = (start < end ? end + rate : end - rate) * (1 - c);
  steps > 0 && (yield start);

  for (let x = start; --steps >= 0;) {
    yield x = offset + x * c;
  }
}
},{}],"../node_modules/@thi.ng/transducers/iter/cycle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cycle = cycle;

/**
 * Iterator which yields an infinite repetition of given `input`
 * iterable's values. Produces no values if `input` is empty. If `num`
 * is given, only that many cycles will be emitted.
 *
 * @remarks
 * Also see {@link repeat}, {@link repeatedly} for related functions.
 *
 * @example
 * ```ts
 * // take 5 from infinite sequence
 * [...take(5, cycle([1, 2, 3]))]
 * // [1, 2, 3, 1, 2]
 *
 * // only produce 2 cycles
 * [...cycle(range(3), 2)]
 * // [ 0, 1, 2, 0, 1, 2 ]
 * ```
 *
 * @param input -
 * @param num -
 */
function* cycle(input, num = Infinity) {
  if (num < 1) return;
  let cache = [];

  for (let i of input) {
    cache.push(i);
    yield i;
  }

  if (cache.length > 0) {
    while (--num > 0) {
      yield* cache;
    }
  }
}
},{}],"../node_modules/@thi.ng/transducers/iter/dup.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dup = dup;

var _arrays = require("@thi.ng/arrays");

var _checks = require("@thi.ng/checks");

var _concat = require("./concat");

function dup(x) {
  return (0, _checks.isString)(x) ? x + x : (0, _checks.isArray)(x) ? x.concat(x) : (x = (0, _arrays.ensureArray)(x), (0, _concat.concat)(x, x));
}
},{"@thi.ng/arrays":"../node_modules/@thi.ng/arrays/index.js","@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","./concat":"../node_modules/@thi.ng/transducers/iter/concat.js"}],"../node_modules/@thi.ng/transducers/iter/repeat.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.repeat = repeat;

/**
 * Iterator yielding an infinite (by default) repetition of given value
 * `x`. If `n` is given, only produces that many values.
 *
 * See also: {@link repeatedly}
 *
 * @example
 * ```ts
 * [...repeat(42, 5)]
 * // [42, 42, 42, 42, 42]
 * ```
 *
 * @param x - value to repeat
 * @param n - num values (default: ∞)
 */
function* repeat(x, n = Infinity) {
  while (n-- > 0) {
    yield x;
  }
}
},{}],"../node_modules/@thi.ng/transducers/iter/extend-sides.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.extendSides = extendSides;

var _api = require("@thi.ng/api");

var _repeat = require("./repeat");

/**
 * Yields iterator of given iterable which repeats the first and/or last
 * value(s) `numLeft`/`numRight` times (default: 1).
 *
 * @remarks
 * By default both sides are repeated, but can be adjusted by setting
 * either of them to zero. `numRight` defaults to same value as
 * `numLeft`.
 *
 * @example
 * ```ts
 * [...extendSides([1, 2, 3])]
 * // [ 1,  1, 2, 3,  3]
 *
 * [...extendSides([1, 2, 3], 3)]
 * // [ 1, 1, 1,  1, 2, 3,  3, 3, 3 ]
 *
 * [...extendSides([1, 2, 3], 0, 3)]
 * // [ 1, 2, 3,  3, 3, 3 ]
 * ```
 *
 * - {@link padSides}
 * - {@link wrapSides}
 *
 * @param src -
 * @param numLeft -
 * @param numRight -
 */
function* extendSides(src, numLeft = 1, numRight = numLeft) {
  let prev = _api.SEMAPHORE;

  for (let x of src) {
    if (numLeft > 0 && prev === _api.SEMAPHORE) {
      yield* (0, _repeat.repeat)(x, numLeft);
      numLeft = 0;
    }

    yield x;
    prev = x;
  }

  if (numRight > 0 && prev !== _api.SEMAPHORE) {
    yield* (0, _repeat.repeat)(prev, numRight);
  }
}
},{"@thi.ng/api":"../node_modules/@thi.ng/api/index.js","./repeat":"../node_modules/@thi.ng/transducers/iter/repeat.js"}],"../node_modules/@thi.ng/transducers/iter/iterate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.iterate = iterate;

/**
 * Yields an infinite iterator of the inductive sequence:
 *
 * `f(x+1) = f(f(x))`
 *
 * @remarks
 * The first value emitted always is `seed` itself, then f(seed),
 * f(f(seed)) etc. The given function is called with the current
 * iteration counter as 2nd arg.
 *
 * @example
 * ```ts
 * [...iterate((x) => x * 2, 1, 5)]
 * // [ 1, 2, 4, 8, 16 ]
 *
 * [...iterate((x, i) => x * 10 + i, 0, 8)]
 * // [ 0, 1, 12, 123, 1234, 12345, 123456, 1234567 ]
 * ```
 *
 * @param fn -
 * @param seed -
 * @param num -
 */
function* iterate(fn, seed, num = Infinity) {
  let i = 0;

  while (i < num) {
    yield seed;
    seed = fn(seed, ++i);
  }
}
},{}],"../node_modules/@thi.ng/transducers/iter/pairs.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pairs = pairs;

/**
 * Iterator yielding key-value pairs of given object's own properties
 * and their values. Same as `zip(keys(x), vals(x))`.
 *
 * @remarks
 * - {@link vals}
 * - {@link (zip:1)}
 *
 * @example
 * ```ts
 * [...pairs({ a: 1, b: 2 })]
 * // [['a', 1], ['b', 2]]
 * ```
 *
 *
 * @param x -
 */
function* pairs(x) {
  for (let k in x) {
    if (x.hasOwnProperty(k)) {
      yield [k, x[k]];
    }
  }
}
},{}],"../node_modules/@thi.ng/transducers/iter/permutations.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.permutations = permutations;
exports.permutationsN = void 0;

var _arrays = require("@thi.ng/arrays");

var _errors = require("@thi.ng/errors");

var _range = require("./range");

function* permutations(...src) {
  const n = src.length - 1;

  if (n < 0) {
    return;
  }

  const step = new Array(n + 1).fill(0);
  const realized = src.map(_arrays.ensureArrayLike);
  const total = realized.reduce((acc, x) => acc * x.length, 1);

  for (let i = 0; i < total; i++) {
    const tuple = [];

    for (let j = n; j >= 0; j--) {
      const r = realized[j];
      let s = step[j];

      if (s === r.length) {
        step[j] = s = 0;
        j > 0 && step[j - 1]++;
      }

      tuple[j] = r[s];
    }

    step[n]++;
    yield tuple;
  }
}
/**
 * Iterator yielding the Cartesian Product for `n` items of `m` values
 * each.
 *
 * @remarks
 * If `m` is not given, defaults to value of `n`. The range of `m` is
 * `0..m-1`. The optional `offsets` array can be used to define start
 * values for each dimension.
 *
 * @example
 * ```ts
 * [...permutationsN(2)]
 * // [ [0, 0], [0, 1], [1, 0], [1, 1] ]
 *
 * [...permutationsN(2, 3)]
 * // [ [0, 0], [0, 1], [0, 2],
 * //   [1, 0], [1, 1], [1, 2],
 * //   [2, 0], [2, 1], [2, 2] ]
 *
 * [...permutationsN(2, 2, [10, 20])]
 * // [ [ 10, 20 ], [ 10, 21 ], [ 11, 20 ], [ 11, 21 ] ]
 * ```
 *
 * @param n -
 * @param m -
 * @param offsets -
 */


const permutationsN = (n, m = n, offsets) => {
  if (offsets && offsets.length < n) {
    (0, _errors.illegalArgs)(`insufficient offsets, got ${offsets.length}, needed ${n}`);
  }

  const seqs = [];

  while (--n >= 0) {
    const o = offsets ? offsets[n] : 0;
    seqs[n] = (0, _range.range)(o, o + m);
  }

  return permutations.apply(null, seqs);
};

exports.permutationsN = permutationsN;
},{"@thi.ng/arrays":"../node_modules/@thi.ng/arrays/index.js","@thi.ng/errors":"../node_modules/@thi.ng/errors/index.js","./range":"../node_modules/@thi.ng/transducers/iter/range.js"}],"../node_modules/@thi.ng/transducers/iter/key-permutations.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.keyPermutations = void 0;

var _assocObj = require("../rfn/assoc-obj");

var _map = require("../xform/map");

var _mapcat = require("../xform/mapcat");

var _partition = require("../xform/partition");

var _pairs = require("./pairs");

var _permutations = require("./permutations");

/**
 * Similar to {@link permutations}, however takes an object with each
 * key specifying an array of its possible values. Yields an iterable of
 * objects of all value permutations.
 *
 * @remarks
 * The resulting object type will be derived from the value types in the
 * given `spec` object.
 *
 * The order of resulting permutations is not guaranteed and depending
 * on the VM's iteration behavior of `Object.keys()`.
 *
 * @example
 * ```ts
 * [...keyPermutations({ a: [1, 2], b: [true, false], c: ["X", "Y"] })]
 * // [
 * //   { a: 1, b: true, c: 'X' },
 * //   { a: 1, b: true, c: 'Y' },
 * //   { a: 1, b: false, c: 'X' },
 * //   { a: 1, b: false, c: 'Y' },
 * //   { a: 2, b: true, c: 'X' },
 * //   { a: 2, b: true, c: 'Y' },
 * //   { a: 2, b: false, c: 'X' },
 * //   { a: 2, b: false, c: 'Y' }
 * // ]
 * ```
 *
 * @param spec - permutation spec object
 */
const keyPermutations = spec => (0, _map.map)(x => (0, _assocObj.assocObj)((0, _partition.partition)(2, x)), (0, _permutations.permutations)(...(0, _mapcat.mapcat)(([k, v]) => [[k], v], (0, _pairs.pairs)(spec))));

exports.keyPermutations = keyPermutations;
},{"../rfn/assoc-obj":"../node_modules/@thi.ng/transducers/rfn/assoc-obj.js","../xform/map":"../node_modules/@thi.ng/transducers/xform/map.js","../xform/mapcat":"../node_modules/@thi.ng/transducers/xform/mapcat.js","../xform/partition":"../node_modules/@thi.ng/transducers/xform/partition.js","./pairs":"../node_modules/@thi.ng/transducers/iter/pairs.js","./permutations":"../node_modules/@thi.ng/transducers/iter/permutations.js"}],"../node_modules/@thi.ng/transducers/iter/keys.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.keys = keys;

/**
 * Iterator which yields all names of given object's own properties
 * (Similar to `Object.keys()`).
 *
 * @remarks
 * See also:
 * - {@link pairs}
 * - {@link vals}
 *
 * @param x -
 */
function* keys(x) {
  for (let k in x) {
    if (x.hasOwnProperty(k)) {
      yield k;
    }
  }
}
},{}],"../node_modules/@thi.ng/transducers/iter/line.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.line = void 0;

var _map = require("../xform/map");

var _normRange = require("./norm-range");

/**
 * Iterator yielding `steps` + 1 interpolated values on a line in the
 * closed `[start .. end]` interval.
 *
 * @remarks
 * This is similar to {@link range}, but potentially provides more
 * precise values (by avoiding the accumulation of floating point errors
 * during iteration).
 *
 * Similar functionality (w/ more options) is availble here:
 * {@link @thi.ng/dsp#line}.
 *
 * @example
 * ```ts
 * [...line(50, 100, 10)]
 * // [
 * //    50, 55, 60, 65, 70,
 * //    75, 80, 85, 90, 95,
 * //   100
 * // ]
 * ```
 *
 * @param start -
 * @param end -
 * @param steps -
 */
const line = (start, end, steps = 10) => {
  const delta = end - start;
  return (0, _map.map)(t => start + delta * t, (0, _normRange.normRange)(steps));
};

exports.line = line;
},{"../xform/map":"../node_modules/@thi.ng/transducers/xform/map.js","./norm-range":"../node_modules/@thi.ng/transducers/iter/norm-range.js"}],"../node_modules/@thi.ng/transducers/iter/pad-sides.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.padSides = void 0;

var _concat = require("./concat");

var _repeat = require("./repeat");

/**
 * Returns iterator of `src` padded with value `x`, repeated
 * `numLeft`/`numRight` times (default: 1). By default both sides are
 * padded, but can be adjusted by setting either of them to zero.
 * `numRight` defaults to same value as `numLeft`.
 *
 * @example
 * Essentially, syntax sugar for:
 *
 * ```ts
 * // default
 * concat(repeat(x, numLeft), src, repeat(x, numRight))
 *
 * // left only
 * concat(repeat(x, numLeft), src)
 *
 * // right only
 * concat(src, repeat(x, numRight))
 * ```
 *
 * - {@link extendSides}
 * - {@link wrapSides}
 *
 * @param src -
 * @param x -
 * @param numLeft -
 * @param numRight -
 */
const padSides = (src, x, numLeft = 1, numRight = numLeft) => numLeft > 0 ? numRight > 0 ? (0, _concat.concat)((0, _repeat.repeat)(x, numLeft), src, (0, _repeat.repeat)(x, numRight)) : (0, _concat.concat)((0, _repeat.repeat)(x, numLeft), src) : numRight > 0 ? (0, _concat.concat)(src, (0, _repeat.repeat)(x, numRight)) : (0, _concat.concat)(src);

exports.padSides = padSides;
},{"./concat":"../node_modules/@thi.ng/transducers/iter/concat.js","./repeat":"../node_modules/@thi.ng/transducers/iter/repeat.js"}],"../node_modules/@thi.ng/transducers/iter/reverse.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.reverse = reverse;

var _arrays = require("@thi.ng/arrays");

/**
 * Yields iterator which consumes input and yield its values in reverse
 * order. Important: Input MUST be finite.
 *
 * @example
 * ```ts
 * [...tx.reverse("hello world")]
 * // [ "d", "l", "r", "o", "w", " ", "o", "l", "l", "e", "h" ]
 * ```
 *
 * @param input -
 */
function* reverse(input) {
  const _input = (0, _arrays.ensureArray)(input);

  let n = _input.length;

  while (--n >= 0) {
    yield _input[n];
  }
}
},{"@thi.ng/arrays":"../node_modules/@thi.ng/arrays/index.js"}],"../node_modules/@thi.ng/transducers/iter/palindrome.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.palindrome = palindrome;

var _arrays = require("@thi.ng/arrays");

var _checks = require("@thi.ng/checks");

var _str = require("../rfn/str");

var _concat = require("./concat");

var _reverse = require("./reverse");

function palindrome(x) {
  return (0, _checks.isString)(x) ? (0, _str.str)("", (0, _concat.concat)([x], (0, _reverse.reverse)(x))) : (0, _checks.isArray)(x) ? x.concat(x.slice().reverse()) : (x = (0, _arrays.ensureArray)(x), (0, _concat.concat)(x, (0, _reverse.reverse)(x)));
}
},{"@thi.ng/arrays":"../node_modules/@thi.ng/arrays/index.js","@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","../rfn/str":"../node_modules/@thi.ng/transducers/rfn/str.js","./concat":"../node_modules/@thi.ng/transducers/iter/concat.js","./reverse":"../node_modules/@thi.ng/transducers/iter/reverse.js"}],"../node_modules/@thi.ng/transducers/iter/range3d.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.range3d = range3d;

var _errors = require("@thi.ng/errors");

var _range = require("./range");

function* range3d(...args) {
  let fromX, toX, stepX;
  let fromY, toY, stepY;
  let fromZ, toZ, stepZ;

  switch (args.length) {
    case 9:
      stepX = args[6];
      stepY = args[7];
      stepZ = args[8];

    case 6:
      [fromX, toX, fromY, toY, fromZ, toZ] = args;
      break;

    case 3:
      [toX, toY, toZ] = args;
      fromX = fromY = fromZ = 0;
      break;

    default:
      (0, _errors.illegalArity)(args.length);
  }

  const rx = (0, _range.range)(fromX, toX, stepX);
  const ry = (0, _range.range)(fromY, toY, stepY);

  for (let z of (0, _range.range)(fromZ, toZ, stepZ)) {
    for (let y of ry) {
      for (let x of rx) {
        yield [x, y, z];
      }
    }
  }
}
},{"@thi.ng/errors":"../node_modules/@thi.ng/errors/index.js","./range":"../node_modules/@thi.ng/transducers/iter/range.js"}],"../node_modules/@thi.ng/transducers/iter/range-nd.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rangeNd = void 0;

var _map = require("../xform/map");

var _permutations = require("./permutations");

var _range = require("./range");

var _zip = require("./zip");

/**
 * If called with one vector, yields an iterator for the n-dimensional
 * interval: `[[0, 0,...] .. [x, y,...])`. If called with two vectors,
 * the first vector defines the inclusive interval start and the 2nd
 * vector the exclusive interval end. Each dimension can also contain
 * negative values.
 *
 * @example
 * ```ts
 * [...rangeNd([2])]
 * // [ [ 0 ], [ 1 ] ]
 *
 * [...rangeNd([2, -2])]
 * // [ [ 0, 0 ], [ 0, -1 ], [ 1, 0 ], [ 1, -1 ] ]
 *
 * [...rangeNd([-1,2], [1,3])]
 * // [ [ -1, 2 ], [ -1, 3 ], [ 0, 2 ], [ 0, 3 ] ]
 *
 * [...rangeNd([2, 2, 2])]
 * // [
 * //   [ 0, 0, 0 ],
 * //   [ 0, 0, 1 ],
 * //   [ 0, 1, 0 ],
 * //   [ 0, 1, 1 ],
 * //   [ 1, 0, 0 ],
 * //   [ 1, 0, 1 ],
 * //   [ 1, 1, 0 ],
 * //   [ 1, 1, 1 ]
 * // ]
 * ```
 *
 * @param vec
 */
const rangeNd = (min, max) => _permutations.permutations.apply(null, max ? [...(0, _map.map)(([a, b]) => (0, _range.range)(a, b), (0, _zip.zip)(min, max))] : [...(0, _map.map)(_range.range, min)]);

exports.rangeNd = rangeNd;
},{"../xform/map":"../node_modules/@thi.ng/transducers/xform/map.js","./permutations":"../node_modules/@thi.ng/transducers/iter/permutations.js","./range":"../node_modules/@thi.ng/transducers/iter/range.js","./zip":"../node_modules/@thi.ng/transducers/iter/zip.js"}],"../node_modules/@thi.ng/transducers/iter/sorted-keys.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sortedKeys = sortedKeys;

var _compare = require("@thi.ng/compare");

/**
 * Syntax sugar for `Object.keys(x).sort()` with support for custom
 * comparator (default: {@link @thi.ng/compare#compare}) and yielding
 * iterator of sorted keys.
 *
 * @param x -
 * @param cmp -
 */
function* sortedKeys(x, cmp = _compare.compare) {
  yield* Object.keys(x).sort(cmp);
}
},{"@thi.ng/compare":"../node_modules/@thi.ng/compare/index.js"}],"../node_modules/@thi.ng/transducers/iter/symmetric.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.symmetric = symmetric;

/**
 * Yields an iterator of all `src` values, followed by the same values
 * in reverse order. Efficiently builds the reversed order via an
 * internal linked list.
 *
 * @example
 * ```ts
 * [...symmetric([1, 2, 3])]
 * // [ 1, 2, 3, 3, 2, 1 ]
 * ```
 *
 * @param src -
 */
function* symmetric(src) {
  let head = undefined;

  for (let x of src) {
    head = {
      x,
      n: head
    };
    yield x;
  }

  while (head) {
    yield head.x;
    head = head.n;
  }
}
},{}],"../node_modules/@thi.ng/transducers/iter/tween.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tween = tween;

var _normRange = require("./norm-range");

var _repeat = require("./repeat");

/**
 * Keyframe based interpolator. Yields a sequence of `num+1` equally
 * spaced, tweened values from given keyframe tuples (`stops`).
 * Keyframes are defined as `[time, value]` tuples. Only values in the
 * closed `[min..max]` time interval will be computed.
 *
 * @remarks
 * Interpolation happens in two stages: First the given `init` function
 * is called to transform/prepare pairs of consecutive keyframes into a
 * single interval (user defined). Then, to produce each tweened value
 * calls `mix` with the currently active interval and interpolation time
 * value `t` (re-normalized and relative to current interval). The
 * iterator yields results of these `mix()` function calls.
 *
 * Depending on the overall `num`ber of samples requested and the
 * distance between keyframes, some keyframes MIGHT be skipped. E.g. if
 * requesting 10 samples within [0,1], the interval between two
 * successive keyframes at 0.12 and 0.19 would be skipped entirely,
 * since samples will only be taken at multiples of `1/num` (i.e. 0.0,
 * 0.1, 0.2... in this example).
 *
 * The given keyframe times can lie outside the `min`/`max` range and
 * also don't need to cover the range fully. In the latter case, tweened
 * values before the first or after the last keyframe will yield the
 * value of the first/last keyframe. If only a single keyframe is given
 * in total, all `num` yielded samples will be that keyframe's
 * transformed value.
 *
 * @example
 * ```ts
 * [...tween({
 *   num: 10,
 *   min: 0,
 *   max: 100,
 *   init: (a, b) => [a, b],
 *   mix: ([a, b], t) => Math.floor(a + (b - a) * t),
 *   stops: [[20, 100], [50, 200], [80, 0]]
 * })]
 * // [ 100, 100, 100, 133, 166, 200, 133, 66, 0, 0, 0 ]
 * ```
 *
 * Using easing functions (e.g. via {@link @thi.ng/math# | @thi.ng/math}),
 * non-linear interpolation within each keyframe interval can be achieved:
 *
 * @example
 * ```ts
 * import { mix, smoothStep } from "@thi.ng/math"
 *
 * [...tween({
 *   num: 10,
 *   min: 0,
 *   max: 100,
 *   init: (a, b) => [a, b],
 *   mix: ([a, b], t) => Math.floor(mix(a, b, smoothStep(0.1, 0.9, t))),
 *   stops: [[20, 100], [50, 200], [80, 0]]
 * })]
 * // [ 100, 100, 100, 120, 179, 200, 158, 41, 0, 0, 0 ]
 * ```
 *
 * - {@link TweenOpts}
 * - {@link (interpolate:1)}
 * - {@link (interpolateHermite:1)}
 * - {@link (interpolateLinear:1)}
 *
 * @param opts -
 */
function* tween(opts) {
  const {
    min,
    max,
    num,
    init,
    mix,
    stops
  } = opts;
  let l = stops.length;
  if (l < 1) return;

  if (l === 1) {
    yield* (0, _repeat.repeat)(mix(init(stops[0][1], stops[0][1]), 0), num);
  }

  stops.sort((a, b) => a[0] - b[0]);
  stops[l - 1][0] < max && stops.push([max, stops[l - 1][1]]);
  stops[0][0] > min && stops.unshift([min, stops[0][1]]);
  const range = max - min;
  let start = stops[0][0];
  let end = stops[1][0];
  let delta = end - start;
  let interval = init(stops[0][1], stops[1][1]);
  let i = 1;
  l = stops.length;

  for (let t of (0, _normRange.normRange)(num)) {
    t = min + range * t;

    if (t > end) {
      while (i < l && t > stops[i][0]) i++;

      start = stops[i - 1][0];
      end = stops[i][0];
      delta = end - start;
      interval = init(stops[i - 1][1], stops[i][1]);
    }

    yield mix(interval, delta !== 0 ? (t - start) / delta : 0);
  }
}
},{"./norm-range":"../node_modules/@thi.ng/transducers/iter/norm-range.js","./repeat":"../node_modules/@thi.ng/transducers/iter/repeat.js"}],"../node_modules/@thi.ng/transducers/iter/vals.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.vals = vals;

/**
 * Iterator which yields all values of given object's own properties
 * (Similar to `Object.values()`).
 *
 * @remarks
 * See also:
 * - {@link keys}
 * - {@link pairs}
 *
 * @param x -
 */
function* vals(x) {
  for (let k in x) {
    if (x.hasOwnProperty(k)) {
      yield x[k];
    }
  }
}
},{}],"../node_modules/@thi.ng/transducers/iter/wrap-sides.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.wrapSides = wrapSides;

var _arrays = require("@thi.ng/arrays");

var _errors = require("@thi.ng/errors");

var _math = require("@thi.ng/math");

/**
 * Yields iterator of `src` with the last `numLeft` values of `src`
 * prepended at the beginning and/or the first `numRight` values
 * appended at the end.
 *
 * @remarks
 * `numLeft` defaults to 1 and `numRight` defaults to same value as
 * `numLeft`, therefore wraps both sides by default and throws error if
 * either `nXXX < 0` or larger than `src.length`.
 *
 * See also:
 * - {@link extendSides}
 * - {@link padSides}
 *
 * @param src -
 * @param numLeft -
 * @param numRight -
 */
function* wrapSides(src, numLeft = 1, numRight = numLeft) {
  const _src = (0, _arrays.ensureArray)(src);

  !((0, _math.inRange)(numLeft, 0, _src.length) && (0, _math.inRange)(numRight, 0, _src.length)) && (0, _errors.illegalArgs)(`allowed wrap range: [0..${_src.length}]`);

  if (numLeft > 0) {
    for (let m = _src.length, i = m - numLeft; i < m; i++) {
      yield _src[i];
    }
  }

  yield* _src;

  if (numRight > 0) {
    for (let i = 0; i < numRight; i++) {
      yield _src[i];
    }
  }
}
},{"@thi.ng/arrays":"../node_modules/@thi.ng/arrays/index.js","@thi.ng/errors":"../node_modules/@thi.ng/errors/index.js","@thi.ng/math":"../node_modules/@thi.ng/math/index.js"}],"../node_modules/@thi.ng/transducers/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _api = require("./api");

Object.keys(_api).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _api[key];
    }
  });
});

var _iterator = require("./iterator");

Object.keys(_iterator).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _iterator[key];
    }
  });
});

var _reduce = require("./reduce");

Object.keys(_reduce).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _reduce[key];
    }
  });
});

var _reduced = require("./reduced");

Object.keys(_reduced).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _reduced[key];
    }
  });
});

var _run = require("./run");

Object.keys(_run).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _run[key];
    }
  });
});

var _step = require("./step");

Object.keys(_step).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _step[key];
    }
  });
});

var _transduce = require("./transduce");

Object.keys(_transduce).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _transduce[key];
    }
  });
});

var _add = require("./rfn/add");

Object.keys(_add).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _add[key];
    }
  });
});

var _assocMap = require("./rfn/assoc-map");

Object.keys(_assocMap).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _assocMap[key];
    }
  });
});

var _assocObj = require("./rfn/assoc-obj");

Object.keys(_assocObj).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _assocObj[key];
    }
  });
});

var _autoObj = require("./rfn/auto-obj");

Object.keys(_autoObj).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _autoObj[key];
    }
  });
});

var _conj = require("./rfn/conj");

Object.keys(_conj).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _conj[key];
    }
  });
});

var _count = require("./rfn/count");

Object.keys(_count).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _count[key];
    }
  });
});

var _div = require("./rfn/div");

Object.keys(_div).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _div[key];
    }
  });
});

var _every = require("./rfn/every");

Object.keys(_every).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _every[key];
    }
  });
});

var _fill = require("./rfn/fill");

Object.keys(_fill).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _fill[key];
    }
  });
});

var _frequencies = require("./rfn/frequencies");

Object.keys(_frequencies).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _frequencies[key];
    }
  });
});

var _groupBinary = require("./rfn/group-binary");

Object.keys(_groupBinary).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _groupBinary[key];
    }
  });
});

var _groupByMap = require("./rfn/group-by-map");

Object.keys(_groupByMap).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _groupByMap[key];
    }
  });
});

var _groupByObj = require("./rfn/group-by-obj");

Object.keys(_groupByObj).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _groupByObj[key];
    }
  });
});

var _last = require("./rfn/last");

Object.keys(_last).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _last[key];
    }
  });
});

var _maxCompare = require("./rfn/max-compare");

Object.keys(_maxCompare).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _maxCompare[key];
    }
  });
});

var _max = require("./rfn/max");

Object.keys(_max).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _max[key];
    }
  });
});

var _mean = require("./rfn/mean");

Object.keys(_mean).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _mean[key];
    }
  });
});

var _minCompare = require("./rfn/min-compare");

Object.keys(_minCompare).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _minCompare[key];
    }
  });
});

var _min = require("./rfn/min");

Object.keys(_min).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _min[key];
    }
  });
});

var _mul = require("./rfn/mul");

Object.keys(_mul).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _mul[key];
    }
  });
});

var _push = require("./rfn/push");

Object.keys(_push).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _push[key];
    }
  });
});

var _pushCopy = require("./rfn/push-copy");

Object.keys(_pushCopy).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _pushCopy[key];
    }
  });
});

var _pushSort = require("./rfn/push-sort");

Object.keys(_pushSort).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _pushSort[key];
    }
  });
});

var _reductions = require("./rfn/reductions");

Object.keys(_reductions).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _reductions[key];
    }
  });
});

var _some = require("./rfn/some");

Object.keys(_some).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _some[key];
    }
  });
});

var _str = require("./rfn/str");

Object.keys(_str).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _str[key];
    }
  });
});

var _sub = require("./rfn/sub");

Object.keys(_sub).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _sub[key];
    }
  });
});

var _benchmark = require("./xform/benchmark");

Object.keys(_benchmark).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _benchmark[key];
    }
  });
});

var _cat = require("./xform/cat");

Object.keys(_cat).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _cat[key];
    }
  });
});

var _converge = require("./xform/converge");

Object.keys(_converge).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _converge[key];
    }
  });
});

var _convolve = require("./xform/convolve");

Object.keys(_convolve).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _convolve[key];
    }
  });
});

var _dedupe = require("./xform/dedupe");

Object.keys(_dedupe).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _dedupe[key];
    }
  });
});

var _delayed = require("./xform/delayed");

Object.keys(_delayed).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _delayed[key];
    }
  });
});

var _distinct = require("./xform/distinct");

Object.keys(_distinct).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _distinct[key];
    }
  });
});

var _dropNth = require("./xform/drop-nth");

Object.keys(_dropNth).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _dropNth[key];
    }
  });
});

var _dropWhile = require("./xform/drop-while");

Object.keys(_dropWhile).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _dropWhile[key];
    }
  });
});

var _drop = require("./xform/drop");

Object.keys(_drop).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _drop[key];
    }
  });
});

var _duplicate = require("./xform/duplicate");

Object.keys(_duplicate).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _duplicate[key];
    }
  });
});

var _filter = require("./xform/filter");

Object.keys(_filter).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _filter[key];
    }
  });
});

var _filterFuzzy = require("./xform/filter-fuzzy");

Object.keys(_filterFuzzy).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _filterFuzzy[key];
    }
  });
});

var _flattenWith = require("./xform/flatten-with");

Object.keys(_flattenWith).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _flattenWith[key];
    }
  });
});

var _flatten = require("./xform/flatten");

Object.keys(_flatten).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _flatten[key];
    }
  });
});

var _indexed = require("./xform/indexed");

Object.keys(_indexed).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _indexed[key];
    }
  });
});

var _interleave = require("./xform/interleave");

Object.keys(_interleave).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _interleave[key];
    }
  });
});

var _interpolate = require("./xform/interpolate");

Object.keys(_interpolate).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _interpolate[key];
    }
  });
});

var _interpolateHermite = require("./xform/interpolate-hermite");

Object.keys(_interpolateHermite).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _interpolateHermite[key];
    }
  });
});

var _interpolateLinear = require("./xform/interpolate-linear");

Object.keys(_interpolateLinear).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _interpolateLinear[key];
    }
  });
});

var _interpose = require("./xform/interpose");

Object.keys(_interpose).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _interpose[key];
    }
  });
});

var _keep = require("./xform/keep");

Object.keys(_keep).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _keep[key];
    }
  });
});

var _labeled = require("./xform/labeled");

Object.keys(_labeled).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _labeled[key];
    }
  });
});

var _mapDeep = require("./xform/map-deep");

Object.keys(_mapDeep).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _mapDeep[key];
    }
  });
});

var _mapIndexed = require("./xform/map-indexed");

Object.keys(_mapIndexed).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _mapIndexed[key];
    }
  });
});

var _mapKeys = require("./xform/map-keys");

Object.keys(_mapKeys).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _mapKeys[key];
    }
  });
});

var _mapNth = require("./xform/map-nth");

Object.keys(_mapNth).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _mapNth[key];
    }
  });
});

var _mapVals = require("./xform/map-vals");

Object.keys(_mapVals).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _mapVals[key];
    }
  });
});

var _map = require("./xform/map");

Object.keys(_map).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _map[key];
    }
  });
});

var _mapcat = require("./xform/mapcat");

Object.keys(_mapcat).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _mapcat[key];
    }
  });
});

var _mapcatIndexed = require("./xform/mapcat-indexed");

Object.keys(_mapcatIndexed).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _mapcatIndexed[key];
    }
  });
});

var _matchFirst = require("./xform/match-first");

Object.keys(_matchFirst).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _matchFirst[key];
    }
  });
});

var _matchLast = require("./xform/match-last");

Object.keys(_matchLast).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _matchLast[key];
    }
  });
});

var _movingAverage = require("./xform/moving-average");

Object.keys(_movingAverage).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _movingAverage[key];
    }
  });
});

var _movingMedian = require("./xform/moving-median");

Object.keys(_movingMedian).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _movingMedian[key];
    }
  });
});

var _multiplex = require("./xform/multiplex");

Object.keys(_multiplex).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _multiplex[key];
    }
  });
});

var _multiplexObj = require("./xform/multiplex-obj");

Object.keys(_multiplexObj).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _multiplexObj[key];
    }
  });
});

var _noop = require("./xform/noop");

Object.keys(_noop).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _noop[key];
    }
  });
});

var _padLast = require("./xform/pad-last");

Object.keys(_padLast).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _padLast[key];
    }
  });
});

var _page = require("./xform/page");

Object.keys(_page).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _page[key];
    }
  });
});

var _partitionBy = require("./xform/partition-by");

Object.keys(_partitionBy).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _partitionBy[key];
    }
  });
});

var _partitionOf = require("./xform/partition-of");

Object.keys(_partitionOf).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _partitionOf[key];
    }
  });
});

var _partitionSort = require("./xform/partition-sort");

Object.keys(_partitionSort).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _partitionSort[key];
    }
  });
});

var _partitionSync = require("./xform/partition-sync");

Object.keys(_partitionSync).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _partitionSync[key];
    }
  });
});

var _partitionTime = require("./xform/partition-time");

Object.keys(_partitionTime).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _partitionTime[key];
    }
  });
});

var _partition = require("./xform/partition");

Object.keys(_partition).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _partition[key];
    }
  });
});

var _peek = require("./xform/peek");

Object.keys(_peek).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _peek[key];
    }
  });
});

var _pluck = require("./xform/pluck");

Object.keys(_pluck).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _pluck[key];
    }
  });
});

var _rename = require("./xform/rename");

Object.keys(_rename).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _rename[key];
    }
  });
});

var _sample = require("./xform/sample");

Object.keys(_sample).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _sample[key];
    }
  });
});

var _scan = require("./xform/scan");

Object.keys(_scan).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _scan[key];
    }
  });
});

var _selectKeys = require("./xform/select-keys");

Object.keys(_selectKeys).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _selectKeys[key];
    }
  });
});

var _sideEffect = require("./xform/side-effect");

Object.keys(_sideEffect).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _sideEffect[key];
    }
  });
});

var _slidingWindow = require("./xform/sliding-window");

Object.keys(_slidingWindow).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _slidingWindow[key];
    }
  });
});

var _streamShuffle = require("./xform/stream-shuffle");

Object.keys(_streamShuffle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _streamShuffle[key];
    }
  });
});

var _streamSort = require("./xform/stream-sort");

Object.keys(_streamSort).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _streamSort[key];
    }
  });
});

var _struct = require("./xform/struct");

Object.keys(_struct).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _struct[key];
    }
  });
});

var _swizzle = require("./xform/swizzle");

Object.keys(_swizzle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _swizzle[key];
    }
  });
});

var _takeNth = require("./xform/take-nth");

Object.keys(_takeNth).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _takeNth[key];
    }
  });
});

var _takeLast = require("./xform/take-last");

Object.keys(_takeLast).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _takeLast[key];
    }
  });
});

var _takeWhile = require("./xform/take-while");

Object.keys(_takeWhile).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _takeWhile[key];
    }
  });
});

var _take = require("./xform/take");

Object.keys(_take).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _take[key];
    }
  });
});

var _throttle = require("./xform/throttle");

Object.keys(_throttle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _throttle[key];
    }
  });
});

var _throttleTime = require("./xform/throttle-time");

Object.keys(_throttleTime).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _throttleTime[key];
    }
  });
});

var _toggle = require("./xform/toggle");

Object.keys(_toggle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _toggle[key];
    }
  });
});

var _trace = require("./xform/trace");

Object.keys(_trace).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _trace[key];
    }
  });
});

var _wordWrap = require("./xform/word-wrap");

Object.keys(_wordWrap).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _wordWrap[key];
    }
  });
});

var _comp = require("./func/comp");

Object.keys(_comp).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _comp[key];
    }
  });
});

var _compr = require("./func/compr");

Object.keys(_compr).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _compr[key];
    }
  });
});

var _deepTransform = require("./func/deep-transform");

Object.keys(_deepTransform).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _deepTransform[key];
    }
  });
});

var _juxtr = require("./func/juxtr");

Object.keys(_juxtr).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _juxtr[key];
    }
  });
});

var _keySelector = require("./func/key-selector");

Object.keys(_keySelector).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _keySelector[key];
    }
  });
});

var _lookup = require("./func/lookup");

Object.keys(_lookup).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _lookup[key];
    }
  });
});

var _renamer = require("./func/renamer");

Object.keys(_renamer).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _renamer[key];
    }
  });
});

var _asIterable = require("./iter/as-iterable");

Object.keys(_asIterable).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _asIterable[key];
    }
  });
});

var _choices = require("./iter/choices");

Object.keys(_choices).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _choices[key];
    }
  });
});

var _concat = require("./iter/concat");

Object.keys(_concat).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _concat[key];
    }
  });
});

var _curve = require("./iter/curve");

Object.keys(_curve).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _curve[key];
    }
  });
});

var _cycle = require("./iter/cycle");

Object.keys(_cycle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _cycle[key];
    }
  });
});

var _dup = require("./iter/dup");

Object.keys(_dup).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _dup[key];
    }
  });
});

var _extendSides = require("./iter/extend-sides");

Object.keys(_extendSides).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _extendSides[key];
    }
  });
});

var _iterate = require("./iter/iterate");

Object.keys(_iterate).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _iterate[key];
    }
  });
});

var _keyPermutations = require("./iter/key-permutations");

Object.keys(_keyPermutations).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _keyPermutations[key];
    }
  });
});

var _keys = require("./iter/keys");

Object.keys(_keys).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _keys[key];
    }
  });
});

var _line = require("./iter/line");

Object.keys(_line).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _line[key];
    }
  });
});

var _normRange = require("./iter/norm-range");

Object.keys(_normRange).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _normRange[key];
    }
  });
});

var _padSides = require("./iter/pad-sides");

Object.keys(_padSides).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _padSides[key];
    }
  });
});

var _palindrome = require("./iter/palindrome");

Object.keys(_palindrome).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _palindrome[key];
    }
  });
});

var _pairs = require("./iter/pairs");

Object.keys(_pairs).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _pairs[key];
    }
  });
});

var _permutations = require("./iter/permutations");

Object.keys(_permutations).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _permutations[key];
    }
  });
});

var _range = require("./iter/range");

Object.keys(_range).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _range[key];
    }
  });
});

var _range2d = require("./iter/range2d");

Object.keys(_range2d).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _range2d[key];
    }
  });
});

var _range3d = require("./iter/range3d");

Object.keys(_range3d).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _range3d[key];
    }
  });
});

var _rangeNd = require("./iter/range-nd");

Object.keys(_rangeNd).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _rangeNd[key];
    }
  });
});

var _repeat = require("./iter/repeat");

Object.keys(_repeat).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _repeat[key];
    }
  });
});

var _repeatedly = require("./iter/repeatedly");

Object.keys(_repeatedly).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _repeatedly[key];
    }
  });
});

var _reverse = require("./iter/reverse");

Object.keys(_reverse).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _reverse[key];
    }
  });
});

var _sortedKeys = require("./iter/sorted-keys");

Object.keys(_sortedKeys).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _sortedKeys[key];
    }
  });
});

var _symmetric = require("./iter/symmetric");

Object.keys(_symmetric).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _symmetric[key];
    }
  });
});

var _tween = require("./iter/tween");

Object.keys(_tween).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _tween[key];
    }
  });
});

var _vals = require("./iter/vals");

Object.keys(_vals).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _vals[key];
    }
  });
});

var _wrapSides = require("./iter/wrap-sides");

Object.keys(_wrapSides).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _wrapSides[key];
    }
  });
});

var _zip = require("./iter/zip");

Object.keys(_zip).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _zip[key];
    }
  });
});
},{"./api":"../node_modules/@thi.ng/transducers/api.js","./iterator":"../node_modules/@thi.ng/transducers/iterator.js","./reduce":"../node_modules/@thi.ng/transducers/reduce.js","./reduced":"../node_modules/@thi.ng/transducers/reduced.js","./run":"../node_modules/@thi.ng/transducers/run.js","./step":"../node_modules/@thi.ng/transducers/step.js","./transduce":"../node_modules/@thi.ng/transducers/transduce.js","./rfn/add":"../node_modules/@thi.ng/transducers/rfn/add.js","./rfn/assoc-map":"../node_modules/@thi.ng/transducers/rfn/assoc-map.js","./rfn/assoc-obj":"../node_modules/@thi.ng/transducers/rfn/assoc-obj.js","./rfn/auto-obj":"../node_modules/@thi.ng/transducers/rfn/auto-obj.js","./rfn/conj":"../node_modules/@thi.ng/transducers/rfn/conj.js","./rfn/count":"../node_modules/@thi.ng/transducers/rfn/count.js","./rfn/div":"../node_modules/@thi.ng/transducers/rfn/div.js","./rfn/every":"../node_modules/@thi.ng/transducers/rfn/every.js","./rfn/fill":"../node_modules/@thi.ng/transducers/rfn/fill.js","./rfn/frequencies":"../node_modules/@thi.ng/transducers/rfn/frequencies.js","./rfn/group-binary":"../node_modules/@thi.ng/transducers/rfn/group-binary.js","./rfn/group-by-map":"../node_modules/@thi.ng/transducers/rfn/group-by-map.js","./rfn/group-by-obj":"../node_modules/@thi.ng/transducers/rfn/group-by-obj.js","./rfn/last":"../node_modules/@thi.ng/transducers/rfn/last.js","./rfn/max-compare":"../node_modules/@thi.ng/transducers/rfn/max-compare.js","./rfn/max":"../node_modules/@thi.ng/transducers/rfn/max.js","./rfn/mean":"../node_modules/@thi.ng/transducers/rfn/mean.js","./rfn/min-compare":"../node_modules/@thi.ng/transducers/rfn/min-compare.js","./rfn/min":"../node_modules/@thi.ng/transducers/rfn/min.js","./rfn/mul":"../node_modules/@thi.ng/transducers/rfn/mul.js","./rfn/push":"../node_modules/@thi.ng/transducers/rfn/push.js","./rfn/push-copy":"../node_modules/@thi.ng/transducers/rfn/push-copy.js","./rfn/push-sort":"../node_modules/@thi.ng/transducers/rfn/push-sort.js","./rfn/reductions":"../node_modules/@thi.ng/transducers/rfn/reductions.js","./rfn/some":"../node_modules/@thi.ng/transducers/rfn/some.js","./rfn/str":"../node_modules/@thi.ng/transducers/rfn/str.js","./rfn/sub":"../node_modules/@thi.ng/transducers/rfn/sub.js","./xform/benchmark":"../node_modules/@thi.ng/transducers/xform/benchmark.js","./xform/cat":"../node_modules/@thi.ng/transducers/xform/cat.js","./xform/converge":"../node_modules/@thi.ng/transducers/xform/converge.js","./xform/convolve":"../node_modules/@thi.ng/transducers/xform/convolve.js","./xform/dedupe":"../node_modules/@thi.ng/transducers/xform/dedupe.js","./xform/delayed":"../node_modules/@thi.ng/transducers/xform/delayed.js","./xform/distinct":"../node_modules/@thi.ng/transducers/xform/distinct.js","./xform/drop-nth":"../node_modules/@thi.ng/transducers/xform/drop-nth.js","./xform/drop-while":"../node_modules/@thi.ng/transducers/xform/drop-while.js","./xform/drop":"../node_modules/@thi.ng/transducers/xform/drop.js","./xform/duplicate":"../node_modules/@thi.ng/transducers/xform/duplicate.js","./xform/filter":"../node_modules/@thi.ng/transducers/xform/filter.js","./xform/filter-fuzzy":"../node_modules/@thi.ng/transducers/xform/filter-fuzzy.js","./xform/flatten-with":"../node_modules/@thi.ng/transducers/xform/flatten-with.js","./xform/flatten":"../node_modules/@thi.ng/transducers/xform/flatten.js","./xform/indexed":"../node_modules/@thi.ng/transducers/xform/indexed.js","./xform/interleave":"../node_modules/@thi.ng/transducers/xform/interleave.js","./xform/interpolate":"../node_modules/@thi.ng/transducers/xform/interpolate.js","./xform/interpolate-hermite":"../node_modules/@thi.ng/transducers/xform/interpolate-hermite.js","./xform/interpolate-linear":"../node_modules/@thi.ng/transducers/xform/interpolate-linear.js","./xform/interpose":"../node_modules/@thi.ng/transducers/xform/interpose.js","./xform/keep":"../node_modules/@thi.ng/transducers/xform/keep.js","./xform/labeled":"../node_modules/@thi.ng/transducers/xform/labeled.js","./xform/map-deep":"../node_modules/@thi.ng/transducers/xform/map-deep.js","./xform/map-indexed":"../node_modules/@thi.ng/transducers/xform/map-indexed.js","./xform/map-keys":"../node_modules/@thi.ng/transducers/xform/map-keys.js","./xform/map-nth":"../node_modules/@thi.ng/transducers/xform/map-nth.js","./xform/map-vals":"../node_modules/@thi.ng/transducers/xform/map-vals.js","./xform/map":"../node_modules/@thi.ng/transducers/xform/map.js","./xform/mapcat":"../node_modules/@thi.ng/transducers/xform/mapcat.js","./xform/mapcat-indexed":"../node_modules/@thi.ng/transducers/xform/mapcat-indexed.js","./xform/match-first":"../node_modules/@thi.ng/transducers/xform/match-first.js","./xform/match-last":"../node_modules/@thi.ng/transducers/xform/match-last.js","./xform/moving-average":"../node_modules/@thi.ng/transducers/xform/moving-average.js","./xform/moving-median":"../node_modules/@thi.ng/transducers/xform/moving-median.js","./xform/multiplex":"../node_modules/@thi.ng/transducers/xform/multiplex.js","./xform/multiplex-obj":"../node_modules/@thi.ng/transducers/xform/multiplex-obj.js","./xform/noop":"../node_modules/@thi.ng/transducers/xform/noop.js","./xform/pad-last":"../node_modules/@thi.ng/transducers/xform/pad-last.js","./xform/page":"../node_modules/@thi.ng/transducers/xform/page.js","./xform/partition-by":"../node_modules/@thi.ng/transducers/xform/partition-by.js","./xform/partition-of":"../node_modules/@thi.ng/transducers/xform/partition-of.js","./xform/partition-sort":"../node_modules/@thi.ng/transducers/xform/partition-sort.js","./xform/partition-sync":"../node_modules/@thi.ng/transducers/xform/partition-sync.js","./xform/partition-time":"../node_modules/@thi.ng/transducers/xform/partition-time.js","./xform/partition":"../node_modules/@thi.ng/transducers/xform/partition.js","./xform/peek":"../node_modules/@thi.ng/transducers/xform/peek.js","./xform/pluck":"../node_modules/@thi.ng/transducers/xform/pluck.js","./xform/rename":"../node_modules/@thi.ng/transducers/xform/rename.js","./xform/sample":"../node_modules/@thi.ng/transducers/xform/sample.js","./xform/scan":"../node_modules/@thi.ng/transducers/xform/scan.js","./xform/select-keys":"../node_modules/@thi.ng/transducers/xform/select-keys.js","./xform/side-effect":"../node_modules/@thi.ng/transducers/xform/side-effect.js","./xform/sliding-window":"../node_modules/@thi.ng/transducers/xform/sliding-window.js","./xform/stream-shuffle":"../node_modules/@thi.ng/transducers/xform/stream-shuffle.js","./xform/stream-sort":"../node_modules/@thi.ng/transducers/xform/stream-sort.js","./xform/struct":"../node_modules/@thi.ng/transducers/xform/struct.js","./xform/swizzle":"../node_modules/@thi.ng/transducers/xform/swizzle.js","./xform/take-nth":"../node_modules/@thi.ng/transducers/xform/take-nth.js","./xform/take-last":"../node_modules/@thi.ng/transducers/xform/take-last.js","./xform/take-while":"../node_modules/@thi.ng/transducers/xform/take-while.js","./xform/take":"../node_modules/@thi.ng/transducers/xform/take.js","./xform/throttle":"../node_modules/@thi.ng/transducers/xform/throttle.js","./xform/throttle-time":"../node_modules/@thi.ng/transducers/xform/throttle-time.js","./xform/toggle":"../node_modules/@thi.ng/transducers/xform/toggle.js","./xform/trace":"../node_modules/@thi.ng/transducers/xform/trace.js","./xform/word-wrap":"../node_modules/@thi.ng/transducers/xform/word-wrap.js","./func/comp":"../node_modules/@thi.ng/transducers/func/comp.js","./func/compr":"../node_modules/@thi.ng/transducers/func/compr.js","./func/deep-transform":"../node_modules/@thi.ng/transducers/func/deep-transform.js","./func/juxtr":"../node_modules/@thi.ng/transducers/func/juxtr.js","./func/key-selector":"../node_modules/@thi.ng/transducers/func/key-selector.js","./func/lookup":"../node_modules/@thi.ng/transducers/func/lookup.js","./func/renamer":"../node_modules/@thi.ng/transducers/func/renamer.js","./iter/as-iterable":"../node_modules/@thi.ng/transducers/iter/as-iterable.js","./iter/choices":"../node_modules/@thi.ng/transducers/iter/choices.js","./iter/concat":"../node_modules/@thi.ng/transducers/iter/concat.js","./iter/curve":"../node_modules/@thi.ng/transducers/iter/curve.js","./iter/cycle":"../node_modules/@thi.ng/transducers/iter/cycle.js","./iter/dup":"../node_modules/@thi.ng/transducers/iter/dup.js","./iter/extend-sides":"../node_modules/@thi.ng/transducers/iter/extend-sides.js","./iter/iterate":"../node_modules/@thi.ng/transducers/iter/iterate.js","./iter/key-permutations":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","./iter/keys":"../node_modules/@thi.ng/transducers/iter/keys.js","./iter/line":"../node_modules/@thi.ng/transducers/iter/line.js","./iter/norm-range":"../node_modules/@thi.ng/transducers/iter/norm-range.js","./iter/pad-sides":"../node_modules/@thi.ng/transducers/iter/pad-sides.js","./iter/palindrome":"../node_modules/@thi.ng/transducers/iter/palindrome.js","./iter/pairs":"../node_modules/@thi.ng/transducers/iter/pairs.js","./iter/permutations":"../node_modules/@thi.ng/transducers/iter/permutations.js","./iter/range":"../node_modules/@thi.ng/transducers/iter/range.js","./iter/range2d":"../node_modules/@thi.ng/transducers/iter/range2d.js","./iter/range3d":"../node_modules/@thi.ng/transducers/iter/range3d.js","./iter/range-nd":"../node_modules/@thi.ng/transducers/iter/range-nd.js","./iter/repeat":"../node_modules/@thi.ng/transducers/iter/repeat.js","./iter/repeatedly":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","./iter/reverse":"../node_modules/@thi.ng/transducers/iter/reverse.js","./iter/sorted-keys":"../node_modules/@thi.ng/transducers/iter/sorted-keys.js","./iter/symmetric":"../node_modules/@thi.ng/transducers/iter/symmetric.js","./iter/tween":"../node_modules/@thi.ng/transducers/iter/tween.js","./iter/vals":"../node_modules/@thi.ng/transducers/iter/vals.js","./iter/wrap-sides":"../node_modules/@thi.ng/transducers/iter/wrap-sides.js","./iter/zip":"../node_modules/@thi.ng/transducers/iter/zip.js"}],"../node_modules/@thi.ng/vectors/internal/templates.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MIX_N = exports.MIX = exports.SET_N = exports.SET = exports.DOT_G = exports.DOT = exports.FN_N = exports.FN5 = exports.FN3 = exports.FN2 = exports.FN = exports.UNSIGNED_N = exports.SIGNED_N = exports.UNSIGNED = exports.SIGNED = exports.MATH2A_N = exports.MATH2_N = exports.MATH2 = exports.MATH_N = exports.MATH = void 0;

/** @internal */
// prettier-ignore
const MATH = op => ([o, a, b]) => `${o}=${a}${op}${b};`;
/** @internal */
// prettier-ignore


exports.MATH = MATH;

const MATH_N = op => ([o, a]) => `${o}=${a}${op}n;`;
/** @internal */
// prettier-ignore


exports.MATH_N = MATH_N;

const MATH2 = (op1, op2) => ([o, a, b, c]) => `${o}=(${a}${op1}${b})${op2}${c};`;
/** @internal */
// prettier-ignore


exports.MATH2 = MATH2;

const MATH2_N = (op1, op2) => ([o, a, b]) => `${o}=(${a}${op1}${b})${op2}n;`;
/** @internal */
// prettier-ignore


exports.MATH2_N = MATH2_N;

const MATH2A_N = (op1, op2) => ([o, a, b]) => `${o}=(${a}${op1}n)${op2}${b};`;
/** @internal */
// prettier-ignore


exports.MATH2A_N = MATH2A_N;

const SIGNED = op => ([o, a, b]) => `${o}=(${a}${op}${b})|0;`;
/** @internal */
// prettier-ignore


exports.SIGNED = SIGNED;

const UNSIGNED = op => ([o, a, b]) => `${o}=(${a}${op}${b})>>>0;`;
/** @internal */
// prettier-ignore


exports.UNSIGNED = UNSIGNED;

const SIGNED_N = op => ([o, a]) => `${o}=(${a}${op}n)|0;`;
/** @internal */
// prettier-ignore


exports.SIGNED_N = SIGNED_N;

const UNSIGNED_N = op => ([o, a]) => `${o}=(${a}${op}n)>>>0;`;
/** @internal */
// prettier-ignore


exports.UNSIGNED_N = UNSIGNED_N;

const FN = (op = "op") => ([o, a]) => `${o}=${op}(${a});`;
/** @internal */
// prettier-ignore


exports.FN = FN;

const FN2 = (op = "op") => ([o, a, b]) => `${o}=${op}(${a},${b});`;
/** @internal */
// prettier-ignore


exports.FN2 = FN2;

const FN3 = (op = "op") => ([o, a, b, c]) => `${o}=${op}(${a},${b},${c});`;
/** @internal */
// prettier-ignore


exports.FN3 = FN3;

const FN5 = (op = "op") => ([o, a, b, c, d, e]) => `${o}=${op}(${a},${b},${c},${d},${e});`;
/** @internal */
// prettier-ignore


exports.FN5 = FN5;

const FN_N = (op = "op") => ([o, a]) => `${o}=${op}(${a},n);`;
/** @internal */


exports.FN_N = FN_N;

const DOT = ([a, b]) => `${a}*${b}`;
/** @internal */


exports.DOT = DOT;

const DOT_G = ([a, b]) => `s+=${a}*${b};`;
/** @internal */


exports.DOT_G = DOT_G;

const SET = ([o, a]) => `${o}=${a};`;
/** @internal */


exports.SET = SET;

const SET_N = ([a]) => `${a}=n;`;
/** @internal */


exports.SET_N = SET_N;

const MIX = ([o, a, b, c]) => `${o}=${a}+(${b}-${a})*${c};`;
/** @internal */


exports.MIX = MIX;

const MIX_N = ([o, a, b]) => `${o}=${a}+(${b}-${a})*n;`;

exports.MIX_N = MIX_N;
},{}],"../node_modules/@thi.ng/vectors/internal/vop.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.vop = void 0;

var _errors = require("@thi.ng/errors");

/**
 * Specialized / optimized version of {@link @thi.ng/defmulti# | @thi.ng/defmulti} for
 * vector operations. Uses simplified logic to dispatch on length
 * (vector size) of `dispatch` argument.
 *
 * @param dispatch - arg index
 */
const vop = (dispatch = 0) => {
  const impls = new Array(5);
  let fallback;

  const fn = (...args) => {
    const g = impls[args[dispatch].length] || fallback;
    return g ? g(...args) : (0, _errors.unsupported)(`no impl for vec size ${args[dispatch].length}`);
  };

  fn.add = (dim, fn) => impls[dim] = fn;

  fn.default = fn => fallback = fn;

  fn.impl = dim => impls[dim] || fallback; // fn.impls = impls;


  return fn;
};

exports.vop = vop;
},{"@thi.ng/errors":"../node_modules/@thi.ng/errors/index.js"}],"../node_modules/@thi.ng/vectors/internal/codegen.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defBitOpN = exports.defBitOp = exports.defMathOpN = exports.defMathOp = exports.defHofOpS = exports.defOpS = exports.defHofOp = exports.defFnOp = exports.defOp = exports.compileGHOF = exports.compileG = exports.compileHOF = exports.compile = exports.defaultOut = exports.NEW_OUT = exports.DEFAULT_OUT = exports.SARGS_VVV = exports.SARGS_VV = exports.SARGS_V = exports.ARGS_VVN = exports.ARGS_VNV = exports.ARGS_VN = exports.ARGS_VVV = exports.ARGS_VV = exports.ARGS_V = void 0;

var _transducers = require("@thi.ng/transducers");

var _templates = require("./templates");

var _vop = require("./vop");

/** @internal */
const ARGS_V = "o,a";
/** @internal */

exports.ARGS_V = ARGS_V;
const ARGS_VV = "o,a,b";
/** @internal */

exports.ARGS_VV = ARGS_VV;
const ARGS_VVV = "o,a,b,c";
/** @internal */

exports.ARGS_VVV = ARGS_VVV;
const ARGS_VN = "o,a,n";
/** @internal */

exports.ARGS_VN = ARGS_VN;
const ARGS_VNV = "o,a,n,b";
/** @internal */

exports.ARGS_VNV = ARGS_VNV;
const ARGS_VVN = "o,a,b,n";
/** @internal */

exports.ARGS_VVN = ARGS_VVN;
const SARGS_V = "io=0,ia=0,so=1,sa=1";
/** @internal */

exports.SARGS_V = SARGS_V;
const SARGS_VV = "io=0,ia=0,ib=0,so=1,sa=1,sb=1";
/** @internal */

exports.SARGS_VV = SARGS_VV;
const SARGS_VVV = "io=0,ia=0,ib=0,ic=0,so=1,sa=1,sb=1,sc=1";
/** @internal */

exports.SARGS_VVV = SARGS_VVV;
const DEFAULT_OUT = "!o&&(o=a);";
/** @internal */

exports.DEFAULT_OUT = DEFAULT_OUT;
const NEW_OUT = "!o&&(o=[]);";
/**
 * HOF array index lookup gen to provide optimized versions of:
 *
 * @example
 * ```ts
 * lookup("a")(0) // a[ia]
 * lookup("a")(1) // a[ia * sa]
 * lookup("a")(2) // a[ia + 2 * sa]
 * ```
 *
 * @param sym -
 */

exports.NEW_OUT = NEW_OUT;

const lookup = sym => i => i > 1 ? `${sym}[i${sym}+${i}*s${sym}]` : i == 1 ? `${sym}[i${sym}+s${sym}]` : `${sym}[i${sym}]`;
/**
 * Infinite iterator of strided index lookups for `sym`.
 *
 * @param sym -
 */


const indicesStrided = sym => (0, _transducers.map)(lookup(sym), (0, _transducers.range)());
/**
 * Infinite iterator of simple (non-strided) index lookups for `sym`.
 *
 * @param sym -
 */


const indices = sym => (0, _transducers.map)(i => `${sym}[${i}]`, (0, _transducers.range)());
/**
 * Code generator for loop-unrolled vector operations. Takes a vector
 * size `dim`, a code template function `tpl` and an array of symbol
 * names participating in the template. For each symbol, creates
 * iterator of index lookups (e.g. `a[0]` or `a[ia+k*sa]`), forms them
 * into tuples and passes them to template to generate code and joins
 * generated result with `opJoin` separator (default:
 * `""`).
 *
 * If the optional `ret` arg is not `null` (default `"a"`), appends a
 * `return` statement to the result array, using `ret` as return value.
 * Returns array of source code lines.
 *
 * The optional `pre` and `post` strings can be used to wrap the
 * generated code. `post` will be injected **before** the generated
 * return statement (if not suppressed).
 *
 * @param dim -
 * @param tpl -
 * @param syms -
 * @param ret -
 * @param opJoin -
 * @param pre -
 * @param post -
 * @param strided -
 */


const assemble = (dim, tpl, syms, ret = "a", opJoin = "", pre = "", post = "", strided = false) => [pre, (0, _transducers.transduce)((0, _transducers.comp)((0, _transducers.take)(dim), (0, _transducers.mapIndexed)((i, x) => tpl(x, i))), (0, _transducers.str)(opJoin), _transducers.zip.apply(null, syms.split(",").map(strided ? indicesStrided : indices))), post, ret !== "" ? `return ${ret};` : ""];

const assembleG = (tpl, syms, ret = "a", pre, post, strided = false) => [pre, "for(let i=a.length;--i>=0;) {", tpl(syms.split(",").map(strided ? x => `${x}[i${x}+i*s${x}]` : x => `${x}[i]`)), "}", post, ret !== null ? `return ${ret};` : ""];
/** @internal */


const defaultOut = (o, args) => `!${o} && (${o}=${args.split(",")[1]});`;
/** @internal */


exports.defaultOut = defaultOut;

const compile = (dim, tpl, args, syms = args, ret = "a", opJoin, pre, post, strided = false) => new Function(args, assemble(dim, tpl, syms, ret, opJoin, pre, post, strided).join(""));
/** @internal */


exports.compile = compile;

const compileHOF = (dim, fns, tpl, hofArgs, args, syms = args, ret = "a", opJoin = "", pre, post, strided = false) => {
  return new Function(hofArgs, `return (${args})=>{${assemble(dim, tpl, syms, ret, opJoin, pre, post, strided).join("")}}`)(...fns);
};
/** @internal */


exports.compileHOF = compileHOF;

const compileG = (tpl, args, syms = args, ret = "a", pre, post, strided = false) => new Function(args, assembleG(tpl, syms, ret, pre, post, strided).join(""));
/** @internal */


exports.compileG = compileG;

const compileGHOF = (fns, tpl, hofArgs, args, syms = args, ret = "a", pre, post, strided = false) => new Function(hofArgs, `return (${args})=>{${assembleG(tpl, syms, ret, pre, post, strided).join("")}}`)(...fns);

exports.compileGHOF = compileGHOF;

const defOp = (tpl, args = ARGS_VV, syms, ret = "o", dispatch = 1, pre) => {
  syms = syms || args;
  pre = pre != null ? pre : defaultOut(ret, args);
  const fn = (0, _vop.vop)(dispatch);

  const $ = dim => fn.add(dim, compile(dim, tpl, args, syms, ret, "", pre));

  fn.default(compileG(tpl, args, syms, ret, pre));
  return [fn, $(2), $(3), $(4)];
};

exports.defOp = defOp;

const defFnOp = op => defOp((0, _templates.FN)(op), ARGS_V);

exports.defFnOp = defFnOp;

const defHofOp = (op, tpl, args = ARGS_V, syms, ret = "o", dispatch = 1, pre) => {
  const _tpl = tpl || (0, _templates.FN)("op");

  syms = syms || args;
  pre = pre != null ? pre : defaultOut(ret, args);

  const $ = dim => compileHOF(dim, [op], _tpl, "op", args, syms, ret, "", pre);

  const fn = (0, _vop.vop)(dispatch);
  fn.default(compileGHOF([op], _tpl, "op", args, syms, ret, pre));
  return [fn, $(2), $(3), $(4)];
};

exports.defHofOp = defHofOp;

const defOpS = (tpl, args = `${ARGS_VV},${SARGS_VV}`, syms = ARGS_VV, ret = "o", pre, sizes = [2, 3, 4]) => sizes.map(dim => compile(dim, tpl, args, syms, ret, "", pre != null ? pre : defaultOut(ret, args), "", true));

exports.defOpS = defOpS;

const defHofOpS = (op, tpl, args = `${ARGS_VV},${SARGS_VV}`, syms = ARGS_VV, ret = "o", pre, sizes = [2, 3, 4]) => sizes.map(dim => compileHOF(dim, [op], tpl, "op", args, syms, ret, "", pre != null ? pre : defaultOut(ret, args), "", true));

exports.defHofOpS = defHofOpS;

const defMathOp = op => defOp((0, _templates.MATH)(op));

exports.defMathOp = defMathOp;

const defMathOpN = op => defOp((0, _templates.MATH_N)(op), ARGS_VN);

exports.defMathOpN = defMathOpN;

const defBitOp = (op, signed = false) => defOp((signed ? _templates.SIGNED : _templates.UNSIGNED)(op));

exports.defBitOp = defBitOp;

const defBitOpN = (op, signed = false) => defOp((signed ? _templates.SIGNED_N : _templates.UNSIGNED_N)(op), ARGS_VN);

exports.defBitOpN = defBitOpN;
},{"@thi.ng/transducers":"../node_modules/@thi.ng/transducers/index.js","./templates":"../node_modules/@thi.ng/vectors/internal/templates.js","./vop":"../node_modules/@thi.ng/vectors/internal/vop.js"}],"../node_modules/@thi.ng/vectors/internal/vec-utils.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.vecIterator = vecIterator;
exports.stridedValues = stridedValues;

function* vecIterator(ctor, buf, num, start, cstride, estride) {
  while (num-- > 0) {
    yield new ctor(buf, start, cstride);
    start += estride;
  }
}

function* stridedValues(buf, num, start, stride) {
  while (num-- > 0) {
    yield buf[start];
    start += stride;
  }
}
},{}],"../node_modules/@thi.ng/vectors/buffer.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.intoStridedBuffer = exports.mapStridedBuffer = exports.intoBuffer = exports.mapBuffer = void 0;

var _api = require("@thi.ng/api");

/**
 * Takes an `ArrayBuffer` and creates a number of typed array vector
 * views of `type` with given `size` (number of elements per vector) and
 * spacing. `byteOffset` defines the start offset for the first vector
 * and `byteStride` the number of bytes between resulting vectors
 * (defaults to `size * SIZEOF[type]`). It's user's responsibility to
 * ensure these two values are compatible with the chosen array type
 * (i.e. for `Type.F32`, these MUST be multiples of 4).
 *
 * @example
 * ```ts
 * mapBuffer(Type.F32, new ArrayBuffer(32), 4, 2)
 * // [
 * //   Float32Array [ 0, 0 ],
 * //   Float32Array [ 0, 0 ],
 * //   Float32Array [ 0, 0 ],
 * //   Float32Array [ 0, 0 ]
 * // ]
 * ```
 *
 * @param type -
 * @param buf -
 * @param num -
 * @param size -
 * @param byteOffset -
 * @param byteStride -
 */
const mapBuffer = (type, buf, num, size, byteOffset = 0, byteStride = size * _api.SIZEOF[type]) => {
  const res = [];
  const ctor = _api.TYPEDARRAY_CTORS[type];

  for (; --num >= 0; byteOffset += byteStride) {
    res.push(new ctor(buf, byteOffset, size));
  }

  return res;
};
/**
 * Writes given `src` vector values into mapped `ArrayBuffer` of stated
 * `type` and from given offset & stride/spacing.
 *
 * {@link mapBuffer}
 *
 * @param type -
 * @param buf -
 * @param src -
 * @param byteOffset -
 * @param byteStride -
 */


exports.mapBuffer = mapBuffer;

const intoBuffer = (type, buf, src, byteOffset, byteStride) => {
  const view = (0, _api.typedArray)(type, buf);
  const size = _api.SIZEOF[type];
  byteOffset /= size;
  byteStride /= size;

  for (let x of src) {
    view.set(x, byteOffset);
    byteOffset += byteStride;
  }
};

exports.intoBuffer = intoBuffer;

const mapStridedBuffer = (ctor, buf, num, start, cstride, estride) => {
  const res = [];

  while (--num >= 0) {
    res.push(new ctor(buf, start, cstride));
    start += estride;
  }

  return res;
};

exports.mapStridedBuffer = mapStridedBuffer;

const intoStridedBuffer = (set, buf, src, start, cstride, estride) => {
  for (let v of src) {
    set(buf, v, start, 0, cstride, 1);
    start += estride;
  }

  return buf;
};

exports.intoStridedBuffer = intoStridedBuffer;
},{"@thi.ng/api":"../node_modules/@thi.ng/api/index.js"}],"../node_modules/@thi.ng/vectors/eqdelta.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isInArray = exports.eqDeltaArray = exports.eqDeltaS = exports.eqDelta4 = exports.eqDelta3 = exports.eqDelta2 = exports.eqDelta = void 0;

var _checks = require("@thi.ng/checks");

var _math = require("@thi.ng/math");

var _codegen = require("./internal/codegen");

var _vop = require("./internal/vop");

const $ = dim => eqDelta.add(dim, (0, _codegen.compileHOF)(dim, [_math.eqDelta, _math.EPS], ([a, b]) => `eq(${a},${b},eps)`, "eq,_eps", "a,b,eps=_eps", "a,b", "", "&&", "return a.length === b.length && ", ";"));
/**
 * Checks given vectors for componentwise equality, taking tolerance
 * `eps` (default: {@link @thi.ng/math#EPS}) into account.
 *
 * @param a
 * @param b
 * @param eps
 */


const eqDelta = (0, _vop.vop)();
exports.eqDelta = eqDelta;
eqDelta.default((v1, v2, eps = _math.EPS) => {
  if ((0, _checks.implementsFunction)(v1, "eqDelta")) {
    return v1.eqDelta(v2, eps);
  }

  if ((0, _checks.implementsFunction)(v2, "eqDelta")) {
    return v2.eqDelta(v1, eps);
  }

  return eqDeltaS(v1, v2, v1.length, eps);
});
const eqDelta2 = $(2);
exports.eqDelta2 = eqDelta2;
const eqDelta3 = $(3);
exports.eqDelta3 = eqDelta3;
const eqDelta4 = $(4);
/**
 * Checks given strided vectors for componentwise equality, taking
 * tolerance `eps` (default: {@link @thi.ng/math#EPS}) into account.
 *
 * @param a - first vector
 * @param b - second vector
 * @param n - number of elements
 * @param eps - tolerance
 * @param ia - start index a
 * @param ib - start index b
 * @param sa - stride a
 * @param sb - stride b
 */

exports.eqDelta4 = eqDelta4;

const eqDeltaS = (a, b, n, eps = _math.EPS, ia = 0, ib = 0, sa = 1, sb = 1) => {
  for (; n > 0; n--, ia += sa, ib += sb) {
    if (!(0, _math.eqDelta)(a[ia], b[ib], eps)) {
      return false;
    }
  }

  return true;
};

exports.eqDeltaS = eqDeltaS;

const eqDeltaArray = (a, b, eps = _math.EPS) => {
  if (a === b) return true;
  if (a.length !== b.length) return false;

  for (let i = a.length; --i >= 0;) {
    if (!eqDelta(a[i], b[i], eps)) {
      return false;
    }
  }

  return true;
};

exports.eqDeltaArray = eqDeltaArray;

const isInArray = (p, pts, eps = _math.EPS) => {
  for (let i = pts.length; --i >= 0;) {
    if (eqDelta(p, pts[i], eps)) {
      return true;
    }
  }

  return false;
};

exports.isInArray = isInArray;
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","@thi.ng/math":"../node_modules/@thi.ng/math/index.js","./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/vop":"../node_modules/@thi.ng/vectors/internal/vop.js"}],"../node_modules/@thi.ng/binary/api.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/binary/align.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isAligned = exports.align = void 0;

/**
 * Aligns `addr` to next multiple of `size`. The latter must be a power
 * of 2.
 *
 * @param addr - value to align
 * @param size - alignment value
 */
const align = (addr, size) => (size--, addr + size & ~size);
/**
 * Returns true if `addr` is aligned to wordsize `size`.
 */


exports.align = align;

const isAligned = (addr, size) => !(addr & size - 1);

exports.isAligned = isAligned;
},{}],"../node_modules/@thi.ng/binary/float.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.u32f32 = exports.u24f32 = exports.u16f32 = exports.u8f32 = exports.f32u32 = exports.f32u24 = exports.f32u16 = exports.f32u8 = exports.floatToSortableInt = exports.uintBitsToFloat64 = exports.intBitsToFloat64 = exports.floatToUintBits64 = exports.floatToIntBits64 = exports.uintBitsToFloat = exports.intBitsToFloat = exports.floatToUintBits = exports.floatToIntBits = exports.IS_LE = void 0;
const F64 = new Float64Array(1);
const F32 = new Float32Array(F64.buffer);
const I32 = new Int32Array(F64.buffer);
const U32 = new Uint32Array(F64.buffer);
/**
 * This value is true iff the environment is Little Endian.
 */

const IS_LE = (F64[0] = 2, U32[1] === 0x40000000);
exports.IS_LE = IS_LE;

const floatToIntBits = x => (F32[0] = x, I32[0]);

exports.floatToIntBits = floatToIntBits;

const floatToUintBits = x => (F32[0] = x, U32[0]);

exports.floatToUintBits = floatToUintBits;

const intBitsToFloat = x => (I32[0] = x, F32[0]);

exports.intBitsToFloat = intBitsToFloat;

const uintBitsToFloat = x => (U32[0] = x, F32[0]);
/**
 * Returns i32 representation of f64 as [hi, lo] tuple (takes
 * environment's Little Endianess into account).
 *
 * @param x
 */


exports.uintBitsToFloat = uintBitsToFloat;

const floatToIntBits64 = x => (F64[0] = x, IS_LE ? [I32[1], I32[0]] : [I32[0], I32[1]]);
/**
 * Returns u32 representation of f64 as [hi, lo] tuple (takes
 * environment's Little Endianess into account).
 *
 * @param x
 */


exports.floatToIntBits64 = floatToIntBits64;

const floatToUintBits64 = x => (F64[0] = x, IS_LE ? [U32[1], U32[0]] : [U32[0], U32[1]]);
/**
 * Reverse op of {@link floatToIntBits64}.
 *
 * @param hi
 * @param lo
 */


exports.floatToUintBits64 = floatToUintBits64;

const intBitsToFloat64 = (hi, lo) => {
  IS_LE ? (I32[1] = hi, I32[0] = lo) : (I32[0] = hi, I32[1] = lo);
  return F64[0];
};
/**
 * Reverse op of {@link floatToUintBits64}.
 *
 * @param hi
 * @param lo
 */


exports.intBitsToFloat64 = intBitsToFloat64;

const uintBitsToFloat64 = (hi, lo) => {
  IS_LE ? (U32[1] = hi, U32[0] = lo) : (U32[0] = hi, U32[1] = lo);
  return F64[0];
};
/**
 * Converts given float (f32) into a sortable integer representation,
 * using raw bitwise conversion via {@link floatToIntBits}.
 *
 * {@link https://github.com/tzaeschke/phtree/blob/develop/PhTreeRevisited.pdf}
 * (page 3)
 *
 * @param x - value to convert
 */


exports.uintBitsToFloat64 = uintBitsToFloat64;

const floatToSortableInt = x => {
  if (x === -0) x = 0;
  const i = floatToIntBits(x);
  return x < 0 ? ~i | 1 << 31 : i;
};

exports.floatToSortableInt = floatToSortableInt;

const clamp11 = x => x < -1 ? -1 : x > 1 ? 1 : x;
/**
 * Converts normalized float ([-1..1] range) to u8.
 *
 * @param x
 */


const f32u8 = x => clamp11(x) * 0x7f & 0xff;
/**
 * Converts normalized float ([-1..1] range) to u16.
 *
 * @param x
 */


exports.f32u8 = f32u8;

const f32u16 = x => clamp11(x) * 0x7fff & 0xffff;
/**
 * Converts normalized float ([-1..1] range) to u24.
 *
 * @param x
 */


exports.f32u16 = f32u16;

const f32u24 = x => clamp11(x) * 0x7fffff & 0xffffff;
/**
 * Converts normalized float ([-1..1] range) to u32.
 *
 * @param x
 */


exports.f32u24 = f32u24;

const f32u32 = x => clamp11(x) * 0x7fffffff >>> 0;
/**
 * Reverse op of {@link f32u8}.
 *
 * @param x
 */


exports.f32u32 = f32u32;

const u8f32 = x => (x &= 0xff, (x | (x >> 7) * 0xffffff00) / 0x7f);
/**
 * Reverse op of {@link f32u16}.
 *
 * @param x
 */


exports.u8f32 = u8f32;

const u16f32 = x => (x &= 0xffff, (x | (x >> 15) * 0xffff0000) / 0x7fff);
/**
 * Reverse op of {@link f32u24}.
 *
 * @param x
 */


exports.u16f32 = u16f32;

const u24f32 = x => (x &= 0xffffff, (x | (x >> 23) * 0xff000000) / 0x7fffff);
/**
 * Reverse op of {@link f32u32}.
 *
 * @param x
 */


exports.u24f32 = u24f32;

const u32f32 = x => (x | 0) / 0x7fffffff;

exports.u32f32 = u32f32;
},{}],"../node_modules/@thi.ng/binary/bytes.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bytesF64 = exports.bytesF32 = exports.bytes64 = exports.bytes32 = exports.bytes24 = exports.bytes16 = void 0;

var _float = require("./float");

const bytes16 = (x, le = false) => {
  const b0 = x & 0xff;
  const b1 = x >> 8 & 0xff;
  return le ? [b0, b1] : [b1, b0];
};

exports.bytes16 = bytes16;

const bytes24 = (x, le = false) => {
  const b0 = x & 0xff;
  const b1 = x >> 8 & 0xff;
  const b2 = x >> 16 & 0xff;
  return le ? [b0, b1, b2] : [b2, b1, b0];
};

exports.bytes24 = bytes24;

const bytes32 = (x, le = false) => {
  const b0 = x & 0xff;
  const b1 = x >> 8 & 0xff;
  const b2 = x >> 16 & 0xff;
  const b3 = x >> 24 & 0xff;
  return le ? [b0, b1, b2, b3] : [b3, b2, b1, b0];
};

exports.bytes32 = bytes32;

const bytes64 = (hi, lo, le = false) => {
  return le ? bytes32(lo, le).concat(bytes32(hi, le)) : bytes32(hi, le).concat(bytes32(lo, le));
};

exports.bytes64 = bytes64;

const bytesF32 = (x, le = false) => bytes32((0, _float.floatToUintBits)(x), le);

exports.bytesF32 = bytesF32;

const bytesF64 = (x, le = false) => //@ts-ignore
bytes64(...(0, _float.floatToUintBits64)(x), le);

exports.bytesF64 = bytesF64;
},{"./float":"../node_modules/@thi.ng/binary/float.js"}],"../node_modules/@thi.ng/binary/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MASKS = void 0;
const MASKS = new Array(33).fill(0).map((_, i) => Math.pow(2, i) - 1);
exports.MASKS = MASKS;
},{}],"../node_modules/@thi.ng/binary/count.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bitSize = exports.ctz32 = exports.clz32 = exports.hammingDist = exports.popCount = void 0;

/**
 * Returns number of 1 bits in `x`.
 *
 * @param x -
 */
const popCount = x => (x = x - (x >>> 1 & 0x55555555), x = (x & 0x33333333) + (x >>> 2 & 0x33333333), (x + (x >>> 4) & 0xf0f0f0f) * 0x1010101 >>> 24);
/**
 * Returns number of bit changes between `x` and `y`.
 *
 * {@link https://en.wikipedia.org/wiki/Hamming_distance}
 *
 * @param x -
 * @param y -
 */


exports.popCount = popCount;

const hammingDist = (x, y) => popCount(x ^ y);
/**
 * Math.clz32() polyfill (corrected).
 *
 * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32$revision/1426816}
 *
 * @param x -
 */


exports.hammingDist = hammingDist;

const clz32 = x => x !== 0 ? 31 - (Math.log(x >>> 0) / Math.LN2 | 0) : 32;

exports.clz32 = clz32;

const ctz32 = x => {
  let c = 32;
  x &= -x;
  x && c--;
  x & 0x0000ffff && (c -= 16);
  x & 0x00ff00ff && (c -= 8);
  x & 0x0f0f0f0f && (c -= 4);
  x & 0x33333333 && (c -= 2);
  x & 0x55555555 && (c -= 1);
  return c;
};
/**
 * Returns the number of bits required to encode `x`. Returns zero if
 * `x` <= 1.
 *
 * @param x -
 */


exports.ctz32 = ctz32;

const bitSize = x => x > 1 ? Math.ceil(Math.log2(x)) : 0;

exports.bitSize = bitSize;
},{}],"../node_modules/@thi.ng/binary/mask.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.maskH = exports.maskL = exports.defMask = void 0;

var _constants = require("./constants");

/**
 * Creates bit mask by enabling bit `a` to bit `b-1`, both in range
 * 0-32. `b` MUST be >= `a`.
 *
 * @example
 * ```ts
 * defMask(1,31).toString(16) // 7ffffffe
 * defMask(3,8).toString(16)  // f8
 * ```
 *
 * @param a - first bit
 * @param b - last bit
 */
const defMask = (a, b) => (~_constants.MASKS[a] & _constants.MASKS[b]) >>> 0;
/**
 * Returns unsigned version of `x` with only lowest `n` bits.
 *
 * @param n - number of LSB bits
 * @param x - value
 */


exports.defMask = defMask;

const maskL = (n, x) => (x & _constants.MASKS[n]) >>> 0;
/**
 * Returns unsigned version of `x` with only highest `n` bits.
 *
 * @param n - number of MSB bits
 * @param x - value
 */


exports.maskL = maskL;

const maskH = (n, x) => (x & ~_constants.MASKS[n]) >>> 0;

exports.maskH = maskH;
},{"./constants":"../node_modules/@thi.ng/binary/constants.js"}],"../node_modules/@thi.ng/binary/edit.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bitClearWindow = exports.bitSetWindow = exports.bitSet = exports.bitFlip = exports.bitClear = void 0;

var _mask = require("./mask");

/**
 * Clears bit in given uint `x`.
 *
 * @param x - value
 * @param bit - bit number (0..31)
 */
const bitClear = (x, bit) => (x & ~(1 << bit)) >>> 0;
/**
 * Toggles bit in given uint `x`.
 *
 * @param x - value
 * @param bit - bit ID
 */


exports.bitClear = bitClear;

const bitFlip = (x, bit) => (x ^ 1 << bit) >>> 0;
/**
 * Sets bit in given uint `x`.
 *
 * @param x - value
 * @param bit - bit number (0..31)
 */


exports.bitFlip = bitFlip;

const bitSet = (x, bit) => (x | 1 << bit) >>> 0;

exports.bitSet = bitSet;

const bitSetWindow = (x, y, from, to) => {
  const m = (0, _mask.defMask)(from, to);
  return x & ~m | y << (1 << from) & m;
};

exports.bitSetWindow = bitSetWindow;

const bitClearWindow = (x, from, to) => x & ~(0, _mask.defMask)(from, to);

exports.bitClearWindow = bitClearWindow;
},{"./mask":"../node_modules/@thi.ng/binary/mask.js"}],"../node_modules/@thi.ng/binary/gray.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.decodeGray32 = exports.encodeGray32 = void 0;

/**
 * Converts 32bit unsigned int to Gray code (reflected binary). Gray
 * codes of successive values always have a Hamming distance of 1 (i.e.
 * only 1 bit changes at a time).
 *
 * {@link https://en.wikipedia.org/wiki/Gray_code}
 *
 * @param x - u32
 */
const encodeGray32 = x => (x ^ x >>> 1) >>> 0;
/**
 * Converts 32bit Gray code to binary / unsigned int.
 *
 * {@link https://en.wikipedia.org/wiki/Gray_code}
 */


exports.encodeGray32 = encodeGray32;

const decodeGray32 = x => {
  x = x ^ x >>> 16;
  x = x ^ x >>> 8;
  x = x ^ x >>> 4;
  x = x ^ x >>> 2;
  x = x ^ x >>> 1;
  return x >>> 0;
};

exports.decodeGray32 = decodeGray32;
},{}],"../node_modules/@thi.ng/binary/logic.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bitDemuxM = exports.bitMuxM = exports.bitOai22M = exports.bitAoi22M = exports.bitOai21M = exports.bitAoi21M = exports.bitImplyM = exports.bitXnorM = exports.bitXorM = exports.bitNorM = exports.bitOrM = exports.bitNandM = exports.bitAndM = exports.bitNotM = exports.bitDemux = exports.bitMux = exports.bitOai22 = exports.bitAoi22 = exports.bitOai21 = exports.bitAoi21 = exports.bitImply = exports.bitXnor = exports.bitXor = exports.bitNor = exports.bitOr = exports.bitNand = exports.bitAnd = exports.bitNot = void 0;

var _mask = require("./mask");

const bitNot = x => ~x;

exports.bitNot = bitNot;

const bitAnd = (a, b) => a & b;

exports.bitAnd = bitAnd;

const bitNand = (a, b) => ~(a & b);

exports.bitNand = bitNand;

const bitOr = (a, b) => a | b;

exports.bitOr = bitOr;

const bitNor = (a, b) => ~(a | b);

exports.bitNor = bitNor;

const bitXor = (a, b) => a ^ b;

exports.bitXor = bitXor;

const bitXnor = (a, b) => ~(a ^ b);

exports.bitXnor = bitXnor;

const bitImply = (a, b) => ~a | b;

exports.bitImply = bitImply;

const bitAoi21 = (a, b, c) => ~(a | b & c);

exports.bitAoi21 = bitAoi21;

const bitOai21 = (a, b, c) => ~(a & (b | c));

exports.bitOai21 = bitOai21;

const bitAoi22 = (a, b, c, d) => ~(a & b | c & d);

exports.bitAoi22 = bitAoi22;

const bitOai22 = (a, b, c, d) => ~((a | b) & (c | d));

exports.bitOai22 = bitOai22;

const bitMux = (a, b, s) => (a & ~s | b & s) >>> 0;

exports.bitMux = bitMux;

const bitDemux = (a, b, s) => [(a & ~s) >>> 0, (b & s) >>> 0];

exports.bitDemux = bitDemux;

const bitNotM = (n, x) => (0, _mask.maskL)(n, ~x);

exports.bitNotM = bitNotM;

const bitAndM = (n, a, b) => (0, _mask.maskL)(n, a & b);

exports.bitAndM = bitAndM;

const bitNandM = (n, a, b) => (0, _mask.maskL)(n, ~(a & b));

exports.bitNandM = bitNandM;

const bitOrM = (n, a, b) => (0, _mask.maskL)(n, a | b);

exports.bitOrM = bitOrM;

const bitNorM = (n, a, b) => (0, _mask.maskL)(n, ~(a | b));

exports.bitNorM = bitNorM;

const bitXorM = (n, a, b) => (0, _mask.maskL)(n, a ^ b);

exports.bitXorM = bitXorM;

const bitXnorM = (n, a, b) => (0, _mask.maskL)(n, ~(a ^ b));

exports.bitXnorM = bitXnorM;

const bitImplyM = (n, a, b) => (0, _mask.maskL)(n, ~a | b);

exports.bitImplyM = bitImplyM;

const bitAoi21M = (n, a, b, c) => (0, _mask.maskL)(n, ~(a | b & c));

exports.bitAoi21M = bitAoi21M;

const bitOai21M = (n, a, b, c) => (0, _mask.maskL)(n, ~(a & (b | c)));

exports.bitOai21M = bitOai21M;

const bitAoi22M = (n, a, b, c, d) => (0, _mask.maskL)(n, ~(a & b | c & d));

exports.bitAoi22M = bitAoi22M;

const bitOai22M = (n, a, b, c, d) => (0, _mask.maskL)(n, ~((a | b) & (c | d)));

exports.bitOai22M = bitOai22M;

const bitMuxM = (n, a, b, s) => (0, _mask.maskL)(n, a & ~s | b & s);

exports.bitMuxM = bitMuxM;

const bitDemuxM = (n, a, b, s) => [(0, _mask.maskL)(n, a & ~s), (0, _mask.maskL)(n, b & s)];

exports.bitDemuxM = bitDemuxM;
},{"./mask":"../node_modules/@thi.ng/binary/mask.js"}],"../node_modules/@thi.ng/binary/pow.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.floorPow2 = exports.ceilPow2 = exports.isPow2 = void 0;

// http://graphics.stanford.edu/~seander/bithacks.html
const isPow2 = x => !!x && !(x & x - 1);

exports.isPow2 = isPow2;

const ceilPow2 = x => {
  x += x === 0;
  --x;
  x |= x >>> 1;
  x |= x >>> 2;
  x |= x >>> 4;
  x |= x >>> 8;
  x |= x >>> 16;
  return x + 1;
};

exports.ceilPow2 = ceilPow2;

const floorPow2 = x => {
  x |= x >>> 1;
  x |= x >>> 2;
  x |= x >>> 4;
  x |= x >>> 8;
  x |= x >>> 16;
  return x - (x >>> 1);
};

exports.floorPow2 = floorPow2;
},{}],"../node_modules/@thi.ng/binary/rotate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rotateRight = exports.rotateLeft = void 0;

/**
 * Rotates `x` `n` bits to the left.
 *
 * @param x - value
 * @param n - rotation step
 */
const rotateLeft = (x, n) => (x << n | x >>> 32 - n) >>> 0;
/**
 * Rotates `x` `n` bits to the right.
 *
 * @param x - value
 * @param n - rotation step
 */


exports.rotateLeft = rotateLeft;

const rotateRight = (x, n) => (x >>> n | x << 32 - n) >>> 0;

exports.rotateRight = rotateRight;
},{}],"../node_modules/@thi.ng/binary/splat.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.same8 = exports.same4 = exports.splat16_32 = exports.splat8_32 = exports.splat8_24 = exports.splat4_32 = exports.splat4_24 = void 0;

/**
 * Repeats lowest nibble of `x` as 24 bit uint.
 *
 * @param x -
 */
const splat4_24 = x => (x & 0xf) * 0x111111;
/**
 * Repeats lowest nibble of `x` as 32 bit uint.
 *
 * @param x -
 */


exports.splat4_24 = splat4_24;

const splat4_32 = x => (x & 0xf) * 0x11111111 >>> 0;
/**
 * Repeats lowest byte of `x` as 24 bit uint.
 *
 * @param x -
 */


exports.splat4_32 = splat4_32;

const splat8_24 = x => (x & 0xff) * 0x010101;
/**
 * Repeats lowest byte of `x` as 32 bit uint.
 *
 * @param x -
 */


exports.splat8_24 = splat8_24;

const splat8_32 = x => (x & 0xff) * 0x01010101 >>> 0;
/**
 * Repeats lowest 16bit of `x` as 32 bit uint.
 *
 * @param x -
 */


exports.splat8_32 = splat8_32;

const splat16_32 = x => (x &= 0xffff, (x << 16 | x) >>> 0);
/**
 * Returns true if bits 0-3 are same as bits 4-7.
 *
 * @param x -
 */


exports.splat16_32 = splat16_32;

const same4 = x => (x >> 4 & 0xf) === (x & 0xf);
/**
 * Returns true if bits 0-7 are same as bits 8-15.
 *
 * @param x -
 */


exports.same4 = same4;

const same8 = x => (x >> 8 & 0xff) === (x & 0xff);

exports.same8 = same8;
},{}],"../node_modules/@thi.ng/binary/swizzle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.flipBytes = exports.flip16 = exports.flip8 = exports.mux = exports.swizzle4 = exports.swizzle8 = exports.setLane2 = exports.setLane4 = exports.setLane8 = exports.setLane16 = exports.lane2 = exports.lane4 = exports.lane8 = exports.lane16 = void 0;

/**
 * Extracts 16-bit lane from given 32bit uint and returns as unsigned
 * half word [0x0000 .. 0xffff].
 *
 * - Lane #0: bits 16-31
 * - Lane #1: bits 0-15
 *
 * @param x -
 * @param lane - lane ID enum
 */
const lane16 = (x, lane) => x >>> (1 - lane << 4) & 0xffff;
/**
 * Extracts 8-bit lane from given 32bit uint and returns as unsigned
 * byte [0x00 .. 0xff].
 *
 * - Lane #0: bits 24-31
 * - Lane #1: bits 16-23
 * - Lane #2: bits 8-15
 * - Lane #3: bits 0-7
 *
 * @param x -
 * @param lane - lane ID enum
 */


exports.lane16 = lane16;

const lane8 = (x, lane) => x >>> (3 - lane << 3) & 0xff;
/**
 * Extracts 4-bit lane from given 32bit uint and returns as unsigned
 * nibble [0x00 .. 0x0f].
 *
 * - Lane #0: bits 28-31
 * - Lane #1: bits 24-27
 * - Lane #2: bits 20-23
 * - Lane #3: bits 16-19
 * - Lane #4: bits 12-15
 * - Lane #5: bits 8-11
 * - Lane #6: bits 4-7
 * - Lane #7: bits 0-3
 *
 * @param x -
 * @param lane - lane ID enum
 */


exports.lane8 = lane8;

const lane4 = (x, lane) => x >>> (7 - lane << 2) & 0xf;

exports.lane4 = lane4;

const lane2 = (x, lane) => x >>> (15 - lane << 1) & 0x3;

exports.lane2 = lane2;

const setLane16 = (x, y, lane) => lane ? mux(x, y, 0xffff) : mux(x, y << 16, 0xffff0000);
/**
 * Sets 8-bit `lane` with value`y` in `x`.
 *
 * {@link lane8}
 *
 * @param x -
 * @param y -
 * @param lane - lane ID enum
 */


exports.setLane16 = setLane16;

const setLane8 = (x, y, lane) => {
  const l = 3 - lane << 3;
  return (~(0xff << l) & x | (y & 0xff) << l) >>> 0;
};
/**
 * Sets 4-bit `lane` with value `y` in `x`.
 *
 * {@link lane4}
 *
 * @param x -
 * @param y -
 * @param lane - lane ID enum
 */


exports.setLane8 = setLane8;

const setLane4 = (x, y, lane) => {
  const l = 7 - lane << 2;
  return (~(0xf << l) & x | (y & 0xf) << l) >>> 0;
};
/**
 * Sets 2-bit `lane` with value `y` in `x`.
 *
 * {@link lane2}
 *
 * @param x -
 * @param y -
 * @param lane - lane ID enum
 */


exports.setLane4 = setLane4;

const setLane2 = (x, y, lane) => {
  const l = 15 - lane << 1;
  return (~(0x3 << l) & x | (y & 0x3) << l) >>> 0;
};
/**
 * Re-orders byte lanes in given order (MSB).
 *
 * @example
 * ```ts
 * swizzle(0x12345678, 3, 2, 1, 0) // 0x78563412
 * swizzle(0x12345678, 1, 0, 3, 2) // 0x34127856
 * swizzle(0x12345678, 2, 2, 0, 0) // 0x56561212
 * ```
 *
 * @param x - value
 * @param a - lane ID enum
 * @param b - lane ID enum
 * @param c - lane ID enum
 * @param d - lane ID enum
 */


exports.setLane2 = setLane2;

const swizzle8 = (x, a, b, c, d) => (lane8(x, a) << 24 | lane8(x, b) << 16 | lane8(x, c) << 8 | lane8(x, d)) >>> 0;
/**
 *
 * @param x - value
 * @param a - lane ID enum
 * @param b - lane ID enum
 * @param c - lane ID enum
 * @param d - lane ID enum
 * @param e - lane ID enum
 * @param f - lane ID enum
 * @param g - lane ID enum
 * @param h - lane ID enum
 */


exports.swizzle8 = swizzle8;

const swizzle4 = (x, a, b, c, d, e, f, g, h) => (lane4(x, a) << 28 | lane4(x, b) << 24 | lane4(x, c) << 20 | lane4(x, d) << 16 | lane4(x, e) << 12 | lane4(x, f) << 8 | lane4(x, g) << 4 | lane4(x, h)) >>> 0;
/**
 * Merges bits of `a` and `b`, selecting bits from `b` where `mask` bits
 * are set.
 *
 * @example
 * ```ts
 * mux(0x12345678, 0xaaaa5555, 0xffff0000)
 * // 0xaaaa5678
 *
 * mux(0x12345678, 0xaaaa5555, 0x0000ffff)
 * // 0x12345555
 * ```
 *
 * @param a
 * @param b
 * @param mask
 */


exports.swizzle4 = swizzle4;

const mux = (a, b, mask) => ~mask & a | mask & b;
/**
 * Same as `swizzle8(x, 3, 2, 1, 0)`, but faster.
 *
 * @param x -
 */


exports.mux = mux;

const flip8 = x => (x >>> 24 | x >> 8 & 0xff00 | (x & 0xff00) << 8 | x << 24) >>> 0;
/**
 * Swaps the highest & lowest 16 bits in `x`.
 *
 * @example
 * ```ts
 * flip16(0x12345678)
 * // 0x56781234
 * ```
 *
 * @param x
 */


exports.flip8 = flip8;

const flip16 = x => mux(x << 16, x >>> 16, 0xffff);
/**
 * @deprecated renamed to {@link flip8}
 */


exports.flip16 = flip16;
const flipBytes = flip8;
exports.flipBytes = flipBytes;
},{}],"../node_modules/@thi.ng/binary/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _api = require("./api");

Object.keys(_api).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _api[key];
    }
  });
});

var _align = require("./align");

Object.keys(_align).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _align[key];
    }
  });
});

var _bytes = require("./bytes");

Object.keys(_bytes).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _bytes[key];
    }
  });
});

var _constants = require("./constants");

Object.keys(_constants).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _constants[key];
    }
  });
});

var _count = require("./count");

Object.keys(_count).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _count[key];
    }
  });
});

var _edit = require("./edit");

Object.keys(_edit).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _edit[key];
    }
  });
});

var _float = require("./float");

Object.keys(_float).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _float[key];
    }
  });
});

var _gray = require("./gray");

Object.keys(_gray).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _gray[key];
    }
  });
});

var _logic = require("./logic");

Object.keys(_logic).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _logic[key];
    }
  });
});

var _mask = require("./mask");

Object.keys(_mask).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _mask[key];
    }
  });
});

var _pow = require("./pow");

Object.keys(_pow).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _pow[key];
    }
  });
});

var _rotate = require("./rotate");

Object.keys(_rotate).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _rotate[key];
    }
  });
});

var _splat = require("./splat");

Object.keys(_splat).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _splat[key];
    }
  });
});

var _swizzle = require("./swizzle");

Object.keys(_swizzle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _swizzle[key];
    }
  });
});
},{"./api":"../node_modules/@thi.ng/binary/api.js","./align":"../node_modules/@thi.ng/binary/align.js","./bytes":"../node_modules/@thi.ng/binary/bytes.js","./constants":"../node_modules/@thi.ng/binary/constants.js","./count":"../node_modules/@thi.ng/binary/count.js","./edit":"../node_modules/@thi.ng/binary/edit.js","./float":"../node_modules/@thi.ng/binary/float.js","./gray":"../node_modules/@thi.ng/binary/gray.js","./logic":"../node_modules/@thi.ng/binary/logic.js","./mask":"../node_modules/@thi.ng/binary/mask.js","./pow":"../node_modules/@thi.ng/binary/pow.js","./rotate":"../node_modules/@thi.ng/binary/rotate.js","./splat":"../node_modules/@thi.ng/binary/splat.js","./swizzle":"../node_modules/@thi.ng/binary/swizzle.js"}],"../node_modules/@thi.ng/vectors/hash.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hash = void 0;

var _binary = require("@thi.ng/binary");

/**
 * Returns an unsigned 32-bit hash code for the given vector.
 *
 * @remarks
 * The hash is the reduction of `hash = H * hash + murmur(x)`, where
 * `murmur(x)` is the partial Murmur3 hash of a single vector
 * component's bitwise representation and `H` an optional hash factor,
 * by default Knuth's 0x9e3779b1 (see TAOCP, section 6.4, page 516). If
 * the vector `v` is empty (length 0), the function returns -1.
 *
 * Hashes for zero-vectors:
 *
 * - `[0]`: 1209856430
 * - `[0, 0]`: 3623989185
 * - `[0, 0, 0]`: 4192292821
 * - `[0, 0, 0, 0]`: 2558592725
 *
 * @example
 * Hash collisions:
 *
 * ```ts
 * // integer grid coords
 * uniq = tx.transduce(tx.map(v.hash32), tx.conj(), tx.range2d(0x1000, 0x1000)).size
 * // 16744420
 *
 * // collision rate
 * (1 - uniq / (0x1000 ** 2)) * 100
 * // 0.1955 %
 *
 * // normalized grid coords
 * uniq = tx.transduce(
 *   tx.map(v.hash32),
 *   tx.conj(),
 *   tx.permutations(tx.normRange(1000), tx.normRange(1000))
 * ).size
 * // 1001895
 *
 * // collision rate
 * (1 - uniq / (1001 ** 2)) * 100
 * // 0.0106 %
 * ```
 *
 * - {@link https://github.com/thi-ng/c-thing/blob/develop/src/math/hashfn.c}
 * - {@link @thi.ng/morton# | @thi.ng/morton} for Z-curve ordered hashing
 *
 * @param v - vector
 * @param hash - hash factor
 */
const hash = (v, H = 0x9e3779b1) => {
  let hash = -1;

  for (let i = v.length; --i >= 0;) {
    hash = Math.imul(H, hash) + mix(hash, (0, _binary.floatToUintBits)(v[i])) >>> 0;
  }

  return hash;
};

exports.hash = hash;
const M1 = 0xcc9e2d51;
const M2 = 0x1b873593;
const M3 = 0xe6546b64;

const mix = (h, k) => {
  k = Math.imul((0, _binary.rotateLeft)(Math.imul(k, M1) >>> 0, 15), M2) >>> 0;
  return (Math.imul((0, _binary.rotateLeft)(h ^ k, 13), 5) >>> 0) + M3 >>> 0;
};
},{"@thi.ng/binary":"../node_modules/@thi.ng/binary/index.js"}],"../node_modules/@thi.ng/vectors/sets.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setS = exports.setS4 = exports.setS3 = exports.setS2 = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [setS2, setS3, setS4] = (0, _codegen.defOpS)(_templates.SET, `o,a,${_codegen.SARGS_V}`, "o,a", "o", _codegen.NEW_OUT);
exports.setS4 = setS4;
exports.setS3 = setS3;
exports.setS2 = setS2;

const setS = (out, a, n, io = 0, ia = 0, so = 1, sa = 1) => {
  for (let i = 0; i < n; i++) {
    out[io + i * so] = a[ia + i * sa];
  }

  return out;
};

exports.setS = setS;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/vec2.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.asVec2 = exports.vec2n = exports.vec2 = exports.Vec2 = void 0;

var _math = require("@thi.ng/math");

var _api = require("./api");

var _buffer = require("./buffer");

var _eqdelta = require("./eqdelta");

var _hash = require("./hash");

var _accessors = require("./internal/accessors");

var _avec = require("./internal/avec");

var _vecUtils = require("./internal/vec-utils");

var _sets = require("./sets");

class Vec2 extends _avec.AVec {
  constructor(buf, offset = 0, stride = 1) {
    super(buf || [0, 0], offset, stride);
  }
  /**
   * Returns array of memory mapped {@link Vec2} instances using given
   * backing array and stride settings: The `cstride` is the step size
   * between individual XY vector components. `estride` is the step
   * size between successive vectors. This arrangement allows for
   * different storage approaches, incl. SOA, AOS, striped /
   * interleaved etc.
   *
   * @param buf - backing array
   * @param num - num vectors
   * @param start -  start index
   * @param cstride - component stride
   * @param estride - element stride
   */


  static mapBuffer(buf, num = buf.length >> 1, start = 0, cstride = 1, estride = 2) {
    return (0, _buffer.mapStridedBuffer)(Vec2, buf, num, start, cstride, estride);
  }
  /**
   * Merges given `src` iterable of {@link Vec2}s into single array `buf`.
   * Vectors will be arranged according to given component and element
   * strides, starting at `start` index. It's the user's
   * responsibility to ensure the target buffer has sufficient
   * capacity to hold the input vectors. See `Vec2.mapBuffer` for the
   * inverse operation. Returns `buf`.
   *
   * @param buf -
   * @param src -
   * @param start -
   * @param cstride -
   * @param estride -
   */


  static intoBuffer(buf, src, start = 0, cstride = 1, estride = 2) {
    return (0, _buffer.intoStridedBuffer)(_sets.setS2, buf, src, start, cstride, estride);
  }

  static iterator(buf, num, start = 0, cstride = 1, estride = 2) {
    return (0, _vecUtils.vecIterator)(Vec2, buf, num, start, cstride, estride);
  }

  [Symbol.iterator]() {
    return (0, _vecUtils.stridedValues)(this.buf, 2, this.offset, this.stride);
  }

  get length() {
    return 2;
  }

  copy() {
    return new Vec2([this.x, this.y]);
  }

  copyView() {
    return new Vec2(this.buf, this.offset, this.stride);
  }

  empty() {
    return new Vec2();
  }

  eqDelta(v, eps = _math.EPS) {
    return (0, _eqdelta.eqDelta2)(this, v, eps);
  }

  hash() {
    return (0, _hash.hash)(this);
  }

  toJSON() {
    return [this.x, this.y];
  }

  toString() {
    return `[${this.x}, ${this.y}]`;
  }

}

exports.Vec2 = Vec2;
Vec2.X_AXIS = new Vec2(_api.X2);
Vec2.Y_AXIS = new Vec2(_api.Y2);
Vec2.MIN = new Vec2(_api.MIN2);
Vec2.MAX = new Vec2(_api.MAX2);
Vec2.ZERO = new Vec2(_api.ZERO2);
Vec2.ONE = new Vec2(_api.ONE2);
(0, _accessors.declareIndices)(Vec2.prototype, ["x", "y"]);

const vec2 = (x = 0, y = 0) => new Vec2([x, y]);

exports.vec2 = vec2;

const vec2n = n => new Vec2([n, n]);

exports.vec2n = vec2n;

const asVec2 = x => x instanceof Vec2 ? x : new Vec2(x.length >= 2 ? x : [x[0] || 0, x[1] || 0]);

exports.asVec2 = asVec2;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","./api":"../node_modules/@thi.ng/vectors/api.js","./buffer":"../node_modules/@thi.ng/vectors/buffer.js","./eqdelta":"../node_modules/@thi.ng/vectors/eqdelta.js","./hash":"../node_modules/@thi.ng/vectors/hash.js","./internal/accessors":"../node_modules/@thi.ng/vectors/internal/accessors.js","./internal/avec":"../node_modules/@thi.ng/vectors/internal/avec.js","./internal/vec-utils":"../node_modules/@thi.ng/vectors/internal/vec-utils.js","./sets":"../node_modules/@thi.ng/vectors/sets.js"}],"../node_modules/@thi.ng/vectors/vec3.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.asVec3 = exports.vec3n = exports.vec3 = exports.Vec3 = void 0;

var _math = require("@thi.ng/math");

var _api = require("./api");

var _buffer = require("./buffer");

var _eqdelta = require("./eqdelta");

var _hash = require("./hash");

var _accessors = require("./internal/accessors");

var _avec = require("./internal/avec");

var _vecUtils = require("./internal/vec-utils");

var _sets = require("./sets");

class Vec3 extends _avec.AVec {
  constructor(buf, offset = 0, stride = 1) {
    super(buf || [0, 0, 0], offset, stride);
  }
  /**
   * Returns array of memory mapped {@link Vec3} instances using given
   * backing array and stride settings: The `cstride` is the step size
   * between individual XYZ vector components. `estride` is the step
   * size between successive vectors. This arrangement allows for
   * different storage approaches, incl. SOA, AOS, striped /
   * interleaved etc.
   *
   * @param buf - backing array
   * @param num - num vectors
   * @param start -  start index
   * @param cstride - component stride
   * @param estride - element stride
   */


  static mapBuffer(buf, num = buf.length / 3 | 0, start = 0, cstride = 1, estride = 3) {
    return (0, _buffer.mapStridedBuffer)(Vec3, buf, num, start, cstride, estride);
  }
  /**
   * Merges given `src` iterable of {@link Vec3}s into single array `buf`.
   * Vectors will be arranged according to given component and element
   * strides, starting at `start` index. It's the user's
   * responsibility to ensure the target buffer has sufficient
   * capacity to hold the input vectors. See `Vec3.mapBuffer` for the
   * inverse operation. Returns `buf`.
   *
   * @param buf -
   * @param src -
   * @param start -
   * @param cstride -
   * @param estride -
   */


  static intoBuffer(buf, src, start = 0, cstride = 1, estride = 3) {
    return (0, _buffer.intoStridedBuffer)(_sets.setS3, buf, src, start, cstride, estride);
  }

  static iterator(buf, num, start = 0, cstride = 1, estride = 3) {
    return (0, _vecUtils.vecIterator)(Vec3, buf, num, start, cstride, estride);
  }

  [Symbol.iterator]() {
    return (0, _vecUtils.stridedValues)(this.buf, 3, this.offset, this.stride);
  }

  get length() {
    return 3;
  }

  copy() {
    return new Vec3([this.x, this.y, this.z]);
  }

  copyView() {
    return new Vec3(this.buf, this.offset, this.stride);
  }

  empty() {
    return new Vec3();
  }

  eqDelta(v, eps = _math.EPS) {
    return (0, _eqdelta.eqDelta3)(this, v, eps);
  }

  hash() {
    return (0, _hash.hash)(this);
  }

  toJSON() {
    return [this.x, this.y, this.z];
  }

  toString() {
    return `[${this.x}, ${this.y}, ${this.z}]`;
  }

}

exports.Vec3 = Vec3;
Vec3.X_AXIS = new Vec3(_api.X3);
Vec3.Y_AXIS = new Vec3(_api.Y3);
Vec3.Z_AXIS = new Vec3(_api.Z3);
Vec3.MIN = new Vec3(_api.MIN3);
Vec3.MAX = new Vec3(_api.MAX3);
Vec3.ZERO = new Vec3(_api.ZERO3);
Vec3.ONE = new Vec3(_api.ONE3);
(0, _accessors.declareIndices)(Vec3.prototype, ["x", "y", "z"]);

const vec3 = (x = 0, y = 0, z = 0) => new Vec3([x, y, z]);

exports.vec3 = vec3;

const vec3n = n => new Vec3([n, n, n]);

exports.vec3n = vec3n;

const asVec3 = x => x instanceof Vec3 ? x : new Vec3(x.length >= 3 ? x : [x[0] || 0, x[1] || 0, x[2] || 0]);

exports.asVec3 = asVec3;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","./api":"../node_modules/@thi.ng/vectors/api.js","./buffer":"../node_modules/@thi.ng/vectors/buffer.js","./eqdelta":"../node_modules/@thi.ng/vectors/eqdelta.js","./hash":"../node_modules/@thi.ng/vectors/hash.js","./internal/accessors":"../node_modules/@thi.ng/vectors/internal/accessors.js","./internal/avec":"../node_modules/@thi.ng/vectors/internal/avec.js","./internal/vec-utils":"../node_modules/@thi.ng/vectors/internal/vec-utils.js","./sets":"../node_modules/@thi.ng/vectors/sets.js"}],"../node_modules/@thi.ng/vectors/vec4.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.asVec4 = exports.vec4n = exports.vec4 = exports.Vec4 = void 0;

var _math = require("@thi.ng/math");

var _api = require("./api");

var _buffer = require("./buffer");

var _eqdelta = require("./eqdelta");

var _hash = require("./hash");

var _accessors = require("./internal/accessors");

var _avec = require("./internal/avec");

var _vecUtils = require("./internal/vec-utils");

var _sets = require("./sets");

class Vec4 extends _avec.AVec {
  constructor(buf, offset = 0, stride = 1) {
    super(buf || [0, 0, 0, 0], offset, stride);
  }
  /**
   * Returns array of memory mapped {@link Vec4} instances using given
   * backing array and stride settings: The `cstride` is the step size
   * between individual XYZ vector components. `estride` is the step
   * size between successive vectors. This arrangement allows for
   * different storage approaches, incl. SOA, AOS, striped /
   * interleaved etc.
   *
   * @param buf - backing array
   * @param num - num vectors
   * @param start -  start index
   * @param cstride - component stride
   * @param estride - element stride
   */


  static mapBuffer(buf, num = buf.length >> 2, start = 0, cstride = 1, estride = 4) {
    return (0, _buffer.mapStridedBuffer)(Vec4, buf, num, start, cstride, estride);
  }
  /**
   * Merges given `src` iterable of {@link Vec4}s into single array `buf`.
   * Vectors will be arranged according to given component and element
   * strides, starting at `start` index. It's the user's
   * responsibility to ensure the target buffer has sufficient
   * capacity to hold the input vectors. See `Vec4.mapBuffer` for the
   * inverse operation. Returns `buf`.
   *
   * @param buf -
   * @param src -
   * @param start -
   * @param cstride -
   * @param estride -
   */


  static intoBuffer(buf, src, start = 0, cstride = 1, estride = 4) {
    return (0, _buffer.intoStridedBuffer)(_sets.setS4, buf, src, start, cstride, estride);
  }

  static *iterator(buf, num, start = 0, cstride = 1, estride = 4) {
    return (0, _vecUtils.vecIterator)(Vec4, buf, num, start, cstride, estride);
  }

  [Symbol.iterator]() {
    return (0, _vecUtils.stridedValues)(this.buf, 4, this.offset, this.stride);
  }

  get length() {
    return 4;
  }

  copy() {
    return new Vec4([this.x, this.y, this.z, this.w]);
  }

  copyView() {
    return new Vec4(this.buf, this.offset, this.stride);
  }

  empty() {
    return new Vec4();
  }

  eqDelta(v, eps = _math.EPS) {
    return (0, _eqdelta.eqDelta4)(this, v, eps);
  }

  hash() {
    return (0, _hash.hash)(this);
  }

  toJSON() {
    return [this.x, this.y, this.z, this.w];
  }

  toString() {
    return `[${this.x}, ${this.y}, ${this.z}, ${this.w}]`;
  }

}

exports.Vec4 = Vec4;
Vec4.X_AXIS = new Vec4(_api.X4);
Vec4.Y_AXIS = new Vec4(_api.Y4);
Vec4.Z_AXIS = new Vec4(_api.Z4);
Vec4.MIN = new Vec4(_api.MIN4);
Vec4.MAX = new Vec4(_api.MAX4);
Vec4.ZERO = new Vec4(_api.ZERO4);
Vec4.ONE = new Vec4(_api.ONE4);
(0, _accessors.declareIndices)(Vec4.prototype, ["x", "y", "z", "w"]);

const vec4 = (x = 0, y = 0, z = 0, w = 0) => new Vec4([x, y, z, w]);

exports.vec4 = vec4;

const vec4n = n => new Vec4([n, n, n, n]);

exports.vec4n = vec4n;

const asVec4 = x => x instanceof Vec4 ? x : new Vec4(x.length >= 4 ? x : [x[0] || 0, x[1] || 0, x[2] || 0, x[3] || 0]);

exports.asVec4 = asVec4;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","./api":"../node_modules/@thi.ng/vectors/api.js","./buffer":"../node_modules/@thi.ng/vectors/buffer.js","./eqdelta":"../node_modules/@thi.ng/vectors/eqdelta.js","./hash":"../node_modules/@thi.ng/vectors/hash.js","./internal/accessors":"../node_modules/@thi.ng/vectors/internal/accessors.js","./internal/avec":"../node_modules/@thi.ng/vectors/internal/avec.js","./internal/vec-utils":"../node_modules/@thi.ng/vectors/internal/vec-utils.js","./sets":"../node_modules/@thi.ng/vectors/sets.js"}],"../node_modules/@thi.ng/vectors/abs.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.abs4 = exports.abs3 = exports.abs2 = exports.abs = void 0;

var _codegen = require("./internal/codegen");

const [abs, abs2, abs3, abs4] = (0, _codegen.defFnOp)("Math.abs");
exports.abs4 = abs4;
exports.abs3 = abs3;
exports.abs2 = abs2;
exports.abs = abs;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/acos.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.acos4 = exports.acos3 = exports.acos2 = exports.acos = void 0;

var _codegen = require("./internal/codegen");

const [acos, acos2, acos3, acos4] = (0, _codegen.defFnOp)("Math.acos");
exports.acos4 = acos4;
exports.acos3 = acos3;
exports.acos2 = acos2;
exports.acos = acos;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/maddn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.maddN4 = exports.maddN3 = exports.maddN2 = exports.maddN = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

/**
 * Returns `out = a * n + b`.
 *
 * @param out - vec
 * @param a - vec
 * @param n - scalar
 * @param b - vec
 */
const [maddN, maddN2, maddN3, maddN4] = (0, _codegen.defOp)((0, _templates.MATH2A_N)("*", "+"), _codegen.ARGS_VNV, _codegen.ARGS_VV);
exports.maddN4 = maddN4;
exports.maddN3 = maddN3;
exports.maddN2 = maddN2;
exports.maddN = maddN;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/muln.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mulN4 = exports.mulN3 = exports.mulN2 = exports.mulN = void 0;

var _codegen = require("./internal/codegen");

const [mulN, mulN2, mulN3, mulN4] = (0, _codegen.defMathOpN)("*");
exports.mulN4 = mulN4;
exports.mulN3 = mulN3;
exports.mulN2 = mulN2;
exports.mulN = mulN;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/addw.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addW5 = exports.addW4 = exports.addW3 = exports.addW2 = void 0;

var _maddn = require("./maddn");

var _muln = require("./muln");

const addW2 = (out, a, b, wa, wb) => (!out && (out = a), (0, _maddn.maddN)(out, b, wb, (0, _muln.mulN)(out, a, wa)));

exports.addW2 = addW2;

const addW3 = (out, a, b, c, wa, wb, wc) => (!out && (out = a), (0, _maddn.maddN)(out, c, wc, (0, _maddn.maddN)(out, b, wb, (0, _muln.mulN)(out, a, wa))));

exports.addW3 = addW3;

const addW4 = (out, a, b, c, d, wa, wb, wc, wd) => (!out && (out = a), (0, _maddn.maddN)(out, d, wd, (0, _maddn.maddN)(out, c, wc, (0, _maddn.maddN)(out, b, wb, (0, _muln.mulN)(out, a, wa)))));

exports.addW4 = addW4;

const addW5 = (out, a, b, c, d, e, wa, wb, wc, wd, we) => (!out && (out = a), (0, _maddn.maddN)(out, e, we, (0, _maddn.maddN)(out, d, wd, (0, _maddn.maddN)(out, c, wc, (0, _maddn.maddN)(out, b, wb, (0, _muln.mulN)(out, a, wa))))));

exports.addW5 = addW5;
},{"./maddn":"../node_modules/@thi.ng/vectors/maddn.js","./muln":"../node_modules/@thi.ng/vectors/muln.js"}],"../node_modules/@thi.ng/vectors/add.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.add4 = exports.add3 = exports.add2 = exports.add = void 0;

var _codegen = require("./internal/codegen");

const [add, add2, add3, add4] = (0, _codegen.defMathOp)("+");
exports.add4 = add4;
exports.add3 = add3;
exports.add2 = add2;
exports.add = add;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/addi.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addNU4 = exports.addNU3 = exports.addNU2 = exports.addNU = exports.addNI4 = exports.addNI3 = exports.addNI2 = exports.addNI = exports.addU4 = exports.addU3 = exports.addU2 = exports.addU = exports.addI4 = exports.addI3 = exports.addI2 = exports.addI = void 0;

var _codegen = require("./internal/codegen");

const [addI, addI2, addI3, addI4] = (0, _codegen.defBitOp)("+", true);
exports.addI4 = addI4;
exports.addI3 = addI3;
exports.addI2 = addI2;
exports.addI = addI;
const [addU, addU2, addU3, addU4] = (0, _codegen.defBitOp)("+");
exports.addU4 = addU4;
exports.addU3 = addU3;
exports.addU2 = addU2;
exports.addU = addU;
const [addNI, addNI2, addNI3, addNI4] = (0, _codegen.defBitOpN)("+", true);
exports.addNI4 = addNI4;
exports.addNI3 = addNI3;
exports.addNI2 = addNI2;
exports.addNI = addNI;
const [addNU, addNU2, addNU3, addNU4] = (0, _codegen.defBitOpN)("+");
exports.addNU4 = addNU4;
exports.addNU3 = addNU3;
exports.addNU2 = addNU2;
exports.addNU = addNU;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/addm.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addm4 = exports.addm3 = exports.addm2 = exports.addm = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

/**
 * Returns `out = (a + b) * c`.
 *
 * - {@link madd}
 * - {@link subm}
 */
const [addm, addm2, addm3, addm4] = (0, _codegen.defOp)((0, _templates.MATH2)("+", "*"), _codegen.ARGS_VVV);
exports.addm4 = addm4;
exports.addm3 = addm3;
exports.addm2 = addm2;
exports.addm = addm;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/addmn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addmN4 = exports.addmN3 = exports.addmN2 = exports.addmN = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

/**
 * Returns `out = (a + b) * n`.
 */
const [addmN, addmN2, addmN3, addmN4] = (0, _codegen.defOp)((0, _templates.MATH2_N)("+", "*"), _codegen.ARGS_VVN);
exports.addmN4 = addmN4;
exports.addmN3 = addmN3;
exports.addmN2 = addmN2;
exports.addmN = addmN;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/addms.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addmS4 = exports.addmS3 = exports.addmS2 = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [addmS2, addmS3, addmS4] = (0, _codegen.defOpS)((0, _templates.MATH2)("+", "*"), `${_codegen.ARGS_VVV},${_codegen.SARGS_VVV}`, _codegen.ARGS_VVV);
exports.addmS4 = addmS4;
exports.addmS3 = addmS3;
exports.addmS2 = addmS2;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/addmns.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addmNS4 = exports.addmNS3 = exports.addmNS2 = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [addmNS2, addmNS3, addmNS4] = (0, _codegen.defOpS)((0, _templates.MATH2_N)("+", "*"), `${_codegen.ARGS_VVN},${_codegen.SARGS_VV}`);
exports.addmNS4 = addmNS4;
exports.addmNS3 = addmNS3;
exports.addmNS2 = addmNS2;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/addn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addN4 = exports.addN3 = exports.addN2 = exports.addN = void 0;

var _codegen = require("./internal/codegen");

const [addN, addN2, addN3, addN4] = (0, _codegen.defMathOpN)("+");
exports.addN4 = addN4;
exports.addN3 = addN3;
exports.addN2 = addN2;
exports.addN = addN;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/adds.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addS4 = exports.addS3 = exports.addS2 = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [addS2, addS3, addS4] = (0, _codegen.defOpS)((0, _templates.MATH)("+"));
exports.addS4 = addS4;
exports.addS3 = addS3;
exports.addS2 = addS2;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/addns.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addNS4 = exports.addNS3 = exports.addNS2 = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [addNS2, addNS3, addNS4] = (0, _codegen.defOpS)((0, _templates.MATH_N)("+"), `${_codegen.ARGS_VN},${_codegen.SARGS_V}`, _codegen.ARGS_V);
exports.addNS4 = addNS4;
exports.addNS3 = addNS3;
exports.addNS2 = addNS2;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/setc.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setC = exports.setC6 = exports.setC4 = exports.setC3 = exports.setC2 = void 0;

const setC2 = (out, x, y) => (!out && (out = []), out[0] = x, out[1] = y, out);

exports.setC2 = setC2;

const setC3 = (out, x, y, z) => (!out && (out = []), out[0] = x, out[1] = y, out[2] = z, out);

exports.setC3 = setC3;

const setC4 = (out, x, y, z, w) => (!out && (out = []), out[0] = x, out[1] = y, out[2] = z, out[3] = w, out);

exports.setC4 = setC4;

const setC6 = (out, a, b, c, d, e, f) => (!out && (out = []), out[0] = a, out[1] = b, out[2] = c, out[3] = d, out[4] = e, out[5] = f, out);

exports.setC6 = setC6;

const setC = (out, ...xs) => {
  !out && (out = []);

  for (let i = 0, n = xs.length; i < n; i++) {
    out[i] = xs[i];
  }

  return out;
};

exports.setC = setC;
},{}],"../node_modules/@thi.ng/vectors/cross.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cross3 = exports.cross2 = void 0;

var _setc = require("./setc");

const cross2 = (a, b) => a[0] * b[1] - a[1] * b[0];

exports.cross2 = cross2;

const cross3 = (out, a, b) => (0, _setc.setC3)(out || a, a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]);

exports.cross3 = cross3;
},{"./setc":"../node_modules/@thi.ng/vectors/setc.js"}],"../node_modules/@thi.ng/vectors/dot.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dot4 = exports.dot3 = exports.dot2 = exports.dot = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

var _vop = require("./internal/vop");

const $ = dim => dot.add(dim, (0, _codegen.compile)(dim, _templates.DOT, "a,b", undefined, "", "+", "return ", ";"));

const dot = (0, _vop.vop)();
exports.dot = dot;
dot.default((0, _codegen.compileG)(_templates.DOT_G, "a,b", undefined, "s", "let s=0;"));
const dot2 = $(2);
exports.dot2 = dot2;
const dot3 = $(3);
exports.dot3 = dot3;
const dot4 = $(4);
exports.dot4 = dot4;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js","./internal/vop":"../node_modules/@thi.ng/vectors/internal/vop.js"}],"../node_modules/@thi.ng/vectors/magsq.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.magSq4 = exports.magSq3 = exports.magSq2 = exports.magSq = void 0;

var _codegen = require("./internal/codegen");

var _vop = require("./internal/vop");

const $ = dim => magSq.add(dim, (0, _codegen.compile)(dim, ([a]) => `${a}*${a}`, "a", "a", "", "+", "return ", ";"));

const magSq = (0, _vop.vop)();
exports.magSq = magSq;
magSq.default((0, _codegen.compileG)(([a]) => `sum+=${a}*${a};`, "a", undefined, "sum", "let sum=0;"));
const magSq2 = $(2);
exports.magSq2 = magSq2;
const magSq3 = $(3);
exports.magSq3 = magSq3;
const magSq4 = $(4);
exports.magSq4 = magSq4;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/vop":"../node_modules/@thi.ng/vectors/internal/vop.js"}],"../node_modules/@thi.ng/vectors/mag.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mag = void 0;

var _magsq = require("./magsq");

const mag = v => Math.sqrt((0, _magsq.magSq)(v));

exports.mag = mag;
},{"./magsq":"../node_modules/@thi.ng/vectors/magsq.js"}],"../node_modules/@thi.ng/vectors/angle-between.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.angleBetween3 = exports.angleBetween2 = exports.angleRatio = void 0;

var _math = require("@thi.ng/math");

var _cross = require("./cross");

var _dot = require("./dot");

var _mag = require("./mag");

const angleRatio = (a, b) => (0, _dot.dot)(a, b) / ((0, _mag.mag)(a) * (0, _mag.mag)(b));

exports.angleRatio = angleRatio;

const angleBetween2 = (a, b, absInner = false) => {
  const t = Math.atan2((0, _cross.cross2)(a, b), (0, _dot.dot)(a, b));
  return absInner ? (0, _math.absInnerAngle)(t) : t;
};

exports.angleBetween2 = angleBetween2;

const angleBetween3 = (a, b, normalize = true, absInner = false) => {
  const t = normalize ? Math.acos(angleRatio(a, b)) : Math.acos((0, _dot.dot)(a, b));
  return absInner ? (0, _math.absInnerAngle)(t) : t;
};

exports.angleBetween3 = angleBetween3;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","./cross":"../node_modules/@thi.ng/vectors/cross.js","./dot":"../node_modules/@thi.ng/vectors/dot.js","./mag":"../node_modules/@thi.ng/vectors/mag.js"}],"../node_modules/@thi.ng/vectors/asin.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.asin4 = exports.asin3 = exports.asin2 = exports.asin = void 0;

var _codegen = require("./internal/codegen");

const [asin, asin2, asin3, asin4] = (0, _codegen.defFnOp)("Math.asin");
exports.asin4 = asin4;
exports.asin3 = asin3;
exports.asin2 = asin2;
exports.asin = asin;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/atan.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.atan_24 = exports.atan_23 = exports.atan_22 = exports.atan_2 = exports.atan4 = exports.atan3 = exports.atan2 = exports.atan = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [atan, atan2, atan3, atan4] = (0, _codegen.defFnOp)("Math.atan");
exports.atan4 = atan4;
exports.atan3 = atan3;
exports.atan2 = atan2;
exports.atan = atan;
const [atan_2, atan_22, atan_23, atan_24] = (0, _codegen.defOp)((0, _templates.FN2)("Math.atan2"), _codegen.ARGS_VV);
exports.atan_24 = atan_24;
exports.atan_23 = atan_23;
exports.atan_22 = atan_22;
exports.atan_2 = atan_2;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/set.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.set4 = exports.set3 = exports.set2 = exports.set = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [set, set2, set3, set4] = (0, _codegen.defOp)(_templates.SET, "o,a", undefined, "o", 1, _codegen.NEW_OUT);
exports.set4 = set4;
exports.set3 = set3;
exports.set2 = set2;
exports.set = set;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/normalize.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.normalize = void 0;

var _math = require("@thi.ng/math");

var _mag = require("./mag");

var _muln = require("./muln");

var _set = require("./set");

/**
 * Normalizes vector to given (optional) length (default: 1). If `out`
 * is null, modifies `v` in place.
 *
 * @param out -
 * @param v -
 * @param n -
 */
const normalize = (out, v, n = 1) => {
  !out && (out = v);
  const m = (0, _mag.mag)(v);
  return m >= _math.EPS ? (0, _muln.mulN)(out, v, n / m) : out !== v ? (0, _set.set)(out, v) : out;
};

exports.normalize = normalize;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","./mag":"../node_modules/@thi.ng/vectors/mag.js","./muln":"../node_modules/@thi.ng/vectors/muln.js","./set":"../node_modules/@thi.ng/vectors/set.js"}],"../node_modules/@thi.ng/vectors/sub.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sub4 = exports.sub3 = exports.sub2 = exports.sub = void 0;

var _codegen = require("./internal/codegen");

const [sub, sub2, sub3, sub4] = (0, _codegen.defMathOp)("-");
exports.sub4 = sub4;
exports.sub3 = sub3;
exports.sub2 = sub2;
exports.sub = sub;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/direction.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.direction = void 0;

var _normalize = require("./normalize");

var _sub = require("./sub");

/**
 * Computes direction vector `a` -> `b`, normalized to length `n`
 * (default 1).
 *
 * @param a -
 * @param b -
 * @param n -
 */
const direction = (out, a, b, n = 1) => (0, _normalize.normalize)(null, (0, _sub.sub)(out || a, b, a), n);

exports.direction = direction;
},{"./normalize":"../node_modules/@thi.ng/vectors/normalize.js","./sub":"../node_modules/@thi.ng/vectors/sub.js"}],"../node_modules/@thi.ng/vectors/heading.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.heading = exports.headingYZ = exports.headingXZ = exports.headingXY = void 0;

var _math = require("@thi.ng/math");

/**
 * Returns orientation angle (in radians) of vector `a` in XY plane.
 *
 * @param a -
 */
const headingXY = a => (0, _math.atan2Abs)(a[1], a[0]);
/**
 * Returns orientation angle (in radians) of vector `a` in XZ plane.
 *
 * @param a -
 */


exports.headingXY = headingXY;

const headingXZ = a => (0, _math.atan2Abs)(a[2], a[0]);
/**
 * Returns orientation angle (in radians) of vector `a` in ZY plane.
 *
 * @param a -
 */


exports.headingXZ = headingXZ;

const headingYZ = a => (0, _math.atan2Abs)(a[2], a[1]);
/**
 * Same as {@link headingXY}
 */


exports.headingYZ = headingYZ;
const heading = headingXY;
exports.heading = heading;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js"}],"../node_modules/@thi.ng/vectors/mixn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mixN4 = exports.mixN3 = exports.mixN2 = exports.mixN = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [mixN, mixN2, mixN3, mixN4] = (0, _codegen.defOp)(_templates.MIX_N, _codegen.ARGS_VVN);
exports.mixN4 = mixN4;
exports.mixN3 = mixN3;
exports.mixN2 = mixN2;
exports.mixN = mixN;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/perpendicular.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.perpendicularCW = exports.perpendicularCCW = void 0;

var _setc = require("./setc");

/**
 * 2D only. Produces a perpendicular vector to `v`, i.e. `[-y,x]`.
 * Assumes positive Y-up.
 *
 * @param out -
 * @param v -
 */
const perpendicularCCW = (out, a) => (0, _setc.setC2)(out || a, -a[1], a[0]);
/**
 * 2D only. Produces a clockwise perpendicular vector to `v`, i.e.
 * `[y,-x]`. Assumes positive Y-up.
 *
 * @param out -
 * @param v -
 */


exports.perpendicularCCW = perpendicularCCW;

const perpendicularCW = (out, a) => (0, _setc.setC2)(out || a, a[1], -a[0]);

exports.perpendicularCW = perpendicularCW;
},{"./setc":"../node_modules/@thi.ng/vectors/setc.js"}],"../node_modules/@thi.ng/vectors/bisect.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cornerBisector2 = exports.cornerBisector = exports.bisect2 = void 0;

var _math = require("@thi.ng/math");

var _addmn = require("./addmn");

var _direction = require("./direction");

var _heading = require("./heading");

var _mixn = require("./mixn");

var _normalize = require("./normalize");

var _perpendicular = require("./perpendicular");

var _sub = require("./sub");

const bisect2 = (a, b) => {
  const theta = ((0, _heading.headingXY)(a) + (0, _heading.headingXY)(b)) / 2;
  return theta <= _math.HALF_PI ? theta : _math.PI - theta;
};
/**
 * Returns normalized bisector vector for point `b` in the triangle `a`
 * -> `b` -> `c`. If `out` is null, creates a new result vector. The `n`
 * arg can be used to scale the result vector to given length (default:
 * 1).
 *
 * @param out -
 * @param a -
 * @param b -
 * @param c -
 * @param n -
 */


exports.bisect2 = bisect2;

const cornerBisector = (out, a, b, c, n = 1) => (!out && (out = []), (0, _normalize.normalize)(out, (0, _addmn.addmN)(out, (0, _normalize.normalize)(out, (0, _sub.sub)(out, a, b)), (0, _normalize.normalize)(null, (0, _sub.sub)([], c, b)), 0.5), n));
/**
 * 2D version of {@link cornerBisector} which doesn't always bisect the
 * smaller/inside angle, but also doesn't suffer sign/orientation
 * flipping of returned bisector vector.
 *
 * @remarks
 * Instead, the direction of the result is dependent on the orientation
 * of the input triangle. If `a`, `b`, `c` are in CW order, the result
 * will point away from the triangle's centroid. If CCW, the result will
 * point towards the inside.
 *
 * @param out -
 * @param a -
 * @param b -
 * @param c -
 * @param n -
 */


exports.cornerBisector = cornerBisector;

const cornerBisector2 = (out, a, b, c, n = 1) => (!out && (out = []), (0, _perpendicular.perpendicularCCW)(out, (0, _normalize.normalize)(out, (0, _mixn.mixN2)(out, (0, _direction.direction)(out, a, b), (0, _direction.direction)([], b, c), 0.5), n)));

exports.cornerBisector2 = cornerBisector2;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","./addmn":"../node_modules/@thi.ng/vectors/addmn.js","./direction":"../node_modules/@thi.ng/vectors/direction.js","./heading":"../node_modules/@thi.ng/vectors/heading.js","./mixn":"../node_modules/@thi.ng/vectors/mixn.js","./normalize":"../node_modules/@thi.ng/vectors/normalize.js","./perpendicular":"../node_modules/@thi.ng/vectors/perpendicular.js","./sub":"../node_modules/@thi.ng/vectors/sub.js"}],"../node_modules/@thi.ng/vectors/bit-and.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bitAndNU4 = exports.bitAndNU3 = exports.bitAndNU2 = exports.bitAndNU = exports.bitAndNI4 = exports.bitAndNI3 = exports.bitAndNI2 = exports.bitAndNI = exports.bitAndU4 = exports.bitAndU3 = exports.bitAndU2 = exports.bitAndU = exports.bitAndI4 = exports.bitAndI3 = exports.bitAndI2 = exports.bitAndI = void 0;

var _codegen = require("./internal/codegen");

const [bitAndI, bitAndI2, bitAndI3, bitAndI4] = (0, _codegen.defBitOp)("&", true);
exports.bitAndI4 = bitAndI4;
exports.bitAndI3 = bitAndI3;
exports.bitAndI2 = bitAndI2;
exports.bitAndI = bitAndI;
const [bitAndU, bitAndU2, bitAndU3, bitAndU4] = (0, _codegen.defBitOp)("&");
exports.bitAndU4 = bitAndU4;
exports.bitAndU3 = bitAndU3;
exports.bitAndU2 = bitAndU2;
exports.bitAndU = bitAndU;
const [bitAndNI, bitAndNI2, bitAndNI3, bitAndNI4] = (0, _codegen.defBitOpN)("&", true);
exports.bitAndNI4 = bitAndNI4;
exports.bitAndNI3 = bitAndNI3;
exports.bitAndNI2 = bitAndNI2;
exports.bitAndNI = bitAndNI;
const [bitAndNU, bitAndNU2, bitAndNU3, bitAndNU4] = (0, _codegen.defBitOpN)("&");
exports.bitAndNU4 = bitAndNU4;
exports.bitAndNU3 = bitAndNU3;
exports.bitAndNU2 = bitAndNU2;
exports.bitAndNU = bitAndNU;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/bit-not.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bitNotU4 = exports.bitNotU3 = exports.bitNotU2 = exports.bitNotU = exports.bitNotI4 = exports.bitNotI3 = exports.bitNotI2 = exports.bitNotI = void 0;

var _codegen = require("./internal/codegen");

const [bitNotI, bitNotI2, bitNotI3, bitNotI4] = (0, _codegen.defOp)(([o, a]) => `${o}=(~${a})|0;`, _codegen.ARGS_V);
exports.bitNotI4 = bitNotI4;
exports.bitNotI3 = bitNotI3;
exports.bitNotI2 = bitNotI2;
exports.bitNotI = bitNotI;
const [bitNotU, bitNotU2, bitNotU3, bitNotU4] = (0, _codegen.defOp)(([o, a]) => `${o}=(~${a})>>>0;`, _codegen.ARGS_V);
exports.bitNotU4 = bitNotU4;
exports.bitNotU3 = bitNotU3;
exports.bitNotU2 = bitNotU2;
exports.bitNotU = bitNotU;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/bit-or.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bitOrNU4 = exports.bitOrNU3 = exports.bitOrNU2 = exports.bitOrNU = exports.bitOrNI4 = exports.bitOrNI3 = exports.bitOrNI2 = exports.bitOrNI = exports.bitOrU4 = exports.bitOrU3 = exports.bitOrU2 = exports.bitOrU = exports.bitOrI4 = exports.bitOrI3 = exports.bitOrI2 = exports.bitOrI = void 0;

var _codegen = require("./internal/codegen");

const [bitOrI, bitOrI2, bitOrI3, bitOrI4] = (0, _codegen.defBitOp)("|", true);
exports.bitOrI4 = bitOrI4;
exports.bitOrI3 = bitOrI3;
exports.bitOrI2 = bitOrI2;
exports.bitOrI = bitOrI;
const [bitOrU, bitOrU2, bitOrU3, bitOrU4] = (0, _codegen.defBitOp)("|");
exports.bitOrU4 = bitOrU4;
exports.bitOrU3 = bitOrU3;
exports.bitOrU2 = bitOrU2;
exports.bitOrU = bitOrU;
const [bitOrNI, bitOrNI2, bitOrNI3, bitOrNI4] = (0, _codegen.defBitOpN)("|", true);
exports.bitOrNI4 = bitOrNI4;
exports.bitOrNI3 = bitOrNI3;
exports.bitOrNI2 = bitOrNI2;
exports.bitOrNI = bitOrNI;
const [bitOrNU, bitOrNU2, bitOrNU3, bitOrNU4] = (0, _codegen.defBitOpN)("|");
exports.bitOrNU4 = bitOrNU4;
exports.bitOrNU3 = bitOrNU3;
exports.bitOrNU2 = bitOrNU2;
exports.bitOrNU = bitOrNU;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/bit-xor.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bitXorNU4 = exports.bitXorNU3 = exports.bitXorNU2 = exports.bitXorNU = exports.bitXorNI4 = exports.bitXorNI3 = exports.bitXorNI2 = exports.bitXorNI = exports.bitXorU4 = exports.bitXorU3 = exports.bitXorU2 = exports.bitXorU = exports.bitXorI4 = exports.bitXorI3 = exports.bitXorI2 = exports.bitXorI = void 0;

var _codegen = require("./internal/codegen");

const [bitXorI, bitXorI2, bitXorI3, bitXorI4] = (0, _codegen.defBitOp)("^", true);
exports.bitXorI4 = bitXorI4;
exports.bitXorI3 = bitXorI3;
exports.bitXorI2 = bitXorI2;
exports.bitXorI = bitXorI;
const [bitXorU, bitXorU2, bitXorU3, bitXorU4] = (0, _codegen.defBitOp)("^");
exports.bitXorU4 = bitXorU4;
exports.bitXorU3 = bitXorU3;
exports.bitXorU2 = bitXorU2;
exports.bitXorU = bitXorU;
const [bitXorNI, bitXorNI2, bitXorNI3, bitXorNI4] = (0, _codegen.defBitOpN)("^", true);
exports.bitXorNI4 = bitXorNI4;
exports.bitXorNI3 = bitXorNI3;
exports.bitXorNI2 = bitXorNI2;
exports.bitXorNI = bitXorNI;
const [bitXorNU, bitXorNU2, bitXorNU3, bitXorNU4] = (0, _codegen.defBitOpN)("^");
exports.bitXorNU4 = bitXorNU4;
exports.bitXorNU3 = bitXorNU3;
exports.bitXorNU2 = bitXorNU2;
exports.bitXorNU = bitXorNU;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/cartesian.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cartesian3 = exports.cartesian2 = exports.cartesian = void 0;

var _math = require("@thi.ng/math");

var _api = require("./api");

var _vop = require("./internal/vop");

var _maddn = require("./maddn");

var _setc = require("./setc");

const cos = Math.cos;
const sin = Math.sin;
/**
 * Converts polar vector `v` to cartesian coordinates and adds optional
 * `offset`. See {@link polar} for reverse operation. If `out` is null,
 * modifies `v` in place.
 *
 * @param out -
 * @param v -
 * @param offset -
 */

const cartesian = (0, _vop.vop)(1);
/**
 * Converts 2D polar vector `v` to cartesian coordinates and adds
 * optional `offset`. See {@link polar} for reverse operation. If `out` is
 * null, modifies `v` in place.
 *
 * @param out -
 * @param v -
 * @param offset -
 */

exports.cartesian = cartesian;
const cartesian2 = cartesian.add(2, (out, a, b = _api.ZERO2) => (0, _maddn.maddN2)(out || a, (0, _math.cossin)(a[1]), a[0], b));
/**
 * Converts 3D polar vector `v` to cartesian coordinates and adds
 * optional `offset`. See {@link polar} for reverse operation. If `out` is
 * null, modifies `v` in place.
 *
 * @param out -
 * @param v -
 * @param offset -
 */

exports.cartesian2 = cartesian2;
const cartesian3 = cartesian.add(3, (out, a, b = _api.ZERO3) => {
  const r = a[0];
  const theta = a[1];
  const phi = a[2];
  const ct = cos(theta);
  return (0, _setc.setC3)(out || a, r * ct * cos(phi) + b[0], r * ct * sin(phi) + b[1], r * sin(theta) + b[2]);
});
exports.cartesian3 = cartesian3;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","./api":"../node_modules/@thi.ng/vectors/api.js","./internal/vop":"../node_modules/@thi.ng/vectors/internal/vop.js","./maddn":"../node_modules/@thi.ng/vectors/maddn.js","./setc":"../node_modules/@thi.ng/vectors/setc.js"}],"../node_modules/@thi.ng/vectors/ceil.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ceil4 = exports.ceil3 = exports.ceil2 = exports.ceil = void 0;

var _codegen = require("./internal/codegen");

const [ceil, ceil2, ceil3, ceil4] = (0, _codegen.defFnOp)("Math.ceil");
exports.ceil4 = ceil4;
exports.ceil3 = ceil3;
exports.ceil2 = ceil2;
exports.ceil = ceil;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/clamp.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.clamp11_4 = exports.clamp11_3 = exports.clamp11_2 = exports.clamp11 = exports.clamp01_4 = exports.clamp01_3 = exports.clamp01_2 = exports.clamp01 = exports.clamp4 = exports.clamp3 = exports.clamp2 = exports.clamp = void 0;

var _math = require("@thi.ng/math");

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [clamp, clamp2, clamp3, clamp4] = (0, _codegen.defHofOp)(_math.clamp, (0, _templates.FN3)(), _codegen.ARGS_VVV);
exports.clamp4 = clamp4;
exports.clamp3 = clamp3;
exports.clamp2 = clamp2;
exports.clamp = clamp;
const [clamp01, clamp01_2, clamp01_3, clamp01_4] = (0, _codegen.defHofOp)(_math.clamp01, (0, _templates.FN3)(), _codegen.ARGS_VVV);
exports.clamp01_4 = clamp01_4;
exports.clamp01_3 = clamp01_3;
exports.clamp01_2 = clamp01_2;
exports.clamp01 = clamp01;
const [clamp11, clamp11_2, clamp11_3, clamp11_4] = (0, _codegen.defHofOp)(_math.clamp11, (0, _templates.FN3)(), _codegen.ARGS_VVV);
exports.clamp11_4 = clamp11_4;
exports.clamp11_3 = clamp11_3;
exports.clamp11_2 = clamp11_2;
exports.clamp11 = clamp11;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/clampn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.clampN4 = exports.clampN3 = exports.clampN2 = exports.clampN = void 0;

var _math = require("@thi.ng/math");

var _codegen = require("./internal/codegen");

const [clampN, clampN2, clampN3, clampN4] = (0, _codegen.defHofOp)(_math.clamp, ([o, a]) => `${o}=op(${a},n,m);`, "o,a,n,m", "o,a");
exports.clampN4 = clampN4;
exports.clampN3 = clampN3;
exports.clampN2 = clampN2;
exports.clampN = clampN;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/signed-area.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.signedAreaC2 = exports.signedArea2 = void 0;

/**
 * Returns area * 2 of the 2D triangle defined by the input vectors.
 * This is a useful classifier for many geometry processing tasks. In
 * addition to the triangle area, the result can also be interpreted as
 * follows:
 *
 * - `> 0`: points are ordered counterclockwise
 * - `< 0`: points are ordered clockwise
 * - `0`: points are co-linear
 *
 * Same as: `cross2(sub2([], b, a), sub2([], c, a))`
 *
 * - {@link corner2}
 * - {@link clockwise2}
 * - {@link cross2}
 *
 * @param a -
 * @param b -
 * @param c -
 */
const signedArea2 = (a, b, c) => {
  const ax = a[0];
  const ay = a[1];
  return (b[0] - ax) * (c[1] - ay) - (c[0] - ax) * (b[1] - ay);
};
/**
 * Same as {@link signedArea2}, but expects individual vector component args,
 * instead of vectors.
 *
 * @param ax -
 * @param ay -
 * @param bx -
 * @param by -
 * @param cx -
 * @param cy -
 */


exports.signedArea2 = signedArea2;

const signedAreaC2 = (ax, ay, bx, by, cx, cy) => (bx - ax) * (cy - ay) - (cx - ax) * (by - ay);

exports.signedAreaC2 = signedAreaC2;
},{}],"../node_modules/@thi.ng/vectors/clockwise.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.clockwise2 = exports.corner2 = void 0;

var _math = require("@thi.ng/math");

var _signedArea = require("./signed-area");

/**
 * Syntax sugar for `sign(signedArea2(a, b, c))`.
 *
 * - {@link @thi.ng/math#sign}
 * - {@link signedArea2}
 *
 * @param a -
 * @param b -
 * @param c -
 * @param eps - zero tolerance for sign computation
 */
const corner2 = (a, b, c, eps = _math.EPS) => (0, _math.sign)((0, _signedArea.signedArea2)(a, b, c), eps);
/**
 * Returns true, if the triangle `a`, `b`, `c` is in clockwise order,
 * i.e. if `corner2(a,b,c)` returned -1.
 *
 * @param a -
 * @param b -
 * @param c -
 * @param eps -
 */


exports.corner2 = corner2;

const clockwise2 = (a, b, c, eps = _math.EPS) => corner2(a, b, c, eps) < 0;

exports.clockwise2 = clockwise2;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","./signed-area":"../node_modules/@thi.ng/vectors/signed-area.js"}],"../node_modules/@thi.ng/vectors/compare.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.comparator4 = exports.comparator3 = exports.comparator2 = void 0;

/**
 * Returns a new 2D vector comparator using given component order. The
 * comparator returns the signed index+1 of the first differing
 * component, e.g. if order is `0,1`, a return value of -2 means that
 * `a.y < b.y`.
 *
 * @param o1 -
 * @param o2 -
 */
const comparator2 = (o1, o2) => (a, b) => {
  const ax = a[o1];
  const ay = a[o2];
  const bx = b[o1];
  const by = b[o2];
  return ax === bx ? ay === by ? 0 : ay < by ? -2 : 2 : ax < bx ? -1 : 1;
};
/**
 * Returns a new 3D vector comparator using given component order. The
 * comparator returns the signed index+1 of the first differing
 * component, e.g. if order is `0,1,2`, a return value of -3 means that
 * `a.z < b.z`.
 *
 * @param o1 -
 * @param o2 -
 * @param o3 -
 */


exports.comparator2 = comparator2;

const comparator3 = (o1, o2, o3) => (a, b) => {
  const ax = a[o1];
  const ay = a[o2];
  const az = a[o3];
  const bx = b[o1];
  const by = b[o2];
  const bz = b[o3];
  return ax === bx ? ay === by ? az === bz ? 0 : az < bz ? -3 : 3 : ay < by ? -2 : 2 : ax < bx ? -1 : 1;
};
/**
 * Returns a new 4D vector comparator using given component order. The
 * comparator returns the signed index+1 of the first differing
 * component, e.g. if order is `0,1,2,3`, a return value of -4 means
 * that `a.w < b.w`.
 *
 * @param o1 -
 * @param o2 -
 * @param o3 -
 * @param o4 -
 */


exports.comparator3 = comparator3;

const comparator4 = (o1, o2, o3, o4) => (a, b) => {
  const ax = a[o1];
  const ay = a[o2];
  const az = a[o3];
  const aw = b[o4];
  const bx = b[o1];
  const by = b[o2];
  const bz = b[o3];
  const bw = b[o4];
  return ax === bx ? ay === by ? az === bz ? aw === bw ? 0 : aw < bw ? -4 : 4 : az < bz ? -3 : 3 : ay < by ? -2 : 2 : ax < bx ? -1 : 1;
};

exports.comparator4 = comparator4;
},{}],"../node_modules/@thi.ng/vectors/convert.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fromBVec4 = exports.fromBVec3 = exports.fromBVec2 = exports.fromBVec = exports.asBVec4 = exports.asBVec3 = exports.asBVec2 = exports.asBVec = exports.asUVec4 = exports.asUVec3 = exports.asUVec2 = exports.asUVec = exports.asIVec4 = exports.asIVec3 = exports.asIVec2 = exports.asIVec = void 0;

var _codegen = require("./internal/codegen");

const $ = (tpl, pre = _codegen.NEW_OUT) => (0, _codegen.defOp)(tpl, _codegen.ARGS_V, _codegen.ARGS_V, "o", 1, pre);

const [asIVec, asIVec2, asIVec3, asIVec4] = $(([o, a]) => `${o}=${a}|0;`);
exports.asIVec4 = asIVec4;
exports.asIVec3 = asIVec3;
exports.asIVec2 = asIVec2;
exports.asIVec = asIVec;
const [asUVec, asUVec2, asUVec3, asUVec4] = $(([o, a]) => `${o}=${a}>>>0;`);
exports.asUVec4 = asUVec4;
exports.asUVec3 = asUVec3;
exports.asUVec2 = asUVec2;
exports.asUVec = asUVec;
const [asBVec, asBVec2, asBVec3, asBVec4] = $(([o, a]) => `${o}=!!${a};`);
exports.asBVec4 = asBVec4;
exports.asBVec3 = asBVec3;
exports.asBVec2 = asBVec2;
exports.asBVec = asBVec;
const [fromBVec, fromBVec2, fromBVec3, fromBVec4] = $(([o, a]) => `${o}=~~${a};`);
exports.fromBVec4 = fromBVec4;
exports.fromBVec3 = fromBVec3;
exports.fromBVec2 = fromBVec2;
exports.fromBVec = fromBVec;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/copy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.copyVectors = exports.copy = void 0;

var _checks = require("@thi.ng/checks");

var _set = require("./set");

const copy = v => (0, _checks.implementsFunction)(v, "copy") ? v.copy() : (0, _set.set)([], v);

exports.copy = copy;

const copyVectors = pts => pts.map(copy);

exports.copyVectors = copyVectors;
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","./set":"../node_modules/@thi.ng/vectors/set.js"}],"../node_modules/@thi.ng/vectors/cos.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cos4 = exports.cos3 = exports.cos2 = exports.cos = void 0;

var _codegen = require("./internal/codegen");

const [cos, cos2, cos3, cos4] = (0, _codegen.defFnOp)("Math.cos");
exports.cos4 = cos4;
exports.cos3 = cos3;
exports.cos2 = cos2;
exports.cos = cos;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/cosh.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cosh4 = exports.cosh3 = exports.cosh2 = exports.cosh = void 0;

var _codegen = require("./internal/codegen");

const [cosh, cosh2, cosh3, cosh4] = (0, _codegen.defFnOp)("Math.cosh");
exports.cosh4 = cosh4;
exports.cosh3 = cosh3;
exports.cosh2 = cosh2;
exports.cosh = cosh;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/setcs.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setCS4 = exports.setCS3 = exports.setCS2 = void 0;

const setCS2 = (out, x, y, io = 0, so = 1) => (!out && (out = []), out[io] = x, out[io + so] = y, out);

exports.setCS2 = setCS2;

const setCS3 = (out, x, y, z, io = 0, so = 1) => (!out && (out = []), out[io] = x, out[io + so] = y, out[io + 2 * so] = z, out);

exports.setCS3 = setCS3;

const setCS4 = (out, x, y, z, w, io = 0, so = 1) => (!out && (out = []), out[io] = x, out[io + so] = y, out[io + 2 * so] = z, out[io + 3 * so] = w, out);

exports.setCS4 = setCS4;
},{}],"../node_modules/@thi.ng/vectors/crosss.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.crossS3 = exports.crossS2 = void 0;

var _setcs = require("./setcs");

const crossS2 = (a, b, ia = 0, ib = 0, sa = 1, sb = 1) => a[ia] * b[ib + sb] - a[ia + sa] * b[ib];

exports.crossS2 = crossS2;

const crossS3 = (out, a, b, io = 0, ia = 0, ib = 0, so = 1, sa = 1, sb = 1) => (0, _setcs.setCS3)(out || a, a[ia + sa] * b[ib + 2 * sb] - a[ia + 2 * sa] * b[ib + sb], a[ia + 2 * sa] * b[ib] - a[ia] * b[ib + 2 * sb], a[ia] * b[ib + sb] - a[ia + sa] * b[ib], io, so);

exports.crossS3 = crossS3;
},{"./setcs":"../node_modules/@thi.ng/vectors/setcs.js"}],"../node_modules/@thi.ng/vectors/degrees.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.degrees4 = exports.degrees3 = exports.degrees2 = exports.degrees = void 0;

var _math = require("@thi.ng/math");

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [degrees, degrees2, degrees3, degrees4] = (0, _codegen.defHofOp)(_math.deg, (0, _templates.FN)("op"));
exports.degrees4 = degrees4;
exports.degrees3 = degrees3;
exports.degrees2 = degrees2;
exports.degrees = degrees;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/distsq.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.distSq4 = exports.distSq3 = exports.distSq2 = exports.distSq = void 0;

var _codegen = require("./internal/codegen");

var _vop = require("./internal/vop");

const tpl = ([a, b]) => `t=${a}-${b};s+=t*t;`;

const pre = "let t,s=0;";

const $ = dim => distSq.add(dim, (0, _codegen.compile)(dim, tpl, "a,b", undefined, "s", "", pre));

const distSq = (0, _vop.vop)();
exports.distSq = distSq;
distSq.default((0, _codegen.compileG)(tpl, "a,b", undefined, "s", pre));
const distSq2 = $(2);
exports.distSq2 = distSq2;
const distSq3 = $(3);
exports.distSq3 = distSq3;
const distSq4 = $(4);
exports.distSq4 = distSq4;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/vop":"../node_modules/@thi.ng/vectors/internal/vop.js"}],"../node_modules/@thi.ng/vectors/dist.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dist = void 0;

var _distsq = require("./distsq");

const dist = (a, b) => Math.sqrt((0, _distsq.distSq)(a, b));

exports.dist = dist;
},{"./distsq":"../node_modules/@thi.ng/vectors/distsq.js"}],"../node_modules/@thi.ng/vectors/dist-chebyshev.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.distChebyshev4 = exports.distChebyshev3 = exports.distChebyshev2 = exports.distChebyshev = void 0;

var _codegen = require("./internal/codegen");

var _vop = require("./internal/vop");

const $ = dim => distChebyshev.add(dim, (0, _codegen.compile)(dim, ([a, b]) => `Math.abs(${a}-${b})`, "a,b", undefined, "", ",", "return Math.max(", ");"));

const distChebyshev = (0, _vop.vop)();
exports.distChebyshev = distChebyshev;
distChebyshev.default((a, b) => {
  let max = 0;

  for (let i = a.length; --i >= 0;) {
    max = Math.max(max, Math.abs(a[i] - b[i]));
  }

  return max;
});
const distChebyshev2 = $(2);
exports.distChebyshev2 = distChebyshev2;
const distChebyshev3 = $(3);
exports.distChebyshev3 = distChebyshev3;
const distChebyshev4 = $(4);
exports.distChebyshev4 = distChebyshev4;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/vop":"../node_modules/@thi.ng/vectors/internal/vop.js"}],"../node_modules/@thi.ng/vectors/dist-manhattan.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.distManhattan4 = exports.distManhattan3 = exports.distManhattan2 = exports.distManhattan = void 0;

var _codegen = require("./internal/codegen");

var _vop = require("./internal/vop");

const $ = dim => distManhattan.add(dim, (0, _codegen.compile)(dim, ([a, b]) => `Math.abs(${a}-${b})`, "a,b", undefined, "", "+", "return ", ";"));

const distManhattan = (0, _vop.vop)();
exports.distManhattan = distManhattan;
distManhattan.default((0, _codegen.compileG)(([a, b]) => `sum+=Math.abs(${a}-${b});`, "a,b", undefined, "sum", "let sum=0;"));
const distManhattan2 = $(2);
exports.distManhattan2 = distManhattan2;
const distManhattan3 = $(3);
exports.distManhattan3 = distManhattan3;
const distManhattan4 = $(4);
exports.distManhattan4 = distManhattan4;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/vop":"../node_modules/@thi.ng/vectors/internal/vop.js"}],"../node_modules/@thi.ng/vectors/div.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.div4 = exports.div3 = exports.div2 = exports.div = void 0;

var _codegen = require("./internal/codegen");

const [div, div2, div3, div4] = (0, _codegen.defMathOp)("/");
exports.div4 = div4;
exports.div3 = div3;
exports.div2 = div2;
exports.div = div;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/divi.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.divNU4 = exports.divNU3 = exports.divNU2 = exports.divNU = exports.divNI4 = exports.divNI3 = exports.divNI2 = exports.divNI = exports.divU4 = exports.divU3 = exports.divU2 = exports.divU = exports.divI4 = exports.divI3 = exports.divI2 = exports.divI = void 0;

var _codegen = require("./internal/codegen");

const [divI, divI2, divI3, divI4] = (0, _codegen.defBitOp)("/", true);
exports.divI4 = divI4;
exports.divI3 = divI3;
exports.divI2 = divI2;
exports.divI = divI;
const [divU, divU2, divU3, divU4] = (0, _codegen.defBitOp)("/");
exports.divU4 = divU4;
exports.divU3 = divU3;
exports.divU2 = divU2;
exports.divU = divU;
const [divNI, divNI2, divNI3, divNI4] = (0, _codegen.defBitOpN)("/", true);
exports.divNI4 = divNI4;
exports.divNI3 = divNI3;
exports.divNI2 = divNI2;
exports.divNI = divNI;
const [divNU, divNU2, divNU3, divNU4] = (0, _codegen.defBitOpN)("/");
exports.divNU4 = divNU4;
exports.divNU3 = divNU3;
exports.divNU2 = divNU2;
exports.divNU = divNU;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/divn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.divN4 = exports.divN3 = exports.divN2 = exports.divN = void 0;

var _codegen = require("./internal/codegen");

const [divN, divN2, divN3, divN4] = (0, _codegen.defMathOpN)("/");
exports.divN4 = divN4;
exports.divN3 = divN3;
exports.divN2 = divN2;
exports.divN = divN;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/divs.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.divS4 = exports.divS3 = exports.divS2 = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [divS2, divS3, divS4] = (0, _codegen.defOpS)((0, _templates.MATH)("/"));
exports.divS4 = divS4;
exports.divS3 = divS3;
exports.divS2 = divS2;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/divns.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.divNS4 = exports.divNS3 = exports.divNS2 = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [divNS2, divNS3, divNS4] = (0, _codegen.defOpS)((0, _templates.MATH_N)("/"), `${_codegen.ARGS_VN},${_codegen.SARGS_V}`, _codegen.ARGS_V);
exports.divNS4 = divNS4;
exports.divNS3 = divNS3;
exports.divNS2 = divNS2;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/dotc.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dotC8 = exports.dotC6 = exports.dotC4 = void 0;

/**
 * Returns pairwise product sum of given components.
 *
 * @param a -
 * @param b -
 * @param c -
 * @param d -
 */
const dotC4 = (a, b, c, d) => a * b + c * d;
/**
 * Returns pairwise product sum of given components.
 *
 * @param a -
 * @param b -
 * @param c -
 * @param d -
 * @param e -
 * @param f -
 */


exports.dotC4 = dotC4;

const dotC6 = (a, b, c, d, e, f) => a * b + c * d + e * f;
/**
 * Returns pairwise product sum of given components.
 *
 * @param a -
 * @param b -
 * @param c -
 * @param d -
 * @param e -
 * @param f -
 * @param g -
 * @param h -
 */


exports.dotC6 = dotC6;

const dotC8 = (a, b, c, d, e, f, g, h) => a * b + c * d + e * f + g * h;

exports.dotC8 = dotC8;
},{}],"../node_modules/@thi.ng/vectors/dots.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dotS4 = exports.dotS3 = exports.dotS2 = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const $ = dim => (0, _codegen.compile)(dim, _templates.DOT, `o,a,${_codegen.SARGS_V}`, "o,a", "", "+", "return ", ";", true);

const dotS2 = $(2);
exports.dotS2 = dotS2;
const dotS3 = $(3);
exports.dotS3 = dotS3;
const dotS4 = $(4);
exports.dotS4 = dotS4;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/setn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ones = exports.zeroes = exports.one = exports.zero = exports.setN4 = exports.setN3 = exports.setN2 = exports.setN = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [setN, setN2, setN3, setN4] = (0, _codegen.defOp)(_templates.SET_N, "a,n", "a", "a", 0, "");
exports.setN4 = setN4;
exports.setN3 = setN3;
exports.setN2 = setN2;
exports.setN = setN;

const zero = a => setN(a, 0);

exports.zero = zero;

const one = a => setN(a, 1);

exports.one = one;

const zeroes = n => new Array(n).fill(0);

exports.zeroes = zeroes;

const ones = n => new Array(n).fill(1);

exports.ones = ones;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/empty.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.empty = void 0;

var _checks = require("@thi.ng/checks");

var _setn = require("./setn");

const empty = v => (0, _checks.implementsFunction)(v, "empty") ? v.empty() : (0, _setn.zeroes)(v.length);

exports.empty = empty;
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","./setn":"../node_modules/@thi.ng/vectors/setn.js"}],"../node_modules/@thi.ng/vectors/equals.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.equals4 = exports.equals3 = exports.equals2 = exports.equals = void 0;

var _equiv = require("@thi.ng/equiv");

var _vop = require("./internal/vop");

const equals = (0, _vop.vop)(0);
exports.equals = equals;
const equals2 = equals.add(2, (a, b) => a[0] === b[0] && a[1] === b[1]);
exports.equals2 = equals2;
const equals3 = equals.add(3, (a, b) => a[0] === b[0] && a[1] === b[1] && a[2] === b[2]);
exports.equals3 = equals3;
const equals4 = equals.add(4, (a, b) => a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3]);
exports.equals4 = equals4;
equals.default(_equiv.equivArrayLike);
},{"@thi.ng/equiv":"../node_modules/@thi.ng/equiv/index.js","./internal/vop":"../node_modules/@thi.ng/vectors/internal/vop.js"}],"../node_modules/@thi.ng/vectors/every.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.every4 = exports.every3 = exports.every2 = exports.every = void 0;

var _vop = require("./internal/vop");

/**
 * Returns returns true if all vector components in `v` are truthy.
 *
 * @param v -
 */
const every = (0, _vop.vop)();
exports.every = every;
every.default(v => {
  for (let i = v.length; --i >= 0;) {
    if (!v[i]) return false;
  }

  return true;
});
const every2 = every.add(2, a => a[0] && a[1]);
exports.every2 = every2;
const every3 = every.add(3, a => a[0] && a[1] && a[2]);
exports.every3 = every3;
const every4 = every.add(4, a => a[0] && a[1] && a[2] && a[3]);
exports.every4 = every4;
},{"./internal/vop":"../node_modules/@thi.ng/vectors/internal/vop.js"}],"../node_modules/@thi.ng/vectors/exp.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.exp4 = exports.exp3 = exports.exp2 = exports.exp = void 0;

var _codegen = require("./internal/codegen");

const [exp, exp2, exp3, exp4] = (0, _codegen.defFnOp)("Math.exp");
exports.exp4 = exp4;
exports.exp3 = exp3;
exports.exp2 = exp2;
exports.exp = exp;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/exp_2.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.exp_24 = exports.exp_23 = exports.exp_22 = exports.exp_2 = void 0;

var _codegen = require("./internal/codegen");

/**
 * Componentwise 2^x
 */
const [exp_2, exp_22, exp_23, exp_24] = (0, _codegen.defOp)(([o, a]) => `${o}=Math.pow(2,${a});`, _codegen.ARGS_V);
exports.exp_24 = exp_24;
exports.exp_23 = exp_23;
exports.exp_22 = exp_22;
exports.exp_2 = exp_2;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/face-forward.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.faceForward = void 0;

var _dot = require("./dot");

var _muln = require("./muln");

var _set = require("./set");

const faceForward = (out, n, i, nref) => {
  !out && (out = n);
  return (0, _dot.dot)(nref, i) < 0 ? out !== n ? (0, _set.set)(out, n) : out : (0, _muln.mulN)(out, n, -1);
};

exports.faceForward = faceForward;
},{"./dot":"../node_modules/@thi.ng/vectors/dot.js","./muln":"../node_modules/@thi.ng/vectors/muln.js","./set":"../node_modules/@thi.ng/vectors/set.js"}],"../node_modules/@thi.ng/vectors/map.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mapVVN = exports.mapVVV = exports.mapVN = exports.mapV = exports.mapVV = void 0;

/**
 * Vec2/3/4 view based buffer transformation for {@link VecOpVV} type
 * ops and supporting arbitrary component and element layouts of all
 * input and output buffers.
 *
 * @remarks
 * The given pre-initialized vectors MUST be separate instances, are
 * used as sliding cursors / views of their respective backing buffers
 * and will be modified as part of the transformation process (though
 * the input buffers themselves are treated as immutable, unless `out`
 * is configured to use one of the input buffers).
 *
 * In each iteration `op` is called via `op(out, a, b)`, followed by
 * cursor updates to process the next vector view. No bounds checking is
 * performed.
 *
 * This function returns `out`'s backing buffer.
 *
 * @example
 * ```ts
 * // each input buffer contains 2 2D vectors, but using
 * // different strided data layouts
 * mapVV(
 *   // transformation function
 *   add,
 *   // init output buffer view
 *   new Vec2(),
 *   // wrap 1st input buffer & configure offset & component stride
 *   new Vec2([1,0,2,0,0,0,0,0,3,0,4,0,0,0,0,0], 0, 2),
 *   // wrap 2nd input buffer
 *   new Vec2([0,10,0,0,20,0,0,30,0,0,40], 1, 3),
 *   2, // num vectors
 *   2, // output element stride
 *   8, // input #1 element stride
 *   6  // input #2 element stride
 * );
 * // [ 11, 22, 33, 44 ]
 * ```
 *
 * Alternatively, `Vec2/3/4.iterator()` combined with transducers can be
 * used to achieve the same (and more flexible) transformations, but
 * will incur more intermediate object allocations. `mapV*()` functions
 * only use (and mutate) the provided vector instances and do not
 * allocate any further objects.
 *
 * ```ts
 * // output buffer
 * const out = new Array(4);
 *
 * tx.run(
 *   tx.map(([o, a, b]) => add(o, a, b)),
 *   tx.zip(
 *      Vec2.iterator(out, 2),
 *      Vec2.iterator([1,0,2,0,0,0,0,0,3,0,4,0,0,0,0,0], 2, 0, 2, 8),
 *      Vec2.iterator([0,10,0,0,20,0,0,30,0,0,40], 2, 1, 3, 6),
 *   )
 * );
 *
 * out
 * // [ 11, 22, 33, 44 ]
 * ```
 *
 * @param op -
 * @param out -
 * @param a -
 * @param b -
 * @param num -
 * @param so -
 * @param sa -
 * @param sb -
 */
const mapVV = (op, out, a, b, num, so = out.length * out.stride, sa = a.length * a.stride, sb = b.length * b.stride) => {
  while (num-- > 0) {
    op(out, a, b);
    out.offset += so;
    a.offset += sa;
    b.offset += sb;
  }

  return out.buf;
};
/**
 * Like {@link mapVV}, but for {@link VecOpV} type ops and hence only using
 * single input.
 *
 * @example
 * ```ts
 * // 4x 2D vectors in SOA layout
 * // i.e. [x1, x2, x3, x4, y1, y2, y3, y4]
 * buf = [1, 3, 5, 7, 2, 4, 6, 8];
 *
 * // use `swapXY` to swizzle each vector and use AOS for output
 * res = mapV(swapXY, new Vec2(), new Vec2(buf, 0, 4), 4, 2, 1);
 * // [ 2, 1, 4, 3, 6, 5, 8, 7 ]
 *
 * // unpack result for demonstration purposes
 * [...Vec2.iterator(res, 4)].map(v => [...v]);
 * // [ [ 2, 1 ], [ 4, 3 ], [ 6, 5 ], [ 8, 7 ] ]
 * ```
 *
 * @param op -
 * @param out -
 * @param a -
 * @param num -
 * @param so -
 * @param sa -
 */


exports.mapVV = mapVV;

const mapV = (op, out, a, num, so = out.length * out.stride, sa = a.length * a.stride) => {
  while (num-- > 0) {
    op(out, a);
    out.offset += so;
    a.offset += sa;
  }

  return out.buf;
};
/**
 * Like {@link mapVV}, but for {@link VecOpVN} type ops and hence using
 * a single vector input buffer `a` and a scalar `n`.
 *
 * @param op -
 * @param out -
 * @param a -
 * @param n -
 * @param num -
 * @param so -
 * @param sa -
 */


exports.mapV = mapV;

const mapVN = (op, out, a, n, num, so = out.length * out.stride, sa = a.length * a.stride) => {
  while (num-- > 0) {
    op(out, a, n);
    out.offset += so;
    a.offset += sa;
  }

  return out.buf;
};
/**
 * Like {@link mapVV}, but for {@link VecOpVVV} type ops and hence using
 * three vector input buffers `a`, `b`, `c`.
 *
 * @param op -
 * @param out -
 * @param a -
 * @param b -
 * @param c -
 * @param num -
 * @param so -
 * @param sa -
 * @param sb -
 * @param sc -
 */


exports.mapVN = mapVN;

const mapVVV = (op, out, a, b, c, num, so = out.length * out.stride, sa = a.length * a.stride, sb = b.length * b.stride, sc = c.length * c.stride) => {
  while (num-- > 0) {
    op(out, a, b, c);
    out.offset += so;
    a.offset += sa;
    b.offset += sb;
    c.offset += sc;
  }

  return out.buf;
};
/**
 * Like {@link mapVV}, but for {@link VecOpVVN} type ops and hence using
 * two vector input buffers `a`, `b` and a scalar `n`.
 *
 * @param op -
 * @param out -
 * @param a -
 * @param b -
 * @param n -
 * @param num -
 * @param so -
 * @param sa -
 * @param sb -
 */


exports.mapVVV = mapVVV;

const mapVVN = (op, out, a, b, n, num, so = out.length * out.stride, sa = a.length * a.stride, sb = b.length * b.stride) => {
  while (num-- > 0) {
    op(out, a, b, n);
    out.offset += so;
    a.offset += sa;
    b.offset += sb;
  }

  return out.buf;
};

exports.mapVVN = mapVVN;
},{}],"../node_modules/@thi.ng/vectors/fill.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fill = void 0;

var _map = require("./map");

var _set = require("./set");

/**
 * Fills Vec2/3/4 view based buffer, supporting arbitrary component and
 * element layouts of both the input and output buffers. The `out`
 * vector is used as write cursor over the underlying buffer and will be
 * filled with the components of vector `v`.
 *
 * @example
 * ```ts
 * fill(
 *   new Vec2(new Float32Array(12)),
 *   new Vec2([1, 2]),
 *   3, // num elements
 *   4  // stride
 * )
 * // Float32Array [1, 2, 0, 0, 1, 2, 0, 0, 1, 2, 0, 0]
 * ```
 *
 * @param out - target vector / wrapped buffer
 * @param v - fill vector
 * @param num - number of elements to fill
 * @param so - output stride
 */
const fill = (out, v, num, so = out.length * out.stride) => (0, _map.mapV)(_set.set.impl(v.length), out, v, num, so, 0);

exports.fill = fill;
},{"./map":"../node_modules/@thi.ng/vectors/map.js","./set":"../node_modules/@thi.ng/vectors/set.js"}],"../node_modules/@thi.ng/vectors/fit.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fit11_4 = exports.fit11_3 = exports.fit11_2 = exports.fit11 = exports.fit01_4 = exports.fit01_3 = exports.fit01_2 = exports.fit01 = exports.fit4 = exports.fit3 = exports.fit2 = exports.fit = void 0;

var _math = require("@thi.ng/math");

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [fit, fit2, fit3, fit4] = (0, _codegen.defHofOp)(_math.fit, (0, _templates.FN5)(), "o,a,b,c,d,e");
exports.fit4 = fit4;
exports.fit3 = fit3;
exports.fit2 = fit2;
exports.fit = fit;
const [fit01, fit01_2, fit01_3, fit01_4] = (0, _codegen.defHofOp)(_math.fit01, (0, _templates.FN3)(), _codegen.ARGS_VVV);
exports.fit01_4 = fit01_4;
exports.fit01_3 = fit01_3;
exports.fit01_2 = fit01_2;
exports.fit01 = fit01;
const [fit11, fit11_2, fit11_3, fit11_4] = (0, _codegen.defHofOp)(_math.fit11, (0, _templates.FN3)(), _codegen.ARGS_VVV);
exports.fit11_4 = fit11_4;
exports.fit11_3 = fit11_3;
exports.fit11_2 = fit11_2;
exports.fit11 = fit11;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/floor.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.floor4 = exports.floor3 = exports.floor2 = exports.floor = void 0;

var _codegen = require("./internal/codegen");

const [floor, floor2, floor3, floor4] = (0, _codegen.defFnOp)("Math.floor");
exports.floor4 = floor4;
exports.floor3 = floor3;
exports.floor2 = floor2;
exports.floor = floor;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/fmod.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fmod4 = exports.fmod3 = exports.fmod2 = exports.fmod = void 0;

var _math = require("@thi.ng/math");

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

/**
 * This version of mod uses the same logic as in GLSL, whereas {@link mod}
 * merely uses JavaScript's `%` modulo operator, yielding different
 * results for negative values, i.e. using the sign of the last arg.
 *
 * `a - b * floor(a/b)`
 *
 */
const [fmod, fmod2, fmod3, fmod4] = (0, _codegen.defHofOp)(_math.fmod, (0, _templates.FN2)("op"), _codegen.ARGS_VV);
exports.fmod4 = fmod4;
exports.fmod3 = fmod3;
exports.fmod2 = fmod2;
exports.fmod = fmod;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/fmodn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fmodN4 = exports.fmodN3 = exports.fmodN2 = exports.fmodN = void 0;

var _math = require("@thi.ng/math");

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

/**
 * Same as {@link fmod}, but 2nd operand is a single scalar (uniform domain
 * for all vector components).
 */
const [fmodN, fmodN2, fmodN3, fmodN4] = (0, _codegen.defHofOp)(_math.fmod, (0, _templates.FN_N)("op"), _codegen.ARGS_VN, _codegen.ARGS_V);
exports.fmodN4 = fmodN4;
exports.fmodN3 = fmodN3;
exports.fmodN2 = fmodN2;
exports.fmodN = fmodN;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/fract.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fract4 = exports.fract3 = exports.fract2 = exports.fract = void 0;

var _math = require("@thi.ng/math");

var _codegen = require("./internal/codegen");

const [fract, fract2, fract3, fract4] = (0, _codegen.defHofOp)(_math.fract);
exports.fract4 = fract4;
exports.fract3 = fract3;
exports.fract2 = fract2;
exports.fract = fract;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/memoize/api.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/memoize/defonce.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defonce = void 0;
const cache = {};
/**
 * Lightweight named singleton factory, intended for hot-module
 * replacement situations. Takes a (preferably globally unique) `id` and
 * `factory` function. If there's no value defined for `id` yet, calls
 * `factory` to produce the singleton value and caches it. Returns
 * singleton value.
 *
 * Note: All created values will remain in the private cache until the
 * JS process terminates or this module itself has been reloaded (though
 * the latter shouldn't happen in an HMR workflow).
 *
 * @param id -
 * @param factory -
 */

const defonce = (id, factory) => cache.hasOwnProperty(id) ? cache[id] : cache[id] = factory();

exports.defonce = defonce;
},{}],"../node_modules/@thi.ng/memoize/do-once.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.doOnce = void 0;

/**
 * Similar to {@link memoize1}, however optimized for side effects only, i.e.
 * functions which DO NOT return any result.
 *
 * @param fn
 * @param cache
 */
const doOnce = (fn, cache) => {
  !cache && (cache = new Map());
  return x => {
    if (!cache.has(x)) {
      cache.set(x, true);
      fn(x);
    }
  };
};

exports.doOnce = doOnce;
},{}],"../node_modules/@thi.ng/memoize/memoize.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.memoize = memoize;

function memoize(fn, cache) {
  return (...args) => {
    let res;
    return cache.has(args) ? cache.get(args) : (cache.set(args, res = fn.apply(null, args)), res);
  };
}
},{}],"../node_modules/@thi.ng/memoize/memoize1.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.memoize1 = void 0;

/**
 * Optimized memoization for single arg functions. If the function
 * expects args other than strings or numbers, you MUST provide a `Map`
 * implementation which supports value (rather than object) equality,
 * e.g. one of those provided by
 * {@link @thi.ng/associative# | @thi.ng/associative}. Using a native
 * `Map` type here will lead to memory leaks! Alternatively, use
 * {@link (memoizeJ:1)}.
 *
 * @param fn -
 * @param cache -
 */
const memoize1 = (fn, cache) => {
  !cache && (cache = new Map());
  return x => {
    let res;
    return cache.has(x) ? cache.get(x) : (cache.set(x, res = fn(x)), res);
  };
};

exports.memoize1 = memoize1;
},{}],"../node_modules/@thi.ng/memoize/memoizej.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.memoizeJ = memoizeJ;

function memoizeJ(fn, cache) {
  !cache && (cache = {});
  return (...args) => {
    const key = JSON.stringify(args);

    if (key !== undefined) {
      return key in cache ? cache[key] : cache[key] = fn.apply(null, args);
    }

    return fn.apply(null, args);
  };
}
},{}],"../node_modules/@thi.ng/memoize/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _api = require("./api");

Object.keys(_api).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _api[key];
    }
  });
});

var _defonce = require("./defonce");

Object.keys(_defonce).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _defonce[key];
    }
  });
});

var _doOnce = require("./do-once");

Object.keys(_doOnce).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _doOnce[key];
    }
  });
});

var _memoize = require("./memoize");

Object.keys(_memoize).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _memoize[key];
    }
  });
});

var _memoize2 = require("./memoize1");

Object.keys(_memoize2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _memoize2[key];
    }
  });
});

var _memoizej = require("./memoizej");

Object.keys(_memoizej).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _memoizej[key];
    }
  });
});
},{"./api":"../node_modules/@thi.ng/memoize/api.js","./defonce":"../node_modules/@thi.ng/memoize/defonce.js","./do-once":"../node_modules/@thi.ng/memoize/do-once.js","./memoize":"../node_modules/@thi.ng/memoize/memoize.js","./memoize1":"../node_modules/@thi.ng/memoize/memoize1.js","./memoizej":"../node_modules/@thi.ng/memoize/memoizej.js"}],"../node_modules/@thi.ng/vectors/gvec.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.gvec = void 0;

var _math = require("@thi.ng/math");

var _memoize = require("@thi.ng/memoize");

var _transducers = require("@thi.ng/transducers");

var _eqdelta = require("./eqdelta");

var _vecUtils = require("./internal/vec-utils");

var _setn = require("./setn");

var _sets = require("./sets");

const SYM_B = "buf";
const SYM_L = "length";
const SYM_O = "offset";
const SYM_S = "stride";
const SYM_C = "copy";
const SYM_CV = "copyView";
const SYM_EMPTY = "empty";
const SYM_EQD = "eqDelta";
const SYM_STR = "toString";
const PROPS = new Set([SYM_B, SYM_C, SYM_CV, SYM_EMPTY, SYM_EQD, SYM_L, SYM_O, SYM_S, SYM_STR, Symbol.iterator]);
const keys = (0, _memoize.memoize1)(size => [...(0, _transducers.map)(String, (0, _transducers.range)(size)), ...PROPS]);
/**
 * Wrapper for strided, arbitrary length vectors.
 *
 * @remarks
 * Wraps given buffer in ES6 `Proxy` with custom property
 * getters/setters and implements the following interfaces:
 *
 * - `Iterable` (ES6)
 * - {@link @thi.ng/api#ICopy}
 * - {@link @thi.ng/api#IEmpty}
 * - {@link @thi.ng/api#IEqualsDelta}
 * - {@link IVector}
 * - `Object.toString()`
 *
 * Read/write access for the following properties:
 *
 * - array indices in the [0 .. `size`) interval
 * - `offset` - start index
 * - `stride` - component stride
 * - `buf` - backing buffer (readonly)
 * - `length` - vector size
 *
 * Array index access uses bounds checking against the [0 .. `size`)
 * interval, but, for performance reasons, **not** against the actual
 * wrapped buffer.
 *
 * Note: ES6 proxies are ~10x slower than standard array accesses. If
 * several computations are to be performed on such vectors it will be
 * much more efficient to first copy them to compact arrays and then
 * copy result back if needed.
 *
 * @example
 * ```
 * // 3D vector w/ stride length of 4
 * a = gvec([1,0,0,0,2,0,0,0,3,0,0,0], 3, 0, 4);
 * a[0] // 1
 * a[1] // 2
 * a[2] // 3
 *
 * a.stride
 * // 4
 *
 * [...a]
 * // [1, 2, 3]
 *
 * a.toString()
 * // "[1,2,3]"
 *
 * add([], a, a)
 * // [2, 4, 6]
 *
 * copy(a)
 * // [1, 2, 3]
 *
 * a.copyView()
 * // Proxy [ [ 1, 0, 2, 0, 3, 0 ], ... }
 *
 * eqDelta(a, [1, 2, 3])
 * // true
 * ```
 *
 * @param buf - backing buffer
 * @param size - vector size / num components
 * @param offset - start index
 * @param stride - component stride
 */

const gvec = (buf, size, offset = 0, stride = 1) => new Proxy(buf, {
  get(obj, id) {
    switch (id) {
      case Symbol.iterator:
        return () => (0, _vecUtils.stridedValues)(obj, size, offset, stride);

      case SYM_L:
        return size;

      case SYM_B:
        return buf;

      case SYM_O:
        return offset;

      case SYM_S:
        return stride;

      case SYM_C:
        return () => (0, _sets.setS)([], obj, size, 0, offset, 1, stride);

      case SYM_CV:
        return () => gvec(obj, size, offset, stride);

      case SYM_EMPTY:
        return () => (0, _setn.zeroes)(size);

      case SYM_EQD:
        return (o, eps = _math.EPS) => (0, _eqdelta.eqDeltaS)(buf, o, size, eps, offset, 0, stride, 1);

      case SYM_STR:
        return () => JSON.stringify([...(0, _vecUtils.stridedValues)(obj, size, offset, stride)]);

      default:
        const j = parseInt(id);
        return !isNaN(j) && j >= 0 && j < size ? obj[offset + j * stride] : undefined;
    }
  },

  set(obj, id, value) {
    const j = parseInt(id);

    if (!isNaN(j) && j >= 0 && j < size) {
      obj[offset + (id | 0) * stride] = value;
    } else {
      switch (id) {
        case SYM_O:
          offset = value;
          break;

        case SYM_S:
          stride = value;
          break;

        case SYM_L:
          size = value;
          break;

        default:
          return false;
      }
    }

    return true;
  },

  has(_, id) {
    return id >= 0 && id < size || PROPS.has(id);
  },

  ownKeys() {
    return keys(size);
  }

});

exports.gvec = gvec;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/memoize":"../node_modules/@thi.ng/memoize/index.js","@thi.ng/transducers":"../node_modules/@thi.ng/transducers/index.js","./eqdelta":"../node_modules/@thi.ng/vectors/eqdelta.js","./internal/vec-utils":"../node_modules/@thi.ng/vectors/internal/vec-utils.js","./setn":"../node_modules/@thi.ng/vectors/setn.js","./sets":"../node_modules/@thi.ng/vectors/sets.js"}],"../node_modules/@thi.ng/vectors/heading-segment.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.headingSegment = exports.headingSegmentYZ = exports.headingSegmentXZ = exports.headingSegmentXY = void 0;

var _math = require("@thi.ng/math");

const $ = (u, v) => (a, b) => (0, _math.atan2Abs)(b[u] - a[u], b[v] - a[v]);
/**
 * Computes direction angle (in radians) of line segment `a` -> `b` in
 * XY plane.
 *
 * @param a -
 * @param b -
 */


const headingSegmentXY = $(1, 0);
/**
 * Computes direction angle (in radians) of line segment `a` -> `b` in
 * XZ plane.
 *
 * @param a -
 * @param b -
 */

exports.headingSegmentXY = headingSegmentXY;
const headingSegmentXZ = $(2, 0);
/**
 * Computes direction angle (in radians) of line segment `a` -> `b` in
 * ZY plane.
 *
 * @param a -
 * @param b -
 */

exports.headingSegmentXZ = headingSegmentXZ;
const headingSegmentYZ = $(2, 1);
/**
 * Same as {@link headingSegmentXY}.
 */

exports.headingSegmentYZ = headingSegmentYZ;
const headingSegment = headingSegmentXY;
exports.headingSegment = headingSegment;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js"}],"../node_modules/@thi.ng/vectors/homogeneous.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fromHomogeneous4 = exports.fromHomogeneous3 = exports.fromHomogeneous = void 0;

var _vop = require("./internal/vop");

var _setc = require("./setc");

const fromHomogeneous = (0, _vop.vop)(1);
exports.fromHomogeneous = fromHomogeneous;
const fromHomogeneous3 = fromHomogeneous.add(3, (out, [x, y, w]) => (0, _setc.setC2)(out || [], x / w, y / w));
exports.fromHomogeneous3 = fromHomogeneous3;
const fromHomogeneous4 = fromHomogeneous.add(4, (out, [x, y, z, w]) => (0, _setc.setC3)(out || [], x / w, y / w, z / w));
exports.fromHomogeneous4 = fromHomogeneous4;
},{"./internal/vop":"../node_modules/@thi.ng/vectors/internal/vop.js","./setc":"../node_modules/@thi.ng/vectors/setc.js"}],"../node_modules/@thi.ng/vectors/invert.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.invert4 = exports.invert3 = exports.invert2 = exports.invert = void 0;

var _codegen = require("./internal/codegen");

const [invert, invert2, invert3, invert4] = (0, _codegen.defOp)(([o, a]) => `${o}=1/${a};`);
exports.invert4 = invert4;
exports.invert3 = invert3;
exports.invert2 = invert2;
exports.invert = invert;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/invsqrt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.invSqrt4 = exports.invSqrt3 = exports.invSqrt2 = exports.invSqrt = void 0;

var _codegen = require("./internal/codegen");

const [invSqrt, invSqrt2, invSqrt3, invSqrt4] = (0, _codegen.defOp)(([o, a]) => `${o}=1/Math.sqrt(${a});`);
exports.invSqrt4 = invSqrt4;
exports.invSqrt3 = invSqrt3;
exports.invSqrt2 = invSqrt2;
exports.invSqrt = invSqrt;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/is-inf.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isInf4 = exports.isInf3 = exports.isInf2 = exports.isInf = void 0;

var _codegen = require("./internal/codegen");

const [isInf, isInf2, isInf3, isInf4] = (0, _codegen.defFnOp)("!isFinite");
exports.isInf4 = isInf4;
exports.isInf3 = isInf3;
exports.isInf2 = isInf2;
exports.isInf = isInf;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/is-nan.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isNaN4 = exports.isNaN3 = exports.isNaN2 = exports.isNaN = void 0;

var _codegen = require("./internal/codegen");

const [isNaN, isNaN2, isNaN3, isNaN4] = (0, _codegen.defFnOp)("isNaN");
exports.isNaN4 = isNaN4;
exports.isNaN3 = isNaN3;
exports.isNaN2 = isNaN2;
exports.isNaN = isNaN;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/random.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.randMinMax4 = exports.randMinMax3 = exports.randMinMax2 = exports.randMinMax = exports.randNorm = exports.random4 = exports.random3 = exports.random2 = exports.random = void 0;

var _random = require("@thi.ng/random");

var _codegen = require("./internal/codegen");

var _normalize = require("./normalize");

/**
 * Sets `v` to random vector, with each component in interval `[n..m)`.
 * If no `rnd` instance is given, uses {@link @thi.ng/random#SYSTEM},
 * i.e. `Math.random`.
 * Creates new vector if `v` is null.
 *
 * @param v -
 * @param n - default -1
 * @param m - default 1
 * @param rnd -
 */
const [random, random2, random3, random4] = (0, _codegen.defHofOp)(_random.SYSTEM, ([a]) => `${a}=rnd.minmax(n,m);`, "a,n=-1,m=1,rnd=op", "a", "a", 0, "!a && (a=[]);");
/**
 * Sets `v` to random vector, normalized to length `n` (default: 1). If
 * no `rnd` instance is given, uses {@link @thi.ng/random#SYSTEM}, i.e.
 * `Math.random`.
 *
 * @param v -
 * @param n -
 * @param rnd -
 */

exports.random4 = random4;
exports.random3 = random3;
exports.random2 = random2;
exports.random = random;

const randNorm = (v, n = 1, rnd = _random.SYSTEM) => (0, _normalize.normalize)(v = random(v, -1, 1, rnd), v, n);
/**
 * Sets `out` to random vector with each component in the semi-open
 * interval defined by [min,max).
 *
 * @param out -
 * @param min -
 * @param max -
 * @param rnd -
 */


exports.randNorm = randNorm;
const [randMinMax, randMinMax2, randMinMax3, randMinMax4] = (0, _codegen.defHofOp)(_random.SYSTEM, ([o, a, b]) => `${o}=rnd.minmax(${a},${b});`, "o,a,b,rnd=op", "o,a,b");
exports.randMinMax4 = randMinMax4;
exports.randMinMax3 = randMinMax3;
exports.randMinMax2 = randMinMax2;
exports.randMinMax = randMinMax;
},{"@thi.ng/random":"../node_modules/@thi.ng/random/index.js","./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./normalize":"../node_modules/@thi.ng/vectors/normalize.js"}],"../node_modules/@thi.ng/vectors/jitter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.jitter = void 0;

var _random = require("@thi.ng/random");

var _add = require("./add");

var _random2 = require("./random");

const jitter = (out, a, n = 1, rnd = _random.SYSTEM) => (0, _add.add)(out, a, (0, _random2.randNorm)(new Array(a.length), n, rnd));

exports.jitter = jitter;
},{"@thi.ng/random":"../node_modules/@thi.ng/random/index.js","./add":"../node_modules/@thi.ng/vectors/add.js","./random":"../node_modules/@thi.ng/vectors/random.js"}],"../node_modules/@thi.ng/vectors/limit.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.limit = void 0;

var _mag = require("./mag");

var _muln = require("./muln");

var _set = require("./set");

const limit = (out, v, n) => {
  !out && (out = v);
  const m = (0, _mag.mag)(v);
  return m > n ? (0, _muln.mulN)(out, v, n / m) : out !== v ? (0, _set.set)(out, v) : out;
};

exports.limit = limit;
},{"./mag":"../node_modules/@thi.ng/vectors/mag.js","./muln":"../node_modules/@thi.ng/vectors/muln.js","./set":"../node_modules/@thi.ng/vectors/set.js"}],"../node_modules/@thi.ng/vectors/log.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.log4 = exports.log3 = exports.log2 = exports.log = void 0;

var _codegen = require("./internal/codegen");

const [log, log2, log3, log4] = (0, _codegen.defFnOp)("Math.log");
exports.log4 = log4;
exports.log3 = log3;
exports.log2 = log2;
exports.log = log;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/log_2.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.log_24 = exports.log_23 = exports.log_22 = exports.log_2 = void 0;

var _codegen = require("./internal/codegen");

/**
 * Componentwise Math.log2
 */
const [log_2, log_22, log_23, log_24] = (0, _codegen.defFnOp)("Math.log2");
exports.log_24 = log_24;
exports.log_23 = log_23;
exports.log_22 = log_22;
exports.log_2 = log_2;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/logic-and.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.logicAndN4 = exports.logicAndN3 = exports.logicAndN2 = exports.logicAndN = exports.logicAnd4 = exports.logicAnd3 = exports.logicAnd2 = exports.logicAnd = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [logicAnd, logicAnd2, logicAnd3, logicAnd4] = (0, _codegen.defOp)((0, _templates.MATH)("&&"));
exports.logicAnd4 = logicAnd4;
exports.logicAnd3 = logicAnd3;
exports.logicAnd2 = logicAnd2;
exports.logicAnd = logicAnd;
const [logicAndN, logicAndN2, logicAndN3, logicAndN4] = (0, _codegen.defOp)((0, _templates.MATH_N)("&&"), _codegen.ARGS_VN);
exports.logicAndN4 = logicAndN4;
exports.logicAndN3 = logicAndN3;
exports.logicAndN2 = logicAndN2;
exports.logicAndN = logicAndN;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/logic-not.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.logicNot4 = exports.logicNot3 = exports.logicNot2 = exports.logicNot = void 0;

var _codegen = require("./internal/codegen");

const [logicNot, logicNot2, logicNot3, logicNot4] = (0, _codegen.defFnOp)("!");
exports.logicNot4 = logicNot4;
exports.logicNot3 = logicNot3;
exports.logicNot2 = logicNot2;
exports.logicNot = logicNot;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/logic-or.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.logicOrN4 = exports.logicOrN3 = exports.logicOrN2 = exports.logicOrN = exports.logicOr4 = exports.logicOr3 = exports.logicOr2 = exports.logicOr = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [logicOr, logicOr2, logicOr3, logicOr4] = (0, _codegen.defOp)((0, _templates.MATH)("||"));
exports.logicOr4 = logicOr4;
exports.logicOr3 = logicOr3;
exports.logicOr2 = logicOr2;
exports.logicOr = logicOr;
const [logicOrN, logicOrN2, logicOrN3, logicOrN4] = (0, _codegen.defOp)((0, _templates.MATH_N)("||"), _codegen.ARGS_VN);
exports.logicOrN4 = logicOrN4;
exports.logicOrN3 = logicOrN3;
exports.logicOrN2 = logicOrN2;
exports.logicOrN = logicOrN;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/lshift.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.lshiftNU4 = exports.lshiftNU3 = exports.lshiftNU2 = exports.lshiftNU = exports.lshiftNI4 = exports.lshiftNI3 = exports.lshiftNI2 = exports.lshiftNI = exports.lshiftU4 = exports.lshiftU3 = exports.lshiftU2 = exports.lshiftU = exports.lshiftI4 = exports.lshiftI3 = exports.lshiftI2 = exports.lshiftI = void 0;

var _codegen = require("./internal/codegen");

const [lshiftI, lshiftI2, lshiftI3, lshiftI4] = (0, _codegen.defBitOp)("<<", true);
exports.lshiftI4 = lshiftI4;
exports.lshiftI3 = lshiftI3;
exports.lshiftI2 = lshiftI2;
exports.lshiftI = lshiftI;
const [lshiftU, lshiftU2, lshiftU3, lshiftU4] = (0, _codegen.defBitOp)("<<"); // prettier-ignore

exports.lshiftU4 = lshiftU4;
exports.lshiftU3 = lshiftU3;
exports.lshiftU2 = lshiftU2;
exports.lshiftU = lshiftU;
const [lshiftNI, lshiftNI2, lshiftNI3, lshiftNI4] = (0, _codegen.defBitOpN)("<<", true);
exports.lshiftNI4 = lshiftNI4;
exports.lshiftNI3 = lshiftNI3;
exports.lshiftNI2 = lshiftNI2;
exports.lshiftNI = lshiftNI;
const [lshiftNU, lshiftNU2, lshiftNU3, lshiftNU4] = (0, _codegen.defBitOpN)("<<");
exports.lshiftNU4 = lshiftNU4;
exports.lshiftNU3 = lshiftNU3;
exports.lshiftNU2 = lshiftNU2;
exports.lshiftNU = lshiftNU;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/madd.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.madd4 = exports.madd3 = exports.madd2 = exports.madd = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

/**
 * Returns `out = a * b + c`.
 *
 * - {@link addm}
 * - {@link maddN}
 *
 * @param out -
 * @param a -
 * @param b -
 * @param c -
 */
const [madd, madd2, madd3, madd4] = (0, _codegen.defOp)((0, _templates.MATH2)("*", "+"), _codegen.ARGS_VVV);
exports.madd4 = madd4;
exports.madd3 = madd3;
exports.madd2 = madd2;
exports.madd = madd;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/madds.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.maddS4 = exports.maddS3 = exports.maddS2 = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [maddS2, maddS3, maddS4] = (0, _codegen.defOpS)((0, _templates.MATH2)("*", "+"), `${_codegen.ARGS_VVV},${_codegen.SARGS_VVV}`, _codegen.ARGS_VVV);
exports.maddS4 = maddS4;
exports.maddS3 = maddS3;
exports.maddS2 = maddS2;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/maddns.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.maddNS4 = exports.maddNS3 = exports.maddNS2 = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [maddNS2, maddNS3, maddNS4] = (0, _codegen.defOpS)((0, _templates.MATH2A_N)("*", "+"), `${_codegen.ARGS_VNV},${_codegen.SARGS_VV}`);
exports.maddNS4 = maddNS4;
exports.maddNS3 = maddNS3;
exports.maddNS2 = maddNS2;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/mags.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.magS4 = exports.magS3 = exports.magS2 = void 0;

var _dots = require("./dots");

const magS2 = (a, ia, sa) => Math.sqrt((0, _dots.dotS2)(a, a, ia, ia, sa, sa));

exports.magS2 = magS2;

const magS3 = (a, ia, sa) => Math.sqrt((0, _dots.dotS3)(a, a, ia, ia, sa, sa));

exports.magS3 = magS3;

const magS4 = (a, ia, sa) => Math.sqrt((0, _dots.dotS4)(a, a, ia, ia, sa, sa));

exports.magS4 = magS4;
},{"./dots":"../node_modules/@thi.ng/vectors/dots.js"}],"../node_modules/@thi.ng/vectors/magsqs.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.magSqS4 = exports.magSqS3 = exports.magSqS2 = void 0;

var _dots = require("./dots");

const magSqS2 = (a, ia, sa) => (0, _dots.dotS2)(a, a, ia, ia, sa, sa);

exports.magSqS2 = magSqS2;

const magSqS3 = (a, ia, sa) => (0, _dots.dotS3)(a, a, ia, ia, sa, sa);

exports.magSqS3 = magSqS3;

const magSqS4 = (a, ia, sa) => (0, _dots.dotS4)(a, a, ia, ia, sa, sa);

exports.magSqS4 = magSqS4;
},{"./dots":"../node_modules/@thi.ng/vectors/dots.js"}],"../node_modules/@thi.ng/vectors/major.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.major4 = exports.major3 = exports.major2 = exports.major = void 0;

var _math = require("@thi.ng/math");

var _vop = require("./internal/vop");

const abs = Math.abs;
/**
 * Returns index of major component/axis in `v`, i.e. where `|v[i]|` is
 * the largest.
 *
 * @param v -
 */

const major = (0, _vop.vop)();
exports.major = major;
major.default(a => {
  let id = -1;
  let max = -Infinity;

  for (let i = a.length; --i >= 0;) {
    const x = abs(a[i]);

    if (x > max) {
      max = x;
      id = i;
    }
  }

  return id;
});
const major2 = major.add(2, a => (0, _math.max2id)(abs(a[0]), abs(a[1])));
exports.major2 = major2;
const major3 = major.add(3, a => (0, _math.max3id)(abs(a[0]), abs(a[1]), abs(a[2])));
exports.major3 = major3;
const major4 = major.add(4, a => (0, _math.max4id)(abs(a[0]), abs(a[1]), abs(a[2]), abs(a[3])));
exports.major4 = major4;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","./internal/vop":"../node_modules/@thi.ng/vectors/internal/vop.js"}],"../node_modules/@thi.ng/vectors/map-vectors.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mapVectors = mapVectors;

var _checks = require("@thi.ng/checks");

function mapVectors(fn, out, a, b, c) {
  const num = a.length;
  !out && (out = new Array(num));

  if (c !== undefined) {
    if ((0, _checks.isNumber)(c)) {
      for (let i = 0; i < num; i++) {
        out[i] = fn(out[i] || [], a[i], b[i], c);
      }
    } else {
      for (let i = 0; i < num; i++) {
        out[i] = fn(out[i] || [], a[i], b[i], c[i]);
      }
    }
  } else {
    if ((0, _checks.isNumber)(b)) {
      for (let i = 0; i < num; i++) {
        out[i] = fn(out[i] || [], a[i], b);
      }
    } else {
      for (let i = 0; i < num; i++) {
        out[i] = fn(out[i] || [], a[i], b[i]);
      }
    }
  }

  return out;
}
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js"}],"../node_modules/@thi.ng/vectors/max.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.max4 = exports.max3 = exports.max2 = exports.max = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [max, max2, max3, max4] = (0, _codegen.defOp)((0, _templates.FN2)("Math.max"));
exports.max4 = max4;
exports.max3 = max3;
exports.max2 = max2;
exports.max = max;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/min.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.min4 = exports.min3 = exports.min2 = exports.min = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [min, min2, min3, min4] = (0, _codegen.defOp)((0, _templates.FN2)("Math.min"));
exports.min4 = min4;
exports.min3 = min3;
exports.min2 = min2;
exports.min = min;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/minor.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.minor4 = exports.minor3 = exports.minor2 = exports.minor = void 0;

var _math = require("@thi.ng/math");

var _vop = require("./internal/vop");

const abs = Math.abs;
/**
 * Returns index of minor component/axis in `v`, i.e. where `|v[i]|` is
 * the smallest.
 *
 * @param v -
 */

const minor = (0, _vop.vop)();
exports.minor = minor;
minor.default(a => {
  let id = -1;
  let min = Infinity;

  for (let i = a.length; --i >= 0;) {
    const x = abs(a[i]);

    if (x < min) {
      min = x;
      id = i;
    }
  }

  return id;
});
const minor2 = minor.add(2, a => (0, _math.min2id)(abs(a[0]), abs(a[1])));
exports.minor2 = minor2;
const minor3 = minor.add(3, a => (0, _math.min3id)(abs(a[0]), abs(a[1]), abs(a[2])));
exports.minor3 = minor3;
const minor4 = minor.add(4, a => (0, _math.min4id)(abs(a[0]), abs(a[1]), abs(a[2]), abs(a[3])));
exports.minor4 = minor4;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","./internal/vop":"../node_modules/@thi.ng/vectors/internal/vop.js"}],"../node_modules/@thi.ng/vectors/mix-bilinear.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mixBilinear4 = exports.mixBilinear3 = exports.mixBilinear2 = exports.mixBilinear = void 0;

var _math = require("@thi.ng/math");

var _codegen = require("./internal/codegen");

const [mixBilinear, mixBilinear2, mixBilinear3, mixBilinear4] = (0, _codegen.defHofOp)(_math.mixBilinear, ([o, a, b, c, d]) => `${o}=op(${a},${b},${c},${d},u,v);`, "o,a,b,c,d,u,v");
exports.mixBilinear4 = mixBilinear4;
exports.mixBilinear3 = mixBilinear3;
exports.mixBilinear2 = mixBilinear2;
exports.mixBilinear = mixBilinear;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/mix-cubic.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mixCubic = void 0;

var _addw = require("./addw");

/**
 * Vector version of {@link @thi.ng/math#mixCubic}.
 *
 * @param out - result
 * @param a -
 * @param b -
 * @param c -
 * @param d -
 * @param t - interpolation coeff [0..1]
 */
const mixCubic = (out, a, b, c, d, t) => {
  const s = 1 - t;
  const s2 = s * s;
  const t2 = t * t;
  return (0, _addw.addW4)(out, a, b, c, d, s2 * s, 3 * s2 * t, 3 * t2 * s, t2 * t);
};

exports.mixCubic = mixCubic;
},{"./addw":"../node_modules/@thi.ng/vectors/addw.js"}],"../node_modules/@thi.ng/vectors/submn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.submN4 = exports.submN3 = exports.submN2 = exports.submN = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

/**
 * Returns `out = (a - b) * n`.
 */
const [submN, submN2, submN3, submN4] = (0, _codegen.defOp)((0, _templates.MATH2_N)("-", "*"), _codegen.ARGS_VVN);
exports.submN4 = submN4;
exports.submN3 = submN3;
exports.submN2 = submN2;
exports.submN = submN;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/mix-hermite.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tangentDiff3 = exports.tangentCardinal = exports.mixHermiteDiff3 = exports.mixHermiteCardinal = exports.mixCubicHermite = void 0;

var _addmn = require("./addmn");

var _addw = require("./addw");

var _submn = require("./submn");

/**
 * Vector version of {@link @thi.ng/math#mixCubicHermite}.
 *
 * @param out - result
 * @param a -
 * @param ta - tangent A
 * @param b -
 * @param tb - tangent B
 * @param t - interpolation coeff [0..1]
 */
const mixCubicHermite = (out, a, ta, b, tb, t) => {
  const s = t - 1;
  const t2 = t * t;
  const s2 = s * s;
  return (0, _addw.addW4)(out, a, ta, b, tb, (1 + 2 * t) * s2, t * s2, t2 * (3 - 2 * t), t2 * s);
};
/**
 * Convenience version of {@link mixCubicHermite}, using 4 input points
 * and {@link tangentCardinal} to compute the tangents for points `b`
 * and `c` (with optional `scale`, default 0.5). Interpolated result
 * point is that of `b` and `c`, with `a` and `d` only being used for
 * tangent calculations.
 *
 * If `out` is null, stores result in `b`.
 *
 * @param out - result
 * @param a -
 * @param b -
 * @param c -
 * @param d -
 * @param t - interpolation coeff [0..1]
 * @param scale - tangent tightness / scale
 */


exports.mixCubicHermite = mixCubicHermite;

const mixHermiteCardinal = (out, a, b, c, d, t, scale = 0.5) => mixCubicHermite(out, b, tangentCardinal([], a, c, scale), c, tangentCardinal([], b, d, scale), t);
/**
 * Convenience version of {@link mixCubicHermite}, using 4 input points
 * and {@link tangentDiff3} to compute the tangents for points `b` and
 * `c`. Interpolated result point is that of `b` and `c`, with `a` and
 * `d` only being used for tangent calculations.
 *
 * If `out` is null, stores result in `b`.
 *
 * @param out - result
 * @param a -
 * @param b -
 * @param c -
 * @param d -
 * @param t - interpolation coeff [0..1]
 */


exports.mixHermiteCardinal = mixHermiteCardinal;

const mixHermiteDiff3 = (out, a, b, c, d, t) => mixCubicHermite(out, b, tangentDiff3([], a, b, c), c, tangentDiff3([], b, c, d), t);
/**
 * Vector version of {@link @thi.ng/math#tangentCardinal}.
 *
 * @param out -
 * @param prev -
 * @param next -
 * @param scale -
 * @param ta -
 * @param tc -
 */


exports.mixHermiteDiff3 = mixHermiteDiff3;

const tangentCardinal = (out, prev, next, scale = 0.5, ta = 0, tc = 2) => (0, _submn.submN)(out, next, prev, scale / (tc - ta));
/**
 * Vector version of {@link @thi.ng/math#tangentDiff3}.
 *
 * @param out - result
 * @param prev -
 * @param curr -
 * @param next -
 * @param ta -
 * @param tb -
 * @param tc -
 */


exports.tangentCardinal = tangentCardinal;

const tangentDiff3 = (out, prev, curr, next, ta = 0, tb = 1, tc = 2) => (0, _addmn.addmN)(out, (0, _submn.submN)(out, curr, prev, 1 / (tb - ta)), (0, _submn.submN)([], next, curr, 1 / (tc - tb)), 0.5);

exports.tangentDiff3 = tangentDiff3;
},{"./addmn":"../node_modules/@thi.ng/vectors/addmn.js","./addw":"../node_modules/@thi.ng/vectors/addw.js","./submn":"../node_modules/@thi.ng/vectors/submn.js"}],"../node_modules/@thi.ng/vectors/mix-quadratic.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mixQuadratic = void 0;

var _addw = require("./addw");

/**
 * Vector version of {@link @thi.ng/math#mixQuadratic}.
 *
 * @param out - result
 * @param a -
 * @param b -
 * @param c -
 * @param t - interpolation coeff [0..1]
 */
const mixQuadratic = (out, a, b, c, t) => {
  const s = 1 - t;
  return (0, _addw.addW3)(out, a, b, c, s * s, 2 * s * t, t * t);
};

exports.mixQuadratic = mixQuadratic;
},{"./addw":"../node_modules/@thi.ng/vectors/addw.js"}],"../node_modules/@thi.ng/vectors/mix.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mix4 = exports.mix3 = exports.mix2 = exports.mix = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [mix, mix2, mix3, mix4] = (0, _codegen.defOp)(_templates.MIX, _codegen.ARGS_VVV);
exports.mix4 = mix4;
exports.mix3 = mix3;
exports.mix2 = mix2;
exports.mix = mix;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/mixs.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mixS4 = exports.mixS3 = exports.mixS2 = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [mixS2, mixS3, mixS4] = (0, _codegen.defOpS)(_templates.MIX, `${_codegen.ARGS_VVV},${_codegen.SARGS_VVV}`, _codegen.ARGS_VVV);
exports.mixS4 = mixS4;
exports.mixS3 = mixS3;
exports.mixS2 = mixS2;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/mixns.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mixNS4 = exports.mixNS3 = exports.mixNS2 = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [mixNS2, mixNS3, mixNS4] = (0, _codegen.defOpS)(_templates.MIX_N, `${_codegen.ARGS_VVN},${_codegen.SARGS_VV}`);
exports.mixNS4 = mixNS4;
exports.mixNS3 = mixNS3;
exports.mixNS2 = mixNS2;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/mod.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mod4 = exports.mod3 = exports.mod2 = exports.mod = void 0;

var _codegen = require("./internal/codegen");

const [mod, mod2, mod3, mod4] = (0, _codegen.defMathOp)("%");
exports.mod4 = mod4;
exports.mod3 = mod3;
exports.mod2 = mod2;
exports.mod = mod;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/modn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.modN4 = exports.modN3 = exports.modN2 = exports.modN = void 0;

var _codegen = require("./internal/codegen");

const [modN, modN2, modN3, modN4] = (0, _codegen.defMathOpN)("%");
exports.modN4 = modN4;
exports.modN3 = modN3;
exports.modN2 = modN2;
exports.modN = modN;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/msub.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.msub4 = exports.msub3 = exports.msub2 = exports.msub = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

/**
 * Returns `out = a * b + c`.
 *
 * - {@link addm}
 * - {@link maddN}
 *
 * @param out -
 * @param a -
 * @param b -
 * @param c -
 */
const [msub, msub2, msub3, msub4] = (0, _codegen.defOp)((0, _templates.MATH2)("*", "-"), _codegen.ARGS_VVV);
exports.msub4 = msub4;
exports.msub3 = msub3;
exports.msub2 = msub2;
exports.msub = msub;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/msubn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.msubN4 = exports.msubN3 = exports.msubN2 = exports.msubN = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

/**
 * Returns `out = a * n + b`.
 *
 * @param out - vec
 * @param a - vec
 * @param n - scalar
 * @param b - vec
 */
const [msubN, msubN2, msubN3, msubN4] = (0, _codegen.defOp)((0, _templates.MATH2A_N)("*", "-"), _codegen.ARGS_VNV, _codegen.ARGS_VV);
exports.msubN4 = msubN4;
exports.msubN3 = msubN3;
exports.msubN2 = msubN2;
exports.msubN = msubN;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/msubs.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.msubS4 = exports.msubS3 = exports.msubS2 = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [msubS2, msubS3, msubS4] = (0, _codegen.defOpS)((0, _templates.MATH2)("*", "-"), `${_codegen.ARGS_VVV},${_codegen.SARGS_VVV}`, _codegen.ARGS_VVV);
exports.msubS4 = msubS4;
exports.msubS3 = msubS3;
exports.msubS2 = msubS2;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/msubns.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.msubNS4 = exports.msubNS3 = exports.msubNS2 = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [msubNS2, msubNS3, msubNS4] = (0, _codegen.defOpS)((0, _templates.MATH2A_N)("*", "-"), `${_codegen.ARGS_VNV},${_codegen.SARGS_VV}`);
exports.msubNS4 = msubNS4;
exports.msubNS3 = msubNS3;
exports.msubNS2 = msubNS2;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/mul.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mul4 = exports.mul3 = exports.mul2 = exports.mul = void 0;

var _codegen = require("./internal/codegen");

const [mul, mul2, mul3, mul4] = (0, _codegen.defMathOp)("*");
exports.mul4 = mul4;
exports.mul3 = mul3;
exports.mul2 = mul2;
exports.mul = mul;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/muli.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mulNU4 = exports.mulNU3 = exports.mulNU2 = exports.mulNU = exports.mulNI4 = exports.mulNI3 = exports.mulNI2 = exports.mulNI = exports.mulU4 = exports.mulU3 = exports.mulU2 = exports.mulU = exports.mulI4 = exports.mulI3 = exports.mulI2 = exports.mulI = void 0;

var _codegen = require("./internal/codegen");

const [mulI, mulI2, mulI3, mulI4] = (0, _codegen.defBitOp)("*", true);
exports.mulI4 = mulI4;
exports.mulI3 = mulI3;
exports.mulI2 = mulI2;
exports.mulI = mulI;
const [mulU, mulU2, mulU3, mulU4] = (0, _codegen.defBitOp)("*");
exports.mulU4 = mulU4;
exports.mulU3 = mulU3;
exports.mulU2 = mulU2;
exports.mulU = mulU;
const [mulNI, mulNI2, mulNI3, mulNI4] = (0, _codegen.defBitOpN)("*", true);
exports.mulNI4 = mulNI4;
exports.mulNI3 = mulNI3;
exports.mulNI2 = mulNI2;
exports.mulNI = mulNI;
const [mulNU, mulNU2, mulNU3, mulNU4] = (0, _codegen.defBitOpN)("*");
exports.mulNU4 = mulNU4;
exports.mulNU3 = mulNU3;
exports.mulNU2 = mulNU2;
exports.mulNU = mulNU;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/muls.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mulS4 = exports.mulS3 = exports.mulS2 = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [mulS2, mulS3, mulS4] = (0, _codegen.defOpS)((0, _templates.MATH)("*"));
exports.mulS4 = mulS4;
exports.mulS3 = mulS3;
exports.mulS2 = mulS2;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/mulns.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mulNS4 = exports.mulNS3 = exports.mulNS2 = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [mulNS2, mulNS3, mulNS4] = (0, _codegen.defOpS)((0, _templates.MATH_N)("*"), `${_codegen.ARGS_VN},${_codegen.SARGS_V}`, _codegen.ARGS_V);
exports.mulNS4 = mulNS4;
exports.mulNS3 = mulNS3;
exports.mulNS2 = mulNS2;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/neg.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.neg = void 0;

var _muln = require("./muln");

const neg = (out, v) => (0, _muln.mulN)(out, v, -1);

exports.neg = neg;
},{"./muln":"../node_modules/@thi.ng/vectors/muln.js"}],"../node_modules/@thi.ng/vectors/normal.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.normalCW = exports.normalCCW = void 0;

var _direction = require("./direction");

var _perpendicular = require("./perpendicular");

/**
 * Computes 2D normal by rotating direction vector `a` -> `b`, 90 deg
 * counterclockwise, normalized to length `n` (default: 1). If `out` is
 * null, creates new vector.
 *
 * @param out -
 * @param a -
 * @param b -
 * @param n -
 */
const normalCCW = (out, a, b, n = 1) => (0, _perpendicular.perpendicularCCW)(null, (0, _direction.direction)(out || [], a, b, n));
/**
 * Computes 2D normal by rotating direction vector `a` -> `b`, 90 deg
 * clockwise, normalized to length `n` (default: 1). If `out` is null,
 * creates new vector.
 *
 * @param out -
 * @param a -
 * @param b -
 * @param n -
 */


exports.normalCCW = normalCCW;

const normalCW = (out, a, b, n = 1) => (0, _perpendicular.perpendicularCW)(null, (0, _direction.direction)(out || [], a, b, n));

exports.normalCW = normalCW;
},{"./direction":"../node_modules/@thi.ng/vectors/direction.js","./perpendicular":"../node_modules/@thi.ng/vectors/perpendicular.js"}],"../node_modules/@thi.ng/vectors/normalizes.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.normalizeS4 = exports.normalizeS3 = exports.normalizeS2 = void 0;

var _math = require("@thi.ng/math");

var _mags = require("./mags");

var _mulns = require("./mulns");

var _sets = require("./sets");

/**
 * Normalizes vector to given (optional) length (default: 1). If `out`
 * is null, modifies `v` in place.
 *
 * @param out -
 * @param v -
 * @param n -
 */
const normalizeS2 = (out, v, n = 1, io = 0, ia = 0, so = 1, sa = 1) => {
  !out && (out = v);
  const m = (0, _mags.magS2)(v, ia, sa);
  return m >= _math.EPS ? (0, _mulns.mulNS2)(out, v, n / m, io, ia, so, sa) : out !== v ? (0, _sets.setS2)(out, v, io, ia, so, sa) : out;
};
/**
 * Normalizes vector to given (optional) length (default: 1). If `out`
 * is null, modifies `v` in place.
 *
 * @param out -
 * @param v -
 * @param n -
 */


exports.normalizeS2 = normalizeS2;

const normalizeS3 = (out, v, n = 1, io = 0, ia = 0, so = 1, sa = 1) => {
  !out && (out = v);
  const m = (0, _mags.magS3)(v, ia, sa);
  return m >= _math.EPS ? (0, _mulns.mulNS3)(out, v, n / m, io, ia, so, sa) : out !== v ? (0, _sets.setS3)(out, v, io, ia, so, sa) : out;
};
/**
 * Normalizes vector to given (optional) length (default: 1). If `out`
 * is null, modifies `v` in place.
 *
 * @param out -
 * @param v -
 * @param n -
 */


exports.normalizeS3 = normalizeS3;

const normalizeS4 = (out, v, n = 1, io = 0, ia = 0, so = 1, sa = 1) => {
  !out && (out = v);
  const m = (0, _mags.magS4)(v, ia, sa);
  return m >= _math.EPS ? (0, _mulns.mulNS4)(out, v, n / m, io, ia, so, sa) : out !== v ? (0, _sets.setS4)(out, v, io, ia, so, sa) : out;
};

exports.normalizeS4 = normalizeS4;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","./mags":"../node_modules/@thi.ng/vectors/mags.js","./mulns":"../node_modules/@thi.ng/vectors/mulns.js","./sets":"../node_modules/@thi.ng/vectors/sets.js"}],"../node_modules/@thi.ng/vectors/not.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.not4 = exports.not3 = exports.not2 = exports.not = void 0;

var _codegen = require("./internal/codegen");

const [not, not2, not3, not4] = (0, _codegen.defOp)(([o, a]) => `${o}=!${a};`, _codegen.ARGS_V, _codegen.ARGS_V, "o", 1, _codegen.NEW_OUT);
exports.not4 = not4;
exports.not3 = not3;
exports.not2 = not2;
exports.not = not;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/ortho-normal.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.orthoNormal3 = void 0;

var _cross = require("./cross");

var _normalize = require("./normalize");

var _sub = require("./sub");

/**
 * Produces a vector which is perpendicular/normal to the plane spanned
 * by given 3 input vectors. If `normalize` is true (default), the
 * result vector will be normalized.
 *
 * @example
 * ```ts
 * orthoNormal3([], [0, 0, 0], [1, 0, 0], [0, 1, 0])
 * // [0, 0, 1]
 * ```
 *
 * @param out -
 * @param a -
 * @param b -
 * @param c -
 * @param normalize -
 */
const orthoNormal3 = (out, a, b, c, doNormalize = true) => {
  out = (0, _cross.cross3)(null, (0, _sub.sub3)(out || a, b, a), (0, _sub.sub3)([], c, a));
  return doNormalize ? (0, _normalize.normalize)(out, out) : out;
};

exports.orthoNormal3 = orthoNormal3;
},{"./cross":"../node_modules/@thi.ng/vectors/cross.js","./normalize":"../node_modules/@thi.ng/vectors/normalize.js","./sub":"../node_modules/@thi.ng/vectors/sub.js"}],"../node_modules/@thi.ng/vectors/point-on-ray.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pointOnRay3 = exports.pointOnRay2 = exports.pointOnRay = void 0;

var _maddn = require("./maddn");

/**
 * Calculates the nD point laying on ray at given distance. `rayDir` MUST be
 * normalized.
 *
 * @param out -
 * @param rayOrigin -
 * @param rayDir -
 * @param dist -
 */
const pointOnRay = (out, rayOrigin, rayDir, dist) => (0, _maddn.maddN)(out, rayDir, dist, rayOrigin);
/**
 * 2D version of {@link pointOnRay}.
 *
 * @param out -
 * @param rayOrigin -
 * @param rayDir -
 * @param dist -
 */


exports.pointOnRay = pointOnRay;

const pointOnRay2 = (out, rayOrigin, rayDir, dist) => (0, _maddn.maddN2)(out, rayDir, dist, rayOrigin);
/**
 * 3D version of {@link pointOnRay}.
 *
 * @param out -
 * @param rayOrigin -
 * @param rayDir -
 * @param dist -
 */


exports.pointOnRay2 = pointOnRay2;

const pointOnRay3 = (out, rayOrigin, rayDir, dist) => (0, _maddn.maddN3)(out, rayDir, dist, rayOrigin);

exports.pointOnRay3 = pointOnRay3;
},{"./maddn":"../node_modules/@thi.ng/vectors/maddn.js"}],"../node_modules/@thi.ng/vectors/polar.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.polar3 = exports.polar2 = exports.polar = void 0;

var _vop = require("./internal/vop");

var _mag = require("./mag");

var _setc = require("./setc");

const sqrt = Math.sqrt;
const asin = Math.asin;
const atan2 = Math.atan2;
/**
 * Converts cartesian vector `v` to polar coordinates. See {@link cartesian}
 * for reverse operation. If `out` is null, modifies `v` in place.
 *
 * @param out -
 * @param v -
 */

const polar = (0, _vop.vop)(1);
/**
 * Converts 2D cartesian vector `v` to polar coordinates, i.e. `[r,θ]`
 * (angle in radians). See {@link cartesian} for reverse operation. If `out`
 * is null, modifies `v` in place.
 *
 * @param out -
 * @param v -
 */

exports.polar = polar;
const polar2 = polar.add(2, (out, a) => (0, _setc.setC2)(out || a, (0, _mag.mag)(a), atan2(a[1], a[0])));
/**
 * Converts 3D cartesian vector `v` to spherical coordinates, i.e.
 * `[r,θ,ϕ]` (angles in radians). See {@link cartesian} for reverse
 * operation. If `out` is null, modifies `v` in place.
 *
 * @param out -
 * @param v -
 */

exports.polar2 = polar2;
const polar3 = polar.add(3, (out, a) => {
  const x = a[0];
  const y = a[1];
  const z = a[2];
  const r = sqrt(x * x + y * y + z * z);
  return (0, _setc.setC3)(out || a, r, asin(z / r), atan2(y, x));
});
exports.polar3 = polar3;
},{"./internal/vop":"../node_modules/@thi.ng/vectors/internal/vop.js","./mag":"../node_modules/@thi.ng/vectors/mag.js","./setc":"../node_modules/@thi.ng/vectors/setc.js"}],"../node_modules/@thi.ng/vectors/pow.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pow4 = exports.pow3 = exports.pow2 = exports.pow = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [pow, pow2, pow3, pow4] = (0, _codegen.defOp)((0, _templates.FN2)("Math.pow"));
exports.pow4 = pow4;
exports.pow3 = pow3;
exports.pow2 = pow2;
exports.pow = pow;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/pown.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.powN4 = exports.powN3 = exports.powN2 = exports.powN = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [powN, powN2, powN3, powN4] = (0, _codegen.defOp)((0, _templates.FN_N)("Math.pow"), _codegen.ARGS_VN);
exports.powN4 = powN4;
exports.powN3 = powN3;
exports.powN2 = powN2;
exports.powN = powN;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/project.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.project = void 0;

var _dot = require("./dot");

var _magsq = require("./magsq");

var _muln = require("./muln");

/**
 * Returns vector projection of `v` onto `dir`.
 *
 * {@link https://en.wikipedia.org/wiki/Vector_projection}
 *
 * @param v -
 * @param dir -
 */
const project = (out, v, dir) => (0, _muln.mulN)(out || v, dir, (0, _dot.dot)(v, dir) / (0, _magsq.magSq)(dir));

exports.project = project;
},{"./dot":"../node_modules/@thi.ng/vectors/dot.js","./magsq":"../node_modules/@thi.ng/vectors/magsq.js","./muln":"../node_modules/@thi.ng/vectors/muln.js"}],"../node_modules/@thi.ng/vectors/radians.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.radians4 = exports.radians3 = exports.radians2 = exports.radians = void 0;

var _math = require("@thi.ng/math");

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [radians, radians2, radians3, radians4] = (0, _codegen.defHofOp)(_math.rad, (0, _templates.FN)("op"));
exports.radians4 = radians4;
exports.radians3 = radians3;
exports.radians2 = radians2;
exports.radians = radians;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/randoms.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.randMinMaxS4 = exports.randMinMaxS3 = exports.randMinMaxS2 = exports.randNormS4 = exports.randNormS3 = exports.randNormS2 = exports.randomS4 = exports.randomS3 = exports.randomS2 = void 0;

var _random = require("@thi.ng/random");

var _codegen = require("./internal/codegen");

var _normalizes = require("./normalizes");

/**
 * Randomizes `v` with each component in interval `[n..m)`. If no `rnd`
 * instance is given, uses {@link @thi.ng/random#SYSTEM}, i.e.
 * `Math.random`.
 *
 * @param v -
 * @param n - default -1
 * @param m - default 1
 * @param rnd -
 * @param ia -
 * @param sa -
 */
const [randomS2, randomS3, randomS4] = (0, _codegen.defHofOpS)(_random.SYSTEM, ([a]) => `${a}=rnd.minmax(n,m);`, "a,n=-1,m=1,rnd=op,ia=0,sa=1", "a", "a", "!a && (a=[]);");
exports.randomS4 = randomS4;
exports.randomS3 = randomS3;
exports.randomS2 = randomS2;

const $norm = (normalize, random) => (a, n = 1, rnd, ia = 0, sa = 1) => normalize(a = random(a, -1, 1, rnd, ia, sa), a, n, ia, ia, sa, sa);
/**
 * Sets `v` to random vector, normalized to length `n` (default: 1). If
 * no `rnd` instance is given, uses {@link @thi.ng/random#SYSTEM}, i.e.
 * `Math.random`.
 *
 * @param v -
 * @param n -
 * @param rnd -
 */


const randNormS2 = $norm(_normalizes.normalizeS2, randomS2);
exports.randNormS2 = randNormS2;
const randNormS3 = $norm(_normalizes.normalizeS3, randomS3);
exports.randNormS3 = randNormS3;
const randNormS4 = $norm(_normalizes.normalizeS4, randomS4);
/**
 * Sets `out` to random vector with each component in the semi-open
 * interval defined by [min,max).
 *
 * @param out -
 * @param min -
 * @param max -
 * @param rnd -
 */

exports.randNormS4 = randNormS4;
const [randMinMaxS2, randMinMaxS3, randMinMaxS4] = (0, _codegen.defHofOpS)(_random.SYSTEM, ([o, a, b]) => `${o}=rnd.minmax(${a},${b});`, `o,a,b,rnd=op,${_codegen.SARGS_VV}`, "o,a,b");
exports.randMinMaxS4 = randMinMaxS4;
exports.randMinMaxS3 = randMinMaxS3;
exports.randMinMaxS2 = randMinMaxS2;
},{"@thi.ng/random":"../node_modules/@thi.ng/random/index.js","./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./normalizes":"../node_modules/@thi.ng/vectors/normalizes.js"}],"../node_modules/@thi.ng/vectors/reflect.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.reflect = void 0;

var _dot = require("./dot");

var _maddn = require("./maddn");

const reflect = (out, a, b) => (0, _maddn.maddN)(out || a, b, -2 * (0, _dot.dot)(a, b), a);

exports.reflect = reflect;
},{"./dot":"../node_modules/@thi.ng/vectors/dot.js","./maddn":"../node_modules/@thi.ng/vectors/maddn.js"}],"../node_modules/@thi.ng/vectors/refract.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.refract = void 0;

var _dot = require("./dot");

var _maddn = require("./maddn");

var _muln = require("./muln");

var _setn = require("./setn");

const refract = (out, a, n, eta) => {
  !out && (out = a);
  const d = (0, _dot.dot)(a, n);
  const k = 1 - eta * eta * (1 - d * d);
  return k < 0 ? (0, _setn.zero)(out) : (0, _maddn.maddN)(out, n, -(eta * d + Math.sqrt(k)), (0, _muln.mulN)(out, a, eta));
};

exports.refract = refract;
},{"./dot":"../node_modules/@thi.ng/vectors/dot.js","./maddn":"../node_modules/@thi.ng/vectors/maddn.js","./muln":"../node_modules/@thi.ng/vectors/muln.js","./setn":"../node_modules/@thi.ng/vectors/setn.js"}],"../node_modules/@thi.ng/vectors/rotate-around-axis.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rotateAroundAxis3 = void 0;

var _setc = require("./setc");

const rotateAroundAxis3 = (out, v, axis, theta) => {
  const x = v[0];
  const y = v[1];
  const z = v[2];
  const ax = axis[0];
  const ay = axis[1];
  const az = axis[2];
  const ux = ax * x;
  const uy = ax * y;
  const uz = ax * z;
  const vx = ay * x;
  const vy = ay * y;
  const vz = ay * z;
  const wx = az * x;
  const wy = az * y;
  const wz = az * z;
  const uvw = ux + vy + wz;
  const s = Math.sin(theta);
  const c = Math.cos(theta);
  return (0, _setc.setC3)(out || v, ax * uvw + (x * (ay * ay + az * az) - ax * (vy + wz)) * c + (-wy + vz) * s, ay * uvw + (y * (ax * ax + az * az) - ay * (ux + wz)) * c + (wx - uz) * s, az * uvw + (z * (ax * ax + ay * ay) - az * (ux + vy)) * c + (-vx + uy) * s);
};

exports.rotateAroundAxis3 = rotateAroundAxis3;
},{"./setc":"../node_modules/@thi.ng/vectors/setc.js"}],"../node_modules/@thi.ng/vectors/rotate-around-point.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rotateAroundPoint2 = void 0;

var _setc = require("./setc");

const rotateAroundPoint2 = (out, v, p, theta) => {
  const x = v[0] - p[0];
  const y = v[1] - p[1];
  const s = Math.sin(theta);
  const c = Math.cos(theta);
  return (0, _setc.setC2)(out || v, x * c - y * s + p[0], x * s + y * c + p[1]);
};

exports.rotateAroundPoint2 = rotateAroundPoint2;
},{"./setc":"../node_modules/@thi.ng/vectors/setc.js"}],"../node_modules/@thi.ng/vectors/rotate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rotate = exports.rotateZ = exports.rotateY = exports.rotateX = void 0;

var _set = require("./set");

const _rotate = (u, v) => (out, a, theta) => {
  out ? out !== a && (0, _set.set)(out, a) : out = a;
  const s = Math.sin(theta);
  const c = Math.cos(theta);
  const x = a[u];
  const y = a[v];
  out[u] = x * c - y * s;
  out[v] = x * s + y * c;
  return out;
};

const rotateX = _rotate(1, 2);

exports.rotateX = rotateX;

const rotateY = _rotate(2, 0);

exports.rotateY = rotateY;

const rotateZ = _rotate(0, 1);
/**
 * Alias for {@link rotateZ} (e.g. for 2D use cases)
 */


exports.rotateZ = rotateZ;
const rotate = rotateZ;
exports.rotate = rotate;
},{"./set":"../node_modules/@thi.ng/vectors/set.js"}],"../node_modules/@thi.ng/vectors/rotates.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rotateZS3 = exports.rotateYS3 = exports.rotateXS3 = exports.rotateS2 = void 0;

var _sets = require("./sets");

const _rotate = (set, u, v) => (out, a, theta, io = 0, ia = 0, so = 1, sa = 1) => {
  out ? out !== a && set(out, a, io, ia, so, sa) : out = a;
  const s = Math.sin(theta);
  const c = Math.cos(theta);
  const x = a[ia + u * sa];
  const y = a[ia + v * sa];
  out[io + u * so] = x * c - y * s;
  out[io + v * so] = x * s + y * c;
  return out;
};

const rotateS2 = _rotate(_sets.setS2, 0, 1);

exports.rotateS2 = rotateS2;

const rotateXS3 = _rotate(_sets.setS3, 1, 2);

exports.rotateXS3 = rotateXS3;

const rotateYS3 = _rotate(_sets.setS3, 2, 0);

exports.rotateYS3 = rotateYS3;

const rotateZS3 = _rotate(_sets.setS3, 0, 1);

exports.rotateZS3 = rotateZS3;
},{"./sets":"../node_modules/@thi.ng/vectors/sets.js"}],"../node_modules/@thi.ng/vectors/round.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.round4 = exports.round3 = exports.round2 = exports.round = void 0;

var _math = require("@thi.ng/math");

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [round, round2, round3, round4] = (0, _codegen.defHofOp)(_math.roundTo, (0, _templates.FN_N)("op"), "o,a,n=1", "o,a");
exports.round4 = round4;
exports.round3 = round3;
exports.round2 = round2;
exports.round = round;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/rshift.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rshiftNU4 = exports.rshiftNU3 = exports.rshiftNU2 = exports.rshiftNU = exports.rshiftNI4 = exports.rshiftNI3 = exports.rshiftNI2 = exports.rshiftNI = exports.rshiftU4 = exports.rshiftU3 = exports.rshiftU2 = exports.rshiftU = exports.rshiftI4 = exports.rshiftI3 = exports.rshiftI2 = exports.rshiftI = void 0;

var _codegen = require("./internal/codegen");

const [rshiftI, rshiftI2, rshiftI3, rshiftI4] = (0, _codegen.defBitOp)(">>", true);
exports.rshiftI4 = rshiftI4;
exports.rshiftI3 = rshiftI3;
exports.rshiftI2 = rshiftI2;
exports.rshiftI = rshiftI;
const [rshiftU, rshiftU2, rshiftU3, rshiftU4] = (0, _codegen.defBitOp)(">>>"); // prettier-ignore

exports.rshiftU4 = rshiftU4;
exports.rshiftU3 = rshiftU3;
exports.rshiftU2 = rshiftU2;
exports.rshiftU = rshiftU;
const [rshiftNI, rshiftNI2, rshiftNI3, rshiftNI4] = (0, _codegen.defBitOpN)(">>", true);
exports.rshiftNI4 = rshiftNI4;
exports.rshiftNI3 = rshiftNI3;
exports.rshiftNI2 = rshiftNI2;
exports.rshiftNI = rshiftNI;
const [rshiftNU, rshiftNU2, rshiftNU3, rshiftNU4] = (0, _codegen.defBitOpN)(">>>");
exports.rshiftNU4 = rshiftNU4;
exports.rshiftNU3 = rshiftNU3;
exports.rshiftNU2 = rshiftNU2;
exports.rshiftNU = rshiftNU;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/safe-div.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.safeDiv4 = exports.safeDiv3 = exports.safeDiv2 = exports.safeDiv = void 0;

var _math = require("@thi.ng/math");

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

/**
 * Componentwise application of {@link @thi.ng/math#safeDiv}.
 *
 * @param out -
 * @param a -
 * @param b -
 */
const [safeDiv, safeDiv2, safeDiv3, safeDiv4] = (0, _codegen.defHofOp)(_math.safeDiv, (0, _templates.FN2)("op"), _codegen.ARGS_VV);
exports.safeDiv4 = safeDiv4;
exports.safeDiv3 = safeDiv3;
exports.safeDiv2 = safeDiv2;
exports.safeDiv = safeDiv;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/setns.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setNS4 = exports.setNS3 = exports.setNS2 = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [setNS2, setNS3, setNS4] = (0, _codegen.defOpS)(_templates.SET_N, "o,n,io=0,so=1", "o", "o", "");
exports.setNS4 = setNS4;
exports.setNS3 = setNS3;
exports.setNS2 = setNS2;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/setvn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setVN4 = exports.setVN3 = void 0;

var _setc = require("./setc");

/**
 * Sets `out` to `[a.x, a.y, n]`
 *
 * @param out -
 * @param a -
 * @param n -
 */
const setVN3 = (out, a, n) => (0, _setc.setC3)(out, a[0], a[1], n);
/**
 * Sets `out` to `[a.x, a.y, a.z, n]`
 *
 * @param out -
 * @param a -
 * @param n -
 */


exports.setVN3 = setVN3;

const setVN4 = (out, a, n) => (0, _setc.setC4)(out, a[0], a[1], a[2], n);

exports.setVN4 = setVN4;
},{"./setc":"../node_modules/@thi.ng/vectors/setc.js"}],"../node_modules/@thi.ng/vectors/setvv.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setVV16 = exports.setVV9 = exports.setVV6 = exports.setVV4 = void 0;

var _setc = require("./setc");

/**
 * Sets `out` to `[a.x, a.y, b.x, b.y]`
 *
 * @param out -
 * @param a -
 * @param b -
 */
const setVV4 = (out, a, b) => (0, _setc.setC4)(out, a[0], a[1], b[0], b[1]);
/**
 * Sets `out` to `[a.x, a.y, b.x, b.y, c.x, c.y]`
 *
 * @param out -
 * @param a -
 * @param b -
 * @param c -
 */


exports.setVV4 = setVV4;

const setVV6 = (out, a, b, c) => (0, _setc.setC6)(out, a[0], a[1], b[0], b[1], c[0], c[1]);
/**
 * Sets `out` to:
 * `[a.x, a.y, a.z, b.x, b.y, b.z, c.x, c.y, c.z]`
 *
 * @param out -
 * @param a -
 * @param b -
 * @param c -
 */


exports.setVV6 = setVV6;

const setVV9 = (out, a, b, c) => (0, _setc.setC)(out, a[0], a[1], a[2], b[0], b[1], b[2], c[0], c[1], c[2]);
/**
 * Sets `out` to concatenation of `a`, `b`, `c`, `d`:
 *
 * @example
 * ```ts
 * [a.x, a.y, a.z, a.w, b.x, b.y, b.z, b.w,
 *  c.x, c.y, c.z, c.w, d.x, d.y, d.z, d.w]
 * ```
 *
 * @param out -
 * @param a -
 * @param b -
 * @param c -
 */


exports.setVV9 = setVV9;

const setVV16 = (out, a, b, c, d) => (0, _setc.setC)(out, a[0], a[1], a[2], a[3], b[0], b[1], b[2], b[3], c[0], c[1], c[2], c[3], d[0], d[1], d[2], d[3]);

exports.setVV16 = setVV16;
},{"./setc":"../node_modules/@thi.ng/vectors/setc.js"}],"../node_modules/@thi.ng/vectors/sign.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sign4 = exports.sign3 = exports.sign2 = exports.sign = void 0;

var _codegen = require("./internal/codegen");

const [sign, sign2, sign3, sign4] = (0, _codegen.defFnOp)("Math.sign");
exports.sign4 = sign4;
exports.sign3 = sign3;
exports.sign2 = sign2;
exports.sign = sign;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/sin.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sin4 = exports.sin3 = exports.sin2 = exports.sin = void 0;

var _codegen = require("./internal/codegen");

const [sin, sin2, sin3, sin4] = (0, _codegen.defFnOp)("Math.sin");
exports.sin4 = sin4;
exports.sin3 = sin3;
exports.sin2 = sin2;
exports.sin = sin;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/sinh.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sinh4 = exports.sinh3 = exports.sinh2 = exports.sinh = void 0;

var _codegen = require("./internal/codegen");

const [sinh, sinh2, sinh3, sinh4] = (0, _codegen.defFnOp)("Math.sinh");
exports.sinh4 = sinh4;
exports.sinh3 = sinh3;
exports.sinh2 = sinh2;
exports.sinh = sinh;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/some.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.some4 = exports.some3 = exports.some2 = exports.some = void 0;

var _vop = require("./internal/vop");

/**
 * Returns returns true if at least one vector component in `v` is
 * truthy.
 *
 * @param v -
 */
const some = (0, _vop.vop)();
exports.some = some;
some.default(v => {
  for (let i = v.length; --i >= 0;) {
    if (v[i]) return true;
  }

  return false;
});
const some2 = some.add(2, a => a[0] || a[1]);
exports.some2 = some2;
const some3 = some.add(3, a => a[0] || a[1] || a[2]);
exports.some3 = some3;
const some4 = some.add(4, a => a[0] || a[1] || a[2] || a[3]);
exports.some4 = some4;
},{"./internal/vop":"../node_modules/@thi.ng/vectors/internal/vop.js"}],"../node_modules/@thi.ng/vectors/sqrt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sqrt4 = exports.sqrt3 = exports.sqrt2 = exports.sqrt = void 0;

var _codegen = require("./internal/codegen");

const [sqrt, sqrt2, sqrt3, sqrt4] = (0, _codegen.defFnOp)("Math.sqrt");
exports.sqrt4 = sqrt4;
exports.sqrt3 = sqrt3;
exports.sqrt2 = sqrt2;
exports.sqrt = sqrt;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/step.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.step4 = exports.step3 = exports.step2 = exports.step = void 0;

var _math = require("@thi.ng/math");

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

/**
 * Like GLSL `step()`
 *
 * @param out -
 * @param e -
 * @param v -
 */
const [step, step2, step3, step4] = (0, _codegen.defHofOp)(_math.step, (0, _templates.FN2)("op"), "o,e,a", undefined, "o", 2, _codegen.DEFAULT_OUT);
exports.step4 = step4;
exports.step3 = step3;
exports.step2 = step2;
exports.step = step;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/smoothstep.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.smoothStep4 = exports.smoothStep3 = exports.smoothStep2 = exports.smoothStep = void 0;

var _math = require("@thi.ng/math");

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

/**
 * Like GLSL `smoothstep()`
 *
 * @param out -
 * @param e1 -
 * @param e2 -
 * @param v -
 */
const [smoothStep, smoothStep2, smoothStep3, smoothStep4] = (0, _codegen.defHofOp)(_math.smoothStep, (0, _templates.FN3)(), "o,e1,e2,a", undefined, "o", 3, _codegen.DEFAULT_OUT);
exports.smoothStep4 = smoothStep4;
exports.smoothStep3 = smoothStep3;
exports.smoothStep2 = smoothStep2;
exports.smoothStep = smoothStep;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/subi.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.subNU4 = exports.subNU3 = exports.subNU2 = exports.subNU = exports.subNI4 = exports.subNI3 = exports.subNI2 = exports.subNI = exports.subU4 = exports.subU3 = exports.subU2 = exports.subU = exports.subI4 = exports.subI3 = exports.subI2 = exports.subI = void 0;

var _codegen = require("./internal/codegen");

const [subI, subI2, subI3, subI4] = (0, _codegen.defBitOp)("-", true);
exports.subI4 = subI4;
exports.subI3 = subI3;
exports.subI2 = subI2;
exports.subI = subI;
const [subU, subU2, subU3, subU4] = (0, _codegen.defBitOp)("-");
exports.subU4 = subU4;
exports.subU3 = subU3;
exports.subU2 = subU2;
exports.subU = subU;
const [subNI, subNI2, subNI3, subNI4] = (0, _codegen.defBitOpN)("-", true);
exports.subNI4 = subNI4;
exports.subNI3 = subNI3;
exports.subNI2 = subNI2;
exports.subNI = subNI;
const [subNU, subNU2, subNU3, subNU4] = (0, _codegen.defBitOpN)("-");
exports.subNU4 = subNU4;
exports.subNU3 = subNU3;
exports.subNU2 = subNU2;
exports.subNU = subNU;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/subm.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.subm4 = exports.subm3 = exports.subm2 = exports.subm = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

/**
 * Returns `out = (a - b) * c`.
 *
 * - {@link madd}
 * - {@link addm}
 */
const [subm, subm2, subm3, subm4] = (0, _codegen.defOp)((0, _templates.MATH2)("-", "*"), _codegen.ARGS_VVV);
exports.subm4 = subm4;
exports.subm3 = subm3;
exports.subm2 = subm2;
exports.subm = subm;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/subms.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.submS4 = exports.submS3 = exports.submS2 = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [submS2, submS3, submS4] = (0, _codegen.defOpS)((0, _templates.MATH2)("-", "*"), `${_codegen.ARGS_VVV},${_codegen.SARGS_VVV}`, _codegen.ARGS_VVV);
exports.submS4 = submS4;
exports.submS3 = submS3;
exports.submS2 = submS2;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/submns.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.submNS4 = exports.submNS3 = exports.submNS2 = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [submNS2, submNS3, submNS4] = (0, _codegen.defOpS)((0, _templates.MATH2_N)("-", "*"), `${_codegen.ARGS_VVN},${_codegen.SARGS_VV}`);
exports.submNS4 = submNS4;
exports.submNS3 = submNS3;
exports.submNS2 = submNS2;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/subn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.subN4 = exports.subN3 = exports.subN2 = exports.subN = void 0;

var _codegen = require("./internal/codegen");

const [subN, subN2, subN3, subN4] = (0, _codegen.defMathOpN)("-");
exports.subN4 = subN4;
exports.subN3 = subN3;
exports.subN2 = subN2;
exports.subN = subN;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/subs.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.subS4 = exports.subS3 = exports.subS2 = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [subS2, subS3, subS4] = (0, _codegen.defOpS)((0, _templates.MATH)("-"));
exports.subS4 = subS4;
exports.subS3 = subS3;
exports.subS2 = subS2;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/subns.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.subNS4 = exports.subNS3 = exports.subNS2 = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [subNS2, subNS3, subNS4] = (0, _codegen.defOpS)((0, _templates.MATH_N)("-"), `${_codegen.ARGS_VN},${_codegen.SARGS_V}`, _codegen.ARGS_V);
exports.subNS4 = subNS4;
exports.subNS3 = subNS3;
exports.subNS2 = subNS2;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/sum.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sum4 = exports.sum3 = exports.sum2 = exports.sum = void 0;

var _transducers = require("@thi.ng/transducers");

var _vop = require("./internal/vop");

/**
 * Returns component sum of vector `v`.
 *
 * @param v -
 */
const sum = (0, _vop.vop)();
exports.sum = sum;
sum.default(v => (0, _transducers.reduce)((0, _transducers.add)(), v));
const sum2 = sum.add(2, a => a[0] + a[1]);
exports.sum2 = sum2;
const sum3 = sum.add(3, a => a[0] + a[1] + a[2]);
exports.sum3 = sum3;
const sum4 = sum.add(4, a => a[0] + a[1] + a[2] + a[3]);
exports.sum4 = sum4;
},{"@thi.ng/transducers":"../node_modules/@thi.ng/transducers/index.js","./internal/vop":"../node_modules/@thi.ng/vectors/internal/vop.js"}],"../node_modules/@thi.ng/vectors/swizzle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setSwizzle4 = exports.setSwizzle3 = exports.setSwizzle2 = exports.setSwizzle1 = exports.swapYZ = exports.swapXZ = exports.swapXY = exports.swizzle4 = exports.swizzle3 = exports.swizzle2 = void 0;

var _setc = require("./setc");

/**
 * Places a re-ordered 2D version of vector `a` into `out`. The given
 * coord indices must be valid for `a`. No bounds checking.
 *
 * @param out -
 * @param a -
 * @param x - new x coord index
 * @param y - new y coord index
 */
const swizzle2 = (out, a, x, y) => (0, _setc.setC2)(out || a, a[x] || 0, a[y] || 0);
/**
 * Places a re-ordered 3D version of vector `a` into `out`. The given
 * coord indices must be valid for `a`. No bounds checking.
 *
 * @param out -
 * @param a -
 * @param x - new x coord index
 * @param y - new y coord index
 * @param z - new z coord index
 */


exports.swizzle2 = swizzle2;

const swizzle3 = (out, a, x, y, z) => (0, _setc.setC3)(out || a, a[x] || 0, a[y] || 0, a[z] || 0);
/**
 * Places a re-ordered 4D version of vector `a` into `out`. The given
 * coord indices must be valid for `a`. No bounds checking.
 *
 * @param out -
 * @param a -
 * @param x - new x coord index
 * @param y - new y coord index
 * @param z - new z coord index
 * @param w - new w coord index
 */


exports.swizzle3 = swizzle3;

const swizzle4 = (out, a, x, y, z, w) => (0, _setc.setC4)(out || a, a[x] || 0, a[y] || 0, a[z] || 0, a[w] || 0);

exports.swizzle4 = swizzle4;

const swapXY = (out, v) => swizzle3(out, v, 1, 0, 2);

exports.swapXY = swapXY;

const swapXZ = (out, v) => swizzle3(out, v, 2, 1, 0);

exports.swapXZ = swapXZ;

const swapYZ = (out, v) => swizzle3(out, v, 0, 2, 1);
/**
 * Sets `out[a] = n`, returns `out`.
 *
 * @param out -
 * @param n -
 * @param a -
 */


exports.swapYZ = swapYZ;

const setSwizzle1 = (out, n, a) => (out[a] = n, out);
/**
 * Sets `out[a] = v.x, out[b] = v.y`, returns `out`.
 *
 * @param out -
 * @param v -
 * @param a -
 * @param b -
 */


exports.setSwizzle1 = setSwizzle1;

const setSwizzle2 = (out, v, a, b) => ((out[a] = v[0], out[b] = v[1]), out);
/**
 * Sets `out[a] = v.x, out[b] = v.y, out[c] = v.z`, returns `out`.
 *
 * @param out -
 * @param v -
 * @param a -
 * @param b -
 * @param c -
 */


exports.setSwizzle2 = setSwizzle2;

const setSwizzle3 = (out, v, a, b, c) => ((out[a] = v[0], out[b] = v[1], out[c] = v[2]), out);
/**
 * Sets `out[a] = v.x, out[b] = v.y, out[c] = v.z, out[d]=v.w`, returns `out`.
 *
 * @param out -
 * @param v -
 * @param a -
 * @param b -
 * @param c -
 * @param d -
 */


exports.setSwizzle3 = setSwizzle3;

const setSwizzle4 = (out, v, a, b, c, d) => ((out[a] = v[0], out[b] = v[1], out[c] = v[2], out[d] = v[3]), out);

exports.setSwizzle4 = setSwizzle4;
},{"./setc":"../node_modules/@thi.ng/vectors/setc.js"}],"../node_modules/@thi.ng/vectors/tan.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tan4 = exports.tan3 = exports.tan2 = exports.tan = void 0;

var _codegen = require("./internal/codegen");

const [tan, tan2, tan3, tan4] = (0, _codegen.defFnOp)("Math.tan");
exports.tan4 = tan4;
exports.tan3 = tan3;
exports.tan2 = tan2;
exports.tan = tan;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/tanh.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tanh4 = exports.tanh3 = exports.tanh2 = exports.tanh = void 0;

var _codegen = require("./internal/codegen");

const [tanh, tanh2, tanh3, tanh4] = (0, _codegen.defFnOp)("Math.tanh");
exports.tanh4 = tanh4;
exports.tanh3 = tanh3;
exports.tanh2 = tanh2;
exports.tanh = tanh;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/trunc.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.trunc4 = exports.trunc3 = exports.trunc2 = exports.trunc = void 0;

var _codegen = require("./internal/codegen");

const [trunc, trunc2, trunc3, trunc4] = (0, _codegen.defFnOp)("Math.trunc");
exports.trunc4 = trunc4;
exports.trunc3 = trunc3;
exports.trunc2 = trunc2;
exports.trunc = trunc;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js"}],"../node_modules/@thi.ng/vectors/vec-of.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.vecOf = void 0;

/**
 * Returns new vector of `size` with all components set to `n`.
 *
 * @param size -
 * @param n -
 */
const vecOf = (size, n = 0) => new Array(size).fill(n);

exports.vecOf = vecOf;
},{}],"../node_modules/@thi.ng/vectors/wrap.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.wrap4 = exports.wrap3 = exports.wrap2 = exports.wrap = void 0;

var _math = require("@thi.ng/math");

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [wrap, wrap2, wrap3, wrap4] = (0, _codegen.defHofOp)(_math.wrap, (0, _templates.FN3)(), _codegen.ARGS_VVV);
exports.wrap4 = wrap4;
exports.wrap3 = wrap3;
exports.wrap2 = wrap2;
exports.wrap = wrap;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/eq.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.eq4 = exports.eq3 = exports.eq2 = exports.eq = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [eq, eq2, eq3, eq4] = (0, _codegen.defOp)((0, _templates.MATH)("==="));
exports.eq4 = eq4;
exports.eq3 = eq3;
exports.eq2 = eq2;
exports.eq = eq;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/neq.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.neq4 = exports.neq3 = exports.neq2 = exports.neq = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [neq, neq2, neq3, neq4] = (0, _codegen.defOp)((0, _templates.MATH)("!=="));
exports.neq4 = neq4;
exports.neq3 = neq3;
exports.neq2 = neq2;
exports.neq = neq;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/gt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.gt4 = exports.gt3 = exports.gt2 = exports.gt = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [gt, gt2, gt3, gt4] = (0, _codegen.defOp)((0, _templates.MATH)(">"));
exports.gt4 = gt4;
exports.gt3 = gt3;
exports.gt2 = gt2;
exports.gt = gt;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/gte.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.gte4 = exports.gte3 = exports.gte2 = exports.gte = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [gte, gte2, gte3, gte4] = (0, _codegen.defOp)((0, _templates.MATH)(">="));
exports.gte4 = gte4;
exports.gte3 = gte3;
exports.gte2 = gte2;
exports.gte = gte;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/lt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.lt4 = exports.lt3 = exports.lt2 = exports.lt = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [lt, lt2, lt3, lt4] = (0, _codegen.defOp)((0, _templates.MATH)("<"));
exports.lt4 = lt4;
exports.lt3 = lt3;
exports.lt2 = lt2;
exports.lt = lt;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/lte.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.lte4 = exports.lte3 = exports.lte2 = exports.lte = void 0;

var _codegen = require("./internal/codegen");

var _templates = require("./internal/templates");

const [lte, lte2, lte3, lte4] = (0, _codegen.defOp)((0, _templates.MATH)("<="));
exports.lte4 = lte4;
exports.lte3 = lte3;
exports.lte2 = lte2;
exports.lte = lte;
},{"./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js"}],"../node_modules/@thi.ng/vectors/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _api = require("./api");

Object.keys(_api).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _api[key];
    }
  });
});

var _accessors = require("./internal/accessors");

Object.keys(_accessors).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _accessors[key];
    }
  });
});

var _avec = require("./internal/avec");

Object.keys(_avec).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _avec[key];
    }
  });
});

var _codegen = require("./internal/codegen");

Object.keys(_codegen).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _codegen[key];
    }
  });
});

var _templates = require("./internal/templates");

Object.keys(_templates).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _templates[key];
    }
  });
});

var _vecUtils = require("./internal/vec-utils");

Object.keys(_vecUtils).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _vecUtils[key];
    }
  });
});

var _vop = require("./internal/vop");

Object.keys(_vop).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _vop[key];
    }
  });
});

var _vec = require("./vec2");

Object.keys(_vec).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _vec[key];
    }
  });
});

var _vec2 = require("./vec3");

Object.keys(_vec2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _vec2[key];
    }
  });
});

var _vec3 = require("./vec4");

Object.keys(_vec3).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _vec3[key];
    }
  });
});

var _abs = require("./abs");

Object.keys(_abs).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _abs[key];
    }
  });
});

var _acos = require("./acos");

Object.keys(_acos).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _acos[key];
    }
  });
});

var _addw = require("./addw");

Object.keys(_addw).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _addw[key];
    }
  });
});

var _add = require("./add");

Object.keys(_add).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _add[key];
    }
  });
});

var _addi = require("./addi");

Object.keys(_addi).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _addi[key];
    }
  });
});

var _addm = require("./addm");

Object.keys(_addm).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _addm[key];
    }
  });
});

var _addmn = require("./addmn");

Object.keys(_addmn).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _addmn[key];
    }
  });
});

var _addms = require("./addms");

Object.keys(_addms).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _addms[key];
    }
  });
});

var _addmns = require("./addmns");

Object.keys(_addmns).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _addmns[key];
    }
  });
});

var _addn = require("./addn");

Object.keys(_addn).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _addn[key];
    }
  });
});

var _adds = require("./adds");

Object.keys(_adds).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _adds[key];
    }
  });
});

var _addns = require("./addns");

Object.keys(_addns).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _addns[key];
    }
  });
});

var _angleBetween = require("./angle-between");

Object.keys(_angleBetween).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _angleBetween[key];
    }
  });
});

var _asin = require("./asin");

Object.keys(_asin).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _asin[key];
    }
  });
});

var _atan = require("./atan");

Object.keys(_atan).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _atan[key];
    }
  });
});

var _bisect = require("./bisect");

Object.keys(_bisect).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _bisect[key];
    }
  });
});

var _bitAnd = require("./bit-and");

Object.keys(_bitAnd).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _bitAnd[key];
    }
  });
});

var _bitNot = require("./bit-not");

Object.keys(_bitNot).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _bitNot[key];
    }
  });
});

var _bitOr = require("./bit-or");

Object.keys(_bitOr).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _bitOr[key];
    }
  });
});

var _bitXor = require("./bit-xor");

Object.keys(_bitXor).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _bitXor[key];
    }
  });
});

var _buffer = require("./buffer");

Object.keys(_buffer).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _buffer[key];
    }
  });
});

var _cartesian = require("./cartesian");

Object.keys(_cartesian).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _cartesian[key];
    }
  });
});

var _ceil = require("./ceil");

Object.keys(_ceil).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _ceil[key];
    }
  });
});

var _clamp = require("./clamp");

Object.keys(_clamp).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _clamp[key];
    }
  });
});

var _clampn = require("./clampn");

Object.keys(_clampn).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _clampn[key];
    }
  });
});

var _clockwise = require("./clockwise");

Object.keys(_clockwise).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _clockwise[key];
    }
  });
});

var _compare = require("./compare");

Object.keys(_compare).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _compare[key];
    }
  });
});

var _convert = require("./convert");

Object.keys(_convert).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _convert[key];
    }
  });
});

var _copy = require("./copy");

Object.keys(_copy).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _copy[key];
    }
  });
});

var _cos = require("./cos");

Object.keys(_cos).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _cos[key];
    }
  });
});

var _cosh = require("./cosh");

Object.keys(_cosh).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _cosh[key];
    }
  });
});

var _cross = require("./cross");

Object.keys(_cross).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _cross[key];
    }
  });
});

var _crosss = require("./crosss");

Object.keys(_crosss).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _crosss[key];
    }
  });
});

var _degrees = require("./degrees");

Object.keys(_degrees).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _degrees[key];
    }
  });
});

var _direction = require("./direction");

Object.keys(_direction).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _direction[key];
    }
  });
});

var _dist = require("./dist");

Object.keys(_dist).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _dist[key];
    }
  });
});

var _distChebyshev = require("./dist-chebyshev");

Object.keys(_distChebyshev).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _distChebyshev[key];
    }
  });
});

var _distManhattan = require("./dist-manhattan");

Object.keys(_distManhattan).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _distManhattan[key];
    }
  });
});

var _distsq = require("./distsq");

Object.keys(_distsq).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _distsq[key];
    }
  });
});

var _div = require("./div");

Object.keys(_div).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _div[key];
    }
  });
});

var _divi = require("./divi");

Object.keys(_divi).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _divi[key];
    }
  });
});

var _divn = require("./divn");

Object.keys(_divn).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _divn[key];
    }
  });
});

var _divs = require("./divs");

Object.keys(_divs).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _divs[key];
    }
  });
});

var _divns = require("./divns");

Object.keys(_divns).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _divns[key];
    }
  });
});

var _dot = require("./dot");

Object.keys(_dot).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _dot[key];
    }
  });
});

var _dotc = require("./dotc");

Object.keys(_dotc).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _dotc[key];
    }
  });
});

var _dots = require("./dots");

Object.keys(_dots).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _dots[key];
    }
  });
});

var _empty = require("./empty");

Object.keys(_empty).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _empty[key];
    }
  });
});

var _eqdelta = require("./eqdelta");

Object.keys(_eqdelta).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _eqdelta[key];
    }
  });
});

var _equals = require("./equals");

Object.keys(_equals).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _equals[key];
    }
  });
});

var _every = require("./every");

Object.keys(_every).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _every[key];
    }
  });
});

var _exp = require("./exp");

Object.keys(_exp).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _exp[key];
    }
  });
});

var _exp_ = require("./exp_2");

Object.keys(_exp_).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _exp_[key];
    }
  });
});

var _faceForward = require("./face-forward");

Object.keys(_faceForward).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _faceForward[key];
    }
  });
});

var _fill = require("./fill");

Object.keys(_fill).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _fill[key];
    }
  });
});

var _fit = require("./fit");

Object.keys(_fit).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _fit[key];
    }
  });
});

var _floor = require("./floor");

Object.keys(_floor).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _floor[key];
    }
  });
});

var _fmod = require("./fmod");

Object.keys(_fmod).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _fmod[key];
    }
  });
});

var _fmodn = require("./fmodn");

Object.keys(_fmodn).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _fmodn[key];
    }
  });
});

var _fract = require("./fract");

Object.keys(_fract).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _fract[key];
    }
  });
});

var _gvec = require("./gvec");

Object.keys(_gvec).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _gvec[key];
    }
  });
});

var _hash = require("./hash");

Object.keys(_hash).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _hash[key];
    }
  });
});

var _heading = require("./heading");

Object.keys(_heading).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _heading[key];
    }
  });
});

var _headingSegment = require("./heading-segment");

Object.keys(_headingSegment).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _headingSegment[key];
    }
  });
});

var _homogeneous = require("./homogeneous");

Object.keys(_homogeneous).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _homogeneous[key];
    }
  });
});

var _invert = require("./invert");

Object.keys(_invert).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _invert[key];
    }
  });
});

var _invsqrt = require("./invsqrt");

Object.keys(_invsqrt).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _invsqrt[key];
    }
  });
});

var _isInf = require("./is-inf");

Object.keys(_isInf).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isInf[key];
    }
  });
});

var _isNan = require("./is-nan");

Object.keys(_isNan).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _isNan[key];
    }
  });
});

var _jitter = require("./jitter");

Object.keys(_jitter).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _jitter[key];
    }
  });
});

var _limit = require("./limit");

Object.keys(_limit).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _limit[key];
    }
  });
});

var _log = require("./log");

Object.keys(_log).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _log[key];
    }
  });
});

var _log_ = require("./log_2");

Object.keys(_log_).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _log_[key];
    }
  });
});

var _logicAnd = require("./logic-and");

Object.keys(_logicAnd).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _logicAnd[key];
    }
  });
});

var _logicNot = require("./logic-not");

Object.keys(_logicNot).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _logicNot[key];
    }
  });
});

var _logicOr = require("./logic-or");

Object.keys(_logicOr).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _logicOr[key];
    }
  });
});

var _lshift = require("./lshift");

Object.keys(_lshift).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _lshift[key];
    }
  });
});

var _madd = require("./madd");

Object.keys(_madd).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _madd[key];
    }
  });
});

var _maddn = require("./maddn");

Object.keys(_maddn).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _maddn[key];
    }
  });
});

var _madds = require("./madds");

Object.keys(_madds).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _madds[key];
    }
  });
});

var _maddns = require("./maddns");

Object.keys(_maddns).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _maddns[key];
    }
  });
});

var _mag = require("./mag");

Object.keys(_mag).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _mag[key];
    }
  });
});

var _mags = require("./mags");

Object.keys(_mags).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _mags[key];
    }
  });
});

var _magsq = require("./magsq");

Object.keys(_magsq).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _magsq[key];
    }
  });
});

var _magsqs = require("./magsqs");

Object.keys(_magsqs).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _magsqs[key];
    }
  });
});

var _major = require("./major");

Object.keys(_major).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _major[key];
    }
  });
});

var _map = require("./map");

Object.keys(_map).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _map[key];
    }
  });
});

var _mapVectors = require("./map-vectors");

Object.keys(_mapVectors).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _mapVectors[key];
    }
  });
});

var _max = require("./max");

Object.keys(_max).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _max[key];
    }
  });
});

var _min = require("./min");

Object.keys(_min).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _min[key];
    }
  });
});

var _minor = require("./minor");

Object.keys(_minor).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _minor[key];
    }
  });
});

var _mixBilinear = require("./mix-bilinear");

Object.keys(_mixBilinear).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _mixBilinear[key];
    }
  });
});

var _mixCubic = require("./mix-cubic");

Object.keys(_mixCubic).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _mixCubic[key];
    }
  });
});

var _mixHermite = require("./mix-hermite");

Object.keys(_mixHermite).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _mixHermite[key];
    }
  });
});

var _mixQuadratic = require("./mix-quadratic");

Object.keys(_mixQuadratic).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _mixQuadratic[key];
    }
  });
});

var _mix = require("./mix");

Object.keys(_mix).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _mix[key];
    }
  });
});

var _mixn = require("./mixn");

Object.keys(_mixn).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _mixn[key];
    }
  });
});

var _mixs = require("./mixs");

Object.keys(_mixs).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _mixs[key];
    }
  });
});

var _mixns = require("./mixns");

Object.keys(_mixns).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _mixns[key];
    }
  });
});

var _mod = require("./mod");

Object.keys(_mod).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _mod[key];
    }
  });
});

var _modn = require("./modn");

Object.keys(_modn).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _modn[key];
    }
  });
});

var _msub = require("./msub");

Object.keys(_msub).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _msub[key];
    }
  });
});

var _msubn = require("./msubn");

Object.keys(_msubn).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _msubn[key];
    }
  });
});

var _msubs = require("./msubs");

Object.keys(_msubs).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _msubs[key];
    }
  });
});

var _msubns = require("./msubns");

Object.keys(_msubns).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _msubns[key];
    }
  });
});

var _mul = require("./mul");

Object.keys(_mul).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _mul[key];
    }
  });
});

var _muli = require("./muli");

Object.keys(_muli).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _muli[key];
    }
  });
});

var _muln = require("./muln");

Object.keys(_muln).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _muln[key];
    }
  });
});

var _muls = require("./muls");

Object.keys(_muls).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _muls[key];
    }
  });
});

var _mulns = require("./mulns");

Object.keys(_mulns).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _mulns[key];
    }
  });
});

var _neg = require("./neg");

Object.keys(_neg).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _neg[key];
    }
  });
});

var _normal = require("./normal");

Object.keys(_normal).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _normal[key];
    }
  });
});

var _normalize = require("./normalize");

Object.keys(_normalize).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _normalize[key];
    }
  });
});

var _normalizes = require("./normalizes");

Object.keys(_normalizes).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _normalizes[key];
    }
  });
});

var _not = require("./not");

Object.keys(_not).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _not[key];
    }
  });
});

var _orthoNormal = require("./ortho-normal");

Object.keys(_orthoNormal).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _orthoNormal[key];
    }
  });
});

var _perpendicular = require("./perpendicular");

Object.keys(_perpendicular).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _perpendicular[key];
    }
  });
});

var _pointOnRay = require("./point-on-ray");

Object.keys(_pointOnRay).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _pointOnRay[key];
    }
  });
});

var _polar = require("./polar");

Object.keys(_polar).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _polar[key];
    }
  });
});

var _pow = require("./pow");

Object.keys(_pow).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _pow[key];
    }
  });
});

var _pown = require("./pown");

Object.keys(_pown).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _pown[key];
    }
  });
});

var _project = require("./project");

Object.keys(_project).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _project[key];
    }
  });
});

var _radians = require("./radians");

Object.keys(_radians).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _radians[key];
    }
  });
});

var _random = require("./random");

Object.keys(_random).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _random[key];
    }
  });
});

var _randoms = require("./randoms");

Object.keys(_randoms).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _randoms[key];
    }
  });
});

var _reflect = require("./reflect");

Object.keys(_reflect).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _reflect[key];
    }
  });
});

var _refract = require("./refract");

Object.keys(_refract).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _refract[key];
    }
  });
});

var _rotateAroundAxis = require("./rotate-around-axis");

Object.keys(_rotateAroundAxis).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _rotateAroundAxis[key];
    }
  });
});

var _rotateAroundPoint = require("./rotate-around-point");

Object.keys(_rotateAroundPoint).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _rotateAroundPoint[key];
    }
  });
});

var _rotate = require("./rotate");

Object.keys(_rotate).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _rotate[key];
    }
  });
});

var _rotates = require("./rotates");

Object.keys(_rotates).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _rotates[key];
    }
  });
});

var _round = require("./round");

Object.keys(_round).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _round[key];
    }
  });
});

var _rshift = require("./rshift");

Object.keys(_rshift).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _rshift[key];
    }
  });
});

var _safeDiv = require("./safe-div");

Object.keys(_safeDiv).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _safeDiv[key];
    }
  });
});

var _set = require("./set");

Object.keys(_set).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _set[key];
    }
  });
});

var _setc = require("./setc");

Object.keys(_setc).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _setc[key];
    }
  });
});

var _setn = require("./setn");

Object.keys(_setn).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _setn[key];
    }
  });
});

var _sets = require("./sets");

Object.keys(_sets).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _sets[key];
    }
  });
});

var _setcs = require("./setcs");

Object.keys(_setcs).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _setcs[key];
    }
  });
});

var _setns = require("./setns");

Object.keys(_setns).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _setns[key];
    }
  });
});

var _setvn = require("./setvn");

Object.keys(_setvn).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _setvn[key];
    }
  });
});

var _setvv = require("./setvv");

Object.keys(_setvv).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _setvv[key];
    }
  });
});

var _sign = require("./sign");

Object.keys(_sign).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _sign[key];
    }
  });
});

var _signedArea = require("./signed-area");

Object.keys(_signedArea).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _signedArea[key];
    }
  });
});

var _sin = require("./sin");

Object.keys(_sin).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _sin[key];
    }
  });
});

var _sinh = require("./sinh");

Object.keys(_sinh).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _sinh[key];
    }
  });
});

var _some = require("./some");

Object.keys(_some).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _some[key];
    }
  });
});

var _sqrt = require("./sqrt");

Object.keys(_sqrt).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _sqrt[key];
    }
  });
});

var _step = require("./step");

Object.keys(_step).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _step[key];
    }
  });
});

var _smoothstep = require("./smoothstep");

Object.keys(_smoothstep).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _smoothstep[key];
    }
  });
});

var _sub = require("./sub");

Object.keys(_sub).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _sub[key];
    }
  });
});

var _subi = require("./subi");

Object.keys(_subi).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _subi[key];
    }
  });
});

var _subm = require("./subm");

Object.keys(_subm).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _subm[key];
    }
  });
});

var _submn = require("./submn");

Object.keys(_submn).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _submn[key];
    }
  });
});

var _subms = require("./subms");

Object.keys(_subms).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _subms[key];
    }
  });
});

var _submns = require("./submns");

Object.keys(_submns).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _submns[key];
    }
  });
});

var _subn = require("./subn");

Object.keys(_subn).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _subn[key];
    }
  });
});

var _subs = require("./subs");

Object.keys(_subs).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _subs[key];
    }
  });
});

var _subns = require("./subns");

Object.keys(_subns).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _subns[key];
    }
  });
});

var _sum = require("./sum");

Object.keys(_sum).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _sum[key];
    }
  });
});

var _swizzle = require("./swizzle");

Object.keys(_swizzle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _swizzle[key];
    }
  });
});

var _tan = require("./tan");

Object.keys(_tan).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _tan[key];
    }
  });
});

var _tanh = require("./tanh");

Object.keys(_tanh).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _tanh[key];
    }
  });
});

var _trunc = require("./trunc");

Object.keys(_trunc).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _trunc[key];
    }
  });
});

var _vecOf = require("./vec-of");

Object.keys(_vecOf).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _vecOf[key];
    }
  });
});

var _wrap = require("./wrap");

Object.keys(_wrap).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _wrap[key];
    }
  });
});

var _eq = require("./eq");

Object.keys(_eq).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _eq[key];
    }
  });
});

var _neq = require("./neq");

Object.keys(_neq).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _neq[key];
    }
  });
});

var _gt = require("./gt");

Object.keys(_gt).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _gt[key];
    }
  });
});

var _gte = require("./gte");

Object.keys(_gte).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _gte[key];
    }
  });
});

var _lt = require("./lt");

Object.keys(_lt).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _lt[key];
    }
  });
});

var _lte = require("./lte");

Object.keys(_lte).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _lte[key];
    }
  });
});
},{"./api":"../node_modules/@thi.ng/vectors/api.js","./internal/accessors":"../node_modules/@thi.ng/vectors/internal/accessors.js","./internal/avec":"../node_modules/@thi.ng/vectors/internal/avec.js","./internal/codegen":"../node_modules/@thi.ng/vectors/internal/codegen.js","./internal/templates":"../node_modules/@thi.ng/vectors/internal/templates.js","./internal/vec-utils":"../node_modules/@thi.ng/vectors/internal/vec-utils.js","./internal/vop":"../node_modules/@thi.ng/vectors/internal/vop.js","./vec2":"../node_modules/@thi.ng/vectors/vec2.js","./vec3":"../node_modules/@thi.ng/vectors/vec3.js","./vec4":"../node_modules/@thi.ng/vectors/vec4.js","./abs":"../node_modules/@thi.ng/vectors/abs.js","./acos":"../node_modules/@thi.ng/vectors/acos.js","./addw":"../node_modules/@thi.ng/vectors/addw.js","./add":"../node_modules/@thi.ng/vectors/add.js","./addi":"../node_modules/@thi.ng/vectors/addi.js","./addm":"../node_modules/@thi.ng/vectors/addm.js","./addmn":"../node_modules/@thi.ng/vectors/addmn.js","./addms":"../node_modules/@thi.ng/vectors/addms.js","./addmns":"../node_modules/@thi.ng/vectors/addmns.js","./addn":"../node_modules/@thi.ng/vectors/addn.js","./adds":"../node_modules/@thi.ng/vectors/adds.js","./addns":"../node_modules/@thi.ng/vectors/addns.js","./angle-between":"../node_modules/@thi.ng/vectors/angle-between.js","./asin":"../node_modules/@thi.ng/vectors/asin.js","./atan":"../node_modules/@thi.ng/vectors/atan.js","./bisect":"../node_modules/@thi.ng/vectors/bisect.js","./bit-and":"../node_modules/@thi.ng/vectors/bit-and.js","./bit-not":"../node_modules/@thi.ng/vectors/bit-not.js","./bit-or":"../node_modules/@thi.ng/vectors/bit-or.js","./bit-xor":"../node_modules/@thi.ng/vectors/bit-xor.js","./buffer":"../node_modules/@thi.ng/vectors/buffer.js","./cartesian":"../node_modules/@thi.ng/vectors/cartesian.js","./ceil":"../node_modules/@thi.ng/vectors/ceil.js","./clamp":"../node_modules/@thi.ng/vectors/clamp.js","./clampn":"../node_modules/@thi.ng/vectors/clampn.js","./clockwise":"../node_modules/@thi.ng/vectors/clockwise.js","./compare":"../node_modules/@thi.ng/vectors/compare.js","./convert":"../node_modules/@thi.ng/vectors/convert.js","./copy":"../node_modules/@thi.ng/vectors/copy.js","./cos":"../node_modules/@thi.ng/vectors/cos.js","./cosh":"../node_modules/@thi.ng/vectors/cosh.js","./cross":"../node_modules/@thi.ng/vectors/cross.js","./crosss":"../node_modules/@thi.ng/vectors/crosss.js","./degrees":"../node_modules/@thi.ng/vectors/degrees.js","./direction":"../node_modules/@thi.ng/vectors/direction.js","./dist":"../node_modules/@thi.ng/vectors/dist.js","./dist-chebyshev":"../node_modules/@thi.ng/vectors/dist-chebyshev.js","./dist-manhattan":"../node_modules/@thi.ng/vectors/dist-manhattan.js","./distsq":"../node_modules/@thi.ng/vectors/distsq.js","./div":"../node_modules/@thi.ng/vectors/div.js","./divi":"../node_modules/@thi.ng/vectors/divi.js","./divn":"../node_modules/@thi.ng/vectors/divn.js","./divs":"../node_modules/@thi.ng/vectors/divs.js","./divns":"../node_modules/@thi.ng/vectors/divns.js","./dot":"../node_modules/@thi.ng/vectors/dot.js","./dotc":"../node_modules/@thi.ng/vectors/dotc.js","./dots":"../node_modules/@thi.ng/vectors/dots.js","./empty":"../node_modules/@thi.ng/vectors/empty.js","./eqdelta":"../node_modules/@thi.ng/vectors/eqdelta.js","./equals":"../node_modules/@thi.ng/vectors/equals.js","./every":"../node_modules/@thi.ng/vectors/every.js","./exp":"../node_modules/@thi.ng/vectors/exp.js","./exp_2":"../node_modules/@thi.ng/vectors/exp_2.js","./face-forward":"../node_modules/@thi.ng/vectors/face-forward.js","./fill":"../node_modules/@thi.ng/vectors/fill.js","./fit":"../node_modules/@thi.ng/vectors/fit.js","./floor":"../node_modules/@thi.ng/vectors/floor.js","./fmod":"../node_modules/@thi.ng/vectors/fmod.js","./fmodn":"../node_modules/@thi.ng/vectors/fmodn.js","./fract":"../node_modules/@thi.ng/vectors/fract.js","./gvec":"../node_modules/@thi.ng/vectors/gvec.js","./hash":"../node_modules/@thi.ng/vectors/hash.js","./heading":"../node_modules/@thi.ng/vectors/heading.js","./heading-segment":"../node_modules/@thi.ng/vectors/heading-segment.js","./homogeneous":"../node_modules/@thi.ng/vectors/homogeneous.js","./invert":"../node_modules/@thi.ng/vectors/invert.js","./invsqrt":"../node_modules/@thi.ng/vectors/invsqrt.js","./is-inf":"../node_modules/@thi.ng/vectors/is-inf.js","./is-nan":"../node_modules/@thi.ng/vectors/is-nan.js","./jitter":"../node_modules/@thi.ng/vectors/jitter.js","./limit":"../node_modules/@thi.ng/vectors/limit.js","./log":"../node_modules/@thi.ng/vectors/log.js","./log_2":"../node_modules/@thi.ng/vectors/log_2.js","./logic-and":"../node_modules/@thi.ng/vectors/logic-and.js","./logic-not":"../node_modules/@thi.ng/vectors/logic-not.js","./logic-or":"../node_modules/@thi.ng/vectors/logic-or.js","./lshift":"../node_modules/@thi.ng/vectors/lshift.js","./madd":"../node_modules/@thi.ng/vectors/madd.js","./maddn":"../node_modules/@thi.ng/vectors/maddn.js","./madds":"../node_modules/@thi.ng/vectors/madds.js","./maddns":"../node_modules/@thi.ng/vectors/maddns.js","./mag":"../node_modules/@thi.ng/vectors/mag.js","./mags":"../node_modules/@thi.ng/vectors/mags.js","./magsq":"../node_modules/@thi.ng/vectors/magsq.js","./magsqs":"../node_modules/@thi.ng/vectors/magsqs.js","./major":"../node_modules/@thi.ng/vectors/major.js","./map":"../node_modules/@thi.ng/vectors/map.js","./map-vectors":"../node_modules/@thi.ng/vectors/map-vectors.js","./max":"../node_modules/@thi.ng/vectors/max.js","./min":"../node_modules/@thi.ng/vectors/min.js","./minor":"../node_modules/@thi.ng/vectors/minor.js","./mix-bilinear":"../node_modules/@thi.ng/vectors/mix-bilinear.js","./mix-cubic":"../node_modules/@thi.ng/vectors/mix-cubic.js","./mix-hermite":"../node_modules/@thi.ng/vectors/mix-hermite.js","./mix-quadratic":"../node_modules/@thi.ng/vectors/mix-quadratic.js","./mix":"../node_modules/@thi.ng/vectors/mix.js","./mixn":"../node_modules/@thi.ng/vectors/mixn.js","./mixs":"../node_modules/@thi.ng/vectors/mixs.js","./mixns":"../node_modules/@thi.ng/vectors/mixns.js","./mod":"../node_modules/@thi.ng/vectors/mod.js","./modn":"../node_modules/@thi.ng/vectors/modn.js","./msub":"../node_modules/@thi.ng/vectors/msub.js","./msubn":"../node_modules/@thi.ng/vectors/msubn.js","./msubs":"../node_modules/@thi.ng/vectors/msubs.js","./msubns":"../node_modules/@thi.ng/vectors/msubns.js","./mul":"../node_modules/@thi.ng/vectors/mul.js","./muli":"../node_modules/@thi.ng/vectors/muli.js","./muln":"../node_modules/@thi.ng/vectors/muln.js","./muls":"../node_modules/@thi.ng/vectors/muls.js","./mulns":"../node_modules/@thi.ng/vectors/mulns.js","./neg":"../node_modules/@thi.ng/vectors/neg.js","./normal":"../node_modules/@thi.ng/vectors/normal.js","./normalize":"../node_modules/@thi.ng/vectors/normalize.js","./normalizes":"../node_modules/@thi.ng/vectors/normalizes.js","./not":"../node_modules/@thi.ng/vectors/not.js","./ortho-normal":"../node_modules/@thi.ng/vectors/ortho-normal.js","./perpendicular":"../node_modules/@thi.ng/vectors/perpendicular.js","./point-on-ray":"../node_modules/@thi.ng/vectors/point-on-ray.js","./polar":"../node_modules/@thi.ng/vectors/polar.js","./pow":"../node_modules/@thi.ng/vectors/pow.js","./pown":"../node_modules/@thi.ng/vectors/pown.js","./project":"../node_modules/@thi.ng/vectors/project.js","./radians":"../node_modules/@thi.ng/vectors/radians.js","./random":"../node_modules/@thi.ng/vectors/random.js","./randoms":"../node_modules/@thi.ng/vectors/randoms.js","./reflect":"../node_modules/@thi.ng/vectors/reflect.js","./refract":"../node_modules/@thi.ng/vectors/refract.js","./rotate-around-axis":"../node_modules/@thi.ng/vectors/rotate-around-axis.js","./rotate-around-point":"../node_modules/@thi.ng/vectors/rotate-around-point.js","./rotate":"../node_modules/@thi.ng/vectors/rotate.js","./rotates":"../node_modules/@thi.ng/vectors/rotates.js","./round":"../node_modules/@thi.ng/vectors/round.js","./rshift":"../node_modules/@thi.ng/vectors/rshift.js","./safe-div":"../node_modules/@thi.ng/vectors/safe-div.js","./set":"../node_modules/@thi.ng/vectors/set.js","./setc":"../node_modules/@thi.ng/vectors/setc.js","./setn":"../node_modules/@thi.ng/vectors/setn.js","./sets":"../node_modules/@thi.ng/vectors/sets.js","./setcs":"../node_modules/@thi.ng/vectors/setcs.js","./setns":"../node_modules/@thi.ng/vectors/setns.js","./setvn":"../node_modules/@thi.ng/vectors/setvn.js","./setvv":"../node_modules/@thi.ng/vectors/setvv.js","./sign":"../node_modules/@thi.ng/vectors/sign.js","./signed-area":"../node_modules/@thi.ng/vectors/signed-area.js","./sin":"../node_modules/@thi.ng/vectors/sin.js","./sinh":"../node_modules/@thi.ng/vectors/sinh.js","./some":"../node_modules/@thi.ng/vectors/some.js","./sqrt":"../node_modules/@thi.ng/vectors/sqrt.js","./step":"../node_modules/@thi.ng/vectors/step.js","./smoothstep":"../node_modules/@thi.ng/vectors/smoothstep.js","./sub":"../node_modules/@thi.ng/vectors/sub.js","./subi":"../node_modules/@thi.ng/vectors/subi.js","./subm":"../node_modules/@thi.ng/vectors/subm.js","./submn":"../node_modules/@thi.ng/vectors/submn.js","./subms":"../node_modules/@thi.ng/vectors/subms.js","./submns":"../node_modules/@thi.ng/vectors/submns.js","./subn":"../node_modules/@thi.ng/vectors/subn.js","./subs":"../node_modules/@thi.ng/vectors/subs.js","./subns":"../node_modules/@thi.ng/vectors/subns.js","./sum":"../node_modules/@thi.ng/vectors/sum.js","./swizzle":"../node_modules/@thi.ng/vectors/swizzle.js","./tan":"../node_modules/@thi.ng/vectors/tan.js","./tanh":"../node_modules/@thi.ng/vectors/tanh.js","./trunc":"../node_modules/@thi.ng/vectors/trunc.js","./vec-of":"../node_modules/@thi.ng/vectors/vec-of.js","./wrap":"../node_modules/@thi.ng/vectors/wrap.js","./eq":"../node_modules/@thi.ng/vectors/eq.js","./neq":"../node_modules/@thi.ng/vectors/neq.js","./gt":"../node_modules/@thi.ng/vectors/gt.js","./gte":"../node_modules/@thi.ng/vectors/gte.js","./lt":"../node_modules/@thi.ng/vectors/lt.js","./lte":"../node_modules/@thi.ng/vectors/lte.js"}],"../node_modules/@thi.ng/geom/internal/copy-attribs.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.copyAttribs = void 0;

const copyAttribs = $ => Object.assign({}, $.attribs);

exports.copyAttribs = copyAttribs;
},{}],"../node_modules/@thi.ng/geom/api/aabb.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AABB = void 0;

var _checks = require("@thi.ng/checks");

var _geomApi = require("@thi.ng/geom-api");

var _vectors = require("@thi.ng/vectors");

var _copyAttribs = require("../internal/copy-attribs");

class AABB {
  constructor(pos = [0, 0, 0], size = 1, attribs) {
    this.pos = pos;
    this.attribs = attribs;
    this.size = (0, _checks.isNumber)(size) ? [size, size, size] : size;
  }

  get type() {
    return _geomApi.Type.AABB;
  }

  copy() {
    return new AABB((0, _vectors.set)([], this.pos), (0, _vectors.set)([], this.size), (0, _copyAttribs.copyAttribs)(this));
  }

  max() {
    return (0, _vectors.add3)([], this.pos, this.size);
  }

}

exports.AABB = AABB;
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../internal/copy-attribs":"../node_modules/@thi.ng/geom/internal/copy-attribs.js"}],"../node_modules/@thi.ng/geom/api/apc.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.APC = void 0;

class APC {
  constructor(points = [], attribs) {
    this.points = points;
    this.attribs = attribs;
  }

  *[Symbol.iterator]() {
    yield* this.points;
  }

}

exports.APC = APC;
},{}],"../node_modules/@thi.ng/geom-arc/point-at.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pointAtTheta = exports.pointAt = void 0;

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

const pointAt = (pos, r, axis, start, end, t, out = []) => pointAtTheta(pos, r, axis, (0, _math.fit01)(t, start, end), out);

exports.pointAt = pointAt;

const pointAtTheta = (pos, r, axis, theta, out = []) => (0, _vectors.add2)(null, (0, _vectors.rotateZ)(null, (0, _vectors.mul2)(out, (0, _math.cossin)(theta), r), axis), pos);

exports.pointAtTheta = pointAtTheta;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-arc/bounds.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bounds = void 0;

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

var _pointAt = require("./point-at");

const bounds = (pos, r, axis, start, end) => {
  const min = (0, _vectors.set2)([], _vectors.MAX2);
  const max = (0, _vectors.set2)([], _vectors.MIN2);
  const p = [];

  const update = theta => {
    (0, _pointAt.pointAtTheta)(pos, r, axis, theta, p);
    (0, _vectors.min2)(null, min, p);
    (0, _vectors.max2)(null, max, p);
  };

  update(start);
  update(end);

  if (start > end) {
    const t = start;
    start = end;
    end = t;
  } // include multiples of π/2 within [start,end] interval


  for (let i = (0, _math.roundTo)(start, _math.HALF_PI), j = (0, _math.roundTo)(end, _math.HALF_PI); i < j; i += _math.HALF_PI) {
    (0, _math.inRange)(i, start, end) && update(i);
  }

  return [min, max];
};

exports.bounds = bounds;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./point-at":"../node_modules/@thi.ng/geom-arc/point-at.js"}],"../node_modules/@thi.ng/geom-arc/closest-point.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.closestPoint = void 0;

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

var _pointAt = require("./point-at");

const closestPoint = (p, o, r, axis, start, end, out = [], res, iter) => {
  const fn = t => (0, _pointAt.pointAtTheta)(o, r, axis, (0, _math.fit01)(t, start, end), out);

  return fn((0, _math.minError)(fn, _vectors.distSq2, p, res, iter));
};

exports.closestPoint = closestPoint;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./point-at":"../node_modules/@thi.ng/geom-arc/point-at.js"}],"../node_modules/@thi.ng/geom-arc/from-endpoints.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fromEndPoints = void 0;

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

/**
 * Conversion from endpoint to center parameterization.
 *
 * {@link https://svgwg.org/svg2-draft/implnote.html#ArcConversionEndpointToCenter}
 *
 * Returns undefined if `a` & `b` are equal or any `radii` component is
 * zero.
 *
 * @param a - start point
 * @param b - end point
 * @param radii - ellipse radii
 * @param axis - in radians
 * @param xl - large arc flag
 * @param cw - clockwise flag
 */
const fromEndPoints = (a, b, radii, axis = 0, xl = false, cw = false) => {
  const r = (0, _vectors.abs2)([], radii);

  if ((0, _vectors.eqDelta2)(a, b) || r[0] < _math.EPS || r[1] < _math.EPS) {
    return;
  }

  axis %= _math.TAU;
  const d = (0, _vectors.submN2)([], a, b, 0.5);
  const c = Math.cos(axis);
  const s = Math.sin(axis); // transformed point

  const tp = [c * d[0] + s * d[1], -s * d[0] + c * d[1]];
  const [tx2, ty2] = (0, _vectors.powN2)([], tp, 2); // ensure radii

  const rc = tx2 / (r[0] * r[0]) + ty2 / (r[1] * r[1]);
  rc > 1 && (0, _vectors.mulN2)(r, r, Math.sqrt(rc));
  const [rx, ry] = r;
  const rx2 = rx * rx;
  const ry2 = ry * ry; // transformed center

  const radicant = Math.max(0, (rx2 * ry2 - rx2 * ty2 - ry2 * tx2) / (rx2 * ty2 + ry2 * tx2));
  const coeff = (xl !== cw ? 1 : -1) * Math.sqrt(radicant);
  const tc = [coeff * (rx * tp[1] / ry), coeff * (-(ry * tp[0]) / rx)]; // actual center

  const center = [c * tc[0] - s * tc[1] + (a[0] + b[0]) / 2, s * tc[0] + c * tc[1] + (a[1] + b[1]) / 2]; // transformed end points & angles

  const ta = (0, _vectors.div2)(null, (0, _vectors.sub2)([], tp, tc), r);
  const tb = (0, _vectors.div2)(null, (0, _vectors.sub2)(null, (0, _vectors.neg)([], tp), tc), r);
  const start = (0, _vectors.angleBetween2)(_vectors.X2, ta);
  let sweep = (0, _vectors.angleBetween2)(ta, tb);

  if (!cw && sweep > 0) {
    sweep -= _math.TAU;
  } else if (cw && sweep < 0) {
    sweep += _math.TAU;
  }

  sweep %= _math.TAU;
  return {
    center,
    r,
    axis,
    start,
    end: start + sweep,
    xl,
    cw
  };
};

exports.fromEndPoints = fromEndPoints;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-closest-point/box.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.closestPointAABB = exports.closestPointRect = void 0;

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

const closestPointRect = (p, bmin, bmax, out = []) => {
  const [minID, minW] = closestBoxEdge(p, bmin, bmax, 4);
  return minID === 0 ? (0, _vectors.setC2)(out, minW, (0, _math.clamp)(p[1], bmin[1], bmax[1])) : (0, _vectors.setC2)(out, (0, _math.clamp)(p[0], bmin[0], bmax[0]), minW);
};

exports.closestPointRect = closestPointRect;

const closestPointAABB = (p, bmin, bmax, out = []) => {
  const [minID, minW] = closestBoxEdge(p, bmin, bmax, 6);
  return minID === 0 ? (0, _vectors.setC3)(out, minW, (0, _math.clamp)(p[1], bmin[1], bmax[1]), (0, _math.clamp)(p[2], bmin[2], bmax[2])) : minID === 1 ? (0, _vectors.setC3)(out, (0, _math.clamp)(p[0], bmin[0], bmax[0]), minW, (0, _math.clamp)(p[2], bmin[2], bmax[2])) : (0, _vectors.setC3)(out, (0, _math.clamp)(p[0], bmin[0], bmax[0]), (0, _math.clamp)(p[1], bmin[1], bmax[1]), minW);
};

exports.closestPointAABB = closestPointAABB;

const closestBoxEdge = (p, bmin, bmax, n) => {
  let minD = Infinity;
  let minID;
  let minW;

  for (let i = 0; i < n; i++) {
    const j = i >> 1;
    const w = (i & 1 ? bmax : bmin)[j];
    const d = Math.abs(p[j] - w);

    if (d < minD) {
      minD = d;
      minID = j;
      minW = w;
    }
  }

  return [minID, minW];
};
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-closest-point/circle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.closestPointSphere = exports.closestPointCircle = void 0;

var _vectors = require("@thi.ng/vectors");

/**
 * Returns closest point to `p` on circle defined by origin `c` and radius `r`.
 *
 * @param p
 * @param c
 * @param r
 * @param out
 */
const closestPointCircle = (p, c, r, out = []) => (0, _vectors.add)(out, c, (0, _vectors.direction)(out, c, p, r));
/**
 * Same as {@link closestPointCircle}.
 */


exports.closestPointCircle = closestPointCircle;
const closestPointSphere = closestPointCircle;
exports.closestPointSphere = closestPointSphere;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-closest-point/ellipse.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.closestPointEllipse = void 0;

var _math = require("@thi.ng/math");

/**
 * @remarks
 * Based on iterative solution by Luc Maisonobe:
 *
 * - https://www.spaceroots.org/documents/distance/distance-to-ellipse.pdf
 * - https://gist.github.com/JohannesMP/777bdc8e84df6ddfeaa4f0ddb1c7adb3
 *
 * Further optimizations: constant folding, avoiding duplicate calculations in
 * loop
 *
 * @param p - query point
 * @param eo - ellipse center/origin
 * @param er - ellipse radii
 * @param n - number of iterations
 */
const closestPointEllipse = ([px, py], [ex, ey], [rx, ry], n = 3) => {
  const apx = Math.abs(px - ex);
  const apy = Math.abs(py - ey);
  const ab = (rx * rx - ry * ry) / rx;
  const ba = (ry * ry - rx * rx) / ry;
  let tx = _math.SQRT2_2;
  let ty = tx;

  for (; --n >= 0;) {
    const _ex = ab * tx * tx * tx;

    const _ey = ba * ty * ty * ty;

    const qx = apx - _ex;
    const qy = apy - _ey;
    const q = Math.hypot(rx * tx - _ex, ry * ty - _ey) / Math.hypot(qx, qy);
    tx = (0, _math.clamp01)((qx * q + _ex) / rx);
    ty = (0, _math.clamp01)((qy * q + _ey) / ry);
    const t = Math.hypot(tx, ty);
    tx /= t;
    ty /= t;
  }

  return [rx * (px < ex ? -tx : tx) + ex, ry * (py < ey ? -ty : ty) + ey];
};

exports.closestPointEllipse = closestPointEllipse;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js"}],"../node_modules/@thi.ng/geom-closest-point/line.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.farthestPointSegment = exports.closestPointPolyline = exports.distToSegment = exports.closestPointSegment = exports.distToLine = exports.closestPointLine = exports.closestT = void 0;

var _vectors = require("@thi.ng/vectors");

/**
 * Computes the parametric distance `t` of point `p` projected onto line
 * `a` -> `b`, relative to `a`. I.e. the projection of `p` can then be
 * computed like so:
 *
 * @example
 * ```ts
 * mixN([], a, b, closestT(p, a, b))
 * ```
 *
 * If the return value is outside the closed [0,1] interval, the
 * projected point lies outside the line segment. Returns `undefined` if
 * `a` and `b` are coincident.
 *
 * - {@link closestPointLine}
 * - {@link closestPointSegment}
 *
 * @param p - query point
 * @param a - line point A
 * @param b - line point B
 */
const closestT = (p, a, b) => {
  const d = (0, _vectors.sub)([], b, a);
  const l = (0, _vectors.magSq)(d);
  return l > 1e-6 ? (0, _vectors.dot)((0, _vectors.sub)([], p, a), d) / l : undefined;
};
/**
 * Returns closest point to `p` on infinite line defined by points `a`
 * and `b`. Use {@link closestPointSegment} to only consider the actual line
 * segment between these two points.
 *
 * {@link closestPointSegment}
 *
 * @param p - query point
 * @param a - line point A
 * @param b - line point B
 */


exports.closestT = closestT;

const closestPointLine = (p, a, b) => (0, _vectors.mixN)([], a, b, closestT(p, a, b) || 0);
/**
 * Returns distance from `p` to closest point to infinite line `a` ->
 * `b`. Use {@link distToSegment} to only consider the actual line segment
 * between these two points.
 *
 * {@link distToSegment}
 *
 * @param p - query point
 * @param a - line point A
 * @param b - line point B
 */


exports.closestPointLine = closestPointLine;

const distToLine = (p, a, b) => (0, _vectors.dist)(p, closestPointLine(p, a, b) || a);
/**
 * Returns closest point to `p` on line segment `a` -> `b`. By default,
 * if the result point lies outside the segment, returns a copy of the
 * closest end point. The result is written to the optional `out` vector
 * (or if omitted, a new one is created).
 *
 * If `insideOnly` is true, only returns the closest point iff it
 * actually is inside the segment. The behavior of this configurable via
 * the optional `eps` arg and by default includes both end points. This
 * function uses {@link closestT} to compute the parametric position of the
 * result point and determine if it lies within the line segment. If
 * `eps > 0`, the end points `a` and `b` will be excluded from the
 * match, effectively shortening the valid line segment from both ends,
 * i.e. the valid interval of the parametric position will be
 * [eps,1-eps]. If the result lies outside this interval, the function
 * returns `undefined`. Likewise, if `a` and `b` are coincident.
 *
 * @param p - query point
 * @param a - line point A
 * @param b - line point B
 * @param out - result
 * @param eps - epsilon value
 */


exports.distToLine = distToLine;

const closestPointSegment = (p, a, b, out, insideOnly = false, eps = 0) => {
  const t = closestT(p, a, b);

  if (t !== undefined && (!insideOnly || t >= eps && t <= 1 - eps)) {
    out = out || (0, _vectors.empty)(p);
    return t <= 0 ? (0, _vectors.set)(out, a) : t >= 1 ? (0, _vectors.set)(out, b) : (0, _vectors.mixN)(out, a, b, t);
  }
};
/**
 * Returns distance from `p` to closest point on line segment `a` ->
 * `b`.
 *
 * @param p - query point
 * @param a - line point A
 * @param b - line point B
 */


exports.closestPointSegment = closestPointSegment;

const distToSegment = (p, a, b) => (0, _vectors.dist)(p, closestPointSegment(p, a, b) || a);

exports.distToSegment = distToSegment;

const closestPointPolyline = (p, pts, closed = false, out = []) => {
  if (!pts.length) return;
  const tmp = [];
  const n = pts.length - 1;
  let minD = Infinity,
      i,
      j;

  if (closed) {
    i = n;
    j = 0;
  } else {
    i = 0;
    j = 1;
  }

  for (; j <= n; i = j, j++) {
    if (closestPointSegment(p, pts[i], pts[j], tmp)) {
      const d = (0, _vectors.distSq)(p, tmp);

      if (d < minD) {
        minD = d;
        (0, _vectors.set)(out, tmp);
      }
    }
  }

  return minD < Infinity ? out : undefined;
};
/**
 * Returns the index of the start point containing the segment in the
 * polyline array `points` farthest away from `p` with regards to the
 * line segment `a` to `b`. `points` is only checked between indices
 * `from` and `to` (not including the latter).
 *
 * @param a - line point A
 * @param b - line point B
 * @param points - points
 * @param from - start search index
 * @param to - end search index
 */


exports.closestPointPolyline = closestPointPolyline;

const farthestPointSegment = (a, b, points, from = 0, to = points.length) => {
  let maxD = -1;
  let maxIdx = -1;
  const tmp = (0, _vectors.empty)(a);

  for (let i = from; i < to; i++) {
    const p = points[i];
    const d = (0, _vectors.distSq)(p, closestPointSegment(p, a, b, tmp) || a);

    if (d > maxD) {
      maxD = d;
      maxIdx = i;
    }
  }

  return [maxIdx, Math.sqrt(maxD)];
};

exports.farthestPointSegment = farthestPointSegment;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-closest-point/plane.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.closestPointPlane = exports.distToPlane = void 0;

var _vectors = require("@thi.ng/vectors");

/**
 * Returns signed distance between point `p` and plane defined by normal `n` and
 * `w`. In 2D this also works for lines.
 *
 * @remarks
 * If result is > 0 the point lies "above" the plane, if < 0 below the plane or
 * if zero on the plane.
 *
 * @param p
 * @param n
 * @param w
 */
const distToPlane = (p, n, w) => (0, _vectors.dot)(n, p) - w;
/**
 * Returns closest point to `p` on the plane defined by normal `n` and `w`. In
 * 2D this also works for lines.
 *
 * @param p
 * @param normal
 * @param w
 * @param out
 */


exports.distToPlane = distToPlane;

const closestPointPlane = (p, normal, w, out = []) => (0, _vectors.sub)(out, p, (0, _vectors.normalize)(out, normal, distToPlane(p, normal, w)));

exports.closestPointPlane = closestPointPlane;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-closest-point/points.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.closestPointArray = void 0;

var _vectors = require("@thi.ng/vectors");

/**
 * Returns closest point to `p` in given point array, optionally using custom
 * distance function `dist` (default: {@link @thi.ng/vectors#distSq}).
 *
 * @param p
 * @param pts
 * @param out
 * @param dist
 */
const closestPointArray = (p, pts, out = [], dist = _vectors.distSq) => {
  let minD = Infinity;
  let closest;

  for (let i = pts.length; --i >= 0;) {
    const d = dist(pts[i], p);

    if (d < minD) {
      minD = d;
      closest = pts[i];
    }
  }

  return closest ? (0, _vectors.set)(out, closest) : undefined;
};

exports.closestPointArray = closestPointArray;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-closest-point/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _box = require("./box");

Object.keys(_box).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _box[key];
    }
  });
});

var _circle = require("./circle");

Object.keys(_circle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _circle[key];
    }
  });
});

var _ellipse = require("./ellipse");

Object.keys(_ellipse).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _ellipse[key];
    }
  });
});

var _line = require("./line");

Object.keys(_line).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _line[key];
    }
  });
});

var _plane = require("./plane");

Object.keys(_plane).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _plane[key];
    }
  });
});

var _points = require("./points");

Object.keys(_points).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _points[key];
    }
  });
});
},{"./box":"../node_modules/@thi.ng/geom-closest-point/box.js","./circle":"../node_modules/@thi.ng/geom-closest-point/circle.js","./ellipse":"../node_modules/@thi.ng/geom-closest-point/ellipse.js","./line":"../node_modules/@thi.ng/geom-closest-point/line.js","./plane":"../node_modules/@thi.ng/geom-closest-point/plane.js","./points":"../node_modules/@thi.ng/geom-closest-point/points.js"}],"../node_modules/@thi.ng/geom-resample/sampler.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Sampler = void 0;

var _geomClosestPoint = require("@thi.ng/geom-closest-point");

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

class Sampler {
  constructor(points, closed = false) {
    if (closed) {
      this.points = points.slice();
      this.points.push(points[0]);
    } else {
      this.points = points;
    }

    this.buildIndex();
  }

  totalLength() {
    const idx = this.index;
    return idx ? idx[idx.length - 1] : 0;
  }

  pointAt(t) {
    const pts = this.points;
    const n = pts.length - 1;

    if (n < 0) {
      return;
    }

    if (n === 0 || t <= 0) {
      return pts[0];
    }

    if (t >= 1) {
      return pts[n];
    }

    const idx = this.index;
    const t0 = t * idx[n];

    for (let i = 1; i <= n; i++) {
      if (idx[i] >= t0) {
        return (0, _vectors.mixN)([], pts[i - 1], pts[i], (t0 - idx[i - 1]) / (idx[i] - idx[i - 1]));
      }
    }
  }

  closestPoint(p) {
    return (0, _geomClosestPoint.closestPointPolyline)(p, this.points);
  }

  closestT(p) {
    const pts = this.points;
    const idx = this.index;
    const tmp = [];
    const closest = [];
    let minD = Infinity;
    let minI = -1;

    for (let i = 0, n = idx.length - 1; i < n; i++) {
      if ((0, _geomClosestPoint.closestPointSegment)(p, pts[i], pts[i + 1], tmp)) {
        const d = (0, _vectors.distSq)(p, tmp);

        if (d < minD) {
          minD = d;
          minI = i;
          (0, _vectors.set)(closest, tmp);
        }
      }
    }

    return minI >= 0 ? (0, _math.fit01)((0, _geomClosestPoint.closestT)(p, pts[minI], pts[minI + 1]) || 0, idx[minI], idx[minI + 1]) / this.totalLength() : undefined;
  }

  segmentAt(t) {
    let i = this.indexAt(t);

    if (i === undefined) {
      return;
    }

    i = Math.max(1, i);
    return [this.points[i - 1], this.points[i]];
  }

  tangentAt(t, n = 1) {
    const seg = this.segmentAt(t);
    return seg ? (0, _vectors.normalize)(null, (0, _vectors.sub)([], seg[1], seg[0]), n) : undefined;
  }

  splitAt(t) {
    if (t <= 0 || t >= 1) {
      return [this.points];
    }

    const p = this.pointAt(t);
    if (!p) return;
    const i = Math.max(1, this.indexAt(t));
    const head = this.points.slice(0, i);
    const tail = this.points.slice(i);

    if (!(0, _vectors.eqDelta)(head[i - 1], p)) {
      head.push(p);
    }

    if (!(0, _vectors.eqDelta)(tail[0], p)) {
      tail.unshift(p);
    }

    return [head, tail];
  }

  splitNear(p) {
    const t = this.closestT(p);
    return t !== undefined ? this.splitAt(t) : undefined;
  }

  indexAt(t) {
    const pts = this.points;
    const n = pts.length - 1;

    if (n < 0) {
      return;
    }

    if (n === 0 || t <= 0) {
      return 0;
    }

    if (t >= 1) {
      return n;
    }

    const idx = this.index;
    const t0 = t * idx[n];

    for (let i = 1; i <= n; i++) {
      if (idx[i] >= t0) {
        return i;
      }
    }
  }

  sampleUniform(dist, includeLast = false, result = []) {
    const index = this.index;
    const pts = this.points;
    const total = this.totalLength();
    const delta = dist / total;
    const n = index.length;

    for (let t = 0, i = 1; t < 1; t += delta) {
      const ct = t * total;

      while (ct >= index[i] && i < n) {
        i++;
      }

      if (i >= n) break;
      const p = index[i - 1];
      result.push((0, _vectors.mixN)([], pts[i - 1], pts[i], (ct - p) / (index[i] - p)));
    }

    if (includeLast) {
      result.push((0, _vectors.set)([], pts[pts.length - 1]));
    }

    return result;
  }

  sampleFixedNum(num, includeLast = false, result) {
    return this.sampleUniform(this.totalLength() / num, includeLast, result);
  }

  buildIndex() {
    const idx = [0];
    const pts = this.points;
    const n = pts.length;

    for (let i = 0, j = 1; j < n; i = j, j++) {
      idx[j] = idx[i] + (0, _vectors.dist)(pts[i], pts[j]);
    }

    this.index = idx;
  }

}

exports.Sampler = Sampler;
},{"@thi.ng/geom-closest-point":"../node_modules/@thi.ng/geom-closest-point/index.js","@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-resample/resample.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.resample = void 0;

var _checks = require("@thi.ng/checks");

var _geomApi = require("@thi.ng/geom-api");

var _vectors = require("@thi.ng/vectors");

var _sampler = require("./sampler");

const resample = (pts, opts, closed = false, copy = false) => {
  if (opts !== undefined) {
    const sampler = new _sampler.Sampler(pts, closed);
    return (0, _checks.isPlainObject)(opts) ? closed ? opts.dist ? sampler.sampleUniform(opts.dist, opts.last) : sampler.sampleFixedNum(opts.num || _geomApi.DEFAULT_SAMPLES, opts.last) : opts.dist ? sampler.sampleUniform(opts.dist, opts.last !== false) : sampler.sampleFixedNum(opts.num || _geomApi.DEFAULT_SAMPLES, opts.last !== false) : sampler.sampleFixedNum(opts || _geomApi.DEFAULT_SAMPLES, !closed);
  }

  return copy ? (0, _vectors.copyVectors)(pts) : pts;
};

exports.resample = resample;
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./sampler":"../node_modules/@thi.ng/geom-resample/sampler.js"}],"../node_modules/@thi.ng/geom-resample/simplify.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.simplify = void 0;

var _geomClosestPoint = require("@thi.ng/geom-closest-point");

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

/**
 * {@link https://en.wikipedia.org/wiki/Ramer%E2%80%93Douglas%E2%80%93Peucker_algorithm}
 *
 * @param pts - points
 * @param eps - simplify threshold
 * @param closed - true, if closed shape (polygon)
 */
const simplify = (pts, eps = 0, closed = false) => {
  let num = pts.length;
  const visited = [];
  if (num <= 2) return pts.slice();

  if (closed && !(0, _vectors.eqDelta)(pts[0], pts[num - 1], _math.EPS)) {
    pts = pts.slice();
    pts.push(pts[0]);
    num++;
  }

  const $ = (from, to) => {
    visited[from] = visited[to] = true;

    if (to <= from + 1) {
      return;
    }

    const [maxIdx, maxD] = (0, _geomClosestPoint.farthestPointSegment)(pts[from], pts[to], pts, from + 1, to);

    if (maxIdx < 0 || maxD <= eps) {
      return;
    }

    $(from, maxIdx);
    $(maxIdx, to);
  };

  $(0, num - 1);
  const res = [];

  for (let i = 0, n = closed ? num - 1 : num; i < n; i++) {
    visited[i] && res.push(pts[i]);
  }

  return res;
};

exports.simplify = simplify;
},{"@thi.ng/geom-closest-point":"../node_modules/@thi.ng/geom-closest-point/index.js","@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-resample/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _resample = require("./resample");

Object.keys(_resample).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _resample[key];
    }
  });
});

var _sampler = require("./sampler");

Object.keys(_sampler).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _sampler[key];
    }
  });
});

var _simplify = require("./simplify");

Object.keys(_simplify).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _simplify[key];
    }
  });
});
},{"./resample":"../node_modules/@thi.ng/geom-resample/resample.js","./sampler":"../node_modules/@thi.ng/geom-resample/sampler.js","./simplify":"../node_modules/@thi.ng/geom-resample/simplify.js"}],"../node_modules/@thi.ng/geom-arc/sample.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sampleCircular = exports.sample = void 0;

var _checks = require("@thi.ng/checks");

var _geomApi = require("@thi.ng/geom-api");

var _geomResample = require("@thi.ng/geom-resample");

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

var _pointAt = require("./point-at");

const sample = (pos, r, axis, start, end, opts) => {
  if ((0, _checks.isPlainObject)(opts) && opts.dist !== undefined) {
    return new _geomResample.Sampler(sample(pos, r, axis, start, end, opts.num || _geomApi.DEFAULT_SAMPLES)).sampleUniform(opts.dist, opts.last !== false);
  }

  opts = (0, _checks.isNumber)(opts) ? {
    num: opts,
    last: true
  } : Object.assign({
    num: _geomApi.DEFAULT_SAMPLES
  }, opts);
  let delta = end - start;
  let num = opts.theta ? Math.round(delta / opts.theta) : opts.num;
  delta /= num;
  opts.last !== false && num++;
  const pts = new Array(num);

  for (let i = 0; i < num; i++) {
    pts[i] = (0, _pointAt.pointAtTheta)(pos, r, axis, start + i * delta);
  }

  return pts;
};
/**
 * Computes `steps` points (default: 8) on the circular arc between
 * points `a` and `b` with `origin` and radius `r`. Points are added to
 * optional `out` (or a new array). If `addLast` is falst (default:
 * true), point `b` will NOT be added.
 *
 * @param origin
 * @param r
 * @param a
 * @param b
 * @param out
 * @param steps
 * @param outwards
 * @param addLast
 */


exports.sample = sample;

const sampleCircular = (origin, r, a, b, out = [], steps = 8, outwards = true, addLast = true) => {
  let ta = Math.atan2(a[1] - origin[1], a[0] - origin[0]);
  let tb = Math.atan2(b[1] - origin[1], b[0] - origin[0]);
  ta < 0 && (ta += _math.TAU);
  tb < 0 && (tb += _math.TAU);
  const theta = ta > tb ? ta - tb : ta + _math.TAU - tb;
  const delta = (outwards ? -theta : _math.TAU - theta) / steps;
  out.push(a);

  for (let i = 1; i < steps; i++) {
    out.push((0, _vectors.cartesian2)(null, [r, ta + delta * i], origin));
  }

  addLast && out.push(b);
  return out;
};

exports.sampleCircular = sampleCircular;
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/geom-resample":"../node_modules/@thi.ng/geom-resample/index.js","@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./point-at":"../node_modules/@thi.ng/geom-arc/point-at.js"}],"../node_modules/@thi.ng/geom-arc/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _bounds = require("./bounds");

Object.keys(_bounds).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _bounds[key];
    }
  });
});

var _closestPoint = require("./closest-point");

Object.keys(_closestPoint).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _closestPoint[key];
    }
  });
});

var _fromEndpoints = require("./from-endpoints");

Object.keys(_fromEndpoints).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _fromEndpoints[key];
    }
  });
});

var _pointAt = require("./point-at");

Object.keys(_pointAt).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _pointAt[key];
    }
  });
});

var _sample = require("./sample");

Object.keys(_sample).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _sample[key];
    }
  });
});
},{"./bounds":"../node_modules/@thi.ng/geom-arc/bounds.js","./closest-point":"../node_modules/@thi.ng/geom-arc/closest-point.js","./from-endpoints":"../node_modules/@thi.ng/geom-arc/from-endpoints.js","./point-at":"../node_modules/@thi.ng/geom-arc/point-at.js","./sample":"../node_modules/@thi.ng/geom-arc/sample.js"}],"../node_modules/@thi.ng/geom/api/arc.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Arc = void 0;

var _equiv = require("@thi.ng/equiv");

var _geomApi = require("@thi.ng/geom-api");

var _geomArc = require("@thi.ng/geom-arc");

var _vectors = require("@thi.ng/vectors");

var _copyAttribs = require("../internal/copy-attribs");

class Arc {
  constructor(pos, r, axis, start, end, xl = false, cw = false, attribs) {
    this.pos = pos;
    this.r = r;
    this.axis = axis;
    this.start = start;
    this.end = end;
    this.xl = xl;
    this.cw = cw;
    this.attribs = attribs;
  }

  get type() {
    return _geomApi.Type.ARC;
  }

  copy() {
    return new Arc((0, _vectors.set)([], this.pos), (0, _vectors.set)([], this.r), this.axis, this.start, this.end, this.xl, this.cw, (0, _copyAttribs.copyAttribs)(this));
  }

  equiv(o) {
    return o instanceof Arc && (0, _equiv.equiv)(this.pos, o.pos) && (0, _equiv.equiv)(this.r, o.r) && this.start === o.start && this.end === o.end && this.axis === o.axis && this.xl === o.xl && this.cw && o.cw;
  }

  pointAt(t, out = []) {
    return (0, _geomArc.pointAt)(this.pos, this.r, this.axis, this.start, this.end, t, out);
  }

  pointAtTheta(theta, out = []) {
    return (0, _geomArc.pointAtTheta)(this.pos, this.r, this.axis, theta, out);
  }

  toHiccup() {
    return ["path", this.attribs, [["M", this.pointAt(0)], ...this.toHiccupPathSegments()]];
  }

  toHiccupPathSegments() {
    return [["A", this.r[0], this.r[1], this.axis, this.xl, this.cw, this.pointAt(1)]];
  }

}

exports.Arc = Arc;
},{"@thi.ng/equiv":"../node_modules/@thi.ng/equiv/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/geom-arc":"../node_modules/@thi.ng/geom-arc/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../internal/copy-attribs":"../node_modules/@thi.ng/geom/internal/copy-attribs.js"}],"../node_modules/@thi.ng/geom/api/circle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Circle = void 0;

var _geomApi = require("@thi.ng/geom-api");

var _vectors = require("@thi.ng/vectors");

var _copyAttribs = require("../internal/copy-attribs");

class Circle {
  constructor(pos = [0, 0], r = 1, attribs) {
    this.pos = pos;
    this.r = r;
    this.attribs = attribs;
  }

  get type() {
    return _geomApi.Type.CIRCLE;
  }

  copy() {
    return new Circle((0, _vectors.set)([], this.pos), this.r, (0, _copyAttribs.copyAttribs)(this));
  }

  toHiccup() {
    return ["circle", this.attribs, this.pos, this.r];
  }

}

exports.Circle = Circle;
},{"@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../internal/copy-attribs":"../node_modules/@thi.ng/geom/internal/copy-attribs.js"}],"../node_modules/@thi.ng/geom/internal/copy-shape.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.copyShape = void 0;

var _vectors = require("@thi.ng/vectors");

var _copyAttribs = require("./copy-attribs");

const copyShape = (ctor, inst) => new ctor((0, _vectors.copyVectors)(inst.points), (0, _copyAttribs.copyAttribs)(inst));

exports.copyShape = copyShape;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./copy-attribs":"../node_modules/@thi.ng/geom/internal/copy-attribs.js"}],"../node_modules/@thi.ng/geom/api/cubic.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Cubic = void 0;

var _geomApi = require("@thi.ng/geom-api");

var _copyShape = require("../internal/copy-shape");

var _apc = require("./apc");

class Cubic extends _apc.APC {
  get type() {
    return _geomApi.Type.CUBIC;
  }

  copy() {
    return (0, _copyShape.copyShape)(Cubic, this);
  }

  toHiccup() {
    return ["path", this.attribs, [["M", this.points[0]], ...this.toHiccupPathSegments()]];
  }

  toHiccupPathSegments() {
    const pts = this.points;
    return [["C", pts[1], pts[2], pts[3]]];
  }

}

exports.Cubic = Cubic;
},{"@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","../internal/copy-shape":"../node_modules/@thi.ng/geom/internal/copy-shape.js","./apc":"../node_modules/@thi.ng/geom/api/apc.js"}],"../node_modules/@thi.ng/geom/api/ellipse.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Ellipse = void 0;

var _checks = require("@thi.ng/checks");

var _geomApi = require("@thi.ng/geom-api");

var _vectors = require("@thi.ng/vectors");

var _copyAttribs = require("../internal/copy-attribs");

class Ellipse {
  constructor(pos = [0, 0], r = [1, 1], attribs) {
    this.pos = pos;
    this.attribs = attribs;
    this.r = (0, _checks.isNumber)(r) ? [r, r] : r;
  }

  get type() {
    return _geomApi.Type.ELLIPSE;
  }

  copy() {
    return new Ellipse((0, _vectors.set)([], this.pos), (0, _vectors.set)([], this.r), (0, _copyAttribs.copyAttribs)(this));
  }

  toHiccup() {
    return ["ellipse", this.attribs, this.pos, this.r];
  }

}

exports.Ellipse = Ellipse;
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../internal/copy-attribs":"../node_modules/@thi.ng/geom/internal/copy-attribs.js"}],"../node_modules/@thi.ng/geom/api/group.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Group = void 0;

var _equiv = require("@thi.ng/equiv");

var _geomApi = require("@thi.ng/geom-api");

var _copyAttribs = require("../internal/copy-attribs");

class Group {
  constructor(attribs, children = []) {
    this.attribs = attribs;
    this.children = children;
  }

  get type() {
    return _geomApi.Type.GROUP;
  }

  *[Symbol.iterator]() {
    yield* this.children;
  }

  copy() {
    return new Group((0, _copyAttribs.copyAttribs)(this), this.children.map(c => c.copy()));
  }

  equiv(o) {
    return o instanceof Group && (0, _equiv.equiv)(this.children, o.children);
  }

  toHiccup() {
    return ["g", this.attribs, ...this.children.map(x => x.toHiccup())];
  }

}

exports.Group = Group;
},{"@thi.ng/equiv":"../node_modules/@thi.ng/equiv/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","../internal/copy-attribs":"../node_modules/@thi.ng/geom/internal/copy-attribs.js"}],"../node_modules/@thi.ng/geom/api/line.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Line = void 0;

var _geomApi = require("@thi.ng/geom-api");

var _copyShape = require("../internal/copy-shape");

var _apc = require("./apc");

class Line extends _apc.APC {
  get type() {
    return _geomApi.Type.LINE;
  }

  copy() {
    return (0, _copyShape.copyShape)(Line, this);
  }

  toHiccup() {
    return ["line", this.attribs, this.points[0], this.points[1]];
  }

  toHiccupPathSegments() {
    const [a, b] = this.points;
    return [a[0] === b[0] ? ["V", b[1]] : a[1] === b[1] ? ["H", b[0]] : ["L", b]];
  }

}

exports.Line = Line;
},{"@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","../internal/copy-shape":"../node_modules/@thi.ng/geom/internal/copy-shape.js","./apc":"../node_modules/@thi.ng/geom/api/apc.js"}],"../node_modules/@thi.ng/geom/api/path.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Path = void 0;

var _equiv = require("@thi.ng/equiv");

var _errors = require("@thi.ng/errors");

var _geomApi = require("@thi.ng/geom-api");

var _copyAttribs = require("../internal/copy-attribs");

var _vectors = require("@thi.ng/vectors");

class Path {
  constructor(segments = [], attribs) {
    this.segments = segments;
    this.attribs = attribs;
    this.closed = false;
  }

  get type() {
    return _geomApi.Type.PATH;
  }

  *[Symbol.iterator]() {
    yield* this.segments;
  }

  copy() {
    const p = new Path(this.segments.map(s => {
      const d = {
        type: s.type
      };
      s.point && (d.point = (0, _vectors.copy)(s.point));
      s.geo && (d.geo = s.geo.copy());
      return d;
    }), (0, _copyAttribs.copyAttribs)(this));
    p.closed = this.closed;
    return p;
  }

  equiv(o) {
    return o instanceof Path && (0, _equiv.equiv)(this.segments, o.segments);
  }

  add(s) {
    if (this.closed) (0, _errors.illegalState)("path already closed");
    this.segments.push(s);
  }

  toHiccup() {
    let dest = [];
    const segments = this.segments;
    const n = segments.length;

    if (n > 1) {
      for (let i = 0; i < n; i++) {
        const s = segments[i];

        if (s.geo) {
          dest = dest.concat(s.geo.toHiccupPathSegments());
        } else if (s.point) {
          dest.push(["M", s.point]);
        }
      }

      if (this.closed) {
        dest.push(["Z"]);
      }
    }

    return ["path", this.attribs || {}, dest];
  }

}

exports.Path = Path;
},{"@thi.ng/equiv":"../node_modules/@thi.ng/equiv/index.js","@thi.ng/errors":"../node_modules/@thi.ng/errors/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","../internal/copy-attribs":"../node_modules/@thi.ng/geom/internal/copy-attribs.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom/api/plane.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Plane = void 0;

var _geomApi = require("@thi.ng/geom-api");

var _vectors = require("@thi.ng/vectors");

var _copyAttribs = require("../internal/copy-attribs");

class Plane {
  constructor(normal = [0, 1, 0], w = 0, attribs) {
    this.normal = normal;
    this.w = w;
    this.attribs = attribs;
  }

  get type() {
    return _geomApi.Type.PLANE;
  }

  copy() {
    return new Plane((0, _vectors.set)([], this.normal), this.w, (0, _copyAttribs.copyAttribs)(this));
  }

  toHiccup() {
    return ["plane", this.attribs, this.normal, this.w];
  }

}

exports.Plane = Plane;
},{"@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../internal/copy-attribs":"../node_modules/@thi.ng/geom/internal/copy-attribs.js"}],"../node_modules/@thi.ng/geom/api/points.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Points3 = exports.Points = void 0;

var _geomApi = require("@thi.ng/geom-api");

var _copyShape = require("../internal/copy-shape");

var _apc = require("./apc");

class Points extends _apc.APC {
  get type() {
    return _geomApi.Type.POINTS;
  }

  copy() {
    return (0, _copyShape.copyShape)(Points, this);
  }

  toHiccup() {
    return ["points", this.attribs, this.points];
  }

}

exports.Points = Points;

class Points3 extends _apc.APC {
  get type() {
    return _geomApi.Type.POINTS3;
  }

  copy() {
    return (0, _copyShape.copyShape)(Points3, this);
  }

  toHiccup() {
    return ["points3", this.attribs, this.points];
  }

}

exports.Points3 = Points3;
},{"@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","../internal/copy-shape":"../node_modules/@thi.ng/geom/internal/copy-shape.js","./apc":"../node_modules/@thi.ng/geom/api/apc.js"}],"../node_modules/@thi.ng/geom/api/polygon.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Polygon = void 0;

var _geomApi = require("@thi.ng/geom-api");

var _copyShape = require("../internal/copy-shape");

var _apc = require("./apc");

class Polygon extends _apc.APC {
  get type() {
    return _geomApi.Type.POLYGON;
  }

  copy() {
    return (0, _copyShape.copyShape)(Polygon, this);
  }

  toHiccup() {
    return ["polygon", this.attribs, this.points];
  }

}

exports.Polygon = Polygon;
},{"@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","../internal/copy-shape":"../node_modules/@thi.ng/geom/internal/copy-shape.js","./apc":"../node_modules/@thi.ng/geom/api/apc.js"}],"../node_modules/@thi.ng/geom/api/polyline.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Polyline = void 0;

var _geomApi = require("@thi.ng/geom-api");

var _copyShape = require("../internal/copy-shape");

var _apc = require("./apc");

class Polyline extends _apc.APC {
  get type() {
    return _geomApi.Type.POLYLINE;
  }

  copy() {
    return (0, _copyShape.copyShape)(Polyline, this);
  }

  toHiccup() {
    return ["polyline", Object.assign(Object.assign({}, this.attribs), {
      fill: "none"
    }), this.points];
  }

  toHiccupPathSegments() {
    const res = [];

    for (let pts = this.points, n = pts.length, i = 1; i < n; i++) {
      res.push(["L", pts[i]]);
    }

    return res;
  }

}

exports.Polyline = Polyline;
},{"@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","../internal/copy-shape":"../node_modules/@thi.ng/geom/internal/copy-shape.js","./apc":"../node_modules/@thi.ng/geom/api/apc.js"}],"../node_modules/@thi.ng/geom/api/quad.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Quad = void 0;

var _geomApi = require("@thi.ng/geom-api");

var _copyShape = require("../internal/copy-shape");

var _apc = require("./apc");

class Quad extends _apc.APC {
  get type() {
    return _geomApi.Type.QUAD;
  }

  copy() {
    return (0, _copyShape.copyShape)(Quad, this);
  }

  toHiccup() {
    return ["polygon", this.attribs, this.points];
  }

}

exports.Quad = Quad;
},{"@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","../internal/copy-shape":"../node_modules/@thi.ng/geom/internal/copy-shape.js","./apc":"../node_modules/@thi.ng/geom/api/apc.js"}],"../node_modules/@thi.ng/geom/api/quad3.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Quad3 = void 0;

var _geomApi = require("@thi.ng/geom-api");

var _copyShape = require("../internal/copy-shape");

var _apc = require("./apc");

class Quad3 extends _apc.APC {
  get type() {
    return _geomApi.Type.QUAD3;
  }

  copy() {
    return (0, _copyShape.copyShape)(Quad3, this);
  }

  toHiccup() {
    return ["polygon", this.attribs, this.points];
  }

}

exports.Quad3 = Quad3;
},{"@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","../internal/copy-shape":"../node_modules/@thi.ng/geom/internal/copy-shape.js","./apc":"../node_modules/@thi.ng/geom/api/apc.js"}],"../node_modules/@thi.ng/geom/api/quadratic.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Quadratic = void 0;

var _geomApi = require("@thi.ng/geom-api");

var _copyShape = require("../internal/copy-shape");

var _apc = require("./apc");

class Quadratic extends _apc.APC {
  get type() {
    return _geomApi.Type.QUADRATIC;
  }

  copy() {
    return (0, _copyShape.copyShape)(Quadratic, this);
  }

  toHiccup() {
    return ["path", this.attribs, [["M", this.points[0]], ...this.toHiccupPathSegments()]];
  }

  toHiccupPathSegments() {
    const pts = this.points;
    return [["Q", pts[1], pts[2]]];
  }

}

exports.Quadratic = Quadratic;
},{"@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","../internal/copy-shape":"../node_modules/@thi.ng/geom/internal/copy-shape.js","./apc":"../node_modules/@thi.ng/geom/api/apc.js"}],"../node_modules/@thi.ng/geom/api/ray.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Ray = void 0;

var _geomApi = require("@thi.ng/geom-api");

var _vectors = require("@thi.ng/vectors");

var _copyAttribs = require("../internal/copy-attribs");

class Ray {
  constructor(pos, dir, attribs) {
    this.pos = pos;
    this.dir = dir;
    this.attribs = attribs;
  }

  get type() {
    return _geomApi.Type.RAY;
  }

  copy() {
    return new Ray((0, _vectors.set)([], this.pos), (0, _vectors.set)([], this.dir), (0, _copyAttribs.copyAttribs)(this));
  }

  toHiccup() {
    return ["line", this.attribs, this.pos, (0, _vectors.maddN2)([], this.dir, 1e6, this.pos)];
  }

}

exports.Ray = Ray;
},{"@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../internal/copy-attribs":"../node_modules/@thi.ng/geom/internal/copy-attribs.js"}],"../node_modules/@thi.ng/geom/api/rect.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Rect = void 0;

var _checks = require("@thi.ng/checks");

var _geomApi = require("@thi.ng/geom-api");

var _vectors = require("@thi.ng/vectors");

var _copyAttribs = require("../internal/copy-attribs");

class Rect {
  constructor(pos = [0, 0], size = 1, attribs) {
    this.pos = pos;
    this.attribs = attribs;
    this.size = (0, _checks.isNumber)(size) ? [size, size] : size;
  }

  get type() {
    return _geomApi.Type.RECT;
  }

  copy() {
    return new Rect((0, _vectors.set)([], this.pos), (0, _vectors.set)([], this.size), (0, _copyAttribs.copyAttribs)(this));
  }

  max() {
    return (0, _vectors.add2)([], this.pos, this.size);
  }

  toHiccup() {
    return ["rect", this.attribs, this.pos, this.size[0], this.size[1]];
  }

}

exports.Rect = Rect;
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../internal/copy-attribs":"../node_modules/@thi.ng/geom/internal/copy-attribs.js"}],"../node_modules/@thi.ng/geom/api/sphere.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Sphere = void 0;

var _geomApi = require("@thi.ng/geom-api");

var _vectors = require("@thi.ng/vectors");

var _copyAttribs = require("../internal/copy-attribs");

class Sphere {
  constructor(pos = [0, 0, 0], r = 1, attribs) {
    this.pos = pos;
    this.r = r;
    this.attribs = attribs;
  }

  get type() {
    return _geomApi.Type.SPHERE;
  }

  copy() {
    return new Sphere((0, _vectors.set3)([], this.pos), this.r, (0, _copyAttribs.copyAttribs)(this));
  }

  toHiccup() {
    return ["sphere", this.attribs, this.pos, this.r];
  }

}

exports.Sphere = Sphere;
},{"@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../internal/copy-attribs":"../node_modules/@thi.ng/geom/internal/copy-attribs.js"}],"../node_modules/@thi.ng/geom/api/text.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Text = void 0;

var _geomApi = require("@thi.ng/geom-api");

var _vectors = require("@thi.ng/vectors");

var _copyAttribs = require("../internal/copy-attribs");

/**
 * Basic stub for text elements. Currently, only a minimal set of geometry
 * operations are implemented for this type, however this type implements
 * {@link @this.ng/api#IToHiccup} and so is useful as wrapper for inclusion of
 * text elements in {@link Group}s with other shape types.
 */
class Text {
  constructor(pos, body, attribs) {
    this.pos = pos;
    this.body = body;
    this.attribs = attribs;
  }

  get type() {
    return _geomApi.Type.TEXT;
  }

  copy() {
    return new Text((0, _vectors.set)([], this.pos), this.body, (0, _copyAttribs.copyAttribs)(this));
  }

  toHiccup() {
    return ["text", this.attribs, this.pos, this.body];
  }

}

exports.Text = Text;
},{"@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../internal/copy-attribs":"../node_modules/@thi.ng/geom/internal/copy-attribs.js"}],"../node_modules/@thi.ng/geom/api/triangle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Triangle = void 0;

var _geomApi = require("@thi.ng/geom-api");

var _copyShape = require("../internal/copy-shape");

var _apc = require("./apc");

class Triangle extends _apc.APC {
  get type() {
    return _geomApi.Type.TRIANGLE;
  }

  copy() {
    return (0, _copyShape.copyShape)(Triangle, this);
  }

  toHiccup() {
    return ["polygon", this.attribs, this.points];
  }

}

exports.Triangle = Triangle;
},{"@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","../internal/copy-shape":"../node_modules/@thi.ng/geom/internal/copy-shape.js","./apc":"../node_modules/@thi.ng/geom/api/apc.js"}],"../node_modules/@thi.ng/geom/internal/args.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.argsVN = exports.argsVV = exports.argAttribs = void 0;

var _arrays = require("@thi.ng/arrays");

var _checks = require("@thi.ng/checks");

/**
 * Takes an array of arguments, checks if last element is a plain object
 * and if so, removes it from array and returns it. Else returns
 * `undefined`.
 *
 * @param args -
 *
 * @internal
 */
const argAttribs = args => (0, _checks.isPlainObject)((0, _arrays.peek)(args)) ? args.pop() : undefined;
/**
 * Args parser for functions expecting up to 2 vector args and optional
 * attribs object. Returns 3-tuple of re-structured args.
 *
 * @param args -
 *
 * @internal
 */


exports.argAttribs = argAttribs;

const argsVV = args => {
  const attr = argAttribs(args);
  return args.length ? args.length === 2 ? [args[0], args[1], attr] : [undefined, args[0], attr] : [undefined, undefined, attr];
};
/**
 * Args parser for functions expecting a vector, numeric and/or optional
 * attribs object. Returns 3-tuple of re-structured args.
 *
 * @param args -
 *
 * @internal
 */


exports.argsVV = argsVV;

const argsVN = args => {
  const attr = argAttribs(args);
  return args.length ? args.length === 2 ? [args[0], args[1], attr] : (0, _checks.isNumber)(args[0]) ? [undefined, args[0], attr] : [args[0], undefined, attr] : [undefined, undefined, attr];
};

exports.argsVN = argsVN;
},{"@thi.ng/arrays":"../node_modules/@thi.ng/arrays/index.js","@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js"}],"../node_modules/@thi.ng/geom/ctors/aabb.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.aabb = aabb;
exports.inscribedAABB = inscribedAABB;
exports.intersectionAABB = exports.aabbFromMinMax = void 0;

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

var _aabb = require("../api/aabb");

var _args = require("../internal/args");

function aabb(...args) {
  return new _aabb.AABB(...(0, _args.argsVV)(args));
}

const aabbFromMinMax = (min, max, attribs) => new _aabb.AABB(min, (0, _vectors.sub3)([], max, min), attribs);
/**
 * Returns the intersection AABB of given inputs or `undefined` if they
 * are non-overlapping.
 *
 * @param a
 * @param b
 */


exports.aabbFromMinMax = aabbFromMinMax;

const intersectionAABB = (a, b) => {
  const p = (0, _vectors.max3)([], a.pos, b.pos);
  const q = (0, _vectors.min3)(null, (0, _vectors.add3)([], a.pos, a.size), (0, _vectors.add3)([], b.pos, b.size));
  const size = (0, _vectors.max3)(null, (0, _vectors.sub3)(null, q, p), _vectors.ZERO3);
  return size[0] > 0 && size[1] > 0 && size[2] > 0 ? new _aabb.AABB(p, size) : undefined;
};

exports.intersectionAABB = intersectionAABB;

function inscribedAABB(...args) {
  let pos, r;

  if (args.length === 1) {
    const c = args[0];
    pos = c.pos;
    r = c.r;
  } else {
    [pos, r] = args;
  }

  r *= _math.SQRT2_2;
  return aabb((0, _vectors.subN3)([], pos, r), r * 2);
}
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../api/aabb":"../node_modules/@thi.ng/geom/api/aabb.js","../internal/args":"../node_modules/@thi.ng/geom/internal/args.js"}],"../node_modules/@thi.ng/geom/ctors/arc.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.arcFrom2Points = exports.arc = void 0;

var _checks = require("@thi.ng/checks");

var _geomArc = require("@thi.ng/geom-arc");

var _arc = require("../api/arc");

const arc = (pos, r, axis, start, end, xl = false, clockwise = false) => new _arc.Arc(pos, (0, _checks.isNumber)(r) ? [r, r] : r, axis, start, end, xl, clockwise);

exports.arc = arc;

const arcFrom2Points = (a, b, radii, axis = 0, xl = false, cw = false, attribs) => {
  const res = (0, _geomArc.fromEndPoints)(a, b, radii, axis, xl, cw);
  return res ? new _arc.Arc(res.center, res.r, res.axis, res.start, res.end, res.xl, res.cw, attribs) : undefined;
};

exports.arcFrom2Points = arcFrom2Points;
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","@thi.ng/geom-arc":"../node_modules/@thi.ng/geom-arc/index.js","../api/arc":"../node_modules/@thi.ng/geom/api/arc.js"}],"../node_modules/@thi.ng/geom-poly-utils/area.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.triArea2 = exports.polyArea2 = void 0;

var _vectors = require("@thi.ng/vectors");

/**
 * Interprets given points as closed 2D polygon and computes its signed
 * area. If result is negative, the polygon is clockwise.
 *
 * @param pts - points
 */
const polyArea2 = pts => {
  const n = pts.length - 1;
  if (n < 2) return 0;
  let res = 0;
  let a = pts[n];
  let b = pts[0];

  for (let i = 0; i <= n; a = b, b = pts[++i]) {
    res += (0, _vectors.cross2)(a, b);
  }

  return res / 2;
};

exports.polyArea2 = polyArea2;
const triArea2 = _vectors.signedArea2;
exports.triArea2 = triArea2;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-poly-utils/barycentric.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fromBarycentric = exports.toBarycentric = void 0;

var _vectors = require("@thi.ng/vectors");

const toBarycentric = (a, b, c, p, out = []) => {
  const u = (0, _vectors.sub)([], b, a);
  const v = (0, _vectors.sub)([], c, a);
  const w = (0, _vectors.sub)([], p, a);
  const uu = (0, _vectors.magSq)(u);
  const vv = (0, _vectors.magSq)(v);
  const uv = (0, _vectors.dot)(u, v);
  const uw = (0, _vectors.dot)(u, w);
  const vw = (0, _vectors.dot)(v, w);
  const d = 1 / (uv * uv - uu * vv);
  const s = d * (uv * vw - vv * uw);
  const t = d * (uv * uw - uu * vw);
  return (0, _vectors.setC3)(out, 1 - (s + t), s, t);
};

exports.toBarycentric = toBarycentric;

const fromBarycentric = (a, b, c, p, out = []) => (0, _vectors.addW3)(out, a, b, c, p[0], p[1], p[2]);

exports.fromBarycentric = fromBarycentric;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-poly-utils/bounds.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bounds = void 0;

var _vectors = require("@thi.ng/vectors");

/**
 * Computes the nD bounds of given vectors. `vmin` should be initialized
 * to `+∞` and `vmax` to `-∞` (e.g. use copies of `MIN*` / `MAX*`
 * constants defined in thi.ng/vectors).
 *
 * @example
 * ```ts
 * points = [[-1,-2], [5,-3], [0,4]];
 *
 * bounds(points, [...MAX2], [...MIN2])
 * // [[-1,-3],[5,4]]
 * ```
 *
 * Returns 2-tuple of modified `[vmin, vmax]`.
 *
 * @param pts - point
 * @param vmin - min result (pre-initialized to `+∞`)
 * @param vmax - max result (pre-initialized to `-∞`)
 */
const bounds = (pts, vmin, vmax) => {
  for (let i = pts.length; --i >= 0;) {
    const p = pts[i];
    (0, _vectors.min)(null, vmin, p);
    (0, _vectors.max)(null, vmax, p);
  }

  return [vmin, vmax];
};

exports.bounds = bounds;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-poly-utils/center-of-weight.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.centerOfWeight2 = void 0;

var _vectors = require("@thi.ng/vectors");

const centerOfWeight2 = (pts, out = []) => {
  const n = pts.length - 1;
  let area = 0;
  let x = 0;
  let y = 0;
  let a = pts[n];
  let b = pts[0];

  for (let i = 0; i <= n; a = b, b = pts[++i]) {
    const z = (0, _vectors.cross2)(a, b);
    area += z;
    x += (a[0] + b[0]) * z;
    y += (a[1] + b[1]) * z;
  }

  area = 1 / (area * 3);
  out[0] = x * area;
  out[1] = y * area;
  return out;
};

exports.centerOfWeight2 = centerOfWeight2;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-poly-utils/centroid.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.centroid = void 0;

var _errors = require("@thi.ng/errors");

var _vectors = require("@thi.ng/vectors");

const centroid = (pts, out) => {
  const num = pts.length;
  !num && (0, _errors.illegalArgs)("no points");
  !out && (out = (0, _vectors.empty)(pts[0]));

  for (let i = num; --i >= 0;) {
    (0, _vectors.add)(out, out, pts[i]);
  }

  return (0, _vectors.divN)(out, out, num);
};

exports.centroid = centroid;
},{"@thi.ng/errors":"../node_modules/@thi.ng/errors/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-poly-utils/circumcenter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.circumCenter2 = void 0;

var _math = require("@thi.ng/math");

/**
 * Computes and returns the center of the circumcircle of the given 2D
 * triangle points. Returns `undefined` if the points are colinear or
 * coincident.
 *
 * @param a - triangle vertex 1
 * @param b - triangle vertex 2
 * @param c - triangle vertex 3
 * @param eps - epsilon value for colinear check
 */
const circumCenter2 = (a, b, c, eps = _math.EPS) => {
  const ax = a[0],
        ay = a[1];
  const bx = b[0],
        by = b[1];
  const cx = c[0],
        cy = c[1];
  const bax = bx - ax;
  const bay = by - ay;
  const cbx = cx - bx;
  const cby = cy - by;
  const deltaAB = Math.abs(bay);
  const deltaBC = Math.abs(cby); // colinear check

  if (deltaAB < eps && deltaBC < eps || Math.abs(bax) < eps && Math.abs(cbx) < eps) {
    return;
  }

  const abx2 = (ax + bx) / 2;
  const aby2 = (ay + by) / 2;
  const bcx2 = (bx + cx) / 2;
  const bcy2 = (by + cy) / 2;

  if (deltaAB < eps) {
    return [abx2, -cbx / cby * (abx2 - bcx2) + bcy2];
  }

  if (deltaBC < eps) {
    return [bcx2, -bax / bay * (bcx2 - abx2) + aby2];
  }

  let m1 = -bax / bay;
  let m2 = -cbx / cby;
  let mx1 = abx2;
  let my1 = aby2;
  let mx2 = bcx2;
  let my2 = bcy2;
  let xc = (m1 * mx1 - m2 * mx2 + my2 - my1) / (m1 - m2);
  let yc = deltaAB > deltaBC ? m1 * (xc - mx1) + my1 : m2 * (xc - mx2) + my2;
  return [xc, yc];
};

exports.circumCenter2 = circumCenter2;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js"}],"../node_modules/@thi.ng/geom-poly-utils/convexity.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.convexity = void 0;

var _geomApi = require("@thi.ng/geom-api");

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

const convexity = (pts, eps = _math.EPS) => {
  let n = pts.length;

  if (n < 3) {
    return n < 2 ? _geomApi.Convexity.ILLEGAL : _geomApi.Convexity.COLINEAR;
  }

  let type = 0;
  let a = pts[n - 2];
  let b = pts[n - 1];
  let c = pts[0];

  for (let i = 0; i < n && type < 3; a = b, b = c, c = pts[++i]) {
    const t = (0, _vectors.corner2)(a, b, c, eps);
    type |= t < 0 ? 1 : t > 0 ? 2 : 0;
  }

  return type === 3 ? _geomApi.Convexity.CONCAVE : type > 0 ? _geomApi.Convexity.CONVEX : _geomApi.Convexity.COLINEAR;
};

exports.convexity = convexity;
},{"@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-poly-utils/equilateral.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.equilateralTriangle2 = void 0;

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

const equilateralTriangle2 = (a, b) => {
  const dir = (0, _vectors.sub2)([], b, a);
  const c = (0, _vectors.normalize)(null, (0, _vectors.perpendicularCCW)([], dir), (0, _vectors.mag)(dir) * Math.sin(_math.THIRD_PI));
  return [a, b, (0, _vectors.maddN2)(null, dir, 0.5, c)];
};

exports.equilateralTriangle2 = equilateralTriangle2;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-poly-utils/perimeter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.perimeter = void 0;

var _vectors = require("@thi.ng/vectors");

const perimeter = (pts, num = pts.length, closed = false) => {
  if (num < 2) return 0;
  let res = 0;
  let p = pts[0];
  let q = pts[1];

  for (let i = 1; i < num; p = q, q = pts[++i]) {
    res += (0, _vectors.dist)(p, q);
  }

  return closed ? res + (0, _vectors.dist)(p, pts[0]) : res;
};

exports.perimeter = perimeter;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-poly-utils/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _area = require("./area");

Object.keys(_area).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _area[key];
    }
  });
});

var _barycentric = require("./barycentric");

Object.keys(_barycentric).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _barycentric[key];
    }
  });
});

var _bounds = require("./bounds");

Object.keys(_bounds).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _bounds[key];
    }
  });
});

var _centerOfWeight = require("./center-of-weight");

Object.keys(_centerOfWeight).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _centerOfWeight[key];
    }
  });
});

var _centroid = require("./centroid");

Object.keys(_centroid).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _centroid[key];
    }
  });
});

var _circumcenter = require("./circumcenter");

Object.keys(_circumcenter).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _circumcenter[key];
    }
  });
});

var _convexity = require("./convexity");

Object.keys(_convexity).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _convexity[key];
    }
  });
});

var _equilateral = require("./equilateral");

Object.keys(_equilateral).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _equilateral[key];
    }
  });
});

var _perimeter = require("./perimeter");

Object.keys(_perimeter).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _perimeter[key];
    }
  });
});
},{"./area":"../node_modules/@thi.ng/geom-poly-utils/area.js","./barycentric":"../node_modules/@thi.ng/geom-poly-utils/barycentric.js","./bounds":"../node_modules/@thi.ng/geom-poly-utils/bounds.js","./center-of-weight":"../node_modules/@thi.ng/geom-poly-utils/center-of-weight.js","./centroid":"../node_modules/@thi.ng/geom-poly-utils/centroid.js","./circumcenter":"../node_modules/@thi.ng/geom-poly-utils/circumcenter.js","./convexity":"../node_modules/@thi.ng/geom-poly-utils/convexity.js","./equilateral":"../node_modules/@thi.ng/geom-poly-utils/equilateral.js","./perimeter":"../node_modules/@thi.ng/geom-poly-utils/perimeter.js"}],"../node_modules/@thi.ng/geom/ctors/circle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.circle = circle;
exports.circleFrom3Points = exports.circleFrom2Points = void 0;

var _geomPolyUtils = require("@thi.ng/geom-poly-utils");

var _vectors = require("@thi.ng/vectors");

var _circle = require("../api/circle");

var _args = require("../internal/args");

function circle(...args) {
  return new _circle.Circle(...(0, _args.argsVN)(args));
}

const circleFrom2Points = (a, b, attribs) => new _circle.Circle((0, _vectors.mixN2)([], a, b, 0.5), (0, _vectors.dist)(a, b) / 2, attribs);

exports.circleFrom2Points = circleFrom2Points;

const circleFrom3Points = (a, b, c, attribs) => {
  const o = (0, _geomPolyUtils.circumCenter2)(a, b, c);
  return o ? new _circle.Circle(o, (0, _vectors.dist)(a, o), attribs) : undefined;
};

exports.circleFrom3Points = circleFrom3Points;
},{"@thi.ng/geom-poly-utils":"../node_modules/@thi.ng/geom-poly-utils/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../api/circle":"../node_modules/@thi.ng/geom/api/circle.js","../internal/args":"../node_modules/@thi.ng/geom/internal/args.js"}],"../node_modules/@thi.ng/geom-splines/cubic-line.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cubicFromLine = void 0;

var _vectors = require("@thi.ng/vectors");

/**
 * Converts line segment `a` -> `b` into a cubic curve, which when
 * sampled yields uniformly spaced points. The inner control points are
 * located at 1/3 and 2/3 respectively.
 *
 * @param a - line endpoint
 * @param b - line endpoint
 */
const cubicFromLine = (a, b) => [(0, _vectors.set)([], a), (0, _vectors.mixN)([], a, b, 1 / 3), (0, _vectors.mixN)([], b, a, 1 / 3), (0, _vectors.set)([], b)];

exports.cubicFromLine = cubicFromLine;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-splines/cubic-arc.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cubicFromArc = void 0;

var _geomArc = require("@thi.ng/geom-arc");

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

var _cubicLine = require("./cubic-line");

/**
 * Converts elliptic arc into a 1-4 cubic curve segments, depending on
 * arc's angle range.
 *
 * Partially based on:
 * {@link https://github.com/chromium/chromium/blob/develop/third_party/blink/renderer/core/svg/svg_path_parser.cc#L253}
 *
 * @param pos - ellipse center
 * @param r - ellipse radii
 * @param axis - rotation angle (radians)
 * @param start - start angle (radians)
 * @param end - end angle (radians)
 */
const cubicFromArc = (pos, r, axis, start, end) => {
  const p = (0, _geomArc.pointAtTheta)(pos, r, axis, start);
  const q = (0, _geomArc.pointAtTheta)(pos, r, axis, end);
  const delta = end - start;
  const [rx, ry] = r;
  const [s, c] = (0, _math.sincos)(axis);
  const dx = c * (p[0] - q[0]) / 2 + s * (p[1] - q[1]) / 2;
  const dy = -s * (p[0] - q[0]) / 2 + c * (p[1] - q[1]) / 2;

  if (Math.abs(delta) < _math.PI && dx === 0 && dy === 0 || (0, _vectors.magSq2)(r) < _math.EPS) {
    return [(0, _cubicLine.cubicFromLine)(p, q)];
  }

  const mapP = (x, y) => {
    x *= rx;
    y *= ry;
    return [c * x - s * y + pos[0], s * x + c * y + pos[1]];
  };

  const res = [];
  const n = Math.ceil((0, _math.roundEps)(Math.abs(delta) / _math.HALF_PI, 1e-3));
  const d = delta / n;
  const t = 8 / 6 * Math.tan(0.25 * d);

  if (!isFinite(t)) {
    return [(0, _cubicLine.cubicFromLine)(p, q)];
  }

  for (let i = n, theta = start, sc = (0, _math.sincos)(theta); i > 0; i--, theta += d) {
    const [s1, c1] = sc;
    const [s2, c2] = sc = (0, _math.sincos)(theta + d);
    res.push([mapP(c1, s1), mapP(c1 - s1 * t, s1 + c1 * t), mapP(c2 + s2 * t, s2 - c2 * t), mapP(c2, s2)]);
  }

  return res;
};

exports.cubicFromArc = cubicFromArc;
},{"@thi.ng/geom-arc":"../node_modules/@thi.ng/geom-arc/index.js","@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./cubic-line":"../node_modules/@thi.ng/geom-splines/cubic-line.js"}],"../node_modules/@thi.ng/geom-splines/cubic-bounds.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cubicBounds = void 0;

var _math = require("@thi.ng/math");

/**
 * Computes cubic spline bounds for a single vector component.
 *
 * Based on:
 * {@link http://www.iquilezles.org/www/articles/bezierbbox/bezierbbox.htm}
 *
 * @param min - min accumulator
 * @param max - max accumulator
 * @param i - vector component
 * @param pa - control point 1
 * @param pb - control point 2
 * @param pc - control point 3
 * @param pd - control point 4
 */
const axisBounds = (min, max, i, pa, pb, pc, pd) => {
  min[i] = Math.min(pa, pd);
  max[i] = Math.max(pa, pd);
  const k0 = -pa + pb;
  const k1 = pa - 2 * pb + pc;
  const k2 = -pa + 3 * pb - 3 * pc + pd;
  let h = k1 * k1 - k0 * k2;

  if (h > 0) {
    h = Math.sqrt(h);

    const update = t => {
      if (t > 0 && t < 1) {
        const q = (0, _math.mixCubic)(pa, pb, pc, pd, t);
        min[i] = Math.min(min[i], q);
        max[i] = Math.max(max[i], q);
      }
    };

    update(k0 / (-k1 - h));
    update(k0 / (-k1 + h));
  }
};

const cubicBounds = (a, b, c, d) => {
  const min = [];
  const max = [];

  for (let i = a.length; --i >= 0;) {
    axisBounds(min, max, i, a[i], b[i], c[i], d[i]);
  }

  return [min, max];
};

exports.cubicBounds = cubicBounds;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js"}],"../node_modules/@thi.ng/geom-splines/cubic-closest-point.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.closestPointCubic = void 0;

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

/**
 * Performs recursive search for closest point to `p` on cubic curve
 * defined by control points `a`,`b`,`c`,`d`. The `res` and `recur`
 * params are used to control the recursion behavior. If `eps` is given,
 * the search is terminated as soon as a point with a shorter *squared*
 * distance than `eps` is found.
 *
 * {@link @thi.ng/math#minError}
 *
 * @param p - query point
 * @param a - control point 1
 * @param b - control point 2
 * @param c - control point 3
 * @param d - control point 4
 * @param res - search steps per iteration
 * @param iter - iterations
 * @param eps - epsilon value
 */
const closestPointCubic = (p, a, b, c, d, out = [], res, iter, eps) => {
  const fn = t => (0, _vectors.mixCubic)(out, a, b, c, d, t);

  return fn((0, _math.minError)(fn, _vectors.distSq, p, res, iter, 0, 1, eps));
};

exports.closestPointCubic = closestPointCubic;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-splines/cubic-from-breakpoints.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.openCubicFromBreakPoints = exports.closedCubicFromBreakPoints = void 0;

var _vectors = require("@thi.ng/vectors");

const buildSegments = (tangents, t, uniform) => {
  const res = [];

  for (let i = 0, num = tangents.length - 1; i < num; i++) {
    const [a, na] = tangents[i];
    const [b, nb] = tangents[i + 1];
    const d = uniform ? t : t * (0, _vectors.dist)(a, b);
    res.push([a, (0, _vectors.maddN)([], na, d, a), (0, _vectors.maddN)([], nb, -d, b), b]);
  }

  return res;
};

const closedCubicFromBreakPoints = (points, t = 1 / 3, uniform = false) => {
  const tangents = [];

  for (let num = points.length, i = num - 1, j = 0; j < num; i = j, j++) {
    const a = points[i];
    const b = points[j];
    const c = points[(j + 1) % num];
    const n = (0, _vectors.mulN)(null, (0, _vectors.perpendicularCW)(null, (0, _vectors.cornerBisector)([], a, b, c)), (0, _vectors.corner2)(a, b, c));
    tangents.push([(0, _vectors.set)([], b), n]);
  }

  tangents.push(tangents[0]);
  return buildSegments(tangents, t, uniform);
};

exports.closedCubicFromBreakPoints = closedCubicFromBreakPoints;

const openCubicFromBreakPoints = (points, t = 1 / 3, uniform = false) => {
  const tangents = [[points[0], (0, _vectors.direction)([], points[0], points[1])]];
  const num = points.length - 1;

  for (let i = 1; i < num; i++) {
    const a = points[i - 1];
    const b = points[i];
    const c = points[i + 1];
    const n = (0, _vectors.mulN)(null, (0, _vectors.perpendicularCW)(null, (0, _vectors.cornerBisector)([], a, b, c)), (0, _vectors.corner2)(a, b, c));
    tangents.push([(0, _vectors.set)([], b), n]);
  }

  tangents.push([points[num], (0, _vectors.direction)([], points[num - 1], points[num])]);
  return buildSegments(tangents, t, uniform);
};

exports.openCubicFromBreakPoints = openCubicFromBreakPoints;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-splines/cubic-from-controlpoints.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.openCubicFromControlPoints = exports.closedCubicFromControlPoints = void 0;

var _vectors = require("@thi.ng/vectors");

const buildUniform = (segments, t) => {
  const res = [];

  for (let i = 0, n = segments.length - 2; i < n; i += 2) {
    const a = segments[i];
    const b = segments[i + 1];
    const c = segments[i + 2];
    res.push([a, (0, _vectors.add)(null, (0, _vectors.direction)([], a, b, t), a), (0, _vectors.add)(null, (0, _vectors.direction)([], c, b, t), c), c]);
  }

  return res;
};

const buildNonUniform = (segments, t) => {
  const res = [];

  for (let i = 0, n = segments.length - 2; i < n; i += 2) {
    const a = segments[i];
    const b = segments[i + 1];
    const c = segments[i + 2];
    res.push([a, (0, _vectors.mixN)([], a, b, t), (0, _vectors.mixN)([], c, b, t), c]);
  }

  return res;
};

const closedCubicFromControlPoints = (points, t = 1, uniform = false) => {
  const segments = [];

  for (let i = 0, num = points.length; i < num; i++) {
    const q = points[(i + 1) % num];
    segments.push((0, _vectors.addmN)([], points[i], q, 0.5), (0, _vectors.set)([], q));
  }

  segments.push(segments[0]);
  return uniform ? buildUniform(segments, t) : buildNonUniform(segments, t);
};

exports.closedCubicFromControlPoints = closedCubicFromControlPoints;

const openCubicFromControlPoints = (points, t = 1, uniform = false) => {
  const segments = [(0, _vectors.set)([], points[0]), (0, _vectors.set)([], points[0])];
  const num = points.length - 1;

  for (let i = 0; i < num; i++) {
    const q = points[i + 1];
    segments.push((0, _vectors.addmN)([], points[i], q, 0.5), (0, _vectors.set)([], q));
  }

  segments.push((0, _vectors.set)([], points[num]));
  return uniform ? buildUniform(segments, t) : buildNonUniform(segments, t);
};

exports.openCubicFromControlPoints = openCubicFromControlPoints;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-splines/cubic-quadratic.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cubicFromQuadratic = void 0;

var _vectors = require("@thi.ng/vectors");

const cubicFromQuadratic = (a, b, c) => [(0, _vectors.set)([], a), (0, _vectors.mixN)([], a, b, 2 / 3), (0, _vectors.mixN)([], c, b, 2 / 3), (0, _vectors.set)([], c)];

exports.cubicFromQuadratic = cubicFromQuadratic;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-splines/internal/sample.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.__sampleArray = exports.__sample = void 0;

var _checks = require("@thi.ng/checks");

var _geomApi = require("@thi.ng/geom-api");

var _geomResample = require("@thi.ng/geom-resample");

var _vectors = require("@thi.ng/vectors");

const __sample = sample => function $(pts, opts) {
  if ((0, _checks.isPlainObject)(opts) && opts.dist !== undefined) {
    return new _geomResample.Sampler($(pts, opts.num || _geomApi.DEFAULT_SAMPLES)).sampleUniform(opts.dist, opts.last !== false);
  }

  opts = (0, _checks.isNumber)(opts) ? {
    num: opts,
    last: true
  } : Object.assign({
    num: _geomApi.DEFAULT_SAMPLES
  }, opts);
  const res = [];
  sample(res, pts, opts.num);
  opts.last && res.push((0, _vectors.set)([], pts[pts.length - 1]));
  return res;
};

exports.__sample = __sample;

const __sampleArray = fn => (segments, closed = false, opts) => {
  const _opts = (0, _checks.isNumber)(opts) ? {
    num: opts
  } : opts;

  const n = segments.length - 1;
  return Array.prototype.concat.apply([], segments.map((seg, i) => {
    const last = !closed && i === n;
    return fn(seg, Object.assign(Object.assign({}, _opts), {
      last
    }));
  }));
};

exports.__sampleArray = __sampleArray;
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/geom-resample":"../node_modules/@thi.ng/geom-resample/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-splines/cubic-sample.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sampleCubicArray = exports.sampleCubic = void 0;

var _vectors = require("@thi.ng/vectors");

var _sample = require("./internal/sample");

const sampleCubic = (0, _sample.__sample)((res, [a, b, c, d], num) => {
  const delta = 1 / num;

  for (let t = 0; t < num; t++) {
    res.push((0, _vectors.mixCubic)([], a, b, c, d, t * delta));
  }
});
exports.sampleCubic = sampleCubic;
const sampleCubicArray = (0, _sample.__sampleArray)(sampleCubic);
exports.sampleCubicArray = sampleCubicArray;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./internal/sample":"../node_modules/@thi.ng/geom-splines/internal/sample.js"}],"../node_modules/@thi.ng/geom-splines/cubic-split.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.splitCubicNearPoint = exports.cubicSplitAt = void 0;

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

const cubicSplitAt = (a, b, c, d, t) => {
  if (t <= 0 || t >= 1) {
    const p = t <= 0 ? a : d;
    const c1 = [(0, _vectors.set)([], p), (0, _vectors.set)([], p), (0, _vectors.set)([], p), (0, _vectors.set)([], p)];
    const c2 = [(0, _vectors.set)([], a), (0, _vectors.set)([], b), (0, _vectors.set)([], c), (0, _vectors.set)([], d)];
    return t <= 0 ? [c1, c2] : [c2, c1];
  }

  const ab = (0, _vectors.mixN)([], a, b, t);
  const bc = (0, _vectors.mixN)([], b, c, t);
  const cd = (0, _vectors.mixN)([], c, d, t);
  const abc = (0, _vectors.mixN)([], ab, bc, t);
  const bcd = (0, _vectors.mixN)([], bc, cd, t);
  const p = (0, _vectors.mixN)([], abc, bcd, t);
  return [[(0, _vectors.set)([], a), ab, abc, (0, _vectors.set)([], p)], [p, bcd, cd, (0, _vectors.set)([], d)]];
};

exports.cubicSplitAt = cubicSplitAt;

const splitCubicNearPoint = (p, a, b, c, d, res, iter) => cubicSplitAt(a, b, c, d, (0, _math.minError)(t => (0, _vectors.mixCubic)([], a, b, c, d, t), _vectors.distSq, p, res, iter));

exports.splitCubicNearPoint = splitCubicNearPoint;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-splines/cubic-tangent.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cubicTangentAt = void 0;

var _vectors = require("@thi.ng/vectors");

const cubicTangentAt = (out, a, b, c, d, t, len = 1) => {
  const s = 1 - t;
  const ss = s * s;
  const tt = t * t;
  const ts2 = 2 * t * s;
  return (0, _vectors.normalize)(out, (0, _vectors.addW4)(out, a, b, c, d, -3 * ss, 3 * (ss - ts2), 3 * (ts2 - tt), 3 * tt), len);
};

exports.cubicTangentAt = cubicTangentAt;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-splines/quadratic-bounds.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.quadraticBounds = void 0;

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

const solveQuadratic = (a, b, c) => {
  const t = (0, _math.clamp01)((a - b) / (a - 2.0 * b + c));
  const s = 1 - t;
  return s * s * a + 2.0 * s * t * b + t * t * c;
};

const inBounds = (p, min, max) => {
  for (let i = p.length; --i >= 0;) {
    if (!(0, _math.inRange)(p[i], min[i], max[i])) return false;
  }

  return true;
};

const quadraticBounds = (a, b, c) => {
  const mi = (0, _vectors.min)([], a, c);
  const ma = (0, _vectors.max)([], a, c);

  if (!inBounds(b, mi, ma)) {
    const q = [];

    for (let i = a.length; --i >= 0;) {
      q[i] = solveQuadratic(a[i], b[i], c[i]);
    }

    (0, _vectors.min)(null, mi, q);
    (0, _vectors.max)(null, ma, q);
  }

  return [mi, ma];
};

exports.quadraticBounds = quadraticBounds;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-splines/quadratic-closest-point.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.closestPointQuadratic = void 0;

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

/**
 * Performs recursive search for closest point to `p` on quadratic curve
 * defined by control points `a`,`b`,`c`. The `res` and `recur` params
 * are used to control the recursion behavior. If `eps` is given, the
 * search is terminated as soon as a point with a shorter *squared*
 * distance than `eps` is found.
 *
 * {@link @thi.ng/math#minError}
 *
 * @param p - query point
 * @param a - control point 1
 * @param b - control point 2
 * @param c - control point 3
 * @param res - search steps per iteration
 * @param iter - iterations
 * @param eps - epsilon value
 */
const closestPointQuadratic = (p, a, b, c, out = [], res, iter, eps) => {
  const fn = t => (0, _vectors.mixQuadratic)(out, a, b, c, t);

  return fn((0, _math.minError)(fn, _vectors.distSq, p, res, iter, 0, 1, eps));
};

exports.closestPointQuadratic = closestPointQuadratic;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-splines/quadratic-line.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.quadraticFromLine = void 0;

var _vectors = require("@thi.ng/vectors");

const quadraticFromLine = (a, b) => [(0, _vectors.set)([], a), (0, _vectors.addmN)([], a, b, 0.5), (0, _vectors.set)([], b)];

exports.quadraticFromLine = quadraticFromLine;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-splines/quadratic-sample.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sampleQuadraticArray = exports.sampleQuadratic = void 0;

var _vectors = require("@thi.ng/vectors");

var _sample = require("./internal/sample");

const sampleQuadratic = (0, _sample.__sample)((res, [a, b, c], num) => {
  const delta = 1 / num;

  for (let t = 0; t < num; t++) {
    res.push((0, _vectors.mixQuadratic)([], a, b, c, t * delta));
  }
});
exports.sampleQuadratic = sampleQuadratic;
const sampleQuadraticArray = (0, _sample.__sampleArray)(sampleQuadratic);
exports.sampleQuadraticArray = sampleQuadraticArray;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./internal/sample":"../node_modules/@thi.ng/geom-splines/internal/sample.js"}],"../node_modules/@thi.ng/geom-splines/quadratic-split.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.quadraticSplitNearPoint = exports.quadraticSplitAt = void 0;

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

const quadraticSplitAt = (a, b, c, t) => {
  if (t <= 0 || t >= 1) {
    const p = t <= 0 ? a : c;
    const c1 = [(0, _vectors.set)([], p), (0, _vectors.set)([], p), (0, _vectors.set)([], p)];
    const c2 = [(0, _vectors.set)([], a), (0, _vectors.set)([], b), (0, _vectors.set)([], c)];
    return t <= 0 ? [c1, c2] : [c2, c1];
  }

  const ab = (0, _vectors.mixN)([], a, b, t);
  const bc = (0, _vectors.mixN)([], b, c, t);
  const p = (0, _vectors.mixN)([], ab, bc, t);
  return [[(0, _vectors.set)([], a), ab, p], [p, bc, (0, _vectors.set)([], c)]];
};

exports.quadraticSplitAt = quadraticSplitAt;

const quadraticSplitNearPoint = (p, a, b, c, res, iter) => quadraticSplitAt(a, b, c, (0, _math.minError)(t => (0, _vectors.mixQuadratic)([], a, b, c, t), _vectors.distSq, p, res, iter));

exports.quadraticSplitNearPoint = quadraticSplitNearPoint;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-splines/quadratic-tangent.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.quadraticTangentAt = void 0;

var _vectors = require("@thi.ng/vectors");

const quadraticTangentAt = (out, a, b, c, t, len = 1) => (0, _vectors.normalize)(out, (0, _vectors.addW2)(out, (0, _vectors.sub)(out, b, a), (0, _vectors.sub)([], c, b), 2 * (1 - t), 2 * t), len);

exports.quadraticTangentAt = quadraticTangentAt;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-splines/point-at.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.quadraticPointAt = exports.cubicPointAt = void 0;

var _vectors = require("@thi.ng/vectors");

/**
 * Same as thi.ng/vectors/mixCubic
 */
const cubicPointAt = _vectors.mixCubic;
/**
 * Same as thi.ng/vectors/mixQuadratic
 */

exports.cubicPointAt = cubicPointAt;
const quadraticPointAt = _vectors.mixQuadratic;
exports.quadraticPointAt = quadraticPointAt;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-splines/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _cubicArc = require("./cubic-arc");

Object.keys(_cubicArc).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _cubicArc[key];
    }
  });
});

var _cubicBounds = require("./cubic-bounds");

Object.keys(_cubicBounds).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _cubicBounds[key];
    }
  });
});

var _cubicClosestPoint = require("./cubic-closest-point");

Object.keys(_cubicClosestPoint).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _cubicClosestPoint[key];
    }
  });
});

var _cubicFromBreakpoints = require("./cubic-from-breakpoints");

Object.keys(_cubicFromBreakpoints).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _cubicFromBreakpoints[key];
    }
  });
});

var _cubicFromControlpoints = require("./cubic-from-controlpoints");

Object.keys(_cubicFromControlpoints).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _cubicFromControlpoints[key];
    }
  });
});

var _cubicLine = require("./cubic-line");

Object.keys(_cubicLine).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _cubicLine[key];
    }
  });
});

var _cubicQuadratic = require("./cubic-quadratic");

Object.keys(_cubicQuadratic).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _cubicQuadratic[key];
    }
  });
});

var _cubicSample = require("./cubic-sample");

Object.keys(_cubicSample).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _cubicSample[key];
    }
  });
});

var _cubicSplit = require("./cubic-split");

Object.keys(_cubicSplit).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _cubicSplit[key];
    }
  });
});

var _cubicTangent = require("./cubic-tangent");

Object.keys(_cubicTangent).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _cubicTangent[key];
    }
  });
});

var _quadraticBounds = require("./quadratic-bounds");

Object.keys(_quadraticBounds).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _quadraticBounds[key];
    }
  });
});

var _quadraticClosestPoint = require("./quadratic-closest-point");

Object.keys(_quadraticClosestPoint).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _quadraticClosestPoint[key];
    }
  });
});

var _quadraticLine = require("./quadratic-line");

Object.keys(_quadraticLine).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _quadraticLine[key];
    }
  });
});

var _quadraticSample = require("./quadratic-sample");

Object.keys(_quadraticSample).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _quadraticSample[key];
    }
  });
});

var _quadraticSplit = require("./quadratic-split");

Object.keys(_quadraticSplit).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _quadraticSplit[key];
    }
  });
});

var _quadraticTangent = require("./quadratic-tangent");

Object.keys(_quadraticTangent).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _quadraticTangent[key];
    }
  });
});

var _pointAt = require("./point-at");

Object.keys(_pointAt).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _pointAt[key];
    }
  });
});
},{"./cubic-arc":"../node_modules/@thi.ng/geom-splines/cubic-arc.js","./cubic-bounds":"../node_modules/@thi.ng/geom-splines/cubic-bounds.js","./cubic-closest-point":"../node_modules/@thi.ng/geom-splines/cubic-closest-point.js","./cubic-from-breakpoints":"../node_modules/@thi.ng/geom-splines/cubic-from-breakpoints.js","./cubic-from-controlpoints":"../node_modules/@thi.ng/geom-splines/cubic-from-controlpoints.js","./cubic-line":"../node_modules/@thi.ng/geom-splines/cubic-line.js","./cubic-quadratic":"../node_modules/@thi.ng/geom-splines/cubic-quadratic.js","./cubic-sample":"../node_modules/@thi.ng/geom-splines/cubic-sample.js","./cubic-split":"../node_modules/@thi.ng/geom-splines/cubic-split.js","./cubic-tangent":"../node_modules/@thi.ng/geom-splines/cubic-tangent.js","./quadratic-bounds":"../node_modules/@thi.ng/geom-splines/quadratic-bounds.js","./quadratic-closest-point":"../node_modules/@thi.ng/geom-splines/quadratic-closest-point.js","./quadratic-line":"../node_modules/@thi.ng/geom-splines/quadratic-line.js","./quadratic-sample":"../node_modules/@thi.ng/geom-splines/quadratic-sample.js","./quadratic-split":"../node_modules/@thi.ng/geom-splines/quadratic-split.js","./quadratic-tangent":"../node_modules/@thi.ng/geom-splines/quadratic-tangent.js","./point-at":"../node_modules/@thi.ng/geom-splines/point-at.js"}],"../node_modules/@thi.ng/geom/internal/pclike.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pclike = void 0;

var _args = require("./args");

const pclike = (ctor, args) => {
  const attr = (0, _args.argAttribs)(args);
  return new ctor(args.length === 1 ? args[0] : args, attr);
};

exports.pclike = pclike;
},{"./args":"../node_modules/@thi.ng/geom/internal/args.js"}],"../node_modules/@thi.ng/geom/ctors/cubic.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cubic = cubic;
exports.cubicFromQuadratic = exports.cubicFromLine = exports.cubicFromArc = void 0;

var _geomSplines = require("@thi.ng/geom-splines");

var _cubic = require("../api/cubic");

var _copyAttribs = require("../internal/copy-attribs");

var _pclike = require("../internal/pclike");

function cubic(...args) {
  return (0, _pclike.pclike)(_cubic.Cubic, args);
}

const cubicFromArc = arc => (0, _geomSplines.cubicFromArc)(arc.pos, arc.r, arc.axis, arc.start, arc.end).map(c => new _cubic.Cubic(c, (0, _copyAttribs.copyAttribs)(arc)));

exports.cubicFromArc = cubicFromArc;

const cubicFromLine = (a, b, attribs) => new _cubic.Cubic((0, _geomSplines.cubicFromLine)(a, b), attribs);

exports.cubicFromLine = cubicFromLine;

const cubicFromQuadratic = (a, b, c, attribs) => new _cubic.Cubic((0, _geomSplines.cubicFromQuadratic)(a, b, c), attribs);

exports.cubicFromQuadratic = cubicFromQuadratic;
},{"@thi.ng/geom-splines":"../node_modules/@thi.ng/geom-splines/index.js","../api/cubic":"../node_modules/@thi.ng/geom/api/cubic.js","../internal/copy-attribs":"../node_modules/@thi.ng/geom/internal/copy-attribs.js","../internal/pclike":"../node_modules/@thi.ng/geom/internal/pclike.js"}],"../node_modules/@thi.ng/geom/ctors/ellipse.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ellipse = ellipse;

var _ellipse = require("../api/ellipse");

var _args = require("../internal/args");

function ellipse(...args) {
  return new _ellipse.Ellipse(...(0, _args.argsVV)(args));
}
},{"../api/ellipse":"../node_modules/@thi.ng/geom/api/ellipse.js","../internal/args":"../node_modules/@thi.ng/geom/internal/args.js"}],"../node_modules/@thi.ng/geom/ctors/group.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.group = void 0;

var _group = require("../api/group");

const group = (attribs = {}, children) => new _group.Group(attribs, children);

exports.group = group;
},{"../api/group":"../node_modules/@thi.ng/geom/api/group.js"}],"../node_modules/@thi.ng/geom-isec/api.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NONE = void 0;

var _geomApi = require("@thi.ng/geom-api");

const NONE = Object.freeze({
  type: _geomApi.IntersectionType.NONE
});
exports.NONE = NONE;
},{"@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js"}],"../node_modules/@thi.ng/geom-isec/point.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pointInCenteredAABB = exports.pointInCenteredRect = exports.pointInCenteredBox = exports.pointInAABB = exports.pointInRect = exports.pointInBox = exports.classifyPointPolyPair = exports.pointInPolygon2 = exports.classifyPointInTriangle2 = exports.pointInTriangle2 = exports.pointInCircumCircle = exports.classifyPointInCircle = exports.pointInSphere = exports.pointInCircle = exports.pointInSegment = void 0;

var _geomClosestPoint = require("@thi.ng/geom-closest-point");

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

const pointInSegment = (p, a, b, eps = _math.EPS) => {
  const t = (0, _geomClosestPoint.closestT)(p, a, b);
  return t !== undefined ? (0, _vectors.distSq)(p, (0, _vectors.mixN)([], a, b, (0, _math.clamp01)(t))) < eps * eps : false;
};

exports.pointInSegment = pointInSegment;

const pointInCircle = (p, pos, r) => (0, _vectors.distSq)(pos, p) <= r * r;

exports.pointInCircle = pointInCircle;
const pointInSphere = pointInCircle;
exports.pointInSphere = pointInSphere;

const classifyPointInCircle = (p, pos, r, eps = _math.EPS) => (0, _math.sign)(r * r - (0, _vectors.distSq)(pos, p), eps);

exports.classifyPointInCircle = classifyPointInCircle;

const pointInCircumCircle = (a, b, c, d) => (0, _vectors.magSq)(a) * (0, _vectors.signedArea2)(b, c, d) - (0, _vectors.magSq)(b) * (0, _vectors.signedArea2)(a, c, d) + (0, _vectors.magSq)(c) * (0, _vectors.signedArea2)(a, b, d) - (0, _vectors.magSq)(d) * (0, _vectors.signedArea2)(a, b, c) > 0;

exports.pointInCircumCircle = pointInCircumCircle;

const pointInTriangle2 = (p, a, b, c) => {
  const s = (0, _vectors.clockwise2)(a, b, c) ? 1 : -1;
  return s * (0, _vectors.signedArea2)(a, c, p) >= 0 && s * (0, _vectors.signedArea2)(b, a, p) >= 0 && s * (0, _vectors.signedArea2)(c, b, p) >= 0;
};

exports.pointInTriangle2 = pointInTriangle2;

const classifyPointInTriangle2 = (p, a, b, c, eps = _math.EPS) => {
  const s = (0, _vectors.clockwise2)(a, b, c) ? 1 : -1;
  return (0, _math.sign)(Math.min(s * (0, _vectors.signedArea2)(a, c, p), s * (0, _vectors.signedArea2)(b, a, p), s * (0, _vectors.signedArea2)(c, b, p)), eps);
};

exports.classifyPointInTriangle2 = classifyPointInTriangle2;

const pointInPolygon2 = (p, pts) => {
  const n = pts.length - 1;
  const px = p[0];
  const py = p[1];
  let a = pts[n];
  let b = pts[0];
  let inside = 0;

  for (let i = 0; i <= n; a = b, b = pts[++i]) {
    inside = classifyPointPolyPair(px, py, a[0], a[1], b[0], b[1], inside);
  }

  return inside;
};

exports.pointInPolygon2 = pointInPolygon2;

const classifyPointPolyPair = (px, py, ax, ay, bx, by, inside) => (ay < py && by >= py || by < py && ay >= py) && (ax <= px || bx <= px) ? inside ^ (ax + (py - ay) / (by - ay) * (bx - ax) < px ? 1 : 0) : inside;

exports.classifyPointPolyPair = classifyPointPolyPair;
const pointInBox = (0, _vectors.vop)(0);
exports.pointInBox = pointInBox;
const pointInRect = pointInBox.add(2, ([x, y], pos, size) => x >= pos[0] && x <= pos[0] + size[0] && y >= pos[1] && y <= pos[1] + size[1]);
exports.pointInRect = pointInRect;
const pointInAABB = pointInBox.add(3, ([x, y, z], pos, size) => x >= pos[0] && x <= pos[0] + size[0] && y >= pos[1] && y <= pos[1] + size[1] && z >= pos[2] && z <= pos[2] + size[2]);
exports.pointInAABB = pointInAABB;
pointInBox.default((p, boxMin, boxSize) => {
  for (let i = p.length; --i >= 0;) {
    const x = p[i];
    const y = boxMin[i];
    if (x < y || x > y + boxSize[i]) return false;
  }

  return true;
});
const pointInCenteredBox = (0, _vectors.vop)(0);
exports.pointInCenteredBox = pointInCenteredBox;
const pointInCenteredRect = pointInCenteredBox.add(2, ([x, y], pos, size) => x >= pos[0] - size[0] && x <= pos[0] + size[0] && y >= pos[1] - size[1] && y <= pos[1] + size[1]);
exports.pointInCenteredRect = pointInCenteredRect;
const pointInCenteredAABB = pointInCenteredBox.add(3, ([x, y, z], pos, size) => x >= pos[0] - size[0] && x <= pos[0] + size[0] && y >= pos[1] - size[1] && y <= pos[1] + size[1] && z >= pos[2] - size[2] && z <= pos[2] + size[2]);
exports.pointInCenteredAABB = pointInCenteredAABB;
pointInCenteredBox.default((p, boxCenter, boxExtent) => {
  for (let i = p.length; --i >= 0;) {
    const x = p[i];
    const y = boxCenter[i];
    const z = boxExtent[i];
    if (x < y - z || x > y + z) return false;
  }

  return true;
});
},{"@thi.ng/geom-closest-point":"../node_modules/@thi.ng/geom-closest-point/index.js","@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-isec/circle-circle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.testCircleCircle = exports.intersectCircleCircle = void 0;

var _geomApi = require("@thi.ng/geom-api");

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

var _api = require("./api");

const intersectCircleCircle = (a, b, ar, br) => {
  const delta = (0, _vectors.sub)([], b, a);
  const d = (0, _vectors.mag)(delta);

  if ((0, _math.eqDelta)(d, 0)) {
    return {
      type: _geomApi.IntersectionType.COINCIDENT
    };
  }

  if (d <= ar + br && d >= Math.abs(ar - br)) {
    ar *= ar;
    const alpha = (ar - br * br + d * d) / (2 * d);
    const h = Math.sqrt(ar - alpha * alpha);
    const p = (0, _vectors.maddN)([], delta, alpha / d, a);
    const t = (0, _vectors.mulN)(null, (0, _vectors.perpendicularCCW)(null, delta), h / d);
    return {
      type: _geomApi.IntersectionType.INTERSECT,
      isec: [(0, _vectors.add)([], p, t), (0, _vectors.sub)([], p, t)]
    };
  }

  return _api.NONE;
};

exports.intersectCircleCircle = intersectCircleCircle;

const testCircleCircle = (a, b, ar, br) => (0, _vectors.distSq)(a, b) <= Math.pow(ar + br, 2);

exports.testCircleCircle = testCircleCircle;
},{"@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./api":"../node_modules/@thi.ng/geom-isec/api.js"}],"../node_modules/@thi.ng/geom-isec/line-line.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isParallelLine = exports.intersectLineLine = void 0;

var _geomApi = require("@thi.ng/geom-api");

var _geomClosestPoint = require("@thi.ng/geom-closest-point");

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

const intersectLineLine = (a, b, c, d, eps = _math.EPS) => {
  const bax = b[0] - a[0];
  const bay = b[1] - a[1];
  const dcx = d[0] - c[0];
  const dcy = d[1] - c[1];
  const acx = a[0] - c[0];
  const acy = a[1] - c[1];
  const det = dcy * bax - dcx * bay;
  let alpha = dcx * acy - dcy * acx;
  let beta = bax * acy - bay * acx;

  if ((0, _math.eqDelta)(det, 0, eps)) {
    if ((0, _math.eqDelta)(alpha, 0, eps) && (0, _math.eqDelta)(beta, 0, eps)) {
      let isec = (0, _geomClosestPoint.closestPointSegment)(c, a, b, undefined, true) || (0, _geomClosestPoint.closestPointSegment)(d, a, b, undefined, true);
      return {
        type: isec ? _geomApi.IntersectionType.COINCIDENT : _geomApi.IntersectionType.COINCIDENT_NO_INTERSECT,
        isec
      };
    }

    return {
      type: _geomApi.IntersectionType.PARALLEL
    };
  }

  alpha /= det;
  beta /= det;
  const ieps = 1 - eps;
  return {
    type: eps < alpha && alpha < ieps && eps < beta && beta < ieps ? _geomApi.IntersectionType.INTERSECT : _geomApi.IntersectionType.INTERSECT_OUTSIDE,
    isec: (0, _vectors.mixN2)([], a, b, alpha),
    alpha,
    beta,
    det
  };
};
/**
 * 2D only. Returns true if line `a`,`b` is parallel (or coincident) to
 * line `c`,`d`.
 *
 * @param a - line 1 start point
 * @param b - line 1 end point
 * @param c - line 2 start point
 * @param d - line 2 end point
 */


exports.intersectLineLine = intersectLineLine;

const isParallelLine = (a, b, c, d) => (0, _math.eqDelta)((d[1] - c[1]) * (b[0] - a[0]) - (d[0] - c[0]) * (b[1] - a[1]), 0);

exports.isParallelLine = isParallelLine;
},{"@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/geom-closest-point":"../node_modules/@thi.ng/geom-closest-point/index.js","@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-isec/ray-line.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.intersectRayLine = void 0;

var _geomApi = require("@thi.ng/geom-api");

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

var _api = require("./api");

const intersectRayLine = (rpos, dir, a, b, minD = 0, maxD = Infinity) => {
  const bax = b[0] - a[0];
  const bay = b[1] - a[1];
  const d = dir[0] * bay - dir[1] * bax;

  if ((0, _math.eqDelta)(d, 0)) {
    return _api.NONE;
  }

  const arx = a[0] - rpos[0];
  const ary = a[1] - rpos[1];
  const t = (bay * arx - bax * ary) / d;
  const s = (dir[1] * arx - dir[0] * ary) / d;
  return t >= minD && t <= maxD && s >= 0 && s <= 1 ? {
    type: _geomApi.IntersectionType.INTERSECT,
    isec: (0, _vectors.maddN)([], dir, t, rpos),
    alpha: t
  } : _api.NONE;
};

exports.intersectRayLine = intersectRayLine;
},{"@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./api":"../node_modules/@thi.ng/geom-isec/api.js"}],"../node_modules/@thi.ng/geom-isec/ray-poly.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.intersectRayPolylineAll = exports.intersectRayPolyline = void 0;

var _geomApi = require("@thi.ng/geom-api");

var _vectors = require("@thi.ng/vectors");

var _api = require("./api");

var _rayLine = require("./ray-line");

const startPoints = (pts, closed) => closed ? [pts[pts.length - 1], pts[0]] : [pts[0], pts[1]];

const intersectRayPolyline = (rpos, dir, pts, closed = false, minD = 0, maxD = Infinity) => {
  const n = pts.length - 1;
  let alpha = maxD;
  let cross = 0;
  let [i, j] = startPoints(pts, closed);

  for (let k = 0; k <= n; i = j, j = pts[++k]) {
    const d = (0, _rayLine.intersectRayLine)(rpos, dir, i, j, minD, maxD).alpha;

    if (d !== undefined) {
      cross++;
      if (d < alpha) alpha = d;
    }
  }

  return cross > 0 ? {
    type: _geomApi.IntersectionType.INTERSECT,
    isec: (0, _vectors.maddN2)([], dir, alpha, rpos),
    inside: !(cross & 1),
    alpha
  } : _api.NONE;
};

exports.intersectRayPolyline = intersectRayPolyline;

const intersectRayPolylineAll = (rpos, dir, pts, closed = false, minD = 0, maxD = Infinity) => {
  const n = pts.length - 1;
  let [i, j] = startPoints(pts, closed);
  const res = [];

  for (let k = 0; k <= n; i = j, j = pts[++k]) {
    const d = (0, _rayLine.intersectRayLine)(rpos, dir, i, j, minD, maxD).alpha;

    if (d !== undefined) {
      res.push([d, (0, _vectors.maddN2)([], dir, d, rpos)]);
    }
  }

  return res.length ? {
    type: _geomApi.IntersectionType.INTERSECT,
    isec: res.sort((a, b) => a[0] - b[0]).map(x => x[1])
  } : _api.NONE;
};

exports.intersectRayPolylineAll = intersectRayPolylineAll;
},{"@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./api":"../node_modules/@thi.ng/geom-isec/api.js","./ray-line":"../node_modules/@thi.ng/geom-isec/ray-line.js"}],"../node_modules/@thi.ng/geom-isec/line-poly.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.intersectLinePolylineAll = void 0;

var _vectors = require("@thi.ng/vectors");

var _rayPoly = require("./ray-poly");

const intersectLinePolylineAll = (a, b, pts, closed = false) => {
  const dir = (0, _vectors.sub)([], b, a);
  const maxD = (0, _vectors.mag)(dir);
  return (0, _rayPoly.intersectRayPolylineAll)(a, (0, _vectors.normalize)(null, dir), pts, closed, 0, maxD);
};

exports.intersectLinePolylineAll = intersectLinePolylineAll;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./ray-poly":"../node_modules/@thi.ng/geom-isec/ray-poly.js"}],"../node_modules/@thi.ng/geom-isec/plane-plane.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.intersectPlanePlane = void 0;

var _geomApi = require("@thi.ng/geom-api");

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

var _api = require("./api");

const intersectPlanePlane = (na, wa, nb, wb) => {
  const dn = (0, _vectors.dot3)(na, nb);

  if ((0, _math.eqDelta)(dn, 1)) {
    return (0, _math.eqDelta)(wa, wb) ? {
      type: _geomApi.IntersectionType.COINCIDENT
    } : _api.NONE;
  }

  const det = 1 / (1 - dn * dn);
  const da = (wa - wb * dn) * det;
  const db = (wb - wa * dn) * det;
  return {
    type: _geomApi.IntersectionType.INTERSECT,
    isec: [(0, _vectors.add3)(null, (0, _vectors.mulN3)([], na, da), (0, _vectors.mulN3)([], nb, db)), (0, _vectors.cross3)([], na, nb)]
  };
};

exports.intersectPlanePlane = intersectPlanePlane;
},{"@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./api":"../node_modules/@thi.ng/geom-isec/api.js"}],"../node_modules/@thi.ng/geom-isec/ray-circle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.intersectRayCircle = void 0;

var _geomApi = require("@thi.ng/geom-api");

var _vectors = require("@thi.ng/vectors");

var _api = require("./api");

const intersectRayCircle = (rpos, dir, spos, r) => {
  const delta = (0, _vectors.sub)([], spos, rpos);
  const w = (0, _vectors.dot)(delta, dir);
  let d = r * r + w * w - (0, _vectors.magSq)(delta);
  if (d < 0) return _api.NONE;
  d = Math.sqrt(d);
  const a = w + d;
  const b = w - d;
  const isec = a >= 0 ? b >= 0 ? a > b ? [(0, _vectors.maddN)(delta, dir, b, rpos), (0, _vectors.maddN)([], dir, a, rpos)] : [(0, _vectors.maddN)(delta, dir, a, rpos), (0, _vectors.maddN)([], dir, b, rpos)] : [(0, _vectors.maddN)(delta, dir, a, rpos)] : b >= 0 ? [(0, _vectors.maddN)(delta, dir, b, rpos)] : undefined;
  return isec ? {
    type: _geomApi.IntersectionType.INTERSECT,
    isec
  } : _api.NONE;
};

exports.intersectRayCircle = intersectRayCircle;
},{"@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./api":"../node_modules/@thi.ng/geom-isec/api.js"}],"../node_modules/@thi.ng/geom-isec/ray-plane.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.intersectRayPlane = void 0;

var _geomApi = require("@thi.ng/geom-api");

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

var _api = require("./api");

const intersectRayPlane = (rpos, dir, normal, w, eps = _math.EPS) => {
  const d = (0, _vectors.dot)(normal, dir);
  const cp = (0, _math.sign)((0, _vectors.dot)(normal, rpos) - w, eps);

  if (d > eps && cp < 0 || d < -eps && cp > 0) {
    const isec = (0, _vectors.sub)(null, (0, _vectors.mulN)([], normal, w), rpos);
    const alpha = (0, _vectors.dot)(normal, isec) / d;
    return {
      type: _geomApi.IntersectionType.INTERSECT,
      isec: (0, _vectors.maddN)(isec, dir, alpha, rpos),
      alpha
    };
  }

  return cp === 0 ? {
    type: _geomApi.IntersectionType.COINCIDENT,
    isec: (0, _vectors.copy)(rpos)
  } : _api.NONE;
};

exports.intersectRayPlane = intersectRayPlane;
},{"@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./api":"../node_modules/@thi.ng/geom-isec/api.js"}],"../node_modules/@thi.ng/geom-isec/ray-rect.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.testRayAABB = exports.testRayRect = exports.intersectRayAABB = exports.intersectRayRect = void 0;

var _geomApi = require("@thi.ng/geom-api");

var _vectors = require("@thi.ng/vectors");

var _api = require("./api");

const min = Math.min;
const max = Math.max;
/**
 * Based on:
 * {@link https://tavianator.com/fast-branchless-raybounding-box-intersections/}
 *
 * @param rpos - ray origin
 * @param dir - ray dir
 * @param bmin - rect min
 * @param bmax - rect max
 */

const rayRect = (rpos, dir, bmin, bmax) => {
  let p = rpos[0];
  let d = 1 / dir[0];
  let t1 = (bmin[0] - p) * d;
  let t2 = (bmax[0] - p) * d;
  let tmin = min(t1, t2);
  let tmax = max(t1, t2);
  p = rpos[1];
  d = 1 / dir[1];
  t1 = (bmin[1] - p) * d;
  t2 = (bmax[1] - p) * d;
  return [max(tmin, min(t1, t2)), min(tmax, max(t1, t2))];
};
/**
 * Like to {@link rayRect}, but for 3D (AABB).
 *
 * @param rpos - ray origin
 * @param dir - ray dir
 * @param bmin - box min
 * @param bmax - box max
 */


const rayBox = (rpos, dir, bmin, bmax) => {
  let p = rpos[0];
  let d = 1 / dir[0];
  let t1 = (bmin[0] - p) * d;
  let t2 = (bmax[0] - p) * d;
  let tmin = min(t1, t2);
  let tmax = max(t1, t2);
  p = rpos[1];
  d = 1 / dir[1];
  t1 = (bmin[1] - p) * d;
  t2 = (bmax[1] - p) * d;
  p = rpos[2];
  d = 1 / dir[2];
  t1 = (bmin[2] - p) * d;
  t2 = (bmax[2] - p) * d;
  tmin = max(tmin, min(t1, t2));
  tmax = min(tmax, max(t1, t2));
  return [max(tmin, min(t1, t2)), min(tmax, max(t1, t2))];
};

const intersectWith = fn => (rpos, dir, bmin, bmax) => {
  const t = fn(rpos, dir, bmin, bmax);
  const tmin = t[0];
  const tmax = t[1];
  const inside = tmin < 0;
  return tmax > max(tmin, 0) ? inside ? {
    type: _geomApi.IntersectionType.INTERSECT,
    inside,
    isec: [(0, _vectors.maddN)([], dir, tmax, rpos)],
    alpha: tmax
  } : {
    type: _geomApi.IntersectionType.INTERSECT,
    isec: [(0, _vectors.maddN)([], dir, tmin, rpos), (0, _vectors.maddN)([], dir, tmax, rpos)],
    alpha: tmin,
    beta: tmax
  } : _api.NONE;
};

const intersectRayRect = intersectWith(rayRect);
exports.intersectRayRect = intersectRayRect;
const intersectRayAABB = intersectWith(rayBox);
exports.intersectRayAABB = intersectRayAABB;

const testRayRect = (rpos, dir, bmin, bmax) => {
  const t = rayRect(rpos, dir, bmin, bmax);
  return t[1] > max(t[0], 0);
};

exports.testRayRect = testRayRect;

const testRayAABB = (rpos, dir, bmin, bmax) => {
  const t = rayBox(rpos, dir, bmin, bmax);
  return t[1] > max(t[0], 0);
};

exports.testRayAABB = testRayAABB;
},{"@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./api":"../node_modules/@thi.ng/geom-isec/api.js"}],"../node_modules/@thi.ng/geom-isec/rect-circle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.testCenteredAABBSphere = exports.testCenteredRectCircle = exports.testCenteredBoxSphere = exports.testAABBSphere = exports.testRectCircle = exports.testBoxSphere = void 0;

var _vectors = require("@thi.ng/vectors");

const testBoxSphere = (0, _vectors.vop)(0);
/**
 * Returns true if given 2D rect defined by `boxMinPos` and `boxSize`
 * intersects circle.
 *
 * @param boxMinPos
 * @param boxSize
 * @param circlePos
 * @param r
 */

exports.testBoxSphere = testBoxSphere;
const testRectCircle = testBoxSphere.add(2, (boxMinPos, boxSize, circlePos, r) => axis(circlePos[0], boxMinPos[0], boxSize[0]) + axis(circlePos[1], boxMinPos[1], boxSize[1]) <= r * r);
/**
 * Same as {@link testRectCircle}, but for 3D AABB and sphere.
 *
 * @param boxMinPos
 * @param boxSize
 * @param spherePos
 * @param r
 */

exports.testRectCircle = testRectCircle;
const testAABBSphere = testBoxSphere.add(3, (boxMinPos, boxSize, spherePos, r) => axis(spherePos[0], boxMinPos[0], boxSize[0]) + axis(spherePos[1], boxMinPos[1], boxSize[1]) + axis(spherePos[2], boxMinPos[2], boxSize[2]) <= r * r);
exports.testAABBSphere = testAABBSphere;
testBoxSphere.default((boxPos, boxSize, spherePos, r) => {
  let sum = 0;

  for (let i = boxPos.length; --i >= 0;) {
    sum += axis(spherePos[i], boxPos[i], boxSize[i]);
  }

  return sum <= r * r;
});
/**
 * Like {@link testCenteredAABBSphere}, but for arbitrary dimensions w/
 * optimized execution for 2D & 3D cases.
 *
 * @param boxCenter
 * @param boxExtent
 * @param spherePos
 * @param r
 */

const testCenteredBoxSphere = (0, _vectors.vop)(0);
/**
 * Similar to {@link testRectCircle}, but for rects defined by centroid
 * and radius-like extent.
 *
 * @param rectPos
 * @param extent
 * @param circlePos
 * @param r
 */

exports.testCenteredBoxSphere = testCenteredBoxSphere;
const testCenteredRectCircle = testCenteredBoxSphere.add(2, (boxPos, {
  0: w,
  1: h
}, circlePos, r) => axis(circlePos[0], boxPos[0] - w, w * 2) + axis(circlePos[1], boxPos[1] - h, h * 2) <= r * r);
/**
 * Similar to {@link testAABBSphere}, but for AABBs defined by centroid
 * and radius-like extent.
 *
 * @param boxCenter
 * @param boxExtent
 * @param spherePos
 * @param r
 */

exports.testCenteredRectCircle = testCenteredRectCircle;
const testCenteredAABBSphere = testCenteredBoxSphere.add(3, (boxPos, {
  0: w,
  1: h,
  2: d
}, spherePos, r) => axis(spherePos[0], boxPos[0] - w, w * 2) + axis(spherePos[1], boxPos[1] - h, h * 2) + axis(spherePos[2], boxPos[2] - d, d * 2) <= r * r);
exports.testCenteredAABBSphere = testCenteredAABBSphere;
testCenteredBoxSphere.default((boxPos, boxExtent, spherePos, r) => {
  let sum = 0;

  for (let i = boxPos.length; --i >= 0;) {
    sum += axis(spherePos[i], boxPos[i] - boxExtent[i], boxExtent[i] * 2);
  }

  return sum <= r * r;
});

const axis = (a, b, c) => (a < b ? a - b : a > b + c ? a - b - c : 0) ** 2;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-isec/rect-rect.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.testAabbAabb = exports.testRectRect = void 0;

const testRectRect = ([ax, ay], [aw, ah], [bx, by], [bw, bh]) => !(ax > bx + bw || bx > ax + aw || ay > by + bh || by > ay + ah);

exports.testRectRect = testRectRect;

const testAabbAabb = ([ax, ay, az], [aw, ah, ad], [bx, by, bz], [bw, bh, bd]) => !(ax > bx + bw || bx > ax + aw || ay > by + bh || by > ay + ah || az > bz + bd || bz > az + ad);

exports.testAabbAabb = testAabbAabb;
},{}],"../node_modules/@thi.ng/geom-isec/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _api = require("./api");

Object.keys(_api).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _api[key];
    }
  });
});

var _point = require("./point");

Object.keys(_point).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _point[key];
    }
  });
});

var _circleCircle = require("./circle-circle");

Object.keys(_circleCircle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _circleCircle[key];
    }
  });
});

var _lineLine = require("./line-line");

Object.keys(_lineLine).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _lineLine[key];
    }
  });
});

var _linePoly = require("./line-poly");

Object.keys(_linePoly).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _linePoly[key];
    }
  });
});

var _planePlane = require("./plane-plane");

Object.keys(_planePlane).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _planePlane[key];
    }
  });
});

var _rayCircle = require("./ray-circle");

Object.keys(_rayCircle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _rayCircle[key];
    }
  });
});

var _rayLine = require("./ray-line");

Object.keys(_rayLine).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _rayLine[key];
    }
  });
});

var _rayPlane = require("./ray-plane");

Object.keys(_rayPlane).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _rayPlane[key];
    }
  });
});

var _rayPoly = require("./ray-poly");

Object.keys(_rayPoly).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _rayPoly[key];
    }
  });
});

var _rayRect = require("./ray-rect");

Object.keys(_rayRect).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _rayRect[key];
    }
  });
});

var _rectCircle = require("./rect-circle");

Object.keys(_rectCircle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _rectCircle[key];
    }
  });
});

var _rectRect = require("./rect-rect");

Object.keys(_rectRect).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _rectRect[key];
    }
  });
});
},{"./api":"../node_modules/@thi.ng/geom-isec/api.js","./point":"../node_modules/@thi.ng/geom-isec/point.js","./circle-circle":"../node_modules/@thi.ng/geom-isec/circle-circle.js","./line-line":"../node_modules/@thi.ng/geom-isec/line-line.js","./line-poly":"../node_modules/@thi.ng/geom-isec/line-poly.js","./plane-plane":"../node_modules/@thi.ng/geom-isec/plane-plane.js","./ray-circle":"../node_modules/@thi.ng/geom-isec/ray-circle.js","./ray-line":"../node_modules/@thi.ng/geom-isec/ray-line.js","./ray-plane":"../node_modules/@thi.ng/geom-isec/ray-plane.js","./ray-poly":"../node_modules/@thi.ng/geom-isec/ray-poly.js","./ray-rect":"../node_modules/@thi.ng/geom-isec/ray-rect.js","./rect-circle":"../node_modules/@thi.ng/geom-isec/rect-circle.js","./rect-rect":"../node_modules/@thi.ng/geom-isec/rect-rect.js"}],"../node_modules/@thi.ng/geom-clip-line/clip-poly.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.clipLineSegmentPoly = exports.clipLinePoly = void 0;

var _geomIsec = require("@thi.ng/geom-isec");

var _vectors = require("@thi.ng/vectors");

/**
 * Computes all intersection points of the infinite line defined by `a`,
 * `b` with the given polygon. Returns an array of segments where the
 * line is inside the polygon.
 *
 * @param a
 * @param b
 * @param pts
 */
const clipLinePoly = (a, b, pts) => {
  const isecs = (0, _geomIsec.intersectRayPolylineAll)(a, (0, _vectors.direction)([], a, b), pts, true).isec;
  if (!isecs) return;
  const segments = [];

  for (let i = 0; i < isecs.length; i += 2) {
    segments.push([isecs[i], isecs[i + 1]]);
  }

  return segments;
};

exports.clipLinePoly = clipLinePoly;

const clipLineSegmentPoly = (a, b, pts) => {
  const isecs = (0, _geomIsec.intersectLinePolylineAll)(a, b, pts, true).isec;
  const isAInside = (0, _geomIsec.pointInPolygon2)(a, pts);
  const isBInside = (0, _geomIsec.pointInPolygon2)(b, pts);

  if (!isecs) {
    return isAInside && isBInside ? [[a, b]] : undefined;
  }

  isAInside && isecs.unshift(a);
  isBInside && isecs.push(b);
  const segments = [];

  for (let i = 0, n = isecs.length - 1; i < n; i += 2) {
    segments.push([isecs[i], isecs[i + 1]]);
  }

  return segments;
};

exports.clipLineSegmentPoly = clipLineSegmentPoly;
},{"@thi.ng/geom-isec":"../node_modules/@thi.ng/geom-isec/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-clip-line/liang-barsky.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.liangBarsky2Raw = exports.liangBarsky2 = void 0;

/**
 * Performs Liang-Barsky clipping of the line segment with endpoints
 * `a`, `b` against the clipping rect defined by `min` and `max`. The
 * optional `ca` and `cb` vectors can be given to store the result
 * (clipped points). If omitted creates new vectors. Returns a tuple of
 * `[ca, cb, a, b]`, where the latter two values represent the
 * normalized distances of the clipped points relative to original given
 * line segment. Returns `undefined` iff the line lies completely
 * outside the rect.
 *
 * - {@link https://en.wikipedia.org/wiki/Liang%E2%80%93Barsky_algorithm}
 * - {@link https://github.com/thi-ng/c-thing/blob/develop/src/geom/clip/liangbarsky.c}
 *
 * @param a - line endpoint
 * @param b - line endpoint
 * @param min - bbox min
 * @param max - bbox max
 * @param ca - result A
 * @param cb - result B
 */
const liangBarsky2 = (a, b, min, max, ca = [], cb = []) => {
  const res = liangBarsky2Raw(a[0], a[1], b[0], b[1], min[0], min[1], max[0], max[1]);
  if (!res) return;
  ca[0] = res[0];
  ca[1] = res[1];
  cb[0] = res[2];
  cb[1] = res[3];
  return [ca, cb, res[4], res[5]];
};
/**
 * Same as {@link liangBarsky2} but for non-vector arguments.
 *
 * @param ax
 * @param ay
 * @param bx
 * @param by
 * @param minx
 * @param miny
 * @param maxx
 * @param maxy
 */


exports.liangBarsky2 = liangBarsky2;

const liangBarsky2Raw = (ax, ay, bx, by, minx, miny, maxx, maxy) => {
  const dx = bx - ax;
  const dy = by - ay;
  let alpha = 0;
  let beta = 1;

  const clip = (p, q) => {
    if (p < 0) {
      const r = q / p;

      if (r > beta) {
        return false;
      }

      if (r > alpha) {
        alpha = r;
      }
    } else if (p > 0) {
      const r = q / p;

      if (r < alpha) {
        return false;
      }

      if (r < beta) {
        beta = r;
      }
    } else if (q < 0) {
      return false;
    }

    return true;
  };

  return clip(-dx, ax - minx) && clip(dx, maxx - ax) && clip(-dy, ay - miny) && clip(dy, maxy - ay) ? [alpha * dx + ax, alpha * dy + ay, beta * dx + ax, beta * dy + ay, alpha, beta] : undefined;
};

exports.liangBarsky2Raw = liangBarsky2Raw;
},{}],"../node_modules/@thi.ng/geom-clip-line/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _clipPoly = require("./clip-poly");

Object.keys(_clipPoly).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _clipPoly[key];
    }
  });
});

var _liangBarsky = require("./liang-barsky");

Object.keys(_liangBarsky).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _liangBarsky[key];
    }
  });
});
},{"./clip-poly":"../node_modules/@thi.ng/geom-clip-line/clip-poly.js","./liang-barsky":"../node_modules/@thi.ng/geom-clip-line/liang-barsky.js"}],"../node_modules/@thi.ng/geom/ctors/line.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.line = line;
exports.clippedLine = void 0;

var _geomClipLine = require("@thi.ng/geom-clip-line");

var _line = require("../api/line");

var _rect = require("../api/rect");

var _pclike = require("../internal/pclike");

function line(...args) {
  return (0, _pclike.pclike)(_line.Line, args);
}

const clippedLine = (l, bounds) => {
  const res = bounds instanceof _rect.Rect ? (0, _geomClipLine.liangBarsky2)(l.points[0], l.points[1], bounds.pos, bounds.max()) : (0, _geomClipLine.liangBarsky2)(l.points[0], l.points[1], bounds[0], bounds[1]);

  if (res) {
    return new _line.Line([res[0], res[1]], Object.assign({}, l.attribs));
  }
};

exports.clippedLine = clippedLine;
},{"@thi.ng/geom-clip-line":"../node_modules/@thi.ng/geom-clip-line/index.js","../api/line":"../node_modules/@thi.ng/geom/api/line.js","../api/rect":"../node_modules/@thi.ng/geom/api/rect.js","../internal/pclike":"../node_modules/@thi.ng/geom/internal/pclike.js"}],"../node_modules/@thi.ng/defmulti/api.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/defmulti/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setLogger = exports.LOGGER = exports.DEFAULT = void 0;

var _api = require("@thi.ng/api");

/**
 * Unique symbol used for registering a default / fallback
 * implementation.
 */
const DEFAULT = Symbol();
exports.DEFAULT = DEFAULT;
let LOGGER = _api.NULL_LOGGER;
exports.LOGGER = LOGGER;

const setLogger = logger => exports.LOGGER = LOGGER = logger;

exports.setLogger = setLogger;
},{"@thi.ng/api":"../node_modules/@thi.ng/api/index.js"}],"../node_modules/@thi.ng/defmulti/defmulti.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defmulti = defmulti;

var _errors = require("@thi.ng/errors");

var _constants = require("./constants");

function defmulti(f, ancestors) {
  const impls = {};
  const rels = ancestors ? makeRels(ancestors) : {};

  const fn = (...args) => {
    const id = f(...args);

    const g = impls[id] || findImpl(impls, rels, id) || impls[_constants.DEFAULT];

    return g ? g(...args) : (0, _errors.unsupported)(`missing implementation for: "${id.toString()}"`);
  };

  fn.add = (id, g) => {
    if (impls[id]) {
      _constants.LOGGER.warn(`overwriting '${id.toString()}' impl`);
    }

    impls[id] = g;
    return true;
  };

  fn.addAll = _impls => {
    let ok = true;

    for (let id in _impls) {
      ok = fn.add(id, _impls[id]) && ok;
    }

    return ok;
  };

  fn.remove = id => {
    if (!impls[id]) return false;
    delete impls[id];
    return true;
  };

  fn.callable = (...args) => {
    const id = f(...args);
    return !!(impls[id] || findImpl(impls, rels, id) || impls[_constants.DEFAULT]);
  };

  fn.isa = (id, parent) => {
    let val = rels[id];
    !val && (rels[id] = val = new Set());
    val.add(parent);
  };

  fn.impls = () => {
    const res = new Set(Object.keys(impls));

    for (let id in rels) {
      findImpl(impls, rels, id) && res.add(id);
    }

    impls[_constants.DEFAULT] && res.add(_constants.DEFAULT);
    return res;
  };

  fn.rels = () => rels;

  fn.parents = id => rels[id];

  fn.ancestors = id => new Set(findAncestors([], rels, id));

  return fn;
}

const findImpl = (impls, rels, id) => {
  const parents = rels[id];
  if (!parents) return;

  for (let p of parents) {
    let impl = impls[p] || findImpl(impls, rels, p);
    if (impl) return impl;
  }
};

const findAncestors = (acc, rels, id) => {
  const parents = rels[id];

  if (parents) {
    for (let p of parents) {
      acc.push(p);
      findAncestors(acc, rels, p);
    }
  }

  return acc;
};

const makeRels = spec => {
  const rels = {};

  for (let k in spec) {
    const val = spec[k];
    rels[k] = val instanceof Set ? val : new Set(val);
  }

  return rels;
};
},{"@thi.ng/errors":"../node_modules/@thi.ng/errors/index.js","./constants":"../node_modules/@thi.ng/defmulti/constants.js"}],"../node_modules/@thi.ng/defmulti/defmulti-n.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defmultiN = void 0;

var _errors = require("@thi.ng/errors");

var _constants = require("./constants");

var _defmulti = require("./defmulti");

/**
 * Returns a multi-dispatch function which delegates to one of the
 * provided implementations, based on the arity (number of args) when
 * the function is called.
 *
 * @remarks
 * Internally uses {@link (defmulti:1)}, so new arities can be dynamically
 * added (or removed) at a later time. If no `fallback` is provided,
 * `defmultiN` also registers a {@link DEFAULT} implementation which
 * simply throws an {@link @thi.ng/errors#IllegalArityError} when
 * invoked.
 *
 * **Note:** Unlike {@link (defmulti:1)} no argument type checking is
 * supported, however you can specify the return type for the generated
 * function.
 *
 * @example
 * ```ts
 * const foo = defmultiN<string>({
 *   0: () => "zero",
 *   1: (x) => `one: ${x}`,
 *   3: (x, y, z) => `three: ${x}, ${y}, ${z}`
 * });
 *
 * foo();
 * // zero
 * foo(23);
 * // one: 23
 * foo(1, 2, 3);
 * // three: 1, 2, 3
 * foo(1, 2);
 * // Error: illegal arity: 2
 *
 * foo.add(2, (x, y) => `two: ${x}, ${y}`);
 * foo(1, 2);
 * // two: 1, 2
 * ```
 *
 * @param impls - implementations
 * @param fallback - fallback implementation
 */
const defmultiN = (impls, fallback) => {
  const fn = (0, _defmulti.defmulti)((...args) => args.length);
  fn.add(_constants.DEFAULT, fallback || ((...args) => (0, _errors.illegalArity)(args.length)));

  for (let id in impls) {
    fn.add(id, impls[id]);
  }

  return fn;
};

exports.defmultiN = defmultiN;
},{"@thi.ng/errors":"../node_modules/@thi.ng/errors/index.js","./constants":"../node_modules/@thi.ng/defmulti/constants.js","./defmulti":"../node_modules/@thi.ng/defmulti/defmulti.js"}],"../node_modules/@thi.ng/defmulti/impls.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.implementations = void 0;

var _errors = require("@thi.ng/errors");

/**
 * Syntax-sugar intended for sets of multi-methods sharing same dispatch
 * values / logic. Takes a dispatch value, an object of "is-a"
 * relationships and a number of multi-methods, each with an
 * implementation for the given dispatch value.
 *
 * @remarks
 * The relations object has dispatch values (parents) as keys and arrays
 * of multi-methods as their values. For each multi-method associates
 * the given `type` with the related parent dispatch value to delegate
 * to its implementation.
 *
 * The remaining implementations are associated with their related
 * multi-method and the given `type` dispatch value.
 *
 * @example
 * ```ts
 * foo = defmulti((x) => x.id);
 * bar = defmulti((x) => x.id);
 * bax = defmulti((x) => x.id);
 * baz = defmulti((x) => x.id);
 *
 * // define impls for dispatch value `a`
 * implementations(
 *   "a",
 *
 *   // delegate bax & baz impls to dispatch val `b`
 *   {
 *      b: [bax, baz]
 *   },
 *
 *   // concrete multi-fn impls
 *   foo,
 *   (x) => `foo: ${x.val}`,
 *
 *   bar,
 *   (x) => `bar: ${x.val.toUpperCase()}`
 * );
 *
 * // add parent impls
 * bax.add("b", (x) => `bax: ${x.id}`);
 * baz.add("c", (x) => `baz: ${x.id}`);
 * // use "c" impl for "b"
 * baz.isa("b", "c");
 *
 * foo({ id: "a", val: "alice" }); // "foo: alice"
 * bar({ id: "a", val: "alice" }); // "bar: ALICE"
 * bax({ id: "a", val: "alice" }); // "bax: a"
 * baz({ id: "a", val: "alice" }); // "baz: a"
 *
 * baz.impls(); // Set { "c", "a", "b" }
 * ```
 *
 * @param id - dispatch value / implementation ID
 * @param impls - implementations
 */
const implementations = (id, rels, ...impls) => {
  impls.length & 1 && (0, _errors.illegalArgs)("expected an even number of implementation items");

  if (rels) {
    for (let parent in rels) {
      for (let fn of rels[parent]) {
        fn.isa(id, parent);
      }
    }
  }

  for (let i = 0; i < impls.length; i += 2) {
    impls[i].add(id, impls[i + 1]);
  }
};

exports.implementations = implementations;
},{"@thi.ng/errors":"../node_modules/@thi.ng/errors/index.js"}],"../node_modules/@thi.ng/defmulti/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _api = require("./api");

Object.keys(_api).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _api[key];
    }
  });
});

var _constants = require("./constants");

Object.keys(_constants).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _constants[key];
    }
  });
});

var _defmulti = require("./defmulti");

Object.keys(_defmulti).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _defmulti[key];
    }
  });
});

var _defmultiN = require("./defmulti-n");

Object.keys(_defmultiN).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _defmultiN[key];
    }
  });
});

var _impls = require("./impls");

Object.keys(_impls).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _impls[key];
    }
  });
});
},{"./api":"../node_modules/@thi.ng/defmulti/api.js","./constants":"../node_modules/@thi.ng/defmulti/constants.js","./defmulti":"../node_modules/@thi.ng/defmulti/defmulti.js","./defmulti-n":"../node_modules/@thi.ng/defmulti/defmulti-n.js","./impls":"../node_modules/@thi.ng/defmulti/impls.js"}],"../node_modules/@thi.ng/geom/internal/dispatch.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dispatch2 = exports.dispatch = void 0;

const dispatch = x => x.type;

exports.dispatch = dispatch;

const dispatch2 = (a, b) => a.type + "-" + b.type;

exports.dispatch2 = dispatch2;
},{}],"../node_modules/@thi.ng/geom/ops/vertices.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ensureVertices = exports.vertices = void 0;

var _checks = require("@thi.ng/checks");

var _defmulti = require("@thi.ng/defmulti");

var _geomApi = require("@thi.ng/geom-api");

var _geomArc = require("@thi.ng/geom-arc");

var _geomResample = require("@thi.ng/geom-resample");

var _geomSplines = require("@thi.ng/geom-splines");

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

var _polygon = require("../api/polygon");

var _dispatch = require("../internal/dispatch");

const vertices = (0, _defmulti.defmulti)(_dispatch.dispatch);
exports.vertices = vertices;
vertices.addAll({
  // e +----+ h
  //   |\   :\
  //   |f+----+ g
  //   | |  : |
  // a +-|--+d|
  //    \|   \|
  //   b +----+ c
  //
  [_geomApi.Type.AABB]: ({
    pos,
    size
  }) => {
    const [px, py, pz] = pos;
    const [qx, qy, qz] = (0, _vectors.add3)([], pos, size);
    return [[px, py, pz], [px, py, qz], [qx, py, qz], [qx, py, pz], [px, qy, pz], [px, qy, qz], [qx, qy, qz], [qx, qy, pz]];
  },
  [_geomApi.Type.ARC]: ($, opts) => (0, _geomArc.sample)($.pos, $.r, $.axis, $.start, $.end, opts),
  [_geomApi.Type.CIRCLE]: ($, opts = _geomApi.DEFAULT_SAMPLES) => {
    const pos = $.pos;
    const r = $.r;
    let [num, last] = circleOpts(opts, r);
    const delta = _math.TAU / num;
    last && num++;
    const buf = new Array(num);

    for (let i = 0; i < num; i++) {
      buf[i] = (0, _vectors.cartesian2)(null, [r, i * delta], pos);
    }

    return buf;
  },
  [_geomApi.Type.CUBIC]: ($, opts) => (0, _geomSplines.sampleCubic)($.points, opts),
  [_geomApi.Type.ELLIPSE]: ($, opts = _geomApi.DEFAULT_SAMPLES) => {
    const buf = [];
    const pos = $.pos;
    const r = $.r;
    let [num, last] = circleOpts(opts, Math.max($.r[0], $.r[1]));
    const delta = _math.TAU / num;
    last && num++;

    for (let i = 0; i < num; i++) {
      buf[i] = (0, _vectors.madd2)([], (0, _math.cossin)(i * delta), r, pos);
    }

    return buf;
  },
  [_geomApi.Type.GROUP]: ({
    children
  }) => children.reduce((acc, $) => acc.concat(vertices($)), []),
  [_geomApi.Type.PATH]: ($, opts) => {
    const _opts = (0, _checks.isNumber)(opts) ? {
      num: opts
    } : opts;

    let verts = [];

    for (let segs = $.segments, n = segs.length - 1, i = 0; i <= n; i++) {
      const s = segs[i];

      if (s.geo) {
        verts = verts.concat(vertices(s.geo, Object.assign(Object.assign({}, _opts), {
          last: i === n && !$.closed
        })));
      }
    }

    return verts;
  },
  [_geomApi.Type.POINTS]: $ => $.points,
  [_geomApi.Type.POLYGON]: ($, opts) => (0, _geomResample.resample)($.points, opts, true),
  [_geomApi.Type.POLYLINE]: ($, opts) => (0, _geomResample.resample)($.points, opts),
  [_geomApi.Type.QUADRATIC]: ($, opts) => (0, _geomSplines.sampleQuadratic)($.points, opts),
  [_geomApi.Type.RECT]: ($, opts) => {
    const p = $.pos;
    const q = (0, _vectors.add2)([], p, $.size);
    const verts = [(0, _vectors.set2)([], p), [q[0], p[1]], q, [p[0], q[1]]];
    return opts != null ? vertices(new _polygon.Polygon(verts), opts) : verts;
  }
});
vertices.isa(_geomApi.Type.LINE, _geomApi.Type.POLYLINE);
vertices.isa(_geomApi.Type.POINTS3, _geomApi.Type.POINTS);
vertices.isa(_geomApi.Type.QUAD, _geomApi.Type.POLYGON);
vertices.isa(_geomApi.Type.TRIANGLE, _geomApi.Type.POLYGON);
/**
 * Takes array of vectors or an `IShape`. If the latter, calls {@link vertices}
 * and return result, else returns original array.
 *
 * @param shape
 */

const ensureVertices = shape => (0, _checks.isArray)(shape) ? shape : vertices(shape);

exports.ensureVertices = ensureVertices;

const circleOpts = (opts, r) => (0, _checks.isNumber)(opts) ? [opts, false] : [opts.theta ? Math.floor(_math.TAU / opts.theta) : opts.dist ? Math.floor(_math.TAU / (opts.dist / r)) : opts.num || _geomApi.DEFAULT_SAMPLES, opts.last === true];
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","@thi.ng/defmulti":"../node_modules/@thi.ng/defmulti/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/geom-arc":"../node_modules/@thi.ng/geom-arc/index.js","@thi.ng/geom-resample":"../node_modules/@thi.ng/geom-resample/index.js","@thi.ng/geom-splines":"../node_modules/@thi.ng/geom-splines/index.js","@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../api/polygon":"../node_modules/@thi.ng/geom/api/polygon.js","../internal/dispatch":"../node_modules/@thi.ng/geom/internal/dispatch.js"}],"../node_modules/@thi.ng/geom/ops/as-polygon.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.asPolygon = void 0;

var _defmulti = require("@thi.ng/defmulti");

var _geomApi = require("@thi.ng/geom-api");

var _polygon = require("../api/polygon");

var _copyAttribs = require("../internal/copy-attribs");

var _dispatch = require("../internal/dispatch");

var _vertices = require("./vertices");

const asPolygon = (0, _defmulti.defmulti)(_dispatch.dispatch);
exports.asPolygon = asPolygon;
asPolygon.addAll({
  [_geomApi.Type.POINTS]: ($, opts) => new _polygon.Polygon((0, _vertices.vertices)($, opts), (0, _copyAttribs.copyAttribs)($))
});
asPolygon.isa(_geomApi.Type.CIRCLE, _geomApi.Type.POINTS);
asPolygon.isa(_geomApi.Type.ELLIPSE, _geomApi.Type.POINTS);
asPolygon.isa(_geomApi.Type.LINE, _geomApi.Type.POINTS);
asPolygon.isa(_geomApi.Type.PATH, _geomApi.Type.POINTS);
asPolygon.isa(_geomApi.Type.POLYGON, _geomApi.Type.POINTS);
asPolygon.isa(_geomApi.Type.POLYLINE, _geomApi.Type.POINTS);
asPolygon.isa(_geomApi.Type.QUAD, _geomApi.Type.POINTS);
asPolygon.isa(_geomApi.Type.RECT, _geomApi.Type.POINTS);
asPolygon.isa(_geomApi.Type.TRIANGLE, _geomApi.Type.POINTS);
},{"@thi.ng/defmulti":"../node_modules/@thi.ng/defmulti/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","../api/polygon":"../node_modules/@thi.ng/geom/api/polygon.js","../internal/copy-attribs":"../node_modules/@thi.ng/geom/internal/copy-attribs.js","../internal/dispatch":"../node_modules/@thi.ng/geom/internal/dispatch.js","./vertices":"../node_modules/@thi.ng/geom/ops/vertices.js"}],"../node_modules/@thi.ng/geom/ops/as-cubic.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.asCubic = void 0;

var _defmulti = require("@thi.ng/defmulti");

var _geomApi = require("@thi.ng/geom-api");

var _geomSplines = require("@thi.ng/geom-splines");

var _math = require("@thi.ng/math");

var _transducers = require("@thi.ng/transducers");

var _cubic = require("../api/cubic");

var _arc = require("../ctors/arc");

var _cubic2 = require("../ctors/cubic");

var _copyAttribs = require("../internal/copy-attribs");

var _dispatch = require("../internal/dispatch");

var _asPolygon = require("./as-polygon");

const asCubic = (0, _defmulti.defmulti)(_dispatch.dispatch);
exports.asCubic = asCubic;
asCubic.addAll({
  [_geomApi.Type.ARC]: _cubic2.cubicFromArc,
  [_geomApi.Type.CIRCLE]: $ => asCubic((0, _arc.arc)($.pos, $.r, 0, 0, _math.TAU, true, true)),
  [_geomApi.Type.CUBIC]: $ => [$],
  [_geomApi.Type.GROUP]: $ => [...(0, _transducers.mapcat)(asCubic, $.children)],
  [_geomApi.Type.LINE]: ({
    attribs,
    points
  }) => [(0, _cubic2.cubicFromLine)(points[0], points[1], Object.assign({}, attribs))],
  [_geomApi.Type.PATH]: $ => [...(0, _transducers.mapcat)(s => s.geo ? asCubic(s.geo) : null, $.segments)],
  [_geomApi.Type.POLYGON]: ($, opts = {}) => polyCubic($, opts, _geomSplines.closedCubicFromBreakPoints, _geomSplines.closedCubicFromControlPoints),
  [_geomApi.Type.POLYLINE]: ($, opts = {}) => polyCubic($, opts, _geomSplines.openCubicFromBreakPoints, _geomSplines.openCubicFromControlPoints),
  [_geomApi.Type.QUADRATIC]: ({
    attribs,
    points
  }) => [(0, _cubic2.cubicFromQuadratic)(points[0], points[1], points[2], Object.assign({}, attribs))],
  [_geomApi.Type.RECT]: ($, opts) => asCubic((0, _asPolygon.asPolygon)($), opts)
});
asCubic.isa(_geomApi.Type.ELLIPSE, _geomApi.Type.CIRCLE); // prettier-ignore

const polyCubic = ($, opts, breakPoints, controlPoints) => {
  opts = Object.assign({
    breakPoints: false,
    scale: 1 / 3,
    uniform: false
  }, opts);
  return (opts.breakPoints ? breakPoints($.points, opts.scale, opts.uniform) : controlPoints($.points, opts.scale, opts.uniform)).map(pts => new _cubic.Cubic(pts, (0, _copyAttribs.copyAttribs)($)));
};
},{"@thi.ng/defmulti":"../node_modules/@thi.ng/defmulti/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/geom-splines":"../node_modules/@thi.ng/geom-splines/index.js","@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/transducers":"../node_modules/@thi.ng/transducers/index.js","../api/cubic":"../node_modules/@thi.ng/geom/api/cubic.js","../ctors/arc":"../node_modules/@thi.ng/geom/ctors/arc.js","../ctors/cubic":"../node_modules/@thi.ng/geom/ctors/cubic.js","../internal/copy-attribs":"../node_modules/@thi.ng/geom/internal/copy-attribs.js","../internal/dispatch":"../node_modules/@thi.ng/geom/internal/dispatch.js","./as-polygon":"../node_modules/@thi.ng/geom/ops/as-polygon.js"}],"../node_modules/@thi.ng/geom/ctors/path-builder.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pathBuilder = exports.PathBuilder = void 0;

var _arrays = require("@thi.ng/arrays");

var _geomApi = require("@thi.ng/geom-api");

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

var _cubic = require("../api/cubic");

var _line = require("../api/line");

var _path = require("../api/path");

var _quadratic = require("../api/quadratic");

var _arc = require("./arc");

class PathBuilder {
  constructor(attribs, opts = {}) {
    this.attribs = attribs;
    this.opts = opts;
    this.paths = [];
    this.attribs = attribs;
    this.newPath();
  }

  *[Symbol.iterator]() {
    yield* this.paths;
  }

  current() {
    return this.curr;
  }

  newPath() {
    this.curr = new _path.Path([], this.attribs);
    this.paths.push(this.curr);
    this.currP = (0, _vectors.zeroes)(2);
    this.bezierP = (0, _vectors.zeroes)(2);
    this.startP = (0, _vectors.zeroes)(2);
  }

  moveTo(p, relative = false) {
    if (this.opts.autoSplit !== false && this.curr.segments.length > 0) {
      this.curr = new _path.Path([], this.attribs);
      this.paths.push(this.curr);
    }

    p = this.updateCurrent(p, relative);
    (0, _vectors.set2)(this.startP, p);
    (0, _vectors.set2)(this.bezierP, p);
    this.curr.add({
      point: p,
      type: _geomApi.SegmentType.MOVE
    });
    return this;
  }

  lineTo(p, relative = false) {
    this.curr.add({
      geo: new _line.Line([(0, _vectors.copy)(this.currP), this.updateCurrent(p, relative)]),
      type: _geomApi.SegmentType.LINE
    });
    (0, _vectors.set2)(this.bezierP, this.currP);
    return this;
  }

  hlineTo(x, relative = false) {
    this.addHVLine(x, 0, relative);
    return this;
  }

  vlineTo(y, relative = false) {
    this.addHVLine(y, 1, relative);
    return this;
  } // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/d#Cubic_B%C3%A9zier_Curve


  cubicTo(cp1, cp2, p, relative = false) {
    this.addCubic(this.absPoint(cp1, relative), cp2, p, relative);
    return this;
  } // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/d#Quadratic_B%C3%A9zier_Curve


  quadraticTo(cp, p, relative = false) {
    this.addQuadratic(this.absPoint(cp, relative), p, relative);
    return this;
  }

  cubicChainTo(cp2, p, relative = false) {
    const prevMode = (0, _arrays.peek)(this.curr.segments).type;
    const c1 = (0, _vectors.copy)(this.currP);
    prevMode === _geomApi.SegmentType.CUBIC && (0, _vectors.add2)(null, (0, _vectors.sub2)([], c1, this.bezierP), c1);
    this.addCubic(c1, cp2, p, relative);
    return this;
  }

  quadraticChainTo(p, relative = false) {
    const prevMode = (0, _arrays.peek)(this.curr.segments).type;
    const c1 = (0, _vectors.copy)(this.currP);
    prevMode === _geomApi.SegmentType.QUADRATIC && (0, _vectors.sub2)(null, (0, _vectors.mulN2)(null, c1, 2), this.bezierP);
    this.addQuadratic(c1, p, relative);
    return this;
  }

  arcTo(p, r, xaxis, xl, clockwise, relative = false) {
    if ((0, _math.eqDelta)(r[0], 0) || (0, _math.eqDelta)(r[1], 0)) {
      return this.lineTo(p, relative);
    }

    const prev = (0, _vectors.copy)(this.currP);
    this.curr.add({
      geo: (0, _arc.arcFrom2Points)(prev, this.updateCurrent(p, relative), r, xaxis, xl, clockwise),
      type: _geomApi.SegmentType.ARC
    });
    (0, _vectors.set2)(this.bezierP, this.currP);
    return this;
  }

  closePath() {
    this.curr.add({
      geo: new _line.Line([(0, _vectors.copy)(this.currP), (0, _vectors.copy)(this.startP)]),
      type: _geomApi.SegmentType.LINE
    });
    this.curr.closed = true;
    return this;
  }

  updateCurrent(p, relative) {
    p = (0, _vectors.copy)(relative ? (0, _vectors.add2)(null, this.currP, p) : (0, _vectors.set2)(this.currP, p));
    return p;
  }

  absPoint(p, relative) {
    return relative ? (0, _vectors.add2)(null, p, this.currP) : p;
  }

  addHVLine(p, i, relative) {
    const prev = (0, _vectors.copy)(this.currP);
    this.currP[i] = relative ? this.currP[i] + p : p;
    (0, _vectors.set2)(this.bezierP, this.currP);
    this.curr.add({
      geo: new _line.Line([prev, (0, _vectors.copy)(this.currP)]),
      type: _geomApi.SegmentType.LINE
    });
  }

  addCubic(cp1, cp2, p, relative) {
    cp2 = this.absPoint(cp2, relative);
    (0, _vectors.set2)(this.bezierP, cp2);
    this.curr.add({
      geo: new _cubic.Cubic([(0, _vectors.copy)(this.currP), cp1, cp2, this.updateCurrent(p, relative)]),
      type: _geomApi.SegmentType.CUBIC
    });
  }

  addQuadratic(cp, p, relative) {
    (0, _vectors.set2)(this.bezierP, cp);
    this.curr.add({
      geo: new _quadratic.Quadratic([(0, _vectors.copy)(this.currP), cp, this.updateCurrent(p, relative)]),
      type: _geomApi.SegmentType.QUADRATIC
    });
  }

}

exports.PathBuilder = PathBuilder;

const pathBuilder = (attribs, opts) => new PathBuilder(attribs, opts);

exports.pathBuilder = pathBuilder;
},{"@thi.ng/arrays":"../node_modules/@thi.ng/arrays/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../api/cubic":"../node_modules/@thi.ng/geom/api/cubic.js","../api/line":"../node_modules/@thi.ng/geom/api/line.js","../api/path":"../node_modules/@thi.ng/geom/api/path.js","../api/quadratic":"../node_modules/@thi.ng/geom/api/quadratic.js","./arc":"../node_modules/@thi.ng/geom/ctors/arc.js"}],"../node_modules/@thi.ng/geom/ctors/path.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.roundedRect = exports.normalizedPath = exports.pathFromCubics = exports.path = void 0;

var _checks = require("@thi.ng/checks");

var _geomApi = require("@thi.ng/geom-api");

var _transducers = require("@thi.ng/transducers");

var _vectors = require("@thi.ng/vectors");

var _path = require("../api/path");

var _asCubic = require("../ops/as-cubic");

var _pathBuilder = require("./path-builder");

const path = (segments, attribs) => new _path.Path(segments, attribs);

exports.path = path;

const pathFromCubics = (cubics, attribs) => {
  const path = new _path.Path([], attribs || cubics[0].attribs);
  path.segments.push({
    type: _geomApi.SegmentType.MOVE,
    point: cubics[0].points[0]
  });

  for (let c of cubics) {
    path.segments.push({
      type: _geomApi.SegmentType.CUBIC,
      geo: c
    });
  }

  return path;
};

exports.pathFromCubics = pathFromCubics;

const normalizedPath = path => new _path.Path([...(0, _transducers.mapcat)(s => s.geo ? (0, _transducers.map)(c => ({
  type: _geomApi.SegmentType.CUBIC,
  geo: c
}), (0, _asCubic.asCubic)(s.geo)) : [Object.assign({}, s)], path.segments)], path.attribs);

exports.normalizedPath = normalizedPath;

const roundedRect = (pos, size, r, attribs) => {
  r = (0, _checks.isNumber)(r) ? [r, r] : r;
  const [w, h] = (0, _vectors.maddN2)([], r, -2, size);
  return new _pathBuilder.PathBuilder(attribs).moveTo([pos[0] + r[0], pos[1]]).hlineTo(w, true).arcTo(r, r, 0, false, true, true).vlineTo(h, true).arcTo([-r[0], r[1]], r, 0, false, true, true).hlineTo(-w, true).arcTo([-r[0], -r[1]], r, 0, false, true, true).vlineTo(-h, true).arcTo([r[0], -r[1]], r, 0, false, true, true).current();
};

exports.roundedRect = roundedRect;
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/transducers":"../node_modules/@thi.ng/transducers/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../api/path":"../node_modules/@thi.ng/geom/api/path.js","../ops/as-cubic":"../node_modules/@thi.ng/geom/ops/as-cubic.js","./path-builder":"../node_modules/@thi.ng/geom/ctors/path-builder.js"}],"../node_modules/@thi.ng/strings/api.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BOM = void 0;

/**
 * UTF-8 Byte Order Mark character
 * https://en.wikipedia.org/wiki/Byte_order_mark
 */
const BOM = "\ufeff";
exports.BOM = BOM;
},{}],"../node_modules/@thi.ng/strings/case.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.camel = exports.upperSnake = exports.snake = exports.kebab = exports.capitalize = exports.lower = exports.upper = void 0;

/**
 * Uppercase string formatter.
 *
 * @param x - string to transform
 */
const upper = x => x.toUpperCase();
/**
 * Lowercase string formatter.
 *
 * @param x - string to transform
 */


exports.upper = upper;

const lower = x => x.toLowerCase();
/**
 * String formatter which capitalizes first character.
 *
 * @param x - string to transform
 */


exports.lower = lower;

const capitalize = x => x[0].toUpperCase() + x.substr(1);
/**
 * Converts a CamelCase string into kebab case, with optional custom
 * delimiter (`-` by default).
 *
 * @example
 * ```ts
 * kebab("FooBar23Baz");
 * // "foo-bar23-baz"
 * ```
 *
 * @param x -
 * @param delim -
 */


exports.capitalize = capitalize;

const kebab = (x, delim = "-") => lower(x.replace( // TC39
// /(?<=[a-z0-9\u00e0-\u00fd])(?=[A-Z\u00c0-\u00dd])/g,
// (_, i) => (i ? delim : "")
/([a-z0-9\u00e0-\u00fd])([A-Z\u00c0-\u00dd])/g, (_, a, b) => a + delim + b));
/**
 * Short for {@link kebab} using `_` as delimiter.
 *
 * @param x -
 */


exports.kebab = kebab;

const snake = x => kebab(x, "_");
/**
 * Uppercase version of {@link snake}.
 *
 * @param x
 */


exports.snake = snake;

const upperSnake = x => snake(x).toUpperCase();
/**
 * Converts a kebab-case or snake_case string into CamelCase. Uses `-`
 * as default delimiter.
 *
 * @param x -
 * @param delim -
 */


exports.upperSnake = upperSnake;

const camel = (x, delim = "-") => lower(x).replace(new RegExp(`\\${delim}+(\\w)`, "g"), (_, c) => upper(c));

exports.camel = camel;
},{}],"../node_modules/@thi.ng/strings/repeat.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.repeat = void 0;

var _memoize = require("@thi.ng/memoize");

/**
 * @param ch - character
 * @param n - repeat count
 */
const repeat = (0, _memoize.memoizeJ)((ch, n) => ch.repeat(n));
exports.repeat = repeat;
},{"@thi.ng/memoize":"../node_modules/@thi.ng/memoize/index.js"}],"../node_modules/@thi.ng/strings/truncate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.truncateRight = exports.truncate = void 0;

var _memoize = require("@thi.ng/memoize");

const truncate = (0, _memoize.memoizeJ)((n, suffix = "") => x => x.length > n ? x.substr(0, n - suffix.length) + suffix : x);
/**
 * Alias for {@link truncate}
 */

exports.truncate = truncate;
const truncateRight = truncate;
exports.truncateRight = truncateRight;
},{"@thi.ng/memoize":"../node_modules/@thi.ng/memoize/index.js"}],"../node_modules/@thi.ng/strings/center.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.center = void 0;

var _memoize = require("@thi.ng/memoize");

var _repeat = require("./repeat");

var _truncate = require("./truncate");

/**
 * Returns stringer which pads given input with `ch` (default: space) on
 * both sides and returns fixed width string of given `lineWidth`.
 * Returns string of only pad characters for any `null` or `undefined`
 * values. If the string version of an input is > `lineWidth`, no
 * centering is performed, but the string will be truncated to
 * `lineWidth`.
 *
 * Note: The padding string can contain multiple characters.
 *
 * @example
 * ```ts
 * center(20, "<>")(wrap(" ")("thi.ng"))
 * // "<><><> thi.ng <><><>"
 * ```
 *
 * @param lineWidth - target length
 * @param pad - pad character(s)
 */
const center = (0, _memoize.memoizeJ)((n, pad = " ") => {
  const buf = (0, _repeat.repeat)(String(pad), n);
  return x => {
    if (x == null) return buf;
    x = x.toString();
    const r = (n - x.length) / 2;
    return x.length < n ? buf.substr(0, r) + x + buf.substr(0, r + ((n & 1) === (x.length & 1) ? 0 : 1)) : (0, _truncate.truncate)(n)(x);
  };
});
exports.center = center;
},{"@thi.ng/memoize":"../node_modules/@thi.ng/memoize/index.js","./repeat":"../node_modules/@thi.ng/strings/repeat.js","./truncate":"../node_modules/@thi.ng/strings/truncate.js"}],"../node_modules/@thi.ng/strings/cursor.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.computeCursorPos = void 0;

/**
 * Takes a string, linear index position and optional line split
 * delimiter (or regexp, default: "\n"). Computes and returns position
 * of index as 1-based cursor coords tuple: `[line, column]`
 *
 * @example
 * ```ts
 * computeCursorPos("thi.ng\numbrella", 10);
 * // [ 2, 4 ]
 * ```
 *
 * @param str -
 * @param pos -
 * @param delim -
 */
const computeCursorPos = (str, pos, delim = "\n") => {
  if (!str.length) return [1, 1];
  pos = Math.min(Math.max(0, pos), str.length);
  const lines = str.split(delim);
  const n = lines.length;

  for (let i = 0; i < n; i++) {
    const l = lines[i];
    if (pos <= l.length) return [i + 1, pos + 1];
    pos -= l.length + 1;
  }

  return [n, 1];
};

exports.computeCursorPos = computeCursorPos;
},{}],"../node_modules/@thi.ng/strings/radix.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.U64 = exports.U32 = exports.U24 = exports.U16 = exports.U8 = exports.B32 = exports.B16 = exports.B8 = exports.radix = void 0;

var _memoize = require("@thi.ng/memoize");

var _repeat = require("./repeat");

/**
 * Returns a {@link Stringer} which formats given numbers to `radix`, `len`
 * and with optional prefix (not included in `len`).
 *
 * @param radix -
 * @param len -
 * @param prefix -
 */
const radix = (0, _memoize.memoizeJ)((radix, n, prefix = "") => {
  const buf = (0, _repeat.repeat)("0", n);
  return x => {
    x = (x >>> 0).toString(radix);
    return prefix + (x.length < n ? buf.substr(x.length) + x : x);
  };
});
/**
 * 8bit binary conversion preset.
 */

exports.radix = radix;
const B8 = radix(2, 8);
/**
 * 16bit binary conversion preset.
 */

exports.B8 = B8;
const B16 = radix(2, 16);
/**
 * 32bit binary conversion preset.
 */

exports.B16 = B16;
const B32 = radix(2, 32);
/**
 * 8bit hex conversion preset.
 * Assumes unsigned inputs.
 */

exports.B32 = B32;
const U8 = radix(16, 2);
/**
 * 16bit hex conversion preset.
 * Assumes unsigned inputs.
 */

exports.U8 = U8;
const U16 = radix(16, 4);
/**
 * 24bit hex conversion preset.
 * Assumes unsigned inputs.
 */

exports.U16 = U16;
const U24 = radix(16, 6);
/**
 * 32bit hex conversion preset.
 * Assumes unsigned inputs.
 */

exports.U24 = U24;
const U32 = radix(16, 8);
/**
 * 64bit hex conversion preset (2x 32bit ints)
 * Assumes unsigned inputs.
 */

exports.U32 = U32;

const U64 = (hi, lo) => U32(hi) + U32(lo);

exports.U64 = U64;
},{"@thi.ng/memoize":"../node_modules/@thi.ng/memoize/index.js","./repeat":"../node_modules/@thi.ng/strings/repeat.js"}],"../node_modules/@thi.ng/strings/escape.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.unescape = exports.escape = exports.ESCAPES_REV = exports.ESCAPES = void 0;

var _radix = require("./radix");

const ESCAPES = {
  0: "\0",
  b: "\b",
  t: "\t",
  r: "\r",
  v: "\v",
  f: "\f",
  n: "\n",
  "'": "'",
  '"': '"',
  "\\": "\\"
};
exports.ESCAPES = ESCAPES;
const ESCAPES_REV = {
  0: "0",
  8: "b",
  9: "t",
  10: "n",
  11: "v",
  12: "f",
  13: "r",
  33: "'",
  34: '"',
  92: "\\"
};
/**
 * Escapes all non-ASCII characters (and well-known 0x0x control chars) using
 * backslash escape sequences.
 *
 * @remarks
 * - Well-known low-ASCII control chars will be escaped using simple `\`, e.g.
 *   0x0a => `\n`
 * - Non-BMP chars will be escaped using `\Uxxxxxxxx`
 * - Chars outside 0x20 - 0x7e range will be escaped using `\uxxxxx`
 *
 * @param src
 */

exports.ESCAPES_REV = ESCAPES_REV;

const escape = src => src.replace(/[\0\b\t\n\v\f\r'"\\]/g, x => `\\${ESCAPES_REV[x.charCodeAt(0)]}`).replace(/[\ud800-\udfff]{2}/g, x => `\\U${(0, _radix.U32)(x.codePointAt(0))}`).replace(/[^\u0020-\u007e]/g, x => `\\u${(0, _radix.U16)(x.charCodeAt(0))}`);
/**
 * Replaces `\uxxxx` UTF-16 escapes, full `\Uxxxxxxxx` UTF-32 codepoint escapes
 * and other well-known backslash escape sequences (see {@link ESCAPES}) with
 * the characters they represent.
 *
 * @remarks
 * Any unknown named escape sequences (e.g. `\1`) will remain as is.
 *
 * - https://en.wikipedia.org/wiki/UTF-16#Code_points_from_U+010000_to_U+10FFFF
 * - https://www.unicode.org/charts/
 * - https://www.branah.com/unicode-converter
 *
 * @example
 * ```ts
 * unescape("\\ud83d\\ude0e \\U0001f60e")
 * // '😎'
 * ```
 *
 * @param src
 */


exports.escape = escape;

const unescape = src => src.replace(/\\u([0-9a-fA-F]{4})/g, (_, id) => String.fromCharCode(parseInt(id, 16))).replace(/\\U([0-9a-fA-F]{8})/g, (_, id) => String.fromCodePoint(parseInt(id, 16))).replace(/\\([0btnvfr'"\\])/g, (_, id) => ESCAPES[id]);

exports.unescape = unescape;
},{"./radix":"../node_modules/@thi.ng/strings/radix.js"}],"../node_modules/@thi.ng/strings/pad-left.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Z4 = exports.Z3 = exports.Z2 = exports.padLeft = void 0;

var _memoize = require("@thi.ng/memoize");

var _repeat = require("./repeat");

/**
 * @param n - target length
 * @param ch - pad character(s)
 */
const padLeft = (0, _memoize.memoizeJ)((n, ch = " ") => {
  const buf = (0, _repeat.repeat)(String(ch), n);
  return x => x != null ? (x = x.toString(), x.length < n ? buf.substr(x.length) + x : x) : buf;
});
/**
 * Zero-padded 2 digit formatter.
 */

exports.padLeft = padLeft;
const Z2 = padLeft(2, "0");
/**
 * Zero-padded 3 digit formatter.
 */

exports.Z2 = Z2;
const Z3 = padLeft(3, "0");
/**
 * Zero-padded 4 digit formatter.
 */

exports.Z3 = Z3;
const Z4 = padLeft(4, "0");
exports.Z4 = Z4;
},{"@thi.ng/memoize":"../node_modules/@thi.ng/memoize/index.js","./repeat":"../node_modules/@thi.ng/strings/repeat.js"}],"../node_modules/@thi.ng/strings/float.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.floatFixedWidth = exports.float = void 0;

var _memoize = require("@thi.ng/memoize");

var _padLeft = require("./pad-left");

/**
 * Returns {@link Stringer} which formats numbers to given precision.
 * Exceptions:
 *
 * - NaN => "NaN"
 * - Infinity => "+/-∞"
 *
 * @param len - number of fractional digits
 * @kind function
 */
const float = (0, _memoize.memoizeJ)(prec => x => nanOrInf(x) || x.toFixed(prec));
/**
 * Similar to `float`, returns {@link Stringer} which formats numbers to given
 * character width & precision. Uses scientific notation if needed.
 *
 * Default precision: 3 fractional digits
 */

exports.float = float;
const floatFixedWidth = (0, _memoize.memoizeJ)((width, prec = 3) => {
  const l = width - prec - 1;
  const pl = Math.pow(10, l);
  const pln = -Math.pow(10, l - 1);
  const pr = Math.pow(10, -(prec - 1));
  const pad = (0, _padLeft.padLeft)(width);
  return x => {
    const ax = Math.abs(x);
    return pad(nanOrInf(x) || (x === 0 ? "0" : ax < pr || ax >= pl ? exp(x, width) : x.toFixed(prec - (x < pln ? 1 : 0))));
  };
});
exports.floatFixedWidth = floatFixedWidth;

const exp = (x, w) => x.toExponential(Math.max(w - 4 - (Math.log(Math.abs(x)) / Math.LN10 >= 10 ? 2 : 1) - (x < 0 ? 1 : 0), 0));

const nanOrInf = x => isNaN(x) ? "NaN" : x === Infinity ? "+∞" : x === -Infinity ? "-∞" : undefined;
},{"@thi.ng/memoize":"../node_modules/@thi.ng/memoize/index.js","./pad-left":"../node_modules/@thi.ng/strings/pad-left.js"}],"../node_modules/@thi.ng/strings/format.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.str = exports.ignore = exports.defFormat = exports.format = void 0;

const format = (fmt, ...args) => {
  const acc = [];

  for (let i = 0, j = 0, n = fmt.length; i < n; i++) {
    const f = fmt[i];
    const t = typeof f;
    acc.push(t === "function" ? f(args[j++]) : t === "object" ? f[args[j++]] : f);
  }

  return acc.join("");
};
/**
 * HOF version of {@link format}.
 *
 * @param fmt
 */


exports.format = format;

const defFormat = fmt => (...args) => format(fmt, ...args);
/**
 * Helper for {@link format} which ignores argument and always returns
 * an empty string.
 *
 * @param _
 */


exports.defFormat = defFormat;

const ignore = _ => "";
/**
 * Helper for {@link format} which coerces `x` to a string.
 *
 * @param x
 */


exports.ignore = ignore;

const str = x => String(x);

exports.str = str;
},{}],"../node_modules/@thi.ng/strings/range.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.charRange = charRange;

/**
 * Yields iterator of characters [`from`..`to`] (inclusive). Uses
 * reverse ordering if `to` < `from`.
 *
 * @param from -
 * @param to -
 */
function* charRange(from, to) {
  let i = typeof from === "string" ? from.charCodeAt(0) : from;
  const end = typeof to === "string" ? to.charCodeAt(0) : to;

  if (i <= end) {
    for (; i <= end; i++) {
      yield String.fromCharCode(i);
    }
  } else {
    for (; i >= end; i--) {
      yield String.fromCharCode(i);
    }
  }
}
},{}],"../node_modules/@thi.ng/strings/groups.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PUNCTUATION = exports.ALPHA_NUM = exports.ALPHA = exports.UPPER = exports.LOWER = exports.HEX = exports.DIGITS = exports.WS = void 0;

var _range = require("./range");

const defGroup = (...xs) => {
  const acc = {};

  for (let range of xs) {
    for (let c of range) {
      acc[c] = true;
    }
  }

  return Object.freeze(acc);
};
/**
 * Object with whitespace characters as keys and their values set to
 * true. All others undefined.
 */


const WS = Object.freeze({
  "\t": true,
  "\n": true,
  "\v": true,
  "\f": true,
  "\r": true,
  " ": true
});
/**
 * Object with 0-9 characters as keys and their values set to true. All
 * others undefined.
 */

exports.WS = WS;
const DIGITS = defGroup((0, _range.charRange)("0", "9"));
/**
 * Object with hex digit characters (upper & lower case versions) as
 * keys and their values set to true. All others undefined.
 */

exports.DIGITS = DIGITS;
const HEX = defGroup((0, _range.charRange)("0", "9"), (0, _range.charRange)("A", "F"), (0, _range.charRange)("a", "f"));
/**
 * Object with ASCII lowercase characters as keys and their values set
 * to true. All others undefined.
 */

exports.HEX = HEX;
const LOWER = defGroup((0, _range.charRange)("a", "z"));
/**
 * Object with ASCII uppercase characters as keys and their values set
 * to true. All others undefined.
 */

exports.LOWER = LOWER;
const UPPER = defGroup((0, _range.charRange)("A", "Z"));
/**
 * Combination of {@link UPPER} and {@link LOWER}.
 */

exports.UPPER = UPPER;
const ALPHA = Object.freeze(Object.assign(Object.assign({}, UPPER), LOWER));
/**
 * Combination of {@link ALPHA} and {@link DIGITS} and '_'.
 */

exports.ALPHA = ALPHA;
const ALPHA_NUM = Object.freeze(Object.assign(Object.assign(Object.assign({}, ALPHA), DIGITS), {
  _: true
}));
/**
 * Object with ASCII punctuation characters as keys and their values set
 * to true. All others undefined.
 */

exports.ALPHA_NUM = ALPHA_NUM;
const PUNCTUATION = defGroup((0, _range.charRange)("!", "/"), (0, _range.charRange)(":", "@"), (0, _range.charRange)("[", "`"), (0, _range.charRange)("{", "~"));
exports.PUNCTUATION = PUNCTUATION;
},{"./range":"../node_modules/@thi.ng/strings/range.js"}],"../node_modules/@thi.ng/strings/hollerith.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hstr = void 0;

/**
 * Formats given value `x` as Fortran style Hollerith string.
 *
 * @example
 * ```ts
 * hstr("abc")  // "3Habc"
 * hstr(123.45) // "6H123.45"
 * hstr("")     // "0H"
 * hstr(null)   // ""
 * ```
 *
 * {@link https://en.wikipedia.org/wiki/Hollerith_constant}
 *
 * @param x -
 */
const hstr = x => x != null ? (x = x.toString(), `${x.length}H${x}`) : "";

exports.hstr = hstr;
},{}],"../node_modules/@thi.ng/strings/interpolate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.interpolate = void 0;
const TPL = /\{(\d+)\}/g;
/**
 * Takes a string template with embedded `{number}` style terms and any
 * number of args. Replaces numbered terms with their respective args
 * given.
 *
 * @example
 * ```ts
 * interpolate("let {0}: {2} = {1};", "a", 42, "number")
 * // "let a: number = 42;"
 * ```
 *
 * @param src
 * @param args
 */

const interpolate = (src, ...args) => args.length > 0 ? src.replace(TPL, m => String(args[parseInt(m[1], 10)])) : src;

exports.interpolate = interpolate;
},{}],"../node_modules/@thi.ng/strings/join.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.join = void 0;

var _memoize = require("@thi.ng/memoize");

/**
 * Higher-order version of `Array.join()`. Takes separator string `sep`
 * and returns function which accepts an array and joins all elements w/
 * separator into a result string.
 *
 * @example
 * ```ts
 * const slashes = join("/");
 *
 * slashes([1, 2, 3]);
 * // "1/2/3"
 *
 * const formatOBJFace = partial(
 *   format, ["f ", slashes, " ", slashes, " ", slashes]
 * );
 *
 * formatOBJFace([1, 2], [3, 4], [5, 6]);
 * // "f 1/2 3/4 5/6"
 * ```
 */
const join = (0, _memoize.memoize1)(sep => x => x.join(sep));
exports.join = join;
},{"@thi.ng/memoize":"../node_modules/@thi.ng/memoize/index.js"}],"../node_modules/@thi.ng/strings/pad-right.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.padRight = void 0;

var _memoize = require("@thi.ng/memoize");

var _repeat = require("./repeat");

/**
 * @param n - target length
 * @param ch - pad character(s)
 */
const padRight = (0, _memoize.memoizeJ)((n, ch = " ") => {
  const buf = (0, _repeat.repeat)(String(ch), n);
  return x => x != null ? (x = x.toString(), x.length < n ? x + buf.substr(x.length) : x) : buf;
});
exports.padRight = padRight;
},{"@thi.ng/memoize":"../node_modules/@thi.ng/memoize/index.js","./repeat":"../node_modules/@thi.ng/strings/repeat.js"}],"../node_modules/@thi.ng/strings/parse.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.maybeParseFloat = exports.maybeParseInt = void 0;

const maybeParseInt = (x, defaultVal = 0, radix = 10) => {
  const n = parseInt(x, radix);
  return isNaN(n) ? defaultVal : n;
};

exports.maybeParseInt = maybeParseInt;

const maybeParseFloat = (x, defaultVal = 0) => {
  const n = parseFloat(x);
  return isNaN(n) ? defaultVal : n;
};

exports.maybeParseFloat = maybeParseFloat;
},{}],"../node_modules/@thi.ng/strings/percent.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.percent = void 0;

/**
 * Returns {@link Stringer} which formats given fractions as percentage (e.g.
 * `0.1234 => 12.34%`).
 *
 * @param prec - number of fractional digits (default: 0)
 */
const percent = (prec = 0) => x => (x * 100).toFixed(prec) + "%";

exports.percent = percent;
},{}],"../node_modules/@thi.ng/strings/slugify.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.slugifyGH = exports.slugify = void 0;
const src = "àáäâãåèéëêìíïîòóöôùúüûñçßÿœæŕśńṕẃǵǹḿǘẍźḧ·/_,:;";
const dest = "aaaaaaeeeeiiiioooouuuuncsyoarsnpwgnmuxzh------";
const re = new RegExp(src.split("").join("|"), "g");
/**
 * Based on:
 * {@link https://medium.com/@matthagemann/the-ultimate-way-to-slugify-a-url-string-in-javascript-b8e4a0d849e1}
 *
 * @example
 * ```ts
 * slugify("Me, myself (& ëye)!")
 * // "me-myself-and-eye"
 * ```
 *
 * @param str -
 */

const slugify = str => {
  return str.toLowerCase().replace(/\s+/g, "-").replace(re, c => dest[src.indexOf(c)]).replace(/&+/g, "-and-").replace(/[^\w\-]+/g, "").replace(/\-{2,}/g, "-").replace(/(^-+)|(-+$)/g, "");
};
/**
 * Similar to {@link slugify}, however uses GitHub's anchor naming rules
 * for headings in markdown files (AFAICT).
 *
 * @example
 * ```ts
 * slugifyGH("Me, myself (& ëye)!")
 * // "me--myself--eye"
 * ```
 *
 * @param str
 */


exports.slugify = slugify;

const slugifyGH = str => {
  return str.toLowerCase().replace(/\s/g, "-").replace(re, c => dest[src.indexOf(c)]).replace(/[^\w\-]+/g, "").replace(/(^-+)|(-+$)/g, "");
};

exports.slugifyGH = slugifyGH;
},{}],"../node_modules/@thi.ng/strings/splice.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.splice = void 0;

var _errors = require("@thi.ng/errors");

/**
 * Forms a new strings which inserts given `insert` string into `src`
 * string at `from` position and appends remaining `src` chars from
 * original `to` position. If `from` and `to` are equal (`to` by default
 * is), the operation is a pure insertion. If not, then some chars from
 * `src` will be removed in the new string. If either position is
 * negative, it'll be considered relative to the end of the `src`.
 *
 * @param src -
 * @param insert -
 * @param from -
 * @param to -
 */
const splice = (src, insert, from, to = from) => {
  if (from < 0) {
    from += src.length;
  }

  if (to < 0) {
    to += src.length;
  }

  if (from > to) {
    (0, _errors.illegalArgs)("'from' index must be <= 'to'");
  }

  to = Math.max(to, 0);
  return from <= 0 ? insert + src.substr(to) : from >= src.length ? src + insert : src.substr(0, from) + insert + src.substr(to);
};

exports.splice = splice;
},{"@thi.ng/errors":"../node_modules/@thi.ng/errors/index.js"}],"../node_modules/@thi.ng/strings/trim.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.trim = void 0;

var _memoize = require("@thi.ng/memoize");

/**
 * Higher order trim function (both sides) with support for user defined
 * trimmable characters (default: whitespace only).
 *
 * @example
 * ```ts
 * trim()("  Hello   ")
 * // "Hello"
 *
 * trim(" -+")("-+-+- Hello -+-+-")
 * // "Hello"
 * ```
 *
 * @param chars -
 */
const trim = (0, _memoize.memoize1)((chars = " \t\n\r") => {
  chars = `(${chars.split("").map(x => `\\${x}`).join("|")})`;
  const re = new RegExp(`(^${chars}+)|(${chars}+$)`, "g");
  return x => x.replace(re, "");
});
exports.trim = trim;
},{"@thi.ng/memoize":"../node_modules/@thi.ng/memoize/index.js"}],"../node_modules/@thi.ng/strings/truncate-left.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.truncateLeft = void 0;

var _memoize = require("@thi.ng/memoize");

const truncateLeft = (0, _memoize.memoizeJ)((n, prefix = "") => x => x.length > n ? prefix + x.substr(x.length - n + prefix.length) : x);
exports.truncateLeft = truncateLeft;
},{"@thi.ng/memoize":"../node_modules/@thi.ng/memoize/index.js"}],"../node_modules/@thi.ng/strings/units.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.grams = exports.meters = exports.seconds = exports.bytes = exports.bits = exports.units = void 0;

var _memoize = require("@thi.ng/memoize");

const units = (0, _memoize.memoizeJ)((exp, base, prec = 2) => {
  const groups = exp.map(x => [x[0], x[2] != null ? x[2] : prec, x[1]]).sort((a, b) => a[0] - b[0]);
  return x => {
    if (x === 0) {
      return `0${base}`;
    }

    const absX = Math.abs(x);

    for (let i = groups.length; --i >= 0;) {
      const g = groups[i];

      if (absX >= g[0] || i === 0) {
        return (x / g[0]).toFixed(g[1]) + g[2];
      }
    }

    return "";
  };
});
exports.units = units;
const KB = 1024;
const bits = units([[1, " bits", 0], [KB, " Kb"], [KB ** 2, " Mb"], [KB ** 3, " Gb"]], " bits", 2);
exports.bits = bits;
const bytes = units([[1, " bytes", 0], [KB, " KB"], [KB ** 2, " MB"], [KB ** 3, " GB"], [KB ** 4, " TB"], [KB ** 5, " PB"]], " bytes", 2);
exports.bytes = bytes;
const seconds = units([[1e-12, " ps"], [1e-9, " ns"], [1e-6, " µs"], [1e-3, " ms"], [1, " secs"], [60, " mins"], [60 * 60, " hours"], [24 * 60 * 60, " days"]], " secs", 3);
exports.seconds = seconds;
const meters = units([[1e-12, " pm"], [1e-9, " nm"], [1e-6, " µm"], [1e-3, " mm"], [1e-2, " cm"], [1, " m"], [1e3, " km"]], " m", 2);
exports.meters = meters;
const grams = units([[1e-12, " pg"], [1e-9, " ng"], [1e-6, " µg"], [1e-3, " mg"], [1, " g"], [1e3, " kg"], [1e6, " t"], [1e9, " kt"], [1e12, " Mt"]], " g", 2);
exports.grams = grams;
},{"@thi.ng/memoize":"../node_modules/@thi.ng/memoize/index.js"}],"../node_modules/@thi.ng/strings/uuid.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.uuid = void 0;

var _radix = require("./radix");

/**
 * Returns UUID formatted string of given byte array from optional start
 * index `i` (default: 0). Array must have min. length 16.
 *
 * @param id
 * @param i
 */
const uuid = (id, i = 0) => [(0, _radix.U8)(id[i++]), (0, _radix.U8)(id[i++]), (0, _radix.U8)(id[i++]), (0, _radix.U8)(id[i++]), "-", (0, _radix.U8)(id[i++]), (0, _radix.U8)(id[i++]), "-", (0, _radix.U8)(id[i++]), (0, _radix.U8)(id[i++]), "-", (0, _radix.U8)(id[i++]), (0, _radix.U8)(id[i++]), "-", (0, _radix.U8)(id[i++]), (0, _radix.U8)(id[i++]), (0, _radix.U8)(id[i++]), (0, _radix.U8)(id[i++]), (0, _radix.U8)(id[i++]), (0, _radix.U8)(id[i++])].join("");

exports.uuid = uuid;
},{"./radix":"../node_modules/@thi.ng/strings/radix.js"}],"../node_modules/@thi.ng/strings/wrap.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.wrap = void 0;

var _memoize = require("@thi.ng/memoize");

/**
 * Returns a {@link Stringer} which wrap inputs with given `pad` string on
 * both sides.
 */
const wrap = (0, _memoize.memoizeJ)(pad => x => pad + x + pad);
exports.wrap = wrap;
},{"@thi.ng/memoize":"../node_modules/@thi.ng/memoize/index.js"}],"../node_modules/@thi.ng/strings/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _api = require("./api");

Object.keys(_api).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _api[key];
    }
  });
});

var _case = require("./case");

Object.keys(_case).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _case[key];
    }
  });
});

var _center = require("./center");

Object.keys(_center).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _center[key];
    }
  });
});

var _cursor = require("./cursor");

Object.keys(_cursor).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _cursor[key];
    }
  });
});

var _escape = require("./escape");

Object.keys(_escape).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _escape[key];
    }
  });
});

var _float = require("./float");

Object.keys(_float).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _float[key];
    }
  });
});

var _format = require("./format");

Object.keys(_format).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _format[key];
    }
  });
});

var _groups = require("./groups");

Object.keys(_groups).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _groups[key];
    }
  });
});

var _hollerith = require("./hollerith");

Object.keys(_hollerith).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _hollerith[key];
    }
  });
});

var _interpolate = require("./interpolate");

Object.keys(_interpolate).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _interpolate[key];
    }
  });
});

var _join = require("./join");

Object.keys(_join).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _join[key];
    }
  });
});

var _padLeft = require("./pad-left");

Object.keys(_padLeft).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _padLeft[key];
    }
  });
});

var _padRight = require("./pad-right");

Object.keys(_padRight).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _padRight[key];
    }
  });
});

var _parse = require("./parse");

Object.keys(_parse).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _parse[key];
    }
  });
});

var _percent = require("./percent");

Object.keys(_percent).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _percent[key];
    }
  });
});

var _radix = require("./radix");

Object.keys(_radix).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _radix[key];
    }
  });
});

var _range = require("./range");

Object.keys(_range).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _range[key];
    }
  });
});

var _repeat = require("./repeat");

Object.keys(_repeat).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _repeat[key];
    }
  });
});

var _slugify = require("./slugify");

Object.keys(_slugify).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _slugify[key];
    }
  });
});

var _splice = require("./splice");

Object.keys(_splice).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _splice[key];
    }
  });
});

var _trim = require("./trim");

Object.keys(_trim).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _trim[key];
    }
  });
});

var _truncate = require("./truncate");

Object.keys(_truncate).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _truncate[key];
    }
  });
});

var _truncateLeft = require("./truncate-left");

Object.keys(_truncateLeft).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _truncateLeft[key];
    }
  });
});

var _units = require("./units");

Object.keys(_units).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _units[key];
    }
  });
});

var _uuid = require("./uuid");

Object.keys(_uuid).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _uuid[key];
    }
  });
});

var _wrap = require("./wrap");

Object.keys(_wrap).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _wrap[key];
    }
  });
});
},{"./api":"../node_modules/@thi.ng/strings/api.js","./case":"../node_modules/@thi.ng/strings/case.js","./center":"../node_modules/@thi.ng/strings/center.js","./cursor":"../node_modules/@thi.ng/strings/cursor.js","./escape":"../node_modules/@thi.ng/strings/escape.js","./float":"../node_modules/@thi.ng/strings/float.js","./format":"../node_modules/@thi.ng/strings/format.js","./groups":"../node_modules/@thi.ng/strings/groups.js","./hollerith":"../node_modules/@thi.ng/strings/hollerith.js","./interpolate":"../node_modules/@thi.ng/strings/interpolate.js","./join":"../node_modules/@thi.ng/strings/join.js","./pad-left":"../node_modules/@thi.ng/strings/pad-left.js","./pad-right":"../node_modules/@thi.ng/strings/pad-right.js","./parse":"../node_modules/@thi.ng/strings/parse.js","./percent":"../node_modules/@thi.ng/strings/percent.js","./radix":"../node_modules/@thi.ng/strings/radix.js","./range":"../node_modules/@thi.ng/strings/range.js","./repeat":"../node_modules/@thi.ng/strings/repeat.js","./slugify":"../node_modules/@thi.ng/strings/slugify.js","./splice":"../node_modules/@thi.ng/strings/splice.js","./trim":"../node_modules/@thi.ng/strings/trim.js","./truncate":"../node_modules/@thi.ng/strings/truncate.js","./truncate-left":"../node_modules/@thi.ng/strings/truncate-left.js","./units":"../node_modules/@thi.ng/strings/units.js","./uuid":"../node_modules/@thi.ng/strings/uuid.js","./wrap":"../node_modules/@thi.ng/strings/wrap.js"}],"../node_modules/@thi.ng/geom/ctors/path-from-svg.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pathFromSvg = void 0;

var _errors = require("@thi.ng/errors");

var _math = require("@thi.ng/math");

var _strings = require("@thi.ng/strings");

var _pathBuilder = require("./path-builder");

const CMD_RE = /[achlmqstvz]/i;

const pathFromSvg = svg => {
  const b = new _pathBuilder.PathBuilder();

  try {
    let cmd = "";

    for (let n = svg.length, i = 0; i < n;) {
      i = skipWS(svg, i);
      const c = svg.charAt(i);

      if (CMD_RE.test(c)) {
        cmd = c;
        i++;
      }

      let p, pa, pb, t1, t2, t3;

      switch (cmd.toLowerCase()) {
        case "m":
          [p, i] = readPoint(svg, i);
          b.moveTo(p, cmd === "m");
          break;

        case "l":
          [p, i] = readPoint(svg, i);
          b.lineTo(p, cmd === "l");
          break;

        case "h":
          [p, i] = readFloat(svg, i);
          b.hlineTo(p, cmd === "h");
          break;

        case "v":
          [p, i] = readFloat(svg, i);
          b.vlineTo(p, cmd === "v");
          break;

        case "q":
          [pa, i] = readPoint(svg, i);
          [p, i] = readPoint(svg, i);
          b.quadraticTo(pa, p, cmd === "q");
          break;

        case "c":
          [pa, i] = readPoint(svg, i);
          [pb, i] = readPoint(svg, i);
          [p, i] = readPoint(svg, i);
          b.cubicTo(pa, pb, p, cmd === "c");
          break;

        case "s":
          [pa, i] = readPoint(svg, i);
          [p, i] = readPoint(svg, i);
          b.cubicChainTo(pa, p, cmd === "s");
          break;

        case "t":
          [p, i] = readPoint(svg, i);
          b.quadraticChainTo(p, cmd === "t");
          break;

        case "a":
          {
            [pa, i] = readPoint(svg, i);
            [t1, i] = readFloat(svg, i);
            [t2, i] = readFlag(svg, i);
            [t3, i] = readFlag(svg, i);
            [pb, i] = readPoint(svg, i);
            b.arcTo(pb, pa, (0, _math.rad)(t1), t2, t3, cmd === "a");
            break;
          }

        case "z":
          b.closePath();
          break;

        default:
          throw new Error(`unsupported segment type: ${c} @ pos ${i}`);
      }
    }

    return b.paths;
  } catch (e) {
    throw e instanceof Error ? e : new Error(`illegal char '${svg.charAt(e)}' @ ${e}`);
  }
};

exports.pathFromSvg = pathFromSvg;

const skipWS = (src, i) => {
  const n = src.length;

  while (i < n && _strings.WS[src.charAt(i)]) i++;

  return i;
};

const readPoint = (src, index) => {
  let x, y;
  [x, index] = readFloat(src, index);
  index = skipWS(src, index);
  [y, index] = readFloat(src, index);
  return [[x, y], index];
};

const readFlag = (src, i) => {
  i = skipWS(src, i);
  const c = src.charAt(i);
  return [c === "0" ? false : c === "1" ? true : (0, _errors.illegalState)(`expected '0' or '1' @ pos: ${i}`), i + 1];
};

const readFloat = (src, index) => {
  index = skipWS(src, index);
  let signOk = true;
  let dotOk = true;
  let expOk = false;
  let commaOk = false;
  let i = index;

  for (let n = src.length; i < n; i++) {
    const c = src.charAt(i);

    if ("0" <= c && c <= "9") {
      expOk = true;
      commaOk = true;
      signOk = false;
      continue;
    }

    if (c === "-" || c === "+") {
      if (!signOk) break;
      signOk = false;
      continue;
    }

    if (c === ".") {
      if (!dotOk) break;
      dotOk = false;
      continue;
    }

    if (c === "e") {
      if (!expOk) throw i;
      expOk = false;
      dotOk = false;
      signOk = true;
      continue;
    }

    if (c === ",") {
      if (!commaOk) throw i;
      i++;
    }

    break;
  }

  if (i === index) {
    (0, _errors.illegalState)(`expected coordinate @ pos: ${i}`);
  }

  return [parseFloat(src.substring(index, i)), i];
};
},{"@thi.ng/errors":"../node_modules/@thi.ng/errors/index.js","@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/strings":"../node_modules/@thi.ng/strings/index.js","./path-builder":"../node_modules/@thi.ng/geom/ctors/path-builder.js"}],"../node_modules/@thi.ng/geom/ctors/plane.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.planeFrom3Points = exports.planeWithPoint = exports.plane = void 0;

var _vectors = require("@thi.ng/vectors");

var _plane = require("../api/plane");

const plane = (normal, w, attribs) => new _plane.Plane((0, _vectors.normalize)(null, normal), w, attribs);

exports.plane = plane;

const planeWithPoint = (normal, p, attribs) => {
  normal = (0, _vectors.normalize)(null, normal);
  return new _plane.Plane(normal, (0, _vectors.dot3)(normal, p), attribs);
};

exports.planeWithPoint = planeWithPoint;

const planeFrom3Points = (a, b, c, attribs) => planeWithPoint((0, _vectors.orthoNormal3)([], a, b, c), a, attribs);

exports.planeFrom3Points = planeFrom3Points;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../api/plane":"../node_modules/@thi.ng/geom/api/plane.js"}],"../node_modules/@thi.ng/geom/ctors/points.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.points3 = exports.points = void 0;

var _points = require("../api/points");

const points = (pts, attribs) => new _points.Points(pts, attribs);

exports.points = points;

const points3 = (pts, attribs) => new _points.Points3(pts, attribs);

exports.points3 = points3;
},{"../api/points":"../node_modules/@thi.ng/geom/api/points.js"}],"../node_modules/@thi.ng/geom/ctors/polygon.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.star = exports.polygon = void 0;

var _math = require("@thi.ng/math");

var _transducers = require("@thi.ng/transducers");

var _vectors = require("@thi.ng/vectors");

var _polygon = require("../api/polygon");

const polygon = (pts, attribs) => new _polygon.Polygon(pts, attribs);

exports.polygon = polygon;

const star = (r, n, profile, attribs) => new _polygon.Polygon((0, _transducers.transduce)((0, _transducers.map)(([i, p]) => (0, _vectors.cartesian2)(null, [r * p, i * _math.TAU])), (0, _transducers.push)(), (0, _transducers.zip)((0, _transducers.normRange)(n * profile.length, false), (0, _transducers.cycle)(profile))), attribs);

exports.star = star;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/transducers":"../node_modules/@thi.ng/transducers/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../api/polygon":"../node_modules/@thi.ng/geom/api/polygon.js"}],"../node_modules/@thi.ng/geom/ctors/polyline.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.polyline = void 0;

var _polyline = require("../api/polyline");

const polyline = (pts, attribs) => new _polyline.Polyline(pts, attribs);

exports.polyline = polyline;
},{"../api/polyline":"../node_modules/@thi.ng/geom/api/polyline.js"}],"../node_modules/@thi.ng/matrices/api.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/matrices/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IDENT44 = exports.IDENT33 = exports.IDENT23 = exports.IDENT22 = void 0;
const IDENT22 = Object.freeze([1, 0, 0, 1]);
exports.IDENT22 = IDENT22;
const IDENT23 = Object.freeze([1, 0, 0, 1, 0, 0]); //prettier-ignore

exports.IDENT23 = IDENT23;
const IDENT33 = Object.freeze([1, 0, 0, 0, 1, 0, 0, 0, 1]); //prettier-ignore

exports.IDENT33 = IDENT33;
const IDENT44 = Object.freeze([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);
exports.IDENT44 = IDENT44;
},{}],"../node_modules/@thi.ng/matrices/internal/codegen.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defMathN = exports.defMath = void 0;

var _vectors = require("@thi.ng/vectors");

const DEFAULT_SIZES = [6, 9, 16];

const defMath = (fn, op, sizes = DEFAULT_SIZES) => sizes.map(n => fn.add(n, (0, _vectors.compile)(n, (0, _vectors.MATH)(op), _vectors.ARGS_VV, undefined, "o", "", _vectors.DEFAULT_OUT)));

exports.defMath = defMath;

const defMathN = (fn, op, sizes = DEFAULT_SIZES) => sizes.map(n => fn.add(n, (0, _vectors.compile)(n, (0, _vectors.MATH_N)(op), _vectors.ARGS_VN, "o,a", "o", "", _vectors.DEFAULT_OUT)));

exports.defMathN = defMathN;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/matrices/add.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.add44 = exports.add33 = exports.add23 = exports.add22 = exports.add = void 0;

var _vectors = require("@thi.ng/vectors");

var _codegen = require("./internal/codegen");

/**
 * Componentwise matrix addition. If `out` is not given, writes result
 * in `a`. Both input matrices MUST be of same size.
 *
 * out = a + b
 *
 * @param out -
 * @param a -
 * @param b -
 */
const add = _vectors.add;
exports.add = add;
const add22 = _vectors.add4;
exports.add22 = add22;
const [add23, add33, add44] = (0, _codegen.defMath)(add, "+");
exports.add44 = add44;
exports.add33 = add33;
exports.add23 = add23;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./internal/codegen":"../node_modules/@thi.ng/matrices/internal/codegen.js"}],"../node_modules/@thi.ng/matrices/addn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addN44 = exports.addN33 = exports.addN23 = exports.addN22 = exports.addN = void 0;

var _vectors = require("@thi.ng/vectors");

var _codegen = require("./internal/codegen");

/**
 * Adds single scalar componentwise to matrix. If `out` is not given,
 * writes result in `mat`.
 *
 * out = mat + n
 *
 * @param out -
 * @param mat -
 * @param n -
 */
const addN = _vectors.addN;
exports.addN = addN;
const addN22 = _vectors.addN4;
exports.addN22 = addN22;
const [addN23, addN33, addN44] = (0, _codegen.defMathN)(addN, "+");
exports.addN44 = addN44;
exports.addN33 = addN33;
exports.addN23 = addN23;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./internal/codegen":"../node_modules/@thi.ng/matrices/internal/codegen.js"}],"../node_modules/@thi.ng/matrices/quat-axis-angle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.quatToAxisAngle = exports.quatFromAxisAngle = void 0;

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

/**
 * Computes a quaternion representing the rotation `theta` around
 * `axis`.
 *
 * @param axis -
 * @param theta -
 */
const quatFromAxisAngle = (axis, theta) => {
  theta *= 0.5;
  return (0, _vectors.normalize)([0, 0, 0, Math.cos(theta)], axis, Math.sin(theta));
};
/**
 * Decomposes quaternion into `[axis, theta]` tuple.
 *
 * @param quat -
 */


exports.quatFromAxisAngle = quatFromAxisAngle;

const quatToAxisAngle = quat => {
  const n = (0, _vectors.normalize)([], quat);
  const w = n[3];
  const m = Math.sqrt(1 - w * w);
  const theta = 2 * Math.acos(w);
  return m > _math.EPS ? [[n[0] / m, n[1] / m, n[2] / m], theta] : [[n[0], n[1], n[2]], theta];
};

exports.quatToAxisAngle = quatToAxisAngle;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/matrices/alignment-quat.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.alignmentQuat = void 0;

var _vectors = require("@thi.ng/vectors");

var _quatAxisAngle = require("./quat-axis-angle");

/**
 * Returns quaternion describing the rotation from direction vector
 * `from` -> `to`. If `normalize` is true (default), first normalizes
 * the vectors (not modifying original).
 *
 * @param from -
 * @param to -
 * @param normalize -
 */
const alignmentQuat = (from, to, normalize = true) => {
  if (normalize) {
    from = (0, _vectors.normalize)([], from);
    to = (0, _vectors.normalize)([], to);
  }

  const axis = (0, _vectors.cross3)([], from, to);
  return (0, _quatAxisAngle.quatFromAxisAngle)(axis, Math.atan2((0, _vectors.mag)(axis), (0, _vectors.dot3)(from, to)));
};

exports.alignmentQuat = alignmentQuat;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./quat-axis-angle":"../node_modules/@thi.ng/matrices/quat-axis-angle.js"}],"../node_modules/@thi.ng/matrices/column.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.column44 = exports.column33 = exports.column23 = exports.column22 = exports.column = void 0;

var _vectors = require("@thi.ng/vectors");

/**
 * Extracts column vector from given matrix and writes result to `out`.
 * If `out` is null, creates new vector.
 *
 * @param out -
 * @param mat -
 * @param column -
 */
const column = (0, _vectors.vop)(1);
exports.column = column;
const column22 = column.add(4, (out, m, n) => (0, _vectors.setS2)(out, m, 0, n * 2));
exports.column22 = column22;
const column23 = column.add(6, column22);
exports.column23 = column23;
const column33 = column.add(9, (out, m, n) => (0, _vectors.setS3)(out, m, 0, n * 3));
exports.column33 = column33;
const column44 = column.add(16, (out, m, n) => (0, _vectors.setS4)(out, m, 0, n * 4));
exports.column44 = column44;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/matrices/mulm.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mulM44 = exports.mulM33 = exports.mulM23 = exports.mulM22 = exports.mulM = void 0;

var _vectors = require("@thi.ng/vectors");

/**
 * Multi-method. Performs matrix-matrix multiplication. If `out` is not
 * given, writes result in `a`.
 *
 * @param out -
 * @param a -
 * @param b -
 */
const mulM = (0, _vectors.vop)(1);
/**
 * 2x2 matrix-matrix multiplication. If `out` is not given, writes
 * result in `a`.
 *
 * @param out -
 * @param a -
 * @param b -
 */

exports.mulM = mulM;
const mulM22 = mulM.add(4, (out, a, b) => (0, _vectors.setC4)(out || a, (0, _vectors.dotS2)(a, b, 0, 0, 2), (0, _vectors.dotS2)(a, b, 1, 0, 2), (0, _vectors.dotS2)(a, b, 0, 2, 2), (0, _vectors.dotS2)(a, b, 1, 2, 2)));
/**
 * 2x3 matrix-matrix multiplication. If `out` is not given, writes
 * result in `a`.
 *
 * @param out -
 * @param a -
 * @param b -
 */

exports.mulM22 = mulM22;
const mulM23 = mulM.add(6, (out, a, b) => (0, _vectors.setC6)(out || a, (0, _vectors.dotS2)(a, b, 0, 0, 2), (0, _vectors.dotS2)(a, b, 1, 0, 2), (0, _vectors.dotS2)(a, b, 0, 2, 2), (0, _vectors.dotS2)(a, b, 1, 2, 2), (0, _vectors.dotS2)(a, b, 0, 4, 2) + a[4], (0, _vectors.dotS2)(a, b, 1, 4, 2) + a[5]));
/**
 * 3x3 matrix-matrix multiplication. If `out` is not given, writes
 * result in `a`.
 *
 * @param out -
 * @param a -
 * @param b -
 */

exports.mulM23 = mulM23;
const mulM33 = mulM.add(9, (out, a, b) => (0, _vectors.setC)(out || a, (0, _vectors.dotS3)(a, b, 0, 0, 3), (0, _vectors.dotS3)(a, b, 1, 0, 3), (0, _vectors.dotS3)(a, b, 2, 0, 3), (0, _vectors.dotS3)(a, b, 0, 3, 3), (0, _vectors.dotS3)(a, b, 1, 3, 3), (0, _vectors.dotS3)(a, b, 2, 3, 3), (0, _vectors.dotS3)(a, b, 0, 6, 3), (0, _vectors.dotS3)(a, b, 1, 6, 3), (0, _vectors.dotS3)(a, b, 2, 6, 3)));
/**
 * 4x4 matrix-matrix multiplication. If `out` is not given, writes
 * result in `a`.
 *
 * @param out -
 * @param a -
 * @param b -
 */

exports.mulM33 = mulM33;
const mulM44 = mulM.add(16, (out, a, b) => (0, _vectors.setC)(out || a, (0, _vectors.dotS4)(a, b, 0, 0, 4), (0, _vectors.dotS4)(a, b, 1, 0, 4), (0, _vectors.dotS4)(a, b, 2, 0, 4), (0, _vectors.dotS4)(a, b, 3, 0, 4), (0, _vectors.dotS4)(a, b, 0, 4, 4), (0, _vectors.dotS4)(a, b, 1, 4, 4), (0, _vectors.dotS4)(a, b, 2, 4, 4), (0, _vectors.dotS4)(a, b, 3, 4, 4), (0, _vectors.dotS4)(a, b, 0, 8, 4), (0, _vectors.dotS4)(a, b, 1, 8, 4), (0, _vectors.dotS4)(a, b, 2, 8, 4), (0, _vectors.dotS4)(a, b, 3, 8, 4), (0, _vectors.dotS4)(a, b, 0, 12, 4), (0, _vectors.dotS4)(a, b, 1, 12, 4), (0, _vectors.dotS4)(a, b, 2, 12, 4), (0, _vectors.dotS4)(a, b, 3, 12, 4)));
exports.mulM44 = mulM44;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/matrices/concat.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.concat = void 0;

var _mulm = require("./mulm");

/**
 * Concatenates / multiplies given matrices in left-to-right order. A
 * minimum of 2 input matrices must be given. If `out` is null, writes
 * result into `a`.
 *
 * @param out -
 * @param a -
 * @param b -
 * @param xs -
 */
const concat = (out, a, b, ...xs) => xs.reduce((acc, x) => (0, _mulm.mulM)(acc, acc, x), (0, _mulm.mulM)(out, a, b));

exports.concat = concat;
},{"./mulm":"../node_modules/@thi.ng/matrices/mulm.js"}],"../node_modules/@thi.ng/matrices/conjugate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.conjugateQ = void 0;

var _vectors = require("@thi.ng/vectors");

const conjugateQ = (out, a) => (0, _vectors.setC4)(out || a, -a[0], -a[1], -a[2], a[3]);

exports.conjugateQ = conjugateQ;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/matrices/determinant.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.det44 = exports.det44FromCoeffs = exports.detCoeffs44 = exports.det33 = exports.det23 = exports.det22 = void 0;

var _vectors = require("@thi.ng/vectors");

const dp4 = _vectors.dotC4;
const dp6 = _vectors.dotC6;

const det22 = m => dp4(m[0], m[3], -m[1], m[2]);

exports.det22 = det22;
const det23 = det22;
exports.det23 = det23;

const det33 = m => {
  const [m00, m01, m02, m10, m11, m12, m20, m21, m22] = m;
  const d01 = dp4(m22, m11, -m12, m21);
  const d11 = dp4(m12, m20, -m22, m10);
  const d21 = dp4(m21, m10, -m11, m20);
  return dp6(m00, d01, m01, d11, m02, d21);
};

exports.det33 = det33;

const detCoeffs44 = m => {
  const [m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33] = m;
  return [dp4(m00, m11, -m01, m10), dp4(m00, m12, -m02, m10), dp4(m00, m13, -m03, m10), dp4(m01, m12, -m02, m11), dp4(m01, m13, -m03, m11), dp4(m02, m13, -m03, m12), dp4(m20, m31, -m21, m30), dp4(m20, m32, -m22, m30), dp4(m20, m33, -m23, m30), dp4(m21, m32, -m22, m31), dp4(m21, m33, -m23, m31), dp4(m22, m33, -m23, m32)];
};

exports.detCoeffs44 = detCoeffs44;

const det44FromCoeffs = d => dp6(d[0], d[11], -d[1], d[10], d[2], d[9]) + dp6(d[3], d[8], -d[4], d[7], d[5], d[6]);

exports.det44FromCoeffs = det44FromCoeffs;

const det44 = m => det44FromCoeffs(detCoeffs44(m));

exports.det44 = det44;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/matrices/diag.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.diag44 = exports.diag33 = exports.diag23 = exports.diag22 = exports.diag = void 0;

var _vectors = require("@thi.ng/vectors");

/**
 * Extracts matrix diagonal into `out`.
 *
 * @param out -
 * @param mat -
 */
const diag = (0, _vectors.vop)(1);
exports.diag = diag;
const diag22 = diag.add(4, (out, m) => (0, _vectors.setS2)(out, m, 0, 0, 1, 3));
exports.diag22 = diag22;
const diag23 = diag.add(6, diag22);
exports.diag23 = diag23;
const diag33 = diag.add(9, (out, m) => (0, _vectors.setS3)(out, m, 0, 0, 1, 4));
exports.diag33 = diag33;
const diag44 = diag.add(16, (out, m) => (0, _vectors.setS4)(out, m, 0, 0, 1, 5));
exports.diag44 = diag44;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/matrices/div.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.div44 = exports.div33 = exports.div23 = exports.div22 = exports.div = void 0;

var _vectors = require("@thi.ng/vectors");

var _codegen = require("./internal/codegen");

/**
 * Componentwise matrix division. If `out` is not given, writes result
 * in `a`. Both input matrices MUST be of same size.
 *
 * out = a / b
 *
 * @param out -
 * @param a -
 * @param b -
 */
const div = _vectors.div;
exports.div = div;
const div22 = _vectors.div4;
exports.div22 = div22;
const [div23, div33, div44] = (0, _codegen.defMath)(div, "/");
exports.div44 = div44;
exports.div33 = div33;
exports.div23 = div23;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./internal/codegen":"../node_modules/@thi.ng/matrices/internal/codegen.js"}],"../node_modules/@thi.ng/matrices/divn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.divN44 = exports.divN33 = exports.divN23 = exports.divN22 = exports.divN = void 0;

var _vectors = require("@thi.ng/vectors");

var _codegen = require("./internal/codegen");

/**
 * Componentwise matrix division by single scalar. If `out` is not
 * given, writes result in `mat`.
 *
 * out = mat / n
 *
 * @param out -
 * @param mat -
 * @param n -
 */
const divN = _vectors.divN;
exports.divN = divN;
const divN22 = _vectors.divN4;
exports.divN22 = divN22;
const [divN23, divN33, divN44] = (0, _codegen.defMathN)(divN, "/");
exports.divN44 = divN44;
exports.divN33 = divN33;
exports.divN23 = divN23;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./internal/codegen":"../node_modules/@thi.ng/matrices/internal/codegen.js"}],"../node_modules/@thi.ng/matrices/frustum.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.frustumBounds = exports.frustum = void 0;

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

/**
 * Constructs a 4x4 matrix representing the given view frustum. Creates
 * new matrix if `out` is `null`.
 *
 * @param out -
 * @param left -
 * @param right -
 * @param bottom -
 * @param top -
 * @param near -
 * @param far -
 */
const frustum = (out, left, right, bottom, top, near, far) => {
  const dx = 1 / (right - left);
  const dy = 1 / (top - bottom);
  const dz = 1 / (far - near);
  return (0, _vectors.setC)(out || [], near * 2 * dx, 0, 0, 0, 0, near * 2 * dy, 0, 0, (right + left) * dx, (top + bottom) * dy, -(far + near) * dz, -1, 0, 0, -(far * near * 2) * dz, 0);
};

exports.frustum = frustum;

const frustumBounds = (fovy, aspect, near, far) => {
  const top = near * Math.tan(fovy * _math.DEG2RAD / 2);
  const right = top * aspect;
  return {
    left: -right,
    right,
    bottom: -top,
    top,
    near,
    far
  };
};

exports.frustumBounds = frustumBounds;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/matrices/set.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.set44 = exports.set33 = exports.set23 = exports.set22 = exports.set = void 0;

var _vectors = require("@thi.ng/vectors");

const $ = dim => _vectors.set.add(dim, (0, _vectors.compile)(dim, _vectors.SET, "o,a"));

const set = _vectors.set;
exports.set = set;
const set22 = _vectors.set4;
exports.set22 = set22;
const set23 = $(6);
exports.set23 = set23;
const set33 = $(9);
exports.set33 = set33;
const set44 = $(16);
exports.set44 = set44;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/matrices/identity.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.identity44 = exports.identity33 = exports.identity23 = exports.identity22 = exports.identity = void 0;

var _vectors = require("@thi.ng/vectors");

var _constants = require("./constants");

var _set = require("./set");

/**
 * Writes identity matrix into given matrix.
 */
const identity = (0, _vectors.vop)();
exports.identity = identity;
const identity22 = identity.add(4, m => (0, _set.set)(m, _constants.IDENT22));
exports.identity22 = identity22;
const identity23 = identity.add(6, m => (0, _set.set)(m, _constants.IDENT23));
exports.identity23 = identity23;
const identity33 = identity.add(9, m => (0, _set.set)(m, _constants.IDENT33));
exports.identity33 = identity33;
const identity44 = identity.add(16, m => (0, _set.set)(m, _constants.IDENT44));
exports.identity44 = identity44;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./constants":"../node_modules/@thi.ng/matrices/constants.js","./set":"../node_modules/@thi.ng/matrices/set.js"}],"../node_modules/@thi.ng/matrices/invert.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.invertQ = exports.invert44 = exports.invert33 = exports.invert23 = exports.invert22 = exports.invert = void 0;

var _vectors = require("@thi.ng/vectors");

var _determinant = require("./determinant");

const dp4 = _vectors.dotC4;
const dp6 = _vectors.dotC6;
/**
 * Matrix inversion. Returns `undefined` if matrix is not invertible.
 * Mutates `mat` if `out` is `null`.
 *
 * @param out -
 * @param mat -
 */

const invert = (0, _vectors.vop)(1);
exports.invert = invert;
const invert22 = invert.add(4, (out, m) => {
  const [m00, m01, m10, m11] = m;
  let det = dp4(m00, m11, -m01, m10);
  if (det === 0) return;
  det = 1.0 / det;
  return (0, _vectors.setC4)(out || m, m11 * det, -m01 * det, -m10 * det, m00 * det);
});
exports.invert22 = invert22;
const invert23 = invert.add(6, (out, m) => {
  const [m00, m01, m10, m11, m20, m21] = m;
  let det = dp4(m00, m11, -m01, m10);
  if (det === 0) return;
  det = 1.0 / det;
  return (0, _vectors.setC6)(out || m, m11 * det, -m01 * det, -m10 * det, m00 * det, dp4(m10, m21, -m11, m20) * det, dp4(m01, m20, -m00, m21) * det);
});
exports.invert23 = invert23;
const invert33 = invert.add(9, (out, m) => {
  const [m00, m01, m02, m10, m11, m12, m20, m21, m22] = m;
  const d01 = dp4(m22, m11, -m12, m21);
  const d11 = dp4(m12, m20, -m22, m10);
  const d21 = dp4(m21, m10, -m11, m20);
  let det = dp6(m00, d01, m01, d11, m02, d21);
  if (det === 0) return;
  det = 1.0 / det;
  return (0, _vectors.setC)(out || m, d01 * det, dp4(-m22, m01, m02, m21) * det, dp4(m12, m01, -m02, m11) * det, d11 * det, dp4(m22, m00, -m02, m20) * det, dp4(-m12, m00, m02, m10) * det, d21 * det, dp4(-m21, m00, m01, m20) * det, dp4(m11, m00, -m01, m10) * det);
});
exports.invert33 = invert33;
const invert44 = invert.add(16, (out, m) => {
  const coeffs = (0, _determinant.detCoeffs44)(m);
  let det = (0, _determinant.det44FromCoeffs)(coeffs);
  if (det === 0) return;
  det = 1.0 / det;
  const [m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33] = m;
  const [d00, d01, d02, d03, d04, d05, d06, d07, d08, d09, d10, d11] = coeffs;
  return (0, _vectors.setC)(out || m, dp6(m11, d11, -m12, d10, m13, d09) * det, dp6(-m01, d11, m02, d10, -m03, d09) * det, dp6(m31, d05, -m32, d04, m33, d03) * det, dp6(-m21, d05, m22, d04, -m23, d03) * det, dp6(-m10, d11, m12, d08, -m13, d07) * det, dp6(m00, d11, -m02, d08, m03, d07) * det, dp6(-m30, d05, m32, d02, -m33, d01) * det, dp6(m20, d05, -m22, d02, m23, d01) * det, dp6(m10, d10, -m11, d08, m13, d06) * det, dp6(-m00, d10, m01, d08, -m03, d06) * det, dp6(m30, d04, -m31, d02, m33, d00) * det, dp6(-m20, d04, m21, d02, -m23, d00) * det, dp6(-m10, d09, m11, d07, -m12, d06) * det, dp6(m00, d09, -m01, d07, m02, d06) * det, dp6(-m30, d03, m31, d01, -m32, d00) * det, dp6(m20, d03, -m21, d01, m22, d00) * det);
});
exports.invert44 = invert44;

const invertQ = (out, a) => {
  let d = (0, _vectors.magSq4)(a);
  d = d > 0 ? -1 / d : 0;
  return (0, _vectors.setC4)(out || a, a[0] * d, a[1] * d, a[2] * d, a[3] * -d);
};

exports.invertQ = invertQ;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./determinant":"../node_modules/@thi.ng/matrices/determinant.js"}],"../node_modules/@thi.ng/matrices/lookat.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.lookAt = void 0;

var _vectors = require("@thi.ng/vectors");

/**
 * Constructs a 4x4 camera matrix for given `eye` position, look-at
 * `target` (both in world space) and normalized `up` vector. Creates
 * new matrix if `out` is `null`.
 *
 * @param out -
 * @param eye -
 * @param target -
 * @param up -
 */
const lookAt = (out, eye, target, up) => {
  const z = (0, _vectors.normalize)(null, (0, _vectors.sub3)([], eye, target));
  const x = (0, _vectors.normalize)(null, (0, _vectors.cross3)([], up, z));
  const y = (0, _vectors.normalize)(null, (0, _vectors.cross3)([], z, x));
  return (0, _vectors.setC)(out || [], x[0], y[0], z[0], 0, x[1], y[1], z[1], 0, x[2], y[2], z[2], 0, -(0, _vectors.dot3)(eye, x), -(0, _vectors.dot3)(eye, y), -(0, _vectors.dot3)(eye, z), 1);
};

exports.lookAt = lookAt;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/matrices/m22-m23.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mat22to23 = void 0;

var _vectors = require("@thi.ng/vectors");

/**
 * Converts 2x2 to 2x3 matrix and writes result to `out`. Creates new
 * matrix if `out` is `null`.
 *
 * @param out -
 * @param m22 -
 */
const mat22to23 = (out, m22) => (!out && (out = []), (0, _vectors.set4)(out, m22), out[4] = out[5] = 0, out);

exports.mat22to23 = mat22to23;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/matrices/m23-m22.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mat23to22 = void 0;

var _vectors = require("@thi.ng/vectors");

/**
 * Converts 2x3 to 2x2 matrix and writes result to `out`. Creates new
 * matrix if `out` is `null`.
 *
 * @param out -
 * @param m23 -
 */
const mat23to22 = (out, m23) => (0, _vectors.set4)(out || [], m23);

exports.mat23to22 = mat23to22;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/matrices/m23-m44.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mat23to44 = void 0;

var _vectors = require("@thi.ng/vectors");

/**
 * Converts 2x3 to 4x4 matrix and writes result to `out`. Creates new
 * matrix if `out` is `null`.
 *
 * @param out -
 * @param m23 -
 */
const mat23to44 = (out, m23) => (0, _vectors.setC)(out || [], // x
m23[0], m23[1], 0, 0, // y
m23[2], m23[3], 0, 0, // z
0, 0, 1, 0, // w
m23[4], m23[5], 0, 1);

exports.mat23to44 = mat23to44;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/matrices/m33-m44.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mat33to44 = void 0;

var _vectors = require("@thi.ng/vectors");

/**
 * Converts 3x3 to 4x4 matrix and writes result to `out`. Creates new
 * matrix if `out` is `null`.
 *
 * @param out -
 * @param m33 -
 */
const mat33to44 = (out, m33) => (0, _vectors.setC)(out || [], // x
m33[0], m33[1], m33[2], 0, // y
m33[3], m33[4], m33[5], 0, // z
m33[6], m33[7], m33[8], 0, // w
0, 0, 0, 1);

exports.mat33to44 = mat33to44;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/matrices/m44-m33.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mat44to33 = void 0;

var _vectors = require("@thi.ng/vectors");

/**
 * Converts 4x4 to 3x3 matrix and writes result to `out`. Creates new
 * matrix if `out` is `null`.
 *
 * @param out -
 * @param m44 -
 */
const mat44to33 = (out, m44) => (!out && (out = []), (0, _vectors.setS3)(out, m44), (0, _vectors.setS3)(out, m44, 3, 4), (0, _vectors.setS3)(out, m44, 6, 8));

exports.mat44to33 = mat44to33;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/matrices/scale.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.scale44 = exports.scale33 = exports.scale23 = exports.scale22 = void 0;

var _checks = require("@thi.ng/checks");

var _vectors = require("@thi.ng/vectors");

/**
 * Computes 2x2 matrix scale matrix and writes result to `out`. If `s`
 * is a number, scaling will be uniform.
 *
 * @param m -
 * @param s -
 */
const scale22 = (m, s) => (s = (0, _checks.isNumber)(s) ? [s, s] : s, (0, _vectors.setC4)(m || [], s[0], 0, 0, s[1]));
/**
 * Computes 2x3 matrix scale matrix and writes result to `out`. If `s`
 * is a number, scaling will be uniform.
 *
 * @param m -
 * @param s -
 */


exports.scale22 = scale22;

const scale23 = (m, s) => (s = (0, _checks.isNumber)(s) ? [s, s] : s, (0, _vectors.setC6)(m || [], s[0], 0, 0, s[1], 0, 0));
/**
 * Computes 3x3 matrix scale matrix and writes result to `out`. If `s`
 * is a number, scaling will be uniform.
 *
 * @param m -
 * @param s -
 */


exports.scale23 = scale23;

const scale33 = (m, s) => (s = (0, _checks.isNumber)(s) ? [s, s, s] : s, (0, _vectors.setC)(m || [], s[0], 0, 0, 0, s[1], 0, 0, 0, s[2]));
/**
 * Computes 4x4 matrix scale matrix and writes result to `out`. If `s`
 * is a number, scaling will be uniform.
 *
 * @param m -
 * @param s -
 */


exports.scale33 = scale33;

const scale44 = (m, s) => (s = (0, _checks.isNumber)(s) ? [s, s, s] : s, (0, _vectors.setC)(m || [], // x
s[0], 0, 0, 0, // y
0, s[1], 0, 0, // z
0, 0, s[2], 0, // w
0, 0, 0, s[3] !== undefined ? s[3] : 1));

exports.scale44 = scale44;
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/matrices/matn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mat44n = exports.mat33n = exports.mat23n = exports.mat22n = void 0;

var _scale = require("./scale");

const mat22n = (out, n) => (0, _scale.scale22)(out, n);

exports.mat22n = mat22n;

const mat23n = (out, n) => (0, _scale.scale23)(out, n);

exports.mat23n = mat23n;

const mat33n = (out, n) => (0, _scale.scale33)(out, n);

exports.mat33n = mat33n;

const mat44n = (out, n) => (out = (0, _scale.scale44)(out, n), out[15] = n, out);

exports.mat44n = mat44n;
},{"./scale":"../node_modules/@thi.ng/matrices/scale.js"}],"../node_modules/@thi.ng/matrices/matv.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mat44v = exports.mat33v = exports.mat23v = exports.mat22v = void 0;

var _vectors = require("@thi.ng/vectors");

/**
 * Initializes 2x2 matrix from 2D column vectors.
 *
 * @param out -
 * @param x -
 * @param y -
 */
const mat22v = _vectors.setVV4;
/**
 * Initializes 2x3 matrix (affine transform) from 2D column vectors.
 *
 * @param out -
 * @param x -
 * @param y -
 * @param translate -
 */

exports.mat22v = mat22v;
const mat23v = _vectors.setVV6;
/**
 * Initializes 3x3 matrix from 3D column vectors.
 *
 * @param out -
 * @param x -
 * @param y -
 * @param z -
 */

exports.mat23v = mat23v;
const mat33v = _vectors.setVV9;
/**
 * Initializes 4x4 matrix from 4D column vectors.
 *
 * @param out -
 * @param x -
 * @param y -
 * @param z -
 * @param w -
 */

exports.mat33v = mat33v;
const mat44v = _vectors.setVV16;
exports.mat44v = mat44v;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/matrices/mixq.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mixQ = void 0;

var _vectors = require("@thi.ng/vectors");

/**
 * Interpolates quaternion `a` to `b` by given amount `t` [0...1], using
 * SLERP. Writes result to `out`. The optional `eps` (default 1e-3) is
 * used to switch to linear interpolation if the angular difference is
 * very small.
 *
 * @param out -
 * @param a -
 * @param b -
 * @param t -
 * @param eps -
 */
const mixQ = (out, a, b, t, eps = 1e-3) => {
  const d = (0, _vectors.dot4)(a, b);

  if (Math.abs(d) < 1.0) {
    const theta = Math.acos(d);
    const stheta = Math.sqrt(1 - d * d);
    let u, v;

    if (Math.abs(stheta) < eps) {
      u = v = 0.5;
    } else {
      u = Math.sin(theta * (1 - t)) / stheta;
      v = Math.sin(theta * t) / stheta;
    }

    !out && (out = a);
    return (0, _vectors.maddN4)(out, b, v, (0, _vectors.mulN4)(out, a, u));
  }

  return a !== out ? (0, _vectors.set4)(out, a) : out;
};

exports.mixQ = mixQ;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/matrices/mul.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mul44 = exports.mul33 = exports.mul23 = exports.mul22 = exports.mul = void 0;

var _vectors = require("@thi.ng/vectors");

var _codegen = require("./internal/codegen");

/**
 * Componentwise matrix multiplication. Use {@link mulM} or
 * {@link concat} for actual matrix-matrix multiplication/concatenation.
 * If `out` is not given, writes result in `a`. Both input matrices MUST
 * be of same size.
 *
 * out = a * b
 *
 * @param out -
 * @param a -
 * @param b -
 */
const mul = _vectors.mul;
exports.mul = mul;
const mul22 = _vectors.mul4;
exports.mul22 = mul22;
const [mul23, mul33, mul44] = (0, _codegen.defMath)(mul, "*");
exports.mul44 = mul44;
exports.mul33 = mul33;
exports.mul23 = mul23;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./internal/codegen":"../node_modules/@thi.ng/matrices/internal/codegen.js"}],"../node_modules/@thi.ng/matrices/muln.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mulN44 = exports.mulN33 = exports.mulN23 = exports.mulN22 = exports.mulN = void 0;

var _vectors = require("@thi.ng/vectors");

var _codegen = require("./internal/codegen");

/**
 * Multiplies matrix componentwise with single scalar. If `out` is not
 * given, writes result in `mat`.
 *
 * out = mat * n
 *
 * @param out -
 * @param mat -
 * @param n -
 */
const mulN = _vectors.mulN;
exports.mulN = mulN;
const mulN22 = _vectors.mulN4;
exports.mulN22 = mulN22;
const [mulN23, mulN33, mulN44] = (0, _codegen.defMathN)(mulN, "*");
exports.mulN44 = mulN44;
exports.mulN33 = mulN33;
exports.mulN23 = mulN23;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./internal/codegen":"../node_modules/@thi.ng/matrices/internal/codegen.js"}],"../node_modules/@thi.ng/matrices/mulq.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mulQ = void 0;

var _vectors = require("@thi.ng/vectors");

/**
 * Performs quaternion multiplication of `a` and `b` and writes result
 * to `out`. If `out` is null, writes result into `a`.
 *
 * @param out -
 * @param a -
 * @param b -
 */
const mulQ = (out, a, b) => {
  const {
    0: ax,
    1: ay,
    2: az,
    3: aw
  } = a;
  const {
    0: bx,
    1: by,
    2: bz,
    3: bw
  } = b;
  return (0, _vectors.setC4)(out || a, ax * bw + aw * bx + ay * bz - az * by, ay * bw + aw * by + az * bx - ax * bz, az * bw + aw * bz + ax * by - ay * bx, aw * bw - ax * bx - ay * by - az * bz);
};

exports.mulQ = mulQ;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/matrices/mulv.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mulVQ = exports.mulV344 = exports.mulV44 = exports.mulV33 = exports.mulV23 = exports.mulV22 = exports.mulV = void 0;

var _vectors = require("@thi.ng/vectors");

/**
 * Matrix-vector multiplication. Supports in-place modification, i.e. if
 * `out === v`.
 *
 * @param out -
 * @param m -
 * @param v -
 */
const mulV = (0, _vectors.vop)(1);
/**
 * Multiplies 2x2 matrix `m` with 2D vector `v`. Supports in-place
 * modification, i.e. if `out === v`.
 *
 * @param out -
 * @param m -
 * @param v -
 */

exports.mulV = mulV;
const mulV22 = mulV.add(4, (out, m, v) => (0, _vectors.setC2)(out || v, (0, _vectors.dotS2)(m, v, 0, 0, 2), (0, _vectors.dotS2)(m, v, 1, 0, 2)));
/**
 * Multiplies 2x3 matrix `m` with 2D vector `v`. Supports in-place
 * modification, i.e. if `out === v`.
 *
 * @param out -
 * @param m -
 * @param v -
 */

exports.mulV22 = mulV22;
const mulV23 = mulV.add(6, (out, m, v) => (0, _vectors.setC2)(out || v, (0, _vectors.dotS2)(m, v, 0, 0, 2) + m[4], (0, _vectors.dotS2)(m, v, 1, 0, 2) + m[5]));
/**
 * Multiplies 3x3 matrix `m` with 3D vector `v`. Supports in-place
 * modification, i.e. if `out === v`.
 *
 * @param out -
 * @param m -
 * @param v -
 */

exports.mulV23 = mulV23;
const mulV33 = mulV.add(9, (out, m, v) => (0, _vectors.setC3)(out || v, (0, _vectors.dotS3)(m, v, 0, 0, 3), (0, _vectors.dotS3)(m, v, 1, 0, 3), (0, _vectors.dotS3)(m, v, 2, 0, 3)));
/**
 * Multiplies 4x4 matrix `m` with 4D vector `v`. Supports in-place
 * modification, i.e. if `out === v`.
 *
 * @param out -
 * @param m -
 * @param v -
 */

exports.mulV33 = mulV33;
const mulV44 = mulV.add(16, (out, m, v) => (0, _vectors.setC4)(out || v, (0, _vectors.dotS4)(m, v, 0, 0, 4), (0, _vectors.dotS4)(m, v, 1, 0, 4), (0, _vectors.dotS4)(m, v, 2, 0, 4), (0, _vectors.dotS4)(m, v, 3, 0, 4)));
/**
 * Multiplies 4x4 matrix `m` with 3D vector `v` and assumes initial
 * `w=1`, i.e. the vector is interpreted as `[x,y,z,1]`. After
 * transformation applies perspective divide of the resulting XYZ
 * components. Returns `undefined` if the computed perspective divisor
 * is zero (and would cause `NaN` results).
 *
 * @param out -
 * @param m -
 * @param v -
 */

exports.mulV44 = mulV44;

const mulV344 = (out, m, v) => {
  const w = (0, _vectors.dotS3)(m, v, 3, 0, 4) + m[15];
  return w !== 0 ? (0, _vectors.setC3)(out || v, ((0, _vectors.dotS3)(m, v, 0, 0, 4) + m[12]) / w, ((0, _vectors.dotS3)(m, v, 1, 0, 4) + m[13]) / w, ((0, _vectors.dotS3)(m, v, 2, 0, 4) + m[14]) / w) : undefined;
};
/**
 * Multiplies quaternion `q` with 3D vector `v`. Returns transformed
 * vector or modifies in-place if `out` is null or `v`.
 *
 * @param out -
 * @param q -
 * @param v -
 */


exports.mulV344 = mulV344;

const mulVQ = (out, q, v) => {
  const {
    0: px,
    1: py,
    2: pz
  } = v;
  const {
    0: qx,
    1: qy,
    2: qz,
    3: qw
  } = q;
  const ix = qw * px + qy * pz - qz * py;
  const iy = qw * py + qz * px - qx * pz;
  const iz = qw * pz + qx * py - qy * px;
  const iw = -qx * px - qy * py - qz * pz;
  return (0, _vectors.setC3)(out || v, ix * qw + iw * -qx + iy * -qz - iz * -qy, iy * qw + iw * -qy + iz * -qx - ix * -qz, iz * qw + iw * -qz + ix * -qy - iy * -qx);
};

exports.mulVQ = mulVQ;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/matrices/mulvm.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mulVM44 = exports.mulVM33 = exports.mulVM23 = exports.mulVM22 = void 0;

var _vectors = require("@thi.ng/vectors");

/**
 * Same as:
 *
 * @example
 * ```ts
 * out[0] = dot(v, column(m, 0))
 * out[1] = dot(v, column(m, 1))
 * ```
 *
 * @param out -
 * @param v -
 * @param m -
 */
const mulVM22 = (out, v, m) => (0, _vectors.setC2)(out, (0, _vectors.dot2)(v, m), (0, _vectors.dotS2)(v, m, 0, 2));

exports.mulVM22 = mulVM22;
const mulVM23 = mulVM22;
/**
 * Same as:
 *
 * @example
 * ```ts
 * out[0] = dot(v, column(m, 0))
 * out[1] = dot(v, column(m, 1))
 * out[2] = dot(v, column(m, 2))
 * ```
 *
 * @param out -
 * @param v -
 * @param m -
 */

exports.mulVM23 = mulVM23;

const mulVM33 = (out, v, m) => (0, _vectors.setC3)(out, (0, _vectors.dot3)(v, m), (0, _vectors.dotS3)(v, m, 0, 3), (0, _vectors.dotS3)(v, m, 0, 6));
/**
 * Same as:
 *
 * @example
 * ```ts
 * out[0] = dot(v, column(m, 0))
 * out[1] = dot(v, column(m, 1))
 * out[2] = dot(v, column(m, 2))
 * out[3] = dot(v, column(m, 3))
 * ```
 *
 * @param out -
 * @param v -
 * @param m -
 */


exports.mulVM33 = mulVM33;

const mulVM44 = (out, v, m) => (0, _vectors.setC4)(out, (0, _vectors.dot4)(v, m), (0, _vectors.dotS4)(v, m, 0, 4), (0, _vectors.dotS4)(v, m, 0, 8), (0, _vectors.dotS4)(v, m, 0, 12));

exports.mulVM44 = mulVM44;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/matrices/transpose.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.transpose44 = exports.transpose33 = exports.transpose22 = void 0;

var _vectors = require("@thi.ng/vectors");

/**
 * Writes transposition of 2x2 matrix `m` to `out`. Creates new matrix
 * if `out` is `null`
 *
 * @param out -
 * @param m -
 */
const transpose22 = (out, m) => (0, _vectors.setC4)(out || [], m[0], m[2], m[1], m[3]);
/**
 * Writes transposition of 3x3 matrix `m` to `out`. Creates new matrix
 * if `out` is `null`
 *
 * @param out -
 * @param m -
 */


exports.transpose22 = transpose22;

const transpose33 = (out, m) => (0, _vectors.setC)(out || [], m[0], m[3], m[6], m[1], m[4], m[7], m[2], m[5], m[8]);
/**
 * Writes transposition of 4x4 matrix `m` to `out`. Creates new matrix
 * if `out` is `null`
 *
 * @param out -
 * @param m -
 */


exports.transpose33 = transpose33;

const transpose44 = (out, m) => (0, _vectors.setC)(out || [], m[0], m[4], m[8], m[12], m[1], m[5], m[9], m[13], m[2], m[6], m[10], m[14], m[3], m[7], m[11], m[15]);

exports.transpose44 = transpose44;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/matrices/normal-mat.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.normal44 = exports.normal33 = void 0;

var _invert = require("./invert");

var _m44M = require("./m44-m33");

var _transpose = require("./transpose");

/**
 * Converts given 4x4 matrix to a 3x3 normal matrix, i.e. the transposed
 * inverse of its upper-left 3x3 region. If `out` is null a new result
 * matrix will be created. Returns `undefined` if matrix inversion
 * failed.
 *
 * @param out -
 * @param m -
 */
const normal33 = (out, m) => {
  out = (0, _invert.invert33)(null, (0, _m44M.mat44to33)(out, m));
  return out ? (0, _transpose.transpose33)(null, out) : undefined;
};
/**
 * Converts given 4x4 matrix to a 4x4 matrix normal matrix, i.e. the
 * transposed inverse. Writes results to `m` if `out` is null. Returns
 * `undefined` if matrix inversion failed.
 *
 * @param out -
 * @param m -
 */


exports.normal33 = normal33;

const normal44 = (out, m) => {
  out = (0, _invert.invert44)(out, m);
  return out ? (0, _transpose.transpose44)(null, out) : undefined;
};

exports.normal44 = normal44;
},{"./invert":"../node_modules/@thi.ng/matrices/invert.js","./m44-m33":"../node_modules/@thi.ng/matrices/m44-m33.js","./transpose":"../node_modules/@thi.ng/matrices/transpose.js"}],"../node_modules/@thi.ng/matrices/ortho.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ortho = void 0;

var _vectors = require("@thi.ng/vectors");

/**
 * Creates a 4x4 matrix orthographic projection matrix and writes result
 * to `out`.
 *
 * @param out -
 * @param left -
 * @param right -
 * @param bottom -
 * @param top -
 * @param near -
 * @param far -
 */
const ortho = (out, left, right, bottom, top, near, far) => {
  const dx = 1 / (right - left);
  const dy = 1 / (top - bottom);
  const dz = 1 / (far - near);
  return (0, _vectors.setC)(out || [], 2 * dx, 0, 0, 0, 0, 2 * dy, 0, 0, 0, 0, -2 * dz, 0, -(left + right) * dx, -(top + bottom) * dy, -(far + near) * dz, 1);
};

exports.ortho = ortho;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/matrices/orthagonal.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isOrthagonal = void 0;

var _math = require("@thi.ng/math");

/**
 * Returns true, if given square matrix of size `n` is orthagonal, i.e.
 * check if `A * AT = I`.
 *
 * {@link https://en.wikipedia.org/wiki/Orthogonal_matrix}
 *
 * @param m -
 * @param n -
 * @param eps -
 */
const isOrthagonal = (m, n, eps = _math.EPS) => {
  for (let i = 0; i < n; i++) {
    const ii = i * n;

    for (let j = 0; j < n; j++) {
      const jj = j * n;
      let acc = 0;

      for (let k = 0; k < n; k++) {
        acc += m[ii + k] * m[jj + k];
      }

      if (i == j && !(0, _math.eqDelta)(acc, 1, eps) || i != j && !(0, _math.eqDelta)(acc, 0, eps)) {
        return false;
      }
    }
  }

  return true;
};

exports.isOrthagonal = isOrthagonal;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js"}],"../node_modules/@thi.ng/matrices/outer-product.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.outerProduct4 = exports.outerProduct3 = exports.outerProduct2 = exports.outerProduct = void 0;

var _vectors = require("@thi.ng/vectors");

/**
 * Computes outer/tensor product of vectors `u` and `v`. Returns square
 * matrix of same dimensions as vectors, e.g. 3x3 matrix for 3D vectors.
 *
 * {@link https://en.wikipedia.org/wiki/Outer_product}
 */
const outerProduct = (0, _vectors.vop)(1);
exports.outerProduct = outerProduct;
const outerProduct2 = outerProduct.add(2, (out, [ux, uy], [vx, vy]) => (0, _vectors.setC4)(out || [], ux * vx, uy * vx, ux * vy, uy * vy));
exports.outerProduct2 = outerProduct2;
const outerProduct3 = outerProduct.add(3, (out, [ux, uy, uz], [vx, vy, vz]) => (0, _vectors.setC)(out || [], ux * vx, uy * vx, uz * vx, ux * vy, uy * vy, uz * vy, ux * vz, uy * vz, uz * vz));
exports.outerProduct3 = outerProduct3;
const outerProduct4 = outerProduct.add(4, (out, [ux, uy, uz, uw], [vx, vy, vz, vw]) => (0, _vectors.setC)(out || [], ux * vx, uy * vx, uz * vx, uw * vx, ux * vy, uy * vy, uz * vy, uw * vy, ux * vz, uy * vz, uz * vz, uw * vz, ux * vw, uy * vw, uz * vw, uw * vw));
exports.outerProduct4 = outerProduct4;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/matrices/perspective.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.perspective = void 0;

var _frustum = require("./frustum");

/**
 * Creates a 4x4 matrix perspective projection matrix and writes result
 * to `out`.
 *
 * @param out -
 * @param fov -
 * @param aspect -
 * @param near -
 * @param far -
 */
const perspective = (out, fov, aspect, near, far) => {
  const f = (0, _frustum.frustumBounds)(fov, aspect, near, far);
  return (0, _frustum.frustum)(out, f.left, f.right, f.bottom, f.top, f.near, f.far);
};

exports.perspective = perspective;
},{"./frustum":"../node_modules/@thi.ng/matrices/frustum.js"}],"../node_modules/@thi.ng/matrices/project.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.unproject = exports.project3 = exports.project = void 0;

var _vectors = require("@thi.ng/vectors");

var _invert = require("./invert");

var _mulv = require("./mulv");

/**
 * Transforms given point `p` (4D, homogeneous coordinates) with 4x4
 * matrix `mvp`, applies perspective divide and then transforms XY
 * components with 2x3 matrix `view` matrix. Returns 3D vector. The
 * result Z component can be used for depth sorting.
 *
 * @param out -
 * @param mvp - 4x4 matrix
 * @param view - 2x3 matrix
 * @param p -
 */
const project = (out, mvp, view, p) => (!out && (out = []), (0, _mulv.mulV23)(out, view, (0, _vectors.fromHomogeneous4)(out, (0, _mulv.mulV44)([], mvp, p))));
/**
 * Same as {@link project}, but slightly faster and more convenient for
 * the most common use case of projecting a 3D input point (assumes
 * `w=1` for its homogeneous coordinate, i.e. `[x,y,z,1]`). Returns
 * `undefined` if the computed perspective divisor is zero (and would
 * cause in `NaN` results).
 *
 * @param out -
 * @param mvp - 4x4 matrix
 * @param view - 2x3 matrix
 * @param p -
 */


exports.project = project;

const project3 = (out, mvp, view, p) => {
  !out && (out = []);
  const q = (0, _mulv.mulV344)(out, mvp, p);
  return q ? (0, _mulv.mulV23)(q, view, q) : undefined;
};
/**
 * Reverse operation of {@link project3}. If `invert` is true (default:
 * false), both `mvp` and `view` matrices will be inverted first
 * (non-destructively), else they're both assumed to be inverted
 * already.
 *
 * @param out -
 * @param mvp - 4x4 matrix
 * @param view - 2x3 matrix
 * @param p -
 * @param invert -
 */


exports.project3 = project3;

const unproject = (out, mvp, view, p, doInvert = false) => {
  if (doInvert) {
    const _mvp = (0, _invert.invert44)([], mvp);

    const _view = (0, _invert.invert23)([], view);

    if (!_mvp || !_view) return;
    mvp = _mvp;
    view = _view;
  }

  return (0, _mulv.mulV344)(out, mvp, (0, _mulv.mulV23)([0, 0, p[2] * 2 - 1], view, p));
};

exports.unproject = unproject;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./invert":"../node_modules/@thi.ng/matrices/invert.js","./mulv":"../node_modules/@thi.ng/matrices/mulv.js"}],"../node_modules/@thi.ng/matrices/quat-euler.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.quatFromEuler = void 0;

var _vectors = require("@thi.ng/vectors");

var _mulq = require("./mulq");

var _quatAxisAngle = require("./quat-axis-angle");

const axisOrder = {
  xyz: [_vectors.X3, _vectors.Y3, _vectors.Z3],
  yxz: [_vectors.Y3, _vectors.X3, _vectors.Z3],
  xzy: [_vectors.X3, _vectors.Z3, _vectors.Y3],
  zxy: [_vectors.Z3, _vectors.X3, _vectors.Y3],
  yzx: [_vectors.Y3, _vectors.Z3, _vectors.X3],
  zyx: [_vectors.Z3, _vectors.Y3, _vectors.X3]
};
/**
 * Constructs a quaternion from given rotation angles in specified
 * `order`.
 *
 * @param order -
 * @param a -
 * @param b -
 * @param c -
 */

const quatFromEuler = (order, a, b, c) => {
  const [aa, ab, ac] = axisOrder[order];
  return (0, _mulq.mulQ)(null, (0, _mulq.mulQ)([], (0, _quatAxisAngle.quatFromAxisAngle)(aa, a), (0, _quatAxisAngle.quatFromAxisAngle)(ab, b)), (0, _quatAxisAngle.quatFromAxisAngle)(ac, c));
};

exports.quatFromEuler = quatFromEuler;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./mulq":"../node_modules/@thi.ng/matrices/mulq.js","./quat-axis-angle":"../node_modules/@thi.ng/matrices/quat-axis-angle.js"}],"../node_modules/@thi.ng/matrices/quat-m33.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.quatToMat33 = void 0;

var _vectors = require("@thi.ng/vectors");

/**
 * Converts quaternion into 3x3 matrix and writes result to `out`.
 *
 * @param out -
 * @param q -
 */
const quatToMat33 = (out, q) => {
  const [x, y, z, w] = q;
  const x2 = x + x;
  const y2 = y + y;
  const z2 = z + z;
  const xx = x * x2;
  const xy = x * y2;
  const xz = x * z2;
  const yy = y * y2;
  const yz = y * z2;
  const zz = z * z2;
  const wx = w * x2;
  const wy = w * y2;
  const wz = w * z2;
  return (0, _vectors.setC)(out || [], 1 - yy - zz, xy + wz, xz - wy, xy - wz, 1 - xx - zz, yz + wx, xz + wy, yz - wx, 1 - xx - yy);
};

exports.quatToMat33 = quatToMat33;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/matrices/quat-m44.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.quatToMat44 = void 0;

var _vectors = require("@thi.ng/vectors");

/**
 * Converts quaternion into 4x4 matrix with optional 3D translation offset `t`,
 * then writes result to `out`.
 *
 * @param out -
 * @param q -
 */
const quatToMat44 = (out, a, t = _vectors.ZERO3) => {
  const [x, y, z, w] = a;
  const x2 = x + x;
  const y2 = y + y;
  const z2 = z + z;
  const xx = x * x2;
  const xy = x * y2;
  const xz = x * z2;
  const yy = y * y2;
  const yz = y * z2;
  const zz = z * z2;
  const wx = w * x2;
  const wy = w * y2;
  const wz = w * z2;
  return (0, _vectors.setC)(out || [], 1 - yy - zz, xy + wz, xz - wy, 0, xy - wz, 1 - xx - zz, yz + wx, 0, xz + wy, yz - wx, 1 - xx - yy, 0, t[0], t[1], t[2], 1);
};

exports.quatToMat44 = quatToMat44;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/matrices/rotation-around-axis.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rotationAroundAxis44 = exports.rotationAroundAxis33 = void 0;

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

var _m33M = require("./m33-m44");

/**
 * Constructs a 3x3 matrix representing a rotation of `theta` around
 * `axis` and writes result to `out`. If `normalize` is true (default
 * false), non-destructively first normalizes axis vector.
 *
 * @param out -
 * @param axis -
 * @param theta -
 * @param normalize -
 */
const rotationAroundAxis33 = (out, axis, theta, normalize = false) => {
  const [x, y, z] = normalize ? (0, _vectors.normalize)([], axis) : axis;
  const [s, c] = (0, _math.sincos)(theta);
  const t = 1 - c;
  const xs = x * s;
  const ys = y * s;
  const zs = z * s;
  const xt = x * t;
  const yt = y * t;
  const zt = z * t;
  return (0, _vectors.setC)(out || [], x * xt + c, y * xt + zs, z * xt - ys, x * yt - zs, y * yt + c, z * yt + xs, x * zt + ys, y * zt - xs, z * zt + c);
};
/**
 * Constructs a 4x4 matrix representing a rotation of `theta` around
 * `axis` and writes result to `out`. If `normalize` is true (default
 * false), non-destructively first normalizes axis vector.
 *
 * @param out -
 * @param axis -
 * @param theta -
 * @param normalize -
 */


exports.rotationAroundAxis33 = rotationAroundAxis33;

const rotationAroundAxis44 = (out, axis, theta, normalize = false) => (0, _m33M.mat33to44)(out, rotationAroundAxis33([], axis, theta, normalize));

exports.rotationAroundAxis44 = rotationAroundAxis44;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./m33-m44":"../node_modules/@thi.ng/matrices/m33-m44.js"}],"../node_modules/@thi.ng/matrices/rotation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rotationZ44 = exports.rotationY44 = exports.rotationX44 = exports.rotationZ33 = exports.rotationY33 = exports.rotationX33 = exports.rotation23 = exports.rotation22 = void 0;

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

/**
 * Constructs a 2x2 matrix rotation matrix for given `theta`.
 *
 * @param out -
 * @param theta -
 */
const rotation22 = (out, theta) => {
  const [s, c] = (0, _math.sincos)(theta);
  return (0, _vectors.setC4)(out || [], c, s, -s, c);
};
/**
 * Constructs a 2x3 matrix rotation matrix for given `theta`.
 *
 * @param out -
 * @param theta -
 */


exports.rotation22 = rotation22;

const rotation23 = (out, theta) => {
  const [s, c] = (0, _math.sincos)(theta);
  return (0, _vectors.setC6)(out || [], c, s, -s, c, 0, 0);
};
/**
 * Constructs a 3x3 matrix X rotation matrix for given `theta`.
 *
 * @param out -
 * @param theta -
 */


exports.rotation23 = rotation23;

const rotationX33 = (out, theta) => {
  const [s, c] = (0, _math.sincos)(theta);
  return (0, _vectors.setC)(out || [], 1, 0, 0, 0, c, s, 0, -s, c);
};
/**
 * Constructs a 3x3 matrix Y rotation matrix for given `theta`.
 *
 * @param out -
 * @param theta -
 */


exports.rotationX33 = rotationX33;

const rotationY33 = (out, theta) => {
  const [s, c] = (0, _math.sincos)(theta);
  return (0, _vectors.setC)(out || [], c, 0, -s, 0, 1, 0, s, 0, c);
};
/**
 * Constructs a 3x3 matrix Z rotation matrix for given `theta`.
 *
 * @param out -
 * @param theta -
 */


exports.rotationY33 = rotationY33;

const rotationZ33 = (out, theta) => {
  const [s, c] = (0, _math.sincos)(theta);
  return (0, _vectors.setC)(out || [], c, s, 0, -s, c, 0, 0, 0, 1);
};
/**
 * Constructs a 4x4 matrix X rotation matrix for given `theta`.
 *
 * @param out -
 * @param theta -
 */


exports.rotationZ33 = rotationZ33;

const rotationX44 = (out, theta) => {
  const [s, c] = (0, _math.sincos)(theta);
  return (0, _vectors.setC)(out || [], 1, 0, 0, 0, 0, c, s, 0, 0, -s, c, 0, 0, 0, 0, 1);
};
/**
 * Constructs a 4x4 matrix Y rotation matrix for given `theta`.
 *
 * @param out -
 * @param theta -
 */


exports.rotationX44 = rotationX44;

const rotationY44 = (out, theta) => {
  const [s, c] = (0, _math.sincos)(theta);
  return (0, _vectors.setC)(out || [], c, 0, -s, 0, 0, 1, 0, 0, s, 0, c, 0, 0, 0, 0, 1);
};
/**
 * Constructs a 4x4 matrix Z rotation matrix for given `theta`.
 *
 * @param out -
 * @param theta -
 */


exports.rotationY44 = rotationY44;

const rotationZ44 = (out, theta) => {
  const [s, c] = (0, _math.sincos)(theta);
  return (0, _vectors.setC)(out || [], c, s, 0, 0, -s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
};

exports.rotationZ44 = rotationZ44;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/matrices/row.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.row44 = exports.row33 = exports.row23 = exports.row22 = exports.row = void 0;

var _vectors = require("@thi.ng/vectors");

/**
 * Extracts row vector from given matrix and writes result to `out`. If
 * `out` is null, creates new vector.
 *
 * @param out -
 * @param mat -
 * @param column -
 */
const row = (0, _vectors.vop)(1);
exports.row = row;
const row22 = row.add(4, (out, m, n) => (0, _vectors.setS2)(out, m, 0, n, 1, 2));
exports.row22 = row22;
const row23 = row.add(6, (out, m, n) => (0, _vectors.setS3)(out, m, 0, n, 1, 2));
exports.row23 = row23;
const row33 = row.add(9, (out, m, n) => (0, _vectors.setS3)(out, m, 0, n, 1, 3));
exports.row33 = row33;
const row44 = row.add(16, (out, m, n) => (0, _vectors.setS4)(out, m, 0, n, 1, 4));
exports.row44 = row44;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/matrices/translation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.translation44 = exports.translation23 = void 0;

var _vectors = require("@thi.ng/vectors");

/**
 * Constructs a 2x3 translation matrix.
 *
 * @param out -
 * @param v -
 */
const translation23 = (m, v) => (0, _vectors.setC6)(m || [], 1, 0, 0, 1, v[0], v[1]);
/**
 * Constructs a 4x4 translation matrix.
 *
 * @param out -
 * @param v -
 */


exports.translation23 = translation23;

const translation44 = (m, v) => (0, _vectors.setC)(m || [], 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, v[0], v[1], v[2], 1);

exports.translation44 = translation44;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/matrices/scale-center.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.scaleWithCenter44 = exports.scaleWithCenter23 = void 0;

var _vectors = require("@thi.ng/vectors");

var _concat = require("./concat");

var _scale = require("./scale");

var _translation = require("./translation");

/**
 * Computes a 2x3 matrix representing a scale operation with origin `p`
 * and writes result to `out`.
 *
 * @param out -
 * @param m -
 */
const scaleWithCenter23 = (m, p, s) => (0, _concat.concat)(m, (0, _translation.translation23)([], p), (0, _scale.scale23)([], s), (0, _translation.translation23)([], (0, _vectors.neg)([], p)));
/**
 * Computes a 4x4 matrix representing a scale operation with origin `p`
 * and writes result to `out`.
 *
 * @param out -
 * @param m -
 */


exports.scaleWithCenter23 = scaleWithCenter23;

const scaleWithCenter44 = (m, p, s) => (0, _concat.concat)(m, (0, _translation.translation44)([], p), (0, _scale.scale44)([], s), (0, _translation.translation44)([], (0, _vectors.neg)([], p)));

exports.scaleWithCenter44 = scaleWithCenter44;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./concat":"../node_modules/@thi.ng/matrices/concat.js","./scale":"../node_modules/@thi.ng/matrices/scale.js","./translation":"../node_modules/@thi.ng/matrices/translation.js"}],"../node_modules/@thi.ng/matrices/shear.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.shearZY44 = exports.shearZX44 = exports.shearYZ44 = exports.shearYX44 = exports.shearXZ44 = exports.shearXY44 = exports.shearZY33 = exports.shearZX33 = exports.shearYZ33 = exports.shearYX33 = exports.shearXZ33 = exports.shearXY33 = exports.shearY23 = exports.shearX23 = exports.shearY22 = exports.shearX22 = void 0;

var _identity = require("./identity");

const $ = f => i => (m, x) => (!m && (m = []), f(m), m[i] = x, m);

const $22 = $(_identity.identity22);
const $23 = $(_identity.identity23);
const $33 = $(_identity.identity33);
const $44 = $(_identity.identity44); // https://stackoverflow.com/a/13211288/294515

const shearX22 = $22(2);
exports.shearX22 = shearX22;
const shearY22 = $22(1);
exports.shearY22 = shearY22;
const shearX23 = $23(2);
exports.shearX23 = shearX23;
const shearY23 = $23(1);
exports.shearY23 = shearY23;
const shearXY33 = $33(3);
exports.shearXY33 = shearXY33;
const shearXZ33 = $33(6);
exports.shearXZ33 = shearXZ33;
const shearYX33 = $33(1);
exports.shearYX33 = shearYX33;
const shearYZ33 = $33(7);
exports.shearYZ33 = shearYZ33;
const shearZX33 = $33(2);
exports.shearZX33 = shearZX33;
const shearZY33 = $33(5);
exports.shearZY33 = shearZY33;
const shearXY44 = $44(4);
exports.shearXY44 = shearXY44;
const shearXZ44 = $44(8);
exports.shearXZ44 = shearXZ44;
const shearYX44 = $44(1);
exports.shearYX44 = shearYX44;
const shearYZ44 = $44(9);
exports.shearYZ44 = shearYZ44;
const shearZX44 = $44(2);
exports.shearZX44 = shearZX44;
const shearZY44 = $44(6);
exports.shearZY44 = shearZY44;
},{"./identity":"../node_modules/@thi.ng/matrices/identity.js"}],"../node_modules/@thi.ng/matrices/skew.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.skewZY44 = exports.skewZX44 = exports.skewYZ44 = exports.skewYX44 = exports.skewXZ44 = exports.skewXY44 = exports.skewZY33 = exports.skewZX33 = exports.skewYZ33 = exports.skewYX33 = exports.skewXZ33 = exports.skewXY33 = exports.skewY23 = exports.skewX23 = exports.skewY22 = exports.skewX22 = void 0;

var _shear = require("./shear");

const $ = f => (m, theta) => f(m, Math.tan(theta));

const skewX22 = $(_shear.shearX22);
exports.skewX22 = skewX22;
const skewY22 = $(_shear.shearY22);
exports.skewY22 = skewY22;
const skewX23 = $(_shear.shearX23);
exports.skewX23 = skewX23;
const skewY23 = $(_shear.shearY23);
exports.skewY23 = skewY23;
const skewXY33 = $(_shear.shearXY33);
exports.skewXY33 = skewXY33;
const skewXZ33 = $(_shear.shearXZ33);
exports.skewXZ33 = skewXZ33;
const skewYX33 = $(_shear.shearYX33);
exports.skewYX33 = skewYX33;
const skewYZ33 = $(_shear.shearYZ33);
exports.skewYZ33 = skewYZ33;
const skewZX33 = $(_shear.shearZX33);
exports.skewZX33 = skewZX33;
const skewZY33 = $(_shear.shearZY33);
exports.skewZY33 = skewZY33;
const skewXY44 = $(_shear.shearXY44);
exports.skewXY44 = skewXY44;
const skewXZ44 = $(_shear.shearXZ44);
exports.skewXZ44 = skewXZ44;
const skewYX44 = $(_shear.shearYX44);
exports.skewYX44 = skewYX44;
const skewYZ44 = $(_shear.shearYZ44);
exports.skewYZ44 = skewYZ44;
const skewZX44 = $(_shear.shearZX44);
exports.skewZX44 = skewZX44;
const skewZY44 = $(_shear.shearZY44);
exports.skewZY44 = skewZY44;
},{"./shear":"../node_modules/@thi.ng/matrices/shear.js"}],"../node_modules/@thi.ng/matrices/sub.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sub44 = exports.sub33 = exports.sub23 = exports.sub22 = exports.sub = void 0;

var _vectors = require("@thi.ng/vectors");

var _codegen = require("./internal/codegen");

/**
 * Componentwise matrix subtraction. If `out` is not given, writes
 * result in `a`. Both input matrices MUST be of same size.
 *
 * out = a - b
 *
 * @param out -
 * @param a -
 * @param b -
 */
const sub = _vectors.sub;
exports.sub = sub;
const sub22 = _vectors.sub4;
exports.sub22 = sub22;
const [sub23, sub33, sub44] = (0, _codegen.defMath)(sub, "-");
exports.sub44 = sub44;
exports.sub33 = sub33;
exports.sub23 = sub23;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./internal/codegen":"../node_modules/@thi.ng/matrices/internal/codegen.js"}],"../node_modules/@thi.ng/matrices/subn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.subN44 = exports.subN33 = exports.subN23 = exports.subN22 = exports.subN = void 0;

var _vectors = require("@thi.ng/vectors");

var _codegen = require("./internal/codegen");

/**
 * Componentwise scalar subtraction. If `out` is not given, writes
 * result in `mat`.
 *
 * out = mat - n
 *
 * @param out -
 * @param mat -
 * @param n -
 */
const subN = _vectors.subN;
exports.subN = subN;
const subN22 = _vectors.subN4;
exports.subN22 = subN22;
const [subN23, subN33, subN44] = (0, _codegen.defMathN)(subN, "-");
exports.subN44 = subN44;
exports.subN33 = subN33;
exports.subN23 = subN23;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./internal/codegen":"../node_modules/@thi.ng/matrices/internal/codegen.js"}],"../node_modules/@thi.ng/matrices/trace.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.trace = void 0;

var _vectors = require("@thi.ng/vectors");

var _diag = require("./diag");

/**
 * Returns matrix trace of `m`, i.e. component sum of `diag(m)`.
 *
 * @param m -
 */
const trace = m => (0, _vectors.sum)((0, _diag.diag)([], m));

exports.trace = trace;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./diag":"../node_modules/@thi.ng/matrices/diag.js"}],"../node_modules/@thi.ng/matrices/transform.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.transform44 = exports.transform23 = void 0;

var _concat = require("./concat");

var _mulm = require("./mulm");

var _quatEuler = require("./quat-euler");

var _quatM = require("./quat-m44");

var _rotation = require("./rotation");

var _scale = require("./scale");

var _translation = require("./translation");

/**
 * Creates 2x3 TRS transformation matrix from given translation vector,
 * rotation angle and scale factor/vector.
 *
 * @param out -
 * @param translate -
 * @param rotation -
 * @param scale -
 */
const transform23 = (out, translate, rotation, scale) => (0, _concat.concat)(out, (0, _translation.translation23)([], translate), (0, _rotation.rotation23)([], rotation), (0, _scale.scale23)([], scale));
/**
 * Creates 4x4 TRS transformation matrix from given translation vector,
 * rotation angles (given as 3D vector) and scale factor/vector.
 * Internally, uses a quaternion for constructing the rotation matrix
 * part. The quaternion is created via {@link quatFromEuler} with ZYX
 * ordering.
 *
 * @param out -
 * @param translate -
 * @param rotation -
 * @param scale -
 */


exports.transform23 = transform23;

const transform44 = (out, translate, rotation, scale) => (0, _mulm.mulM44)(out, (0, _quatM.quatToMat44)(out, (0, _quatEuler.quatFromEuler)("zyx", rotation[2], rotation[1], rotation[0]), translate), (0, _scale.scale44)([], scale));

exports.transform44 = transform44;
},{"./concat":"../node_modules/@thi.ng/matrices/concat.js","./mulm":"../node_modules/@thi.ng/matrices/mulm.js","./quat-euler":"../node_modules/@thi.ng/matrices/quat-euler.js","./quat-m44":"../node_modules/@thi.ng/matrices/quat-m44.js","./rotation":"../node_modules/@thi.ng/matrices/rotation.js","./scale":"../node_modules/@thi.ng/matrices/scale.js","./translation":"../node_modules/@thi.ng/matrices/translation.js"}],"../node_modules/@thi.ng/matrices/viewport.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.viewport = void 0;

var _mulm = require("./mulm");

var _scale = require("./scale");

var _translation = require("./translation");

/**
 * Produces a 2x3 viewport matrix to transform projected coordinates to
 * screen space.
 *
 * @param out -
 * @param left -
 * @param right -
 * @param bottom -
 * @param top -
 */
const viewport = (out, left, right, bottom, top) => {
  const x = (left + right) / 2;
  const y = (bottom + top) / 2;
  const w = (right - left) / 2;
  const h = (top - bottom) / 2;
  return (0, _mulm.mulM23)(null, (0, _translation.translation23)(out, [x, y]), (0, _scale.scale23)([], [w, h]));
};

exports.viewport = viewport;
},{"./mulm":"../node_modules/@thi.ng/matrices/mulm.js","./scale":"../node_modules/@thi.ng/matrices/scale.js","./translation":"../node_modules/@thi.ng/matrices/translation.js"}],"../node_modules/@thi.ng/matrices/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _api = require("./api");

Object.keys(_api).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _api[key];
    }
  });
});

var _constants = require("./constants");

Object.keys(_constants).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _constants[key];
    }
  });
});

var _codegen = require("./internal/codegen");

Object.keys(_codegen).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _codegen[key];
    }
  });
});

var _add = require("./add");

Object.keys(_add).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _add[key];
    }
  });
});

var _addn = require("./addn");

Object.keys(_addn).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _addn[key];
    }
  });
});

var _alignmentQuat = require("./alignment-quat");

Object.keys(_alignmentQuat).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _alignmentQuat[key];
    }
  });
});

var _column = require("./column");

Object.keys(_column).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _column[key];
    }
  });
});

var _concat = require("./concat");

Object.keys(_concat).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _concat[key];
    }
  });
});

var _conjugate = require("./conjugate");

Object.keys(_conjugate).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _conjugate[key];
    }
  });
});

var _determinant = require("./determinant");

Object.keys(_determinant).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _determinant[key];
    }
  });
});

var _diag = require("./diag");

Object.keys(_diag).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _diag[key];
    }
  });
});

var _div = require("./div");

Object.keys(_div).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _div[key];
    }
  });
});

var _divn = require("./divn");

Object.keys(_divn).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _divn[key];
    }
  });
});

var _frustum = require("./frustum");

Object.keys(_frustum).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _frustum[key];
    }
  });
});

var _identity = require("./identity");

Object.keys(_identity).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _identity[key];
    }
  });
});

var _invert = require("./invert");

Object.keys(_invert).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _invert[key];
    }
  });
});

var _lookat = require("./lookat");

Object.keys(_lookat).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _lookat[key];
    }
  });
});

var _m22M = require("./m22-m23");

Object.keys(_m22M).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _m22M[key];
    }
  });
});

var _m23M = require("./m23-m22");

Object.keys(_m23M).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _m23M[key];
    }
  });
});

var _m23M2 = require("./m23-m44");

Object.keys(_m23M2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _m23M2[key];
    }
  });
});

var _m33M = require("./m33-m44");

Object.keys(_m33M).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _m33M[key];
    }
  });
});

var _m44M = require("./m44-m33");

Object.keys(_m44M).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _m44M[key];
    }
  });
});

var _matn = require("./matn");

Object.keys(_matn).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _matn[key];
    }
  });
});

var _matv = require("./matv");

Object.keys(_matv).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _matv[key];
    }
  });
});

var _mixq = require("./mixq");

Object.keys(_mixq).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _mixq[key];
    }
  });
});

var _mul = require("./mul");

Object.keys(_mul).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _mul[key];
    }
  });
});

var _mulm = require("./mulm");

Object.keys(_mulm).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _mulm[key];
    }
  });
});

var _muln = require("./muln");

Object.keys(_muln).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _muln[key];
    }
  });
});

var _mulq = require("./mulq");

Object.keys(_mulq).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _mulq[key];
    }
  });
});

var _mulv = require("./mulv");

Object.keys(_mulv).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _mulv[key];
    }
  });
});

var _mulvm = require("./mulvm");

Object.keys(_mulvm).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _mulvm[key];
    }
  });
});

var _normalMat = require("./normal-mat");

Object.keys(_normalMat).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _normalMat[key];
    }
  });
});

var _ortho = require("./ortho");

Object.keys(_ortho).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _ortho[key];
    }
  });
});

var _orthagonal = require("./orthagonal");

Object.keys(_orthagonal).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _orthagonal[key];
    }
  });
});

var _outerProduct = require("./outer-product");

Object.keys(_outerProduct).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _outerProduct[key];
    }
  });
});

var _perspective = require("./perspective");

Object.keys(_perspective).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _perspective[key];
    }
  });
});

var _project = require("./project");

Object.keys(_project).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _project[key];
    }
  });
});

var _quatAxisAngle = require("./quat-axis-angle");

Object.keys(_quatAxisAngle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _quatAxisAngle[key];
    }
  });
});

var _quatEuler = require("./quat-euler");

Object.keys(_quatEuler).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _quatEuler[key];
    }
  });
});

var _quatM = require("./quat-m33");

Object.keys(_quatM).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _quatM[key];
    }
  });
});

var _quatM2 = require("./quat-m44");

Object.keys(_quatM2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _quatM2[key];
    }
  });
});

var _rotationAroundAxis = require("./rotation-around-axis");

Object.keys(_rotationAroundAxis).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _rotationAroundAxis[key];
    }
  });
});

var _rotation = require("./rotation");

Object.keys(_rotation).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _rotation[key];
    }
  });
});

var _row = require("./row");

Object.keys(_row).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _row[key];
    }
  });
});

var _scale = require("./scale");

Object.keys(_scale).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _scale[key];
    }
  });
});

var _scaleCenter = require("./scale-center");

Object.keys(_scaleCenter).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _scaleCenter[key];
    }
  });
});

var _set = require("./set");

Object.keys(_set).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _set[key];
    }
  });
});

var _shear = require("./shear");

Object.keys(_shear).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _shear[key];
    }
  });
});

var _skew = require("./skew");

Object.keys(_skew).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _skew[key];
    }
  });
});

var _sub = require("./sub");

Object.keys(_sub).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _sub[key];
    }
  });
});

var _subn = require("./subn");

Object.keys(_subn).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _subn[key];
    }
  });
});

var _trace = require("./trace");

Object.keys(_trace).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _trace[key];
    }
  });
});

var _translation = require("./translation");

Object.keys(_translation).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _translation[key];
    }
  });
});

var _transform = require("./transform");

Object.keys(_transform).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _transform[key];
    }
  });
});

var _transpose = require("./transpose");

Object.keys(_transpose).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _transpose[key];
    }
  });
});

var _viewport = require("./viewport");

Object.keys(_viewport).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _viewport[key];
    }
  });
});
},{"./api":"../node_modules/@thi.ng/matrices/api.js","./constants":"../node_modules/@thi.ng/matrices/constants.js","./internal/codegen":"../node_modules/@thi.ng/matrices/internal/codegen.js","./add":"../node_modules/@thi.ng/matrices/add.js","./addn":"../node_modules/@thi.ng/matrices/addn.js","./alignment-quat":"../node_modules/@thi.ng/matrices/alignment-quat.js","./column":"../node_modules/@thi.ng/matrices/column.js","./concat":"../node_modules/@thi.ng/matrices/concat.js","./conjugate":"../node_modules/@thi.ng/matrices/conjugate.js","./determinant":"../node_modules/@thi.ng/matrices/determinant.js","./diag":"../node_modules/@thi.ng/matrices/diag.js","./div":"../node_modules/@thi.ng/matrices/div.js","./divn":"../node_modules/@thi.ng/matrices/divn.js","./frustum":"../node_modules/@thi.ng/matrices/frustum.js","./identity":"../node_modules/@thi.ng/matrices/identity.js","./invert":"../node_modules/@thi.ng/matrices/invert.js","./lookat":"../node_modules/@thi.ng/matrices/lookat.js","./m22-m23":"../node_modules/@thi.ng/matrices/m22-m23.js","./m23-m22":"../node_modules/@thi.ng/matrices/m23-m22.js","./m23-m44":"../node_modules/@thi.ng/matrices/m23-m44.js","./m33-m44":"../node_modules/@thi.ng/matrices/m33-m44.js","./m44-m33":"../node_modules/@thi.ng/matrices/m44-m33.js","./matn":"../node_modules/@thi.ng/matrices/matn.js","./matv":"../node_modules/@thi.ng/matrices/matv.js","./mixq":"../node_modules/@thi.ng/matrices/mixq.js","./mul":"../node_modules/@thi.ng/matrices/mul.js","./mulm":"../node_modules/@thi.ng/matrices/mulm.js","./muln":"../node_modules/@thi.ng/matrices/muln.js","./mulq":"../node_modules/@thi.ng/matrices/mulq.js","./mulv":"../node_modules/@thi.ng/matrices/mulv.js","./mulvm":"../node_modules/@thi.ng/matrices/mulvm.js","./normal-mat":"../node_modules/@thi.ng/matrices/normal-mat.js","./ortho":"../node_modules/@thi.ng/matrices/ortho.js","./orthagonal":"../node_modules/@thi.ng/matrices/orthagonal.js","./outer-product":"../node_modules/@thi.ng/matrices/outer-product.js","./perspective":"../node_modules/@thi.ng/matrices/perspective.js","./project":"../node_modules/@thi.ng/matrices/project.js","./quat-axis-angle":"../node_modules/@thi.ng/matrices/quat-axis-angle.js","./quat-euler":"../node_modules/@thi.ng/matrices/quat-euler.js","./quat-m33":"../node_modules/@thi.ng/matrices/quat-m33.js","./quat-m44":"../node_modules/@thi.ng/matrices/quat-m44.js","./rotation-around-axis":"../node_modules/@thi.ng/matrices/rotation-around-axis.js","./rotation":"../node_modules/@thi.ng/matrices/rotation.js","./row":"../node_modules/@thi.ng/matrices/row.js","./scale":"../node_modules/@thi.ng/matrices/scale.js","./scale-center":"../node_modules/@thi.ng/matrices/scale-center.js","./set":"../node_modules/@thi.ng/matrices/set.js","./shear":"../node_modules/@thi.ng/matrices/shear.js","./skew":"../node_modules/@thi.ng/matrices/skew.js","./sub":"../node_modules/@thi.ng/matrices/sub.js","./subn":"../node_modules/@thi.ng/matrices/subn.js","./trace":"../node_modules/@thi.ng/matrices/trace.js","./translation":"../node_modules/@thi.ng/matrices/translation.js","./transform":"../node_modules/@thi.ng/matrices/transform.js","./transpose":"../node_modules/@thi.ng/matrices/transpose.js","./viewport":"../node_modules/@thi.ng/matrices/viewport.js"}],"../node_modules/@thi.ng/geom/ctors/quad.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.quad = quad;
exports.quad3 = quad3;
exports.quadOnPlane = void 0;

var _checks = require("@thi.ng/checks");

var _geomClosestPoint = require("@thi.ng/geom-closest-point");

var _matrices = require("@thi.ng/matrices");

var _vectors = require("@thi.ng/vectors");

var _quad = require("../api/quad");

var _quad2 = require("../api/quad3");

var _args = require("../internal/args");

var _pclike = require("../internal/pclike");

function quad(...args) {
  return (0, _pclike.pclike)(_quad.Quad, args);
}

function quad3(...args) {
  const attr = (0, _args.argAttribs)(args);
  return new _quad2.Quad3(args.length === 1 ? args[0] : args, attr);
}

const quadOnPlane = (plane, pos, size, attribs) => {
  pos = (0, _geomClosestPoint.closestPointPlane)(pos, plane.normal, plane.w);
  const [w, h] = (0, _checks.isNumber)(size) ? [size, size] : size;
  const q = (0, _matrices.alignmentQuat)(_vectors.Z3, plane.normal);
  return new _quad2.Quad3([[-w, -h, 0], [w, -h, 0], [w, h, 0], [-w, h, 0]].map(p => (0, _vectors.add3)(null, (0, _matrices.mulVQ)(null, q, p), pos)), attribs);
};

exports.quadOnPlane = quadOnPlane;
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","@thi.ng/geom-closest-point":"../node_modules/@thi.ng/geom-closest-point/index.js","@thi.ng/matrices":"../node_modules/@thi.ng/matrices/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../api/quad":"../node_modules/@thi.ng/geom/api/quad.js","../api/quad3":"../node_modules/@thi.ng/geom/api/quad3.js","../internal/args":"../node_modules/@thi.ng/geom/internal/args.js","../internal/pclike":"../node_modules/@thi.ng/geom/internal/pclike.js"}],"../node_modules/@thi.ng/geom/ctors/quadratic.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.quadratic = quadratic;
exports.quadraticFromLine = void 0;

var _geomSplines = require("@thi.ng/geom-splines");

var _quadratic = require("../api/quadratic");

var _pclike = require("../internal/pclike");

function quadratic(...args) {
  return (0, _pclike.pclike)(_quadratic.Quadratic, args);
}

const quadraticFromLine = (a, b, attribs) => new _quadratic.Quadratic((0, _geomSplines.quadraticFromLine)(a, b), attribs);

exports.quadraticFromLine = quadraticFromLine;
},{"@thi.ng/geom-splines":"../node_modules/@thi.ng/geom-splines/index.js","../api/quadratic":"../node_modules/@thi.ng/geom/api/quadratic.js","../internal/pclike":"../node_modules/@thi.ng/geom/internal/pclike.js"}],"../node_modules/@thi.ng/geom/ctors/ray.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ray = void 0;

var _vectors = require("@thi.ng/vectors");

var _ray = require("../api/ray");

const ray = (pos, dir, attribs, normalize = true) => new _ray.Ray(pos, normalize ? (0, _vectors.normalize)(null, dir) : dir, attribs);

exports.ray = ray;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../api/ray":"../node_modules/@thi.ng/geom/api/ray.js"}],"../node_modules/@thi.ng/geom/ctors/rect.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rect = rect;
exports.inscribedSquare = inscribedSquare;
exports.inscribedSquareHex = inscribedSquareHex;
exports.intersectionRect = exports.rectFromCentroid = exports.rectFromMinMax = void 0;

var _geomPolyUtils = require("@thi.ng/geom-poly-utils");

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

var _rect = require("../api/rect");

var _args = require("../internal/args");

function rect(...args) {
  return new _rect.Rect(...(0, _args.argsVV)(args));
}

const rectFromMinMax = (min, max, attribs) => new _rect.Rect(min, (0, _vectors.sub2)([], max, min), attribs);

exports.rectFromMinMax = rectFromMinMax;

const rectFromCentroid = (centroid, size, attribs) => new _rect.Rect((0, _vectors.maddN2)([], size, -0.5, centroid), size, attribs);
/**
 * Returns the intersection rect of given inputs or `undefined` if they
 * are non-overlapping.
 *
 * @param a
 * @param b
 */


exports.rectFromCentroid = rectFromCentroid;

const intersectionRect = (a, b) => {
  const p = (0, _vectors.max2)([], a.pos, b.pos);
  const q = (0, _vectors.min2)(null, (0, _vectors.add2)([], a.pos, a.size), (0, _vectors.add2)([], b.pos, b.size));
  const size = (0, _vectors.max2)(null, (0, _vectors.sub2)(null, q, p), _vectors.ZERO2);
  return size[0] > 0 && size[1] > 0 ? new _rect.Rect(p, size) : undefined;
};

exports.intersectionRect = intersectionRect;

function inscribedSquare(...args) {
  let pos, r;

  if (args.length === 1) {
    const c = args[0];
    pos = c.pos;
    r = c.r;
  } else {
    [pos, r] = args;
  }

  r *= _math.SQRT2_2;
  return rect((0, _vectors.subN2)([], pos, r), r * 2);
}

function inscribedSquareHex(...args) {
  let pos, l;

  if (args.length === 1) {
    const pts = args[0].points;
    pos = (0, _geomPolyUtils.centroid)(pts);
    l = (0, _vectors.dist)(pts[0], pts[1]);
  } else {
    [pos, l] = args;
  }

  l *= 3 - _math.SQRT3;
  return rect((0, _vectors.subN2)([], pos, l / 2), l);
}
},{"@thi.ng/geom-poly-utils":"../node_modules/@thi.ng/geom-poly-utils/index.js","@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../api/rect":"../node_modules/@thi.ng/geom/api/rect.js","../internal/args":"../node_modules/@thi.ng/geom/internal/args.js"}],"../node_modules/@thi.ng/geom/ctors/text.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.text = void 0;

var _text = require("../api/text");

const text = (pos, body, attribs) => new _text.Text(pos, body, attribs);

exports.text = text;
},{"../api/text":"../node_modules/@thi.ng/geom/api/text.js"}],"../node_modules/@thi.ng/geom/ctors/triangle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.triangle = triangle;
exports.equilateralTriangle = void 0;

var _geomPolyUtils = require("@thi.ng/geom-poly-utils");

var _triangle = require("../api/triangle");

var _pclike = require("../internal/pclike");

function triangle(...args) {
  return (0, _pclike.pclike)(_triangle.Triangle, args);
}

const equilateralTriangle = (a, b, attribs) => new _triangle.Triangle((0, _geomPolyUtils.equilateralTriangle2)(a, b), attribs);

exports.equilateralTriangle = equilateralTriangle;
},{"@thi.ng/geom-poly-utils":"../node_modules/@thi.ng/geom-poly-utils/index.js","../api/triangle":"../node_modules/@thi.ng/geom/api/triangle.js","../internal/pclike":"../node_modules/@thi.ng/geom/internal/pclike.js"}],"../node_modules/@thi.ng/geom/ops/arc-length.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.arcLength = void 0;

var _defmulti = require("@thi.ng/defmulti");

var _geomApi = require("@thi.ng/geom-api");

var _geomPolyUtils = require("@thi.ng/geom-poly-utils");

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

var _dispatch = require("../internal/dispatch");

/**
 * Returns the arc length / perimeter / circumference of the given
 * shape. For groups calls {@link arcLength} for each child and returns the
 * sum of results.
 *
 * Implemented for:
 *
 * - Circle
 * - Ellipse
 * - Group
 * - Line
 * - Polygon
 * - Polyline
 * - Quad
 * - Rect
 * - Triangle
 *
 */
const arcLength = (0, _defmulti.defmulti)(_dispatch.dispatch);
exports.arcLength = arcLength;
arcLength.addAll({
  [_geomApi.Type.CIRCLE]: $ => _math.TAU * $.r,
  [_geomApi.Type.ELLIPSE]: ({
    r: [a, b]
  }) => // Ramanujan approximation
  // https://www.mathsisfun.com/geometry/ellipse-perimeter.html
  _math.PI * (3 * (a + b) - Math.sqrt((3 * a + b) * (3 * b + a))),
  [_geomApi.Type.GROUP]: ({
    children
  }) => children.reduce((sum, $) => sum + arcLength($), 0),
  [_geomApi.Type.LINE]: ({
    points
  }) => (0, _vectors.dist)(points[0], points[1]),
  [_geomApi.Type.POLYGON]: ({
    points
  }) => (0, _geomPolyUtils.perimeter)(points, points.length, true),
  [_geomApi.Type.POLYLINE]: ({
    points
  }) => (0, _geomPolyUtils.perimeter)(points, points.length),
  [_geomApi.Type.RECT]: ({
    size
  }) => 2 * (size[0] + size[1]),
  [_geomApi.Type.TRIANGLE]: ({
    points
  }) => (0, _vectors.dist)(points[0], points[1]) + (0, _vectors.dist)(points[1], points[2]) + (0, _vectors.dist)(points[2], points[0])
});
arcLength.isa(_geomApi.Type.QUAD, _geomApi.Type.POLYGON);
arcLength.isa(_geomApi.Type.TRIANGLE, _geomApi.Type.POLYGON);
},{"@thi.ng/defmulti":"../node_modules/@thi.ng/defmulti/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/geom-poly-utils":"../node_modules/@thi.ng/geom-poly-utils/index.js","@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../internal/dispatch":"../node_modules/@thi.ng/geom/internal/dispatch.js"}],"../node_modules/@thi.ng/geom/ops/area.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.area = void 0;

var _defmulti = require("@thi.ng/defmulti");

var _geomApi = require("@thi.ng/geom-api");

var _geomPolyUtils = require("@thi.ng/geom-poly-utils");

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

var _dispatch = require("../internal/dispatch");

/**
 * Returns the possibly signed (unsigned by default) surface area of given
 * `shape`. For groups calls {@link area} for each child and returns sum of
 * unsigned areas.
 *
 * In general, for polygons and triangles, the sign of the result can be
 * used as indication of the shapes orientation (clockwise /
 * counterclockwise).
 *
 * For curves, lines, point clouds and rays the function returns 0.
 *
 * Implemented for:
 *
 * - AABB
 * - Circle
 * - Cubic
 * - Ellipse
 * - Group
 * - Line
 * - Plane
 * - Points
 * - Polygon
 * - Polyline
 * - Quad
 * - Quadratic
 * - Ray
 * - Rect
 * - Sphere
 * - Triangle
 *
 * @param shape - shape to operate on
 * @param signed - true, if signed area
 */
const area = (0, _defmulti.defmulti)(_dispatch.dispatch);
exports.area = area;
area.add(_defmulti.DEFAULT, () => 0);
area.addAll({
  [_geomApi.Type.AABB]: ({
    size: [w, h, d]
  }) => 2 * (w * h + w * d + h * d),
  [_geomApi.Type.ARC]: // http://cut-the-knot.org/Generalization/Cavalieri2.shtml
  $ => 0.5 * Math.abs($.start - $.end) * $.r[0] * $.r[1],
  [_geomApi.Type.CIRCLE]: $ => _math.PI * $.r ** 2,
  [_geomApi.Type.ELLIPSE]: $ => _math.PI * $.r[0] * $.r[1],
  [_geomApi.Type.GROUP]: ({
    children
  }) => children.reduce((sum, $) => sum + area($, false), 0),
  [_geomApi.Type.PLANE]: () => Infinity,
  [_geomApi.Type.POLYGON]: ($, signed) => {
    const area = (0, _geomPolyUtils.polyArea2)($.points);
    return signed ? area : Math.abs(area);
  },
  [_geomApi.Type.RECT]: $ => $.size[0] * $.size[1],
  [_geomApi.Type.SPHERE]: $ => 4 * _math.PI * $.r ** 2,
  [_geomApi.Type.TRIANGLE]: ($, signed) => {
    const area = 0.5 * (0, _vectors.signedArea2)(...$.points);
    return signed ? area : Math.abs(area);
  }
});
area.isa(_geomApi.Type.QUAD, _geomApi.Type.POLYGON);
},{"@thi.ng/defmulti":"../node_modules/@thi.ng/defmulti/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/geom-poly-utils":"../node_modules/@thi.ng/geom-poly-utils/index.js","@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../internal/dispatch":"../node_modules/@thi.ng/geom/internal/dispatch.js"}],"../node_modules/@thi.ng/geom/ops/as-path.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.asPath = void 0;

var _path = require("../ctors/path");

var _copyAttribs = require("../internal/copy-attribs");

var _asCubic = require("./as-cubic");

const asPath = (src, attribs) => (0, _path.pathFromCubics)((0, _asCubic.asCubic)(src), attribs || (0, _copyAttribs.copyAttribs)(src));

exports.asPath = asPath;
},{"../ctors/path":"../node_modules/@thi.ng/geom/ctors/path.js","../internal/copy-attribs":"../node_modules/@thi.ng/geom/internal/copy-attribs.js","./as-cubic":"../node_modules/@thi.ng/geom/ops/as-cubic.js"}],"../node_modules/@thi.ng/geom/ops/as-polyline.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.asPolyline = void 0;

var _defmulti = require("@thi.ng/defmulti");

var _geomApi = require("@thi.ng/geom-api");

var _vectors = require("@thi.ng/vectors");

var _polyline = require("../api/polyline");

var _copyAttribs = require("../internal/copy-attribs");

var _dispatch = require("../internal/dispatch");

var _vertices = require("./vertices");

const asPolyline = (0, _defmulti.defmulti)(_dispatch.dispatch);
exports.asPolyline = asPolyline;
asPolyline.addAll({
  [_geomApi.Type.CUBIC]: ($, opts) => new _polyline.Polyline((0, _vertices.vertices)($, opts)),
  [_geomApi.Type.POINTS]: ($, opts) => new _polyline.Polyline((0, _vertices.vertices)($, opts), (0, _copyAttribs.copyAttribs)($)),
  [_geomApi.Type.PATH]: ($, opts) => {
    const pts = (0, _vertices.vertices)($, opts);
    $.closed && pts.push((0, _vectors.set)([], pts[0]));
    return new _polyline.Polyline(pts, (0, _copyAttribs.copyAttribs)($));
  },
  [_geomApi.Type.POLYGON]: ($, opts) => {
    const pts = (0, _vertices.vertices)($, opts);
    pts.push((0, _vectors.set)([], pts[0]));
    return new _polyline.Polyline(pts, (0, _copyAttribs.copyAttribs)($));
  }
});
asPolyline.isa(_geomApi.Type.ARC, _geomApi.Type.CUBIC);
asPolyline.isa(_geomApi.Type.CIRCLE, _geomApi.Type.POLYGON);
asPolyline.isa(_geomApi.Type.ELLIPSE, _geomApi.Type.POLYGON);
asPolyline.isa(_geomApi.Type.LINE, _geomApi.Type.POINTS);
asPolyline.isa(_geomApi.Type.POLYLINE, _geomApi.Type.POINTS);
asPolyline.isa(_geomApi.Type.QUAD, _geomApi.Type.POLYGON);
asPolyline.isa(_geomApi.Type.QUADRATIC, _geomApi.Type.CUBIC);
asPolyline.isa(_geomApi.Type.RECT, _geomApi.Type.POLYGON);
asPolyline.isa(_geomApi.Type.TRIANGLE, _geomApi.Type.POLYGON);
},{"@thi.ng/defmulti":"../node_modules/@thi.ng/defmulti/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../api/polyline":"../node_modules/@thi.ng/geom/api/polyline.js","../internal/copy-attribs":"../node_modules/@thi.ng/geom/internal/copy-attribs.js","../internal/dispatch":"../node_modules/@thi.ng/geom/internal/dispatch.js","./vertices":"../node_modules/@thi.ng/geom/ops/vertices.js"}],"../node_modules/@thi.ng/hiccup/api.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ATTRIB_JOIN_DELIMS = exports.NO_CLOSE_EMPTY = exports.VOID_TAGS = exports.SVG_TAGS = exports.NO_SPANS = exports.CDATA = exports.COMMENT = exports.RE_ENTITY = exports.RE_TAG = exports.ENTITIES = exports.PROC_TAGS = void 0;

/** @internal */
const PROC_TAGS = {
  "?xml": "?>\n",
  "!DOCTYPE": ">\n",
  "!ENTITY": ">\n",
  "!ELEMENT": ">\n",
  "!ATTLIST": ">\n"
};
/** @internal */

exports.PROC_TAGS = PROC_TAGS;
const ENTITIES = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&apos;"
};
/** @internal */

exports.ENTITIES = ENTITIES;
const RE_TAG = /^([^\s\.#]+)(?:#([^\s\.#]+))?(?:\.([^\s#]+))?$/;
/** @internal */

exports.RE_TAG = RE_TAG;
const RE_ENTITY = new RegExp(`[${Object.keys(ENTITIES).join("")}]`, "g");
/** @internal */

exports.RE_ENTITY = RE_ENTITY;
const COMMENT = "__COMMENT__";
/** @internal */

exports.COMMENT = COMMENT;
const CDATA = "!CDATA";
/** @internal */

exports.CDATA = CDATA;
const NO_SPANS = {
  button: 1,
  option: 1,
  script: 1,
  style: 1,
  text: 1,
  textarea: 1,
  title: 1
};
exports.NO_SPANS = NO_SPANS;

const tagMap = tags => tags.split(" ").reduce((acc, x) => (acc[x] = true, acc), {});
/** @internal */
// tslint:disable-next-line


const SVG_TAGS = tagMap("animate animateColor animateMotion animateTransform circle clipPath color-profile defs desc discard ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feDropShadow feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font foreignObject g image line linearGradient marker mask metadata mpath path pattern polygon polyline radialGradient rect set stop style svg switch symbol text textPath title tref tspan use view");
/** @internal */
// tslint:disable-next-line

exports.SVG_TAGS = SVG_TAGS;
const VOID_TAGS = tagMap("area base br col command embed hr img input keygen link meta param source stop track use wbr ?xml");
/** @internal */
// tslint:disable-next-line

exports.VOID_TAGS = VOID_TAGS;
const NO_CLOSE_EMPTY = tagMap("animate circle ellipse line path polygon polyline rect");
/** @internal */

exports.NO_CLOSE_EMPTY = NO_CLOSE_EMPTY;
const ATTRIB_JOIN_DELIMS = {
  accept: ",",
  sizes: ",",
  srcset: ","
};
exports.ATTRIB_JOIN_DELIMS = ATTRIB_JOIN_DELIMS;
},{}],"../node_modules/@thi.ng/hiccup/attribs.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mergeEmmetAttribs = exports.mergeClasses = void 0;

var _api = require("@thi.ng/api");

var _checks = require("@thi.ng/checks");

/**
 * Takes a space separated string of existing CSS class names and merges
 * it with `val`, which is either another string of class names, an
 * object of booleans or an `IDeref` evaluating to either. Returns
 * updated class string.
 *
 * @remarks
 * If `val` evaluates to a string, it will be appended to `existing`.
 *
 * If `val` is an object, its keys are used as class names and their
 * values indicate if the class should be added or removed from the
 * existing set.
 *
 * @example
 * ```ts
 * mergeClasses("foo bar", { foo: false, baz: true })
 * // "bar baz"
 *
 * mergeClasses("foo bar", "baz");
 * // "baz"
 * ```
 *
 * @param existing
 * @param val
 */
const mergeClasses = (existing, val) => {
  val = (0, _api.deref)(val);
  if (val == null) return existing;
  if ((0, _checks.isString)(val)) return existing + " " + val;
  const classes = new Set(existing.split(" "));

  for (let id in val) {
    (0, _api.deref)(val[id]) ? classes.add(id) : classes.delete(id);
  }

  return [...classes].join(" ");
};
/**
 * Takes an attrib object and optional element ID and CSS class names from Emmet-style
 * hiccup tag, then transforms and merges definitions, returns attribs.
 *
 * @param attribs
 * @param id
 * @param classes
 */


exports.mergeClasses = mergeClasses;

const mergeEmmetAttribs = (attribs, id, classes) => {
  id && (attribs.id = id);
  let aclass = (0, _api.deref)(attribs.class);

  if (classes) {
    classes = classes.replace(/\./g, " ");
    attribs.class = aclass ? mergeClasses(classes, aclass) : classes;
  } else if (aclass) {
    attribs.class = (0, _checks.isString)(aclass) ? aclass : mergeClasses("", aclass);
  }

  return attribs;
};

exports.mergeEmmetAttribs = mergeEmmetAttribs;
},{"@thi.ng/api":"../node_modules/@thi.ng/api/index.js","@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js"}],"../node_modules/@thi.ng/hiccup/css.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.css = void 0;

var _api = require("@thi.ng/api");

var _checks = require("@thi.ng/checks");

const css = rules => {
  let css = "";
  let v;

  for (let r in rules) {
    v = (0, _api.deref)(rules[r]);
    (0, _checks.isFunction)(v) && (v = v(rules));
    v != null && (css += `${r}:${v};`);
  }

  return css;
};

exports.css = css;
},{"@thi.ng/api":"../node_modules/@thi.ng/api/index.js","@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js"}],"../node_modules/@thi.ng/hiccup/deref.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.derefContext = void 0;

var _checks = require("@thi.ng/checks");

/**
 * Takes an arbitrary `ctx` object and array of `keys`. Attempts to call
 * `.deref()` on all given keys' values and stores result values instead
 * of original. Returns updated copy of `ctx` or original if `ctx` is
 * `null` or no keys were given.
 *
 * @param ctx - user context object
 * @param keys - keys to deref
 *
 * @internal
 */
const derefContext = (ctx, keys) => {
  if (ctx == null || !keys || !keys.length) return ctx;
  const res = Object.assign({}, ctx);

  for (let k of keys) {
    const v = res[k];
    (0, _checks.implementsFunction)(v, "deref") && (res[k] = v.deref());
  }

  return res;
};

exports.derefContext = derefContext;
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js"}],"../node_modules/@thi.ng/hiccup/escape.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.escape = void 0;

var _api = require("./api");

const escape = x => x.replace(_api.RE_ENTITY, y => _api.ENTITIES[y]);

exports.escape = escape;
},{"./api":"../node_modules/@thi.ng/hiccup/api.js"}],"../node_modules/@thi.ng/hiccup/normalize.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.normalize = void 0;

var _checks = require("@thi.ng/checks");

var _errors = require("@thi.ng/errors");

var _api = require("./api");

var _attribs = require("./attribs");

const normalize = tag => {
  let name = tag[0];
  let match;
  const hasAttribs = (0, _checks.isPlainObject)(tag[1]);
  const attribs = hasAttribs ? Object.assign({}, tag[1]) : {};

  if (!(0, _checks.isString)(name) || !(match = _api.RE_TAG.exec(name))) {
    (0, _errors.illegalArgs)(`"${name}" is not a valid tag name`);
  }

  name = match[1];
  (0, _attribs.mergeEmmetAttribs)(attribs, match[2], match[3]);

  if (tag.length > 1) {
    tag = tag.slice(hasAttribs ? 2 : 1).filter(x => x != null);

    if (tag.length > 0) {
      return [name, attribs, tag];
    }
  }

  return [name, attribs];
};

exports.normalize = normalize;
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","@thi.ng/errors":"../node_modules/@thi.ng/errors/index.js","./api":"../node_modules/@thi.ng/hiccup/api.js","./attribs":"../node_modules/@thi.ng/hiccup/attribs.js"}],"../node_modules/@thi.ng/hiccup/prefix.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.formatPrefixes = void 0;

/**
 * Takes an object of RDF/XML prefixes and returns formatted string for
 * the RDFa `prefix` attribute.
 *
 * @example
 * ```ts
 * import { foaf, xsd } from "@thi.ng/prefixes";
 *
 * formatPrefixes({ foaf, xsd })
 * // "foaf: http://xmlns.com/foaf/0.1/ rdf: http://www.w3.org/2001/XMLSchema#"
 * ```
 *
 * @param prefixes -
 */
const formatPrefixes = prefixes => Object.keys(prefixes).reduce((acc, k) => (acc.push(`${k}: ${prefixes[k]}`), acc), []).join(" ");

exports.formatPrefixes = formatPrefixes;
},{}],"../node_modules/@thi.ng/hiccup/serialize.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.serialize = void 0;

var _api = require("@thi.ng/api");

var _checks = require("@thi.ng/checks");

var _errors = require("@thi.ng/errors");

var _api2 = require("./api");

var _css = require("./css");

var _escape = require("./escape");

var _normalize = require("./normalize");

var _prefix = require("./prefix");

/**
 * Recursively normalizes and serializes given tree as HTML/SVG/XML
 * string. Expands any embedded component functions with their results.
 *
 * @remarks
 * Each node of the input tree can have one of the following input
 * forms:
 *
 * ```js
 * ["tag", ...]
 * ["tag#id.class1.class2", ...]
 * ["tag", {other: "attrib"}, ...]
 * ["tag", {...}, "body", function, ...]
 * [function, arg1, arg2, ...]
 * [{render: (ctx,...) => [...]}, args...]
 * iterable
 * ```
 *
 * Tags can be defined in "Zencoding" convention, e.g.
 *
 * ```js
 * ["div#foo.bar.baz", "hi"] // <div id="foo" class="bar baz">hi</div>
 * ```
 *
 * The presence of the attributes object (2nd array index) is optional.
 * Any attribute values, incl. functions are allowed. If the latter, the
 * function is called with the full attribs object as argument and the
 * return value is used for the attribute. This allows for the dynamic
 * creation of attrib values based on other attribs. The only exception
 * to this are event attributes, i.e. attribute names starting with
 * "on". Function values assigned to event attributes will be omitted
 * from the output.
 *
 * ```js
 * ["div#foo", { bar: (attribs) => attribs.id + "-bar" }]
 * // <div id="foo" bar="foo-bar"></div>
 * ```
 *
 * The `style` attribute can ONLY be defined as string or object.
 *
 * ```js
 * ["div", {style: {color: "red", background: "#000"}}]
 * // <div style="color:red;background:#000;"></div>
 * ```
 *
 * Boolean attribs are serialized in HTML5 syntax (present or not).
 * `null`, `undefined` or empty string attrib values are ignored.
 *
 * Any `null` or `undefined` array values (other than in head position)
 * will also be removed, unless a function is in head position.
 *
 * A function in head position of a node acts as a mechanism for
 * component composition & delayed execution. The function will only be
 * executed at serialization time. In this case the optional global
 * context object and all other elements of that node / array are passed
 * as arguments when that function is called. The return value the
 * function MUST be a valid new tree (or `undefined`).
 *
 * If the `ctx` object it'll be passed to each embedded component fns.
 * Optionally call {@link derefContext} prior to {@link serialize} to
 * auto-deref context keys with values implementing the
 * {@link @thi.ng/api#IDeref} interface.
 *
 * ```js
 * const foo = (ctx, a, b) => ["div#" + a, ctx.foo, b];
 *
 * serialize([foo, "id", "body"], { foo: { class: "black" } })
 * // <div id="id" class="black">body</div>
 * ```
 *
 * Functions located in other positions are called ONLY with the global
 * context arg and can return any (serializable) value (i.e. new trees,
 * strings, numbers, iterables or any type with a suitable
 * `.toString()`, `.toHiccup()` or `.deref()` implementation).
 *
 * If the optional `span` flag is true (default: false), all text
 * content will be wrapped in <span> elements (this is to ensure DOM
 * compatibility with hdom). The only elements for spans are never
 * created are listed in `NO_SPANS` in `api.ts`.
 *
 * If the optional `keys` flag is true (default: false), all elements
 * will have an autogenerated `key` attribute injected. If `span` is
 * enabled, `keys` will be enabled by default too (since in this case we
 * assume the output is meant to be compatible with
 * {@link @thi.ng/hdom# | @thi.ng/hdom}).
 *
 * hiccup & hdom control attributes (i.e. attrib names prefixed with
 * `__`) will be omitted from the output. The only control attrib
 * supported by this package is `__serialize`. If set to `false`, the
 * entire tree branch will be excluded from the output.
 *
 * Single or multiline comments can be included using the special
 * `COMMENT` tag (`__COMMENT__`) (always WITHOUT attributes!).
 *
 * ```
 * [COMMENT, "Hello world"]
 * // <!-- Hello world -->
 *
 * [COMMENT, "Hello", "world"]
 * <!--
 *     Hello
 *     world
 * -->
 * ```
 *
 * Currently, the only processing / DTD instructions supported are:
 *
 * - `?xml`
 * - `!DOCTYTPE`
 * - `!ELEMENT`
 * - `!ENTITY`
 * - `!ATTLIST`
 *
 * These are used as follows (attribs are only allowed for `?xml`, all
 * others only accept a body string which is taken as is):
 *
 * ```
 * ["?xml", { version: "1.0", standalone: "yes" }]
 * // <?xml version="1.0" standalone="yes"?>
 *
 * ["!DOCTYPE", "html"]
 * // <!DOCTYPE html>
 * ```
 *
 * @param tree - hiccup elements / component tree
 * @param ctx - arbitrary user context object
 * @param escape - auto-escape entities
 * @param span - use spans for text content
 * @param keys - attach key attribs
 */
const serialize = (tree, ctx, escape = false, span = false, keys = span, path = [0]) => _serialize(tree, ctx, escape, span, keys, path);

exports.serialize = serialize;

const _serialize = (tree, ctx, esc, span, keys, path) => tree == null ? "" : Array.isArray(tree) ? serializeElement(tree, ctx, esc, span, keys, path) : (0, _checks.isFunction)(tree) ? _serialize(tree(ctx), ctx, esc, span, keys, path) : (0, _checks.implementsFunction)(tree, "toHiccup") ? _serialize(tree.toHiccup(ctx), ctx, esc, span, keys, path) : (0, _api.isDeref)(tree) ? _serialize(tree.deref(), ctx, esc, span, keys, path) : (0, _checks.isNotStringAndIterable)(tree) ? serializeIter(tree, ctx, esc, span, keys, path) : (tree = esc ? (0, _escape.escape)(String(tree)) : String(tree), span) ? `<span${keys ? ` key="${path.join("-")}"` : ""}>${tree}</span>` : tree;

const serializeElement = (tree, ctx, esc, span, keys, path) => {
  let tag = tree[0];
  return !tree.length ? "" : (0, _checks.isFunction)(tag) ? _serialize(tag.apply(null, [ctx, ...tree.slice(1)]), ctx, esc, span, keys, path) : (0, _checks.implementsFunction)(tag, "render") ? _serialize(tag.render.apply(null, [ctx, ...tree.slice(1)]), ctx, esc, span, keys, path) : tag === _api2.COMMENT ? serializeComment(tree) : tag == _api2.CDATA ? serializeCData(tree) : (0, _checks.isString)(tag) ? serializeTag(tree, ctx, esc, span, keys, path) : (0, _checks.isNotStringAndIterable)(tree) ? serializeIter(tree, ctx, esc, span, keys, path) : (0, _errors.illegalArgs)(`invalid tree node: ${tree}`);
};

const serializeTag = (tree, ctx, esc, span, keys, path) => {
  tree = (0, _normalize.normalize)(tree);
  const attribs = tree[1];
  if (attribs.__skip || attribs.__serialize === false) return "";
  keys && attribs.key === undefined && (attribs.key = path.join("-"));
  const tag = tree[0];
  const body = tree[2] ? serializeBody(tag, tree[2], ctx, esc, span, keys, path) : !_api2.VOID_TAGS[tag] && !_api2.NO_CLOSE_EMPTY[tag] ? `></${tag}>` : _api2.PROC_TAGS[tag] || "/>";
  return `<${tag}${serializeAttribs(attribs, esc)}${body}`;
};

const serializeAttribs = (attribs, esc) => {
  let res = "";

  for (let a in attribs) {
    if (a.startsWith("__")) continue;
    const v = serializeAttrib(attribs, a, (0, _api.deref)(attribs[a]), esc);
    v != null && (res += v);
  }

  return res;
};

const serializeAttrib = (attribs, a, v, esc) => {
  return v == null ? null : (0, _checks.isFunction)(v) && (/^on\w+/.test(a) || (v = v(attribs)) == null) ? null : v === true ? " " + a : v === false ? null : a === "data" ? serializeDataAttribs(v, esc) : attribPair(a, v, esc);
};

const attribPair = (a, v, esc) => {
  v = a === "style" && (0, _checks.isPlainObject)(v) ? (0, _css.css)(v) : a === "prefix" && (0, _checks.isPlainObject)(v) ? (0, _prefix.formatPrefixes)(v) : (0, _checks.isArray)(v) ? v.join(_api2.ATTRIB_JOIN_DELIMS[a] || " ") : v.toString();
  return v.length ? ` ${a}="${esc ? (0, _escape.escape)(v) : v}"` : null;
};

const serializeDataAttribs = (data, esc) => {
  let res = "";

  for (let id in data) {
    let v = (0, _api.deref)(data[id]);
    (0, _checks.isFunction)(v) && (v = v(data));
    v != null && (res += ` data-${id}="${esc ? (0, _escape.escape)(v) : v}"`);
  }

  return res;
};

const serializeBody = (tag, body, ctx, esc, span, keys, path) => {
  if (_api2.VOID_TAGS[tag]) {
    (0, _errors.illegalArgs)(`No body allowed in tag: ${tag}`);
  }

  const proc = _api2.PROC_TAGS[tag];
  let res = proc ? " " : ">";
  span = span && !proc && !_api2.NO_SPANS[tag];

  for (let i = 0, n = body.length; i < n; i++) {
    res += _serialize(body[i], ctx, esc, span, keys, [...path, i]);
  }

  return res + (proc || `</${tag}>`);
};

const serializeComment = tree => tree.length > 2 ? `\n<!--\n${tree.slice(1).map(x => "    " + x).join("\n")}\n-->\n` : `\n<!-- ${tree[1]} -->\n`;

const serializeCData = tree => `<![CDATA[\n${tree.slice(1).join("\n")}\n]]>`;

const serializeIter = (iter, ctx, esc, span, keys, path) => {
  const res = [];
  const p = path.slice(0, path.length - 1);
  let k = 0;

  for (let i of iter) {
    res.push(_serialize(i, ctx, esc, span, keys, [...p, k++]));
  }

  return res.join("");
};
},{"@thi.ng/api":"../node_modules/@thi.ng/api/index.js","@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","@thi.ng/errors":"../node_modules/@thi.ng/errors/index.js","./api":"../node_modules/@thi.ng/hiccup/api.js","./css":"../node_modules/@thi.ng/hiccup/css.js","./escape":"../node_modules/@thi.ng/hiccup/escape.js","./normalize":"../node_modules/@thi.ng/hiccup/normalize.js","./prefix":"../node_modules/@thi.ng/hiccup/prefix.js"}],"../node_modules/@thi.ng/hiccup/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _api = require("./api");

Object.keys(_api).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _api[key];
    }
  });
});

var _attribs = require("./attribs");

Object.keys(_attribs).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _attribs[key];
    }
  });
});

var _css = require("./css");

Object.keys(_css).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _css[key];
    }
  });
});

var _deref = require("./deref");

Object.keys(_deref).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _deref[key];
    }
  });
});

var _escape = require("./escape");

Object.keys(_escape).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _escape[key];
    }
  });
});

var _normalize = require("./normalize");

Object.keys(_normalize).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _normalize[key];
    }
  });
});

var _prefix = require("./prefix");

Object.keys(_prefix).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _prefix[key];
    }
  });
});

var _serialize = require("./serialize");

Object.keys(_serialize).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _serialize[key];
    }
  });
});
},{"./api":"../node_modules/@thi.ng/hiccup/api.js","./attribs":"../node_modules/@thi.ng/hiccup/attribs.js","./css":"../node_modules/@thi.ng/hiccup/css.js","./deref":"../node_modules/@thi.ng/hiccup/deref.js","./escape":"../node_modules/@thi.ng/hiccup/escape.js","./normalize":"../node_modules/@thi.ng/hiccup/normalize.js","./prefix":"../node_modules/@thi.ng/hiccup/prefix.js","./serialize":"../node_modules/@thi.ng/hiccup/serialize.js"}],"../node_modules/@thi.ng/hiccup-svg/api.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/color/api.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/color/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.INV8BIT = exports.PC = exports.FF = exports.XYZ_RGB = exports.RGB_XYZ = exports.SRGB_ALPHA = exports.Hue = exports.RGB_LUMINANCE = exports.YELLOW = exports.MAGENTA = exports.CYAN = exports.BLUE = exports.GREEN = exports.RED = exports.WHITE = exports.BLACK = exports.ColorMode = void 0;

var _strings = require("@thi.ng/strings");

var ColorMode;
exports.ColorMode = ColorMode;

(function (ColorMode) {
  ColorMode[ColorMode["RGBA"] = 0] = "RGBA";
  ColorMode[ColorMode["HCYA"] = 1] = "HCYA";
  ColorMode[ColorMode["HSVA"] = 2] = "HSVA";
  ColorMode[ColorMode["HSLA"] = 3] = "HSLA";
  ColorMode[ColorMode["HSIA"] = 4] = "HSIA";
  ColorMode[ColorMode["INT32"] = 5] = "INT32";
  ColorMode[ColorMode["CSS"] = 6] = "CSS";
  ColorMode[ColorMode["XYZA"] = 7] = "XYZA";
  ColorMode[ColorMode["YCBCRA"] = 8] = "YCBCRA";
})(ColorMode || (exports.ColorMode = ColorMode = {})); // RGBA constants


const BLACK = Object.freeze([0, 0, 0, 1]);
exports.BLACK = BLACK;
const WHITE = Object.freeze([1, 1, 1, 1]);
exports.WHITE = WHITE;
const RED = Object.freeze([1, 0, 0, 1]);
exports.RED = RED;
const GREEN = Object.freeze([0, 1, 0, 1]);
exports.GREEN = GREEN;
const BLUE = Object.freeze([0, 0, 1, 1]);
exports.BLUE = BLUE;
const CYAN = Object.freeze([0, 1, 1, 1]);
exports.CYAN = CYAN;
const MAGENTA = Object.freeze([1, 0, 1, 1]);
exports.MAGENTA = MAGENTA;
const YELLOW = Object.freeze([1, 1, 0, 1]);
exports.YELLOW = YELLOW;
const RGB_LUMINANCE = [0.299, 0.587, 0.114]; // Hue names

exports.RGB_LUMINANCE = RGB_LUMINANCE;
var Hue;
exports.Hue = Hue;

(function (Hue) {
  Hue[Hue["RED"] = 0] = "RED";
  Hue[Hue["ORANGE"] = 1] = "ORANGE";
  Hue[Hue["YELLOW"] = 2] = "YELLOW";
  Hue[Hue["CHARTREUSE"] = 3] = "CHARTREUSE";
  Hue[Hue["GREEN"] = 4] = "GREEN";
  Hue[Hue["SPRING_GREEN"] = 5] = "SPRING_GREEN";
  Hue[Hue["CYAN"] = 6] = "CYAN";
  Hue[Hue["AZURE"] = 7] = "AZURE";
  Hue[Hue["BLUE"] = 8] = "BLUE";
  Hue[Hue["VIOLET"] = 9] = "VIOLET";
  Hue[Hue["MAGENTA"] = 10] = "MAGENTA";
  Hue[Hue["ROSE"] = 11] = "ROSE";
})(Hue || (exports.Hue = Hue = {})); // internal helpers


const SRGB_ALPHA = 0.055;
exports.SRGB_ALPHA = SRGB_ALPHA;
const RGB_XYZ = [0.4124564, 0.3575761, 0.1804375, 0.2126729, 0.7151522, 0.072175, 0.0193339, 0.119192, 0.9503041];
exports.RGB_XYZ = RGB_XYZ;
const XYZ_RGB = [3.2404542, -1.5371385, -0.4985314, -0.969266, 1.8760108, 0.041556, 0.0556434, -0.2040259, 1.0572252];
exports.XYZ_RGB = XYZ_RGB;
const FF = (0, _strings.float)(2);
exports.FF = FF;
const PC = (0, _strings.percent)(2);
exports.PC = PC;
const INV8BIT = 1 / 0xff;
exports.INV8BIT = INV8BIT;
},{"@thi.ng/strings":"../node_modules/@thi.ng/strings/index.js"}],"../node_modules/@thi.ng/color/names.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CSS_NAMES = void 0;
const CSS_NAMES = {
  aliceblue: "f0f8ff",
  antiquewhite: "faebd7",
  aqua: "0ff",
  aquamarine: "7fffd4",
  azure: "f0ffff",
  beige: "f5f5dc",
  bisque: "ffe4c4",
  black: "000",
  blanchedalmond: "ffebcd",
  blue: "00f",
  blueviolet: "8a2be2",
  brown: "a52a2a",
  burlywood: "deb887",
  cadetblue: "5f9ea0",
  chartreuse: "7fff00",
  chocolate: "d2691e",
  coral: "ff7f50",
  cornflowerblue: "6495ed",
  cornsilk: "fff8dc",
  crimson: "dc143c",
  cyan: "0ff",
  darkblue: "00008b",
  darkcyan: "008b8b",
  darkgoldenrod: "b8860b",
  darkgray: "a9a9a9",
  darkgreen: "006400",
  darkgrey: "a9a9a9",
  darkkhaki: "bdb76b",
  darkmagenta: "8b008b",
  darkolivegreen: "556b2f",
  darkorange: "ff8c00",
  darkorchid: "9932cc",
  darkred: "8b0000",
  darksalmon: "e9967a",
  darkseagreen: "8fbc8f",
  darkslateblue: "483d8b",
  darkslategray: "2f4f4f",
  darkslategrey: "2f4f4f",
  darkturquoise: "00ced1",
  darkviolet: "9400d3",
  deeppink: "ff1493",
  deepskyblue: "00bfff",
  dimgray: "696969",
  dimgrey: "696969",
  dodgerblue: "1e90ff",
  firebrick: "b22222",
  floralwhite: "fffaf0",
  forestgreen: "228b22",
  fuchsia: "f0f",
  gainsboro: "dcdcdc",
  ghostwhite: "f8f8ff",
  gold: "ffd700",
  goldenrod: "daa520",
  gray: "808080",
  grey: "808080",
  green: "008000",
  greenyellow: "adff2f",
  honeydew: "f0fff0",
  hotpink: "ff69b4",
  indianred: "cd5c5c",
  indigo: "4b0082",
  ivory: "fffff0",
  khaki: "f0e68c",
  lavender: "e6e6fa",
  lavenderblush: "fff0f5",
  lawngreen: "7cfc00",
  lemonchiffon: "fffacd",
  lightblue: "add8e6",
  lightcoral: "f08080",
  lightcyan: "e0ffff",
  lightgoldenrodyellow: "fafad2",
  lightgray: "d3d3d3",
  lightgreen: "90ee90",
  lightgrey: "d3d3d3",
  lightpink: "ffb6c1",
  lightsalmon: "ffa07a",
  lightseagreen: "20b2aa",
  lightskyblue: "87cefa",
  lightslategray: "789",
  lightslategrey: "789",
  lightsteelblue: "b0c4de",
  lightyellow: "ffffe0",
  lime: "0f0",
  limegreen: "32cd32",
  linen: "faf0e6",
  magenta: "f0f",
  maroon: "800000",
  mediumaquamarine: "66cdaa",
  mediumblue: "0000cd",
  mediumorchid: "ba55d3",
  mediumpurple: "9370db",
  mediumseagreen: "3cb371",
  mediumslateblue: "7b68ee",
  mediumspringgreen: "00fa9a",
  mediumturquoise: "48d1cc",
  mediumvioletred: "c71585",
  midnightblue: "191970",
  mintcream: "f5fffa",
  mistyrose: "ffe4e1",
  moccasin: "ffe4b5",
  navajowhite: "ffdead",
  navy: "000080",
  oldlace: "fdf5e6",
  olive: "808000",
  olivedrab: "6b8e23",
  orange: "ffa500",
  orangered: "ff4500",
  orchid: "da70d6",
  palegoldenrod: "eee8aa",
  palegreen: "98fb98",
  paleturquoise: "afeeee",
  palevioletred: "db7093",
  papayawhip: "ffefd5",
  peachpuff: "ffdab9",
  peru: "cd853f",
  pink: "ffc0cb",
  plum: "dda0dd",
  powderblue: "b0e0e6",
  purple: "800080",
  red: "f00",
  rosybrown: "bc8f8f",
  royalblue: "4169e1",
  saddlebrown: "8b4513",
  salmon: "fa8072",
  sandybrown: "f4a460",
  seagreen: "2e8b57",
  seashell: "fff5ee",
  sienna: "a0522d",
  silver: "c0c0c0",
  skyblue: "87ceeb",
  slateblue: "6a5acd",
  slategray: "708090",
  slategrey: "708090",
  snow: "fffafa",
  springgreen: "00ff7f",
  steelblue: "4682b4",
  tan: "d2b48c",
  teal: "008080",
  thistle: "d8bfd8",
  tomato: "ff6347",
  turquoise: "40e0d0",
  violet: "ee82ee",
  wheat: "f5deb3",
  white: "fff",
  whitesmoke: "f5f5f5",
  yellow: "ff0",
  yellowgreen: "9acd32"
};
exports.CSS_NAMES = CSS_NAMES;
},{}],"../node_modules/@thi.ng/color/internal/ensure-hue.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ensureHue = void 0;

/** @internal */
const ensureHue = x => (x = x % 1, x < 0 ? x + 1 : x);

exports.ensureHue = ensureHue;
},{}],"../node_modules/@thi.ng/color/hue-rgba.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.namedHueRgba = exports.hueRgba = void 0;

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

var _ensureHue = require("./internal/ensure-hue");

/**
 * Converts a normalized hue to RGBA with given optional `alpha`
 * value (default: 1).
 *
 * @param out - result
 * @param hue - normalized hue
 */
const hueRgba = (out, hue, alpha = 1) => {
  hue = (0, _ensureHue.ensureHue)(hue) * 6;
  return (0, _vectors.setC4)(out || [], (0, _math.clamp01)(Math.abs(hue - 3) - 1), (0, _math.clamp01)(2 - Math.abs(hue - 2)), (0, _math.clamp01)(2 - Math.abs(hue - 4)), alpha);
};

exports.hueRgba = hueRgba;

const namedHueRgba = (out, hue, alpha = 1) => hueRgba(out, hue / 12, alpha);

exports.namedHueRgba = namedHueRgba;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./internal/ensure-hue":"../node_modules/@thi.ng/color/internal/ensure-hue.js"}],"../node_modules/@thi.ng/color/internal/ensure-alpha.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ensureAlpha = void 0;

var _math = require("@thi.ng/math");

const ensureAlpha = (x, def = 1) => x != undefined ? (0, _math.clamp01)(x) : def;

exports.ensureAlpha = ensureAlpha;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js"}],"../node_modules/@thi.ng/color/hcya-rgba.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hcyaRgba = void 0;

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

var _constants = require("./constants");

var _hueRgba = require("./hue-rgba");

var _ensureAlpha = require("./internal/ensure-alpha");

const hcyaRgba = (out, src) => {
  const h = src[0];
  let c = src[1];
  const y = src[2];
  const rgb = (0, _hueRgba.hueRgba)(out || src, h, (0, _ensureAlpha.ensureAlpha)(src[3]));
  const lum = (0, _vectors.dot3)(rgb, _constants.RGB_LUMINANCE);

  if (y < lum) {
    c *= y / lum;
  } else if (lum < 1) {
    c *= (1 - y) / (1 - lum);
  }

  return (0, _vectors.setC3)(rgb, (0, _math.clamp01)((rgb[0] - lum) * c + y), (0, _math.clamp01)((rgb[1] - lum) * c + y), (0, _math.clamp01)((rgb[2] - lum) * c + y));
};

exports.hcyaRgba = hcyaRgba;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./constants":"../node_modules/@thi.ng/color/constants.js","./hue-rgba":"../node_modules/@thi.ng/color/hue-rgba.js","./internal/ensure-alpha":"../node_modules/@thi.ng/color/internal/ensure-alpha.js"}],"../node_modules/@thi.ng/color/clamp.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.clampH = exports.clamp = void 0;

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

var _ensureAlpha = require("./internal/ensure-alpha");

var _ensureHue = require("./internal/ensure-hue");

/**
 * Clamps all color channels to [0,1] interval and calls `ensureAlpha`
 * to ensure alpha channel is defined (if missing sets it to `alpha`,
 * default: 1).
 *
 * @param out - result
 * @param src - source color
 * @param alpha - alpha value
 */
const clamp = (out, src, alpha = 1) => (0, _vectors.setC4)(out || src, (0, _math.clamp01)(src[0]), (0, _math.clamp01)(src[1]), (0, _math.clamp01)(src[2]), (0, _ensureAlpha.ensureAlpha)(src[3], alpha));
/**
 * Similar to {@link clamp}, but calls `ensureHue` to fold (instead of
 * clamping) the hue into [0,1] interval.
 *
 * @param out - result
 * @param src - source color
 * @param alpha - alpha value
 */


exports.clamp = clamp;

const clampH = (out, src, alpha = 1) => (0, _vectors.setC4)(out || src, (0, _ensureHue.ensureHue)(src[0]), (0, _math.clamp01)(src[1]), (0, _math.clamp01)(src[2]), (0, _ensureAlpha.ensureAlpha)(src[3], alpha));

exports.clampH = clampH;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./internal/ensure-alpha":"../node_modules/@thi.ng/color/internal/ensure-alpha.js","./internal/ensure-hue":"../node_modules/@thi.ng/color/internal/ensure-hue.js"}],"../node_modules/@thi.ng/color/hsia-rgba.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hsiaRgba = void 0;

var _vectors = require("@thi.ng/vectors");

var _clamp = require("./clamp");

// https://en.wikipedia.org/wiki/HSL_and_HSV#From_HSI
const hsiaRgba = (out, src) => {
  out = (0, _clamp.clampH)(out || src, src);
  const s = out[1];
  const i = out[2];

  if (s < 1e-6) {
    return (0, _vectors.setC3)(out, i, i, i);
  }

  const h = out[0] * 6 % 6;
  const m = i * (1 - s);
  const z = 1 - Math.abs(h % 2 - 1);
  let c = 3 * i * s / (1 + z);
  const x = c * z + m;
  c += m;

  switch (h | 0) {
    case 0:
      return (0, _vectors.setC3)(out, c, x, m);

    case 1:
      return (0, _vectors.setC3)(out, x, c, m);

    case 2:
      return (0, _vectors.setC3)(out, m, c, x);

    case 3:
      return (0, _vectors.setC3)(out, m, x, c);

    case 4:
      return (0, _vectors.setC3)(out, x, m, c);

    case 5:
      return (0, _vectors.setC3)(out, c, m, x);

    default:
      return (0, _vectors.setC3)(out, m, m, m);
  }
};

exports.hsiaRgba = hsiaRgba;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./clamp":"../node_modules/@thi.ng/color/clamp.js"}],"../node_modules/@thi.ng/color/hsla-css.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hslaCss = void 0;

var _math = require("@thi.ng/math");

var _constants = require("./constants");

var _ensureAlpha = require("./internal/ensure-alpha");

var _ensureHue = require("./internal/ensure-hue");

const hslaCss = src => {
  const h = (0, _constants.FF)((0, _ensureHue.ensureHue)(src[0]) * 360);
  const s = (0, _constants.PC)((0, _math.clamp01)(src[1]));
  const l = (0, _constants.PC)((0, _math.clamp01)(src[2]));
  const a = (0, _ensureAlpha.ensureAlpha)(src[3]);
  return a < 1 ? `hsla(${h},${s},${l},${(0, _constants.FF)(a)})` : `hsl(${h},${s},${l})`;
};

exports.hslaCss = hslaCss;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","./constants":"../node_modules/@thi.ng/color/constants.js","./internal/ensure-alpha":"../node_modules/@thi.ng/color/internal/ensure-alpha.js","./internal/ensure-hue":"../node_modules/@thi.ng/color/internal/ensure-hue.js"}],"../node_modules/@thi.ng/color/hsla-hsva.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hslaHsva = void 0;

var _clamp = require("./clamp");

const hslaHsva = (out, src) => {
  out = (0, _clamp.clampH)(out || src, src);
  const s = out[1];
  const l = out[2];
  const l2 = 2 * l;
  const v = (l2 + s * (1 - Math.abs(l2 - 1))) * 0.5;
  out[1] = 2 * (v - l) / v;
  out[2] = v;
  return out;
};

exports.hslaHsva = hslaHsva;
},{"./clamp":"../node_modules/@thi.ng/color/clamp.js"}],"../node_modules/@thi.ng/color/hsla-rgba.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hslaRgba = void 0;

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

var _hueRgba = require("./hue-rgba");

var _ensureAlpha = require("./internal/ensure-alpha");

const hslaRgba = (out, src) => {
  const s = (0, _math.clamp01)(src[1]);
  const l = (0, _math.clamp01)(src[2]);
  out = (0, _hueRgba.hueRgba)(out || src, src[0], (0, _ensureAlpha.ensureAlpha)(src[3]));
  const c = (1 - Math.abs(2 * l - 1)) * s;
  return (0, _vectors.setC3)(out, (out[0] - 0.5) * c + l, (out[1] - 0.5) * c + l, (out[2] - 0.5) * c + l);
};

exports.hslaRgba = hslaRgba;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./hue-rgba":"../node_modules/@thi.ng/color/hue-rgba.js","./internal/ensure-alpha":"../node_modules/@thi.ng/color/internal/ensure-alpha.js"}],"../node_modules/@thi.ng/color/hsva-hsla.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hsvaHsla = void 0;

var _clamp = require("./clamp");

const hsvaHsla = (out, src) => {
  out = (0, _clamp.clampH)(out || src, src);
  const s = out[1];
  const v = out[2];
  const l = (2 - s) * v / 2;
  out[2] = l;
  out[1] = l && l < 1 ? s * v / (l < 0.5 ? l * 2 : 2 - l * 2) : s;
  return out;
};

exports.hsvaHsla = hsvaHsla;
},{"./clamp":"../node_modules/@thi.ng/color/clamp.js"}],"../node_modules/@thi.ng/color/hsva-css.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hsvaCss = void 0;

var _hslaCss = require("./hsla-css");

var _hsvaHsla = require("./hsva-hsla");

const hsvaCss = src => (0, _hslaCss.hslaCss)((0, _hsvaHsla.hsvaHsla)([], src));

exports.hsvaCss = hsvaCss;
},{"./hsla-css":"../node_modules/@thi.ng/color/hsla-css.js","./hsva-hsla":"../node_modules/@thi.ng/color/hsva-hsla.js"}],"../node_modules/@thi.ng/color/hsva-rgba.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hsvaRgba = void 0;

var _vectors = require("@thi.ng/vectors");

var _clamp = require("./clamp");

var _hueRgba = require("./hue-rgba");

const hsvaRgba = (out, src) => {
  out = (0, _clamp.clampH)(out || src, src);
  const s = out[1];
  const v = out[2];
  (0, _hueRgba.hueRgba)(out, src[0], out[3]);
  return (0, _vectors.setC3)(out, ((out[0] - 1) * s + 1) * v, ((out[1] - 1) * s + 1) * v, ((out[2] - 1) * s + 1) * v);
};

exports.hsvaRgba = hsvaRgba;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./clamp":"../node_modules/@thi.ng/color/clamp.js","./hue-rgba":"../node_modules/@thi.ng/color/hue-rgba.js"}],"../node_modules/@thi.ng/color/int-css.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.int24Css = exports.int32Css = void 0;

var _strings = require("@thi.ng/strings");

var _constants = require("./constants");

const int32Css = src => {
  src = typeof src === "number" ? src : src.deref();
  const a = src >>> 24;
  return a < 255 ? `rgba(${src >> 16 & 0xff},${src >> 8 & 0xff},${src & 0xff},${(0, _constants.FF)(a * _constants.INV8BIT)})` : `#${(0, _strings.U24)(src & 0xffffff)}`;
};

exports.int32Css = int32Css;

const int24Css = src => {
  src = typeof src === "number" ? src : src.deref();
  return int32Css(src | 0xff000000);
};

exports.int24Css = int24Css;
},{"@thi.ng/strings":"../node_modules/@thi.ng/strings/index.js","./constants":"../node_modules/@thi.ng/color/constants.js"}],"../node_modules/@thi.ng/color/int-rgba.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.int24Rgba = exports.int32Rgba = void 0;

var _vectors = require("@thi.ng/vectors");

var _constants = require("./constants");

const int32Rgba = (out, src) => {
  src = typeof src === "number" ? src : src.deref();
  return (0, _vectors.setC4)(out || [], (src >>> 16 & 0xff) * _constants.INV8BIT, (src >>> 8 & 0xff) * _constants.INV8BIT, (src & 0xff) * _constants.INV8BIT, (src >>> 24 & 0xff) * _constants.INV8BIT);
};

exports.int32Rgba = int32Rgba;

const int24Rgba = (out, src) => {
  src = typeof src === "number" ? src : src.deref();
  return int32Rgba(out, src | 0xff000000);
};

exports.int24Rgba = int24Rgba;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./constants":"../node_modules/@thi.ng/color/constants.js"}],"../node_modules/@thi.ng/color/kelvin-rgba.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.kelvinRgba = void 0;

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

const G1 = -0.6088425710866344;
const G2 = -0.001748900018414868;
const G3 = 0.4097731842899564;
const G4 = 1.2762722061615583;
const G5 = 0.0003115080994769546;
const G6 = 0.11013841706194392;
const R1 = 1.3803015908551253;
const R2 = 0.0004478684462124118;
const R3 = -0.15785750232675008;
const B1 = -0.9990954974165059;
const B2 = 0.0032447435545127036;
const B3 = 0.453646839257496;
/**
 * Based on:
 * - {@link https://github.com/neilbartlett/color-temperature/blob/develop/index.js}
 * - {@link http://www.zombieprototypes.com/?p=210}
 *
 * Uses adjusted coefficients to produce normalized RGB values.
 *
 * @param out - result
 * @param kelvin - color temperature
 * @param alpha - target alpha channel
 */

const kelvinRgba = (out, kelvin, alpha = 1) => {
  kelvin *= 0.01;
  let t;
  return kelvin < 66 ? (0, _vectors.setC4)(out || [], 1, (0, _math.clamp01)(G1 + G2 * (t = kelvin - 2) + G3 * Math.log(t)), kelvin < 20 ? 0 : (0, _math.clamp01)(B1 + B2 * (t = kelvin - 10) + B3 * Math.log(t)), alpha) : (0, _vectors.setC4)(out || [], (0, _math.clamp01)(R1 + R2 * (t = kelvin - 55) + R3 * Math.log(t)), (0, _math.clamp01)(G4 + G5 * (t = kelvin - 50) - G6 * Math.log(t)), 1, alpha);
};

exports.kelvinRgba = kelvinRgba;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/color/parse-css.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parseHex = exports.parseCss = void 0;

var _errors = require("@thi.ng/errors");

var _math = require("@thi.ng/math");

var _strings = require("@thi.ng/strings");

var _constants = require("./constants");

var _hslaRgba = require("./hsla-rgba");

var _intRgba = require("./int-rgba");

var _names = require("./names");

const RE_HEX = /^#?([0-9a-f]{3,8})$/i;
const RE_CSS = /^(rgb|hsl)a?\(\s*([0-9.]+?),\s*([0-9.]+%?),\s*([0-9.]+%?),?\s*([0-9.]+)?\s*\)$/;

const parseCss = col => {
  col = typeof col === "string" ? col : col.deref();

  if (col.charAt(0) === "#") {
    return (0, _intRgba.int32Rgba)([], parseHex(col));
  } else {
    const match = RE_CSS.exec(col);

    if (match) {
      if (match[1] === "rgb" || match[1] === "rgba") {
        return [parseChannel(match[2]), parseChannel(match[3]), parseChannel(match[4]), (0, _strings.maybeParseFloat)(match[5], 1)];
      } else {
        return (0, _hslaRgba.hslaRgba)(null, [(0, _strings.maybeParseFloat)(match[2]) / 360, parseChannel(match[3]), parseChannel(match[4]), (0, _strings.maybeParseFloat)(match[5], 1)]);
      }
    } else {
      const c = _names.CSS_NAMES[col];
      !c && (0, _errors.illegalArgs)(`invalid color: "${col}"`);
      return (0, _intRgba.int32Rgba)([], parseHex(c));
    }
  }
};

exports.parseCss = parseCss;

const parseHex = src => {
  const match = RE_HEX.exec(src);

  if (match) {
    const hex = match[1];

    switch (hex.length) {
      case 3:
        {
          const [r, g, b] = hex;
          return ((0, _strings.maybeParseInt)(`${r}${r}${g}${g}${b}${b}`, 0, 16) | 0xff000000) >>> 0;
        }

      case 4:
        {
          const [a, r, g, b] = hex;
          return (0, _strings.maybeParseInt)(`${a}${a}${r}${r}${g}${g}${b}${b}`, 0, 16) >>> 0;
        }

      case 6:
        return ((0, _strings.maybeParseInt)(hex, 0, 16) | 0xff000000) >>> 0;

      case 8:
        return (0, _strings.maybeParseInt)(hex, 0, 16) >>> 0;

      default:
    }
  }

  return (0, _errors.illegalArgs)(`invalid hex color: "${src}"`);
};

exports.parseHex = parseHex;

const parseChannel = c => (0, _math.clamp01)(c.indexOf("%") > 0 ? (0, _strings.maybeParseFloat)(c) * 0.01 : (0, _strings.maybeParseFloat)(c) * _constants.INV8BIT);
},{"@thi.ng/errors":"../node_modules/@thi.ng/errors/index.js","@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/strings":"../node_modules/@thi.ng/strings/index.js","./constants":"../node_modules/@thi.ng/color/constants.js","./hsla-rgba":"../node_modules/@thi.ng/color/hsla-rgba.js","./int-rgba":"../node_modules/@thi.ng/color/int-rgba.js","./names":"../node_modules/@thi.ng/color/names.js"}],"../node_modules/@thi.ng/color/rgba-css.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rgbaCss = void 0;

var _math = require("@thi.ng/math");

var _strings = require("@thi.ng/strings");

var _constants = require("./constants");

var _ensureAlpha = require("./internal/ensure-alpha");

const rgbaCss = src => {
  const r = (0, _math.clamp01)(src[0]) * 0xff + 0.5 | 0;
  const g = (0, _math.clamp01)(src[1]) * 0xff + 0.5 | 0;
  const b = (0, _math.clamp01)(src[2]) * 0xff + 0.5 | 0;
  const a = (0, _ensureAlpha.ensureAlpha)(src[3]);
  return a < 1 ? `rgba(${r},${g},${b},${(0, _constants.FF)(a)})` : `#${(0, _strings.U24)(r << 16 | g << 8 | b)}`;
};

exports.rgbaCss = rgbaCss;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/strings":"../node_modules/@thi.ng/strings/index.js","./constants":"../node_modules/@thi.ng/color/constants.js","./internal/ensure-alpha":"../node_modules/@thi.ng/color/internal/ensure-alpha.js"}],"../node_modules/@thi.ng/color/luminance-rgb.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.luminanceInt = exports.luminanceRGB = void 0;

var _vectors = require("@thi.ng/vectors");

var _constants = require("./constants");

const luminanceRGB = (rgb, weights = _constants.RGB_LUMINANCE) => (0, _vectors.dot3)(rgb, weights);

exports.luminanceRGB = luminanceRGB;

const luminanceInt = rgb => ((rgb >>> 16 & 0xff) * 76 + (rgb >>> 8 & 0xff) * 150 + (rgb & 0xff) * 29) / 0xfe01;

exports.luminanceInt = luminanceInt;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./constants":"../node_modules/@thi.ng/color/constants.js"}],"../node_modules/@thi.ng/color/rgba-hcva.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rgbaHcva = void 0;

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

var _clamp = require("./clamp");

/**
 * Based on:
 * {@link https://github.com/tobspr/GLSL-Color-Spaces/blob/develop/ColorSpaces.inc.glsl#L159}
 *
 * @param out - result
 * @param src - source color
 */
const rgbaHcva = (out, src) => {
  out = (0, _clamp.clamp)(out || src, src);
  const p = out[1] < out[2] ? [out[2], out[1], -1, 2 / 3] : [out[1], out[2], 0, -1 / 3];
  const q = out[0] < p[0] ? [p[0], p[1], p[3], out[0]] : [out[0], p[1], p[2], p[0]];
  const c = q[0] - Math.min(q[1], q[3]);
  return (0, _vectors.setC3)(out, (0, _math.clamp01)(Math.abs((q[3] - q[1]) / (6 * c + _math.EPS) + q[2])), (0, _math.clamp01)(c), (0, _math.clamp01)(q[0]));
};

exports.rgbaHcva = rgbaHcva;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./clamp":"../node_modules/@thi.ng/color/clamp.js"}],"../node_modules/@thi.ng/color/rgba-hcya.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rgbaHcya = void 0;

var _math = require("@thi.ng/math");

var _hueRgba = require("./hue-rgba");

var _luminanceRgb = require("./luminance-rgb");

var _rgbaHcva = require("./rgba-hcva");

/**
 * Ported from:
 * {@link https://github.com/tobspr/GLSL-Color-Spaces/blob/develop/ColorSpaces.inc.glsl#L226}
 *
 * @param out - result
 * @param src - source color
 */
const rgbaHcya = (out, src) => {
  const y = (0, _luminanceRgb.luminanceRGB)(src);
  out = (0, _rgbaHcva.rgbaHcva)(out, src);
  const z = (0, _luminanceRgb.luminanceRGB)((0, _hueRgba.hueRgba)([], out[0]));
  out[1] *= y < z ? z / (y + _math.EPS) : (1 - z) / (1 + _math.EPS - y);
  out[2] = y;
  return out;
};

exports.rgbaHcya = rgbaHcya;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","./hue-rgba":"../node_modules/@thi.ng/color/hue-rgba.js","./luminance-rgb":"../node_modules/@thi.ng/color/luminance-rgb.js","./rgba-hcva":"../node_modules/@thi.ng/color/rgba-hcva.js"}],"../node_modules/@thi.ng/color/rgba-hsia.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rgbaHsia = void 0;

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

var _clamp = require("./clamp");

// https://en.wikipedia.org/wiki/HSL_and_HSV#Hue_and_chroma
const SQRT32 = _math.SQRT3 / 2;

const rgbaHsia = (out, src) => {
  out = (0, _clamp.clamp)(out || src, src);
  const r = out[0];
  const g = out[1];
  const b = out[2];
  const i = _math.THIRD * (r + g + b);
  return i < 1e-6 || r === g && r === b ? (0, _vectors.setC3)(out, 0, 0, i) : (0, _vectors.setC3)(out, (0, _math.atan2Abs)(SQRT32 * (g - b), 0.5 * (2 * r - g - b)) / _math.TAU, 1 - Math.min(r, g, b) / i, i);
};

exports.rgbaHsia = rgbaHsia;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./clamp":"../node_modules/@thi.ng/color/clamp.js"}],"../node_modules/@thi.ng/color/rgba-hsla.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rgbaHsla = void 0;

var _math = require("@thi.ng/math");

var _rgbaHcva = require("./rgba-hcva");

const rgbaHsla = (out, src) => {
  out = (0, _rgbaHcva.rgbaHcva)(out, src);
  out[2] -= out[1] * 0.5;
  out[1] /= 1 + _math.EPS - Math.abs(out[2] * 2 - 1);
  return out;
};

exports.rgbaHsla = rgbaHsla;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","./rgba-hcva":"../node_modules/@thi.ng/color/rgba-hcva.js"}],"../node_modules/@thi.ng/color/rgba-hsva.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rgbaHsva = void 0;

var _math = require("@thi.ng/math");

var _rgbaHcva = require("./rgba-hcva");

const rgbaHsva = (out, src) => {
  out = (0, _rgbaHcva.rgbaHcva)(out, src);
  out[1] /= out[2] + _math.EPS;
  return out;
};

exports.rgbaHsva = rgbaHsva;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","./rgba-hcva":"../node_modules/@thi.ng/color/rgba-hcva.js"}],"../node_modules/@thi.ng/color/rgba-int.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rgbaInt = void 0;

var _math = require("@thi.ng/math");

var _ensureAlpha = require("./internal/ensure-alpha");

const rgbaInt = src => ((0, _ensureAlpha.ensureAlpha)(src[3]) * 0xff + 0.5 << 24 | (0, _math.clamp01)(src[0]) * 0xff + 0.5 << 16 | (0, _math.clamp01)(src[1]) * 0xff + 0.5 << 8 | (0, _math.clamp01)(src[2]) * 0xff + 0.5) >>> 0;

exports.rgbaInt = rgbaInt;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","./internal/ensure-alpha":"../node_modules/@thi.ng/color/internal/ensure-alpha.js"}],"../node_modules/@thi.ng/color/internal/matrix-ops.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mulM45 = exports.mulV45 = exports.mulV33 = void 0;

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

var _ensureAlpha = require("./ensure-alpha");

const mulV33 = (out, mat, src, clampOut = true) => {
  const x = (0, _vectors.dotS3)(mat, src, 0, 0, 3);
  const y = (0, _vectors.dotS3)(mat, src, 1, 0, 3);
  const z = (0, _vectors.dotS3)(mat, src, 2, 0, 3);
  const a = (0, _ensureAlpha.ensureAlpha)(src[3]);
  return clampOut ? (0, _vectors.setC4)(out || src, (0, _math.clamp01)(x), (0, _math.clamp01)(y), (0, _math.clamp01)(z), a) : (0, _vectors.setC4)(out || src, x, y, z, a);
};

exports.mulV33 = mulV33;

const mulV45 = (out, mat, src, clampOut = true) => {
  out = (0, _vectors.setC4)(out || src, src[0], src[1], src[2], (0, _ensureAlpha.ensureAlpha)(src[3]));
  const x = (0, _vectors.dotS4)(out, mat, 0, 0) + mat[4];
  const y = (0, _vectors.dotS4)(out, mat, 0, 5) + mat[9];
  const z = (0, _vectors.dotS4)(out, mat, 0, 10) + mat[14];
  const w = (0, _vectors.dotS4)(out, mat, 0, 15) + mat[19];
  return clampOut ? (0, _vectors.setC4)(out, (0, _math.clamp01)(x), (0, _math.clamp01)(y), (0, _math.clamp01)(z), (0, _math.clamp01)(w)) : (0, _vectors.setC4)(out, x, y, z, w);
};

exports.mulV45 = mulV45;

const mulM45 = (a, b) => [(0, _vectors.dotS4)(b, a, 0, 0, 1, 5), (0, _vectors.dotS4)(b, a, 0, 1, 1, 5), (0, _vectors.dotS4)(b, a, 0, 2, 1, 5), (0, _vectors.dotS4)(b, a, 0, 3, 1, 5), (0, _vectors.dotS4)(b, a, 0, 4, 1, 5) + b[4], (0, _vectors.dotS4)(b, a, 5, 0, 1, 5), (0, _vectors.dotS4)(b, a, 5, 1, 1, 5), (0, _vectors.dotS4)(b, a, 5, 2, 1, 5), (0, _vectors.dotS4)(b, a, 5, 3, 1, 5), (0, _vectors.dotS4)(b, a, 5, 4, 1, 5) + b[9], (0, _vectors.dotS4)(b, a, 10, 0, 1, 5), (0, _vectors.dotS4)(b, a, 10, 1, 1, 5), (0, _vectors.dotS4)(b, a, 10, 2, 1, 5), (0, _vectors.dotS4)(b, a, 10, 3, 1, 5), (0, _vectors.dotS4)(b, a, 10, 4, 1, 5) + b[14], (0, _vectors.dotS4)(b, a, 15, 0, 1, 5), (0, _vectors.dotS4)(b, a, 15, 1, 1, 5), (0, _vectors.dotS4)(b, a, 15, 2, 1, 5), (0, _vectors.dotS4)(b, a, 15, 3, 1, 5), (0, _vectors.dotS4)(b, a, 15, 4, 1, 5) + b[19]];

exports.mulM45 = mulM45;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./ensure-alpha":"../node_modules/@thi.ng/color/internal/ensure-alpha.js"}],"../node_modules/@thi.ng/color/rgba-xyza.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rgbaXyza = void 0;

var _clamp = require("./clamp");

var _constants = require("./constants");

var _ensureAlpha = require("./internal/ensure-alpha");

var _matrixOps = require("./internal/matrix-ops");

/**
 * {@link https://en.wikipedia.org/wiki/CIE_1931_color_space}
 *
 * @param out - result
 * @param src - source color
 */
const rgbaXyza = (out, src) => {
  out = (0, _matrixOps.mulV33)(null, _constants.RGB_XYZ, (0, _clamp.clamp)(out || src, src), false);
  out[3] = (0, _ensureAlpha.ensureAlpha)(src[3]);
  return out;
};

exports.rgbaXyza = rgbaXyza;
},{"./clamp":"../node_modules/@thi.ng/color/clamp.js","./constants":"../node_modules/@thi.ng/color/constants.js","./internal/ensure-alpha":"../node_modules/@thi.ng/color/internal/ensure-alpha.js","./internal/matrix-ops":"../node_modules/@thi.ng/color/internal/matrix-ops.js"}],"../node_modules/@thi.ng/color/rgba-ycbcra.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rgbaYcbcra = void 0;

var _vectors = require("@thi.ng/vectors");

var _clamp = require("./clamp");

var _luminanceRgb = require("./luminance-rgb");

const rgbaYcbcra = (out, src) => {
  out = (0, _clamp.clamp)(out || src, src);
  const y = (0, _luminanceRgb.luminanceRGB)(src);
  return (0, _vectors.setC3)(out, y, (src[2] - y) * 0.565, (src[0] - y) * 0.713);
};

exports.rgbaYcbcra = rgbaYcbcra;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./clamp":"../node_modules/@thi.ng/color/clamp.js","./luminance-rgb":"../node_modules/@thi.ng/color/luminance-rgb.js"}],"../node_modules/@thi.ng/color/xyza-rgba.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.xyzaRgba = void 0;

var _constants = require("./constants");

var _matrixOps = require("./internal/matrix-ops");

/**
 * {@link https://en.wikipedia.org/wiki/CIE_1931_color_space}
 *
 * @param out - result
 * @param src - source color
 */
const xyzaRgba = (out, src) => (0, _matrixOps.mulV33)(out || src, _constants.XYZ_RGB, src);

exports.xyzaRgba = xyzaRgba;
},{"./constants":"../node_modules/@thi.ng/color/constants.js","./internal/matrix-ops":"../node_modules/@thi.ng/color/internal/matrix-ops.js"}],"../node_modules/@thi.ng/color/ycbcra-rgba.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ycbcraRgba = void 0;

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

var _ensureAlpha = require("./internal/ensure-alpha");

const ycbcraRgba = (out, src) => {
  const y = src[0];
  const b = src[1];
  const r = src[2];
  return (0, _vectors.setC4)(out || [], (0, _math.clamp01)(y + 1.403 * r), (0, _math.clamp01)(y - 0.344 * b - 0.714 * r), (0, _math.clamp01)(y + 1.77 * b), (0, _ensureAlpha.ensureAlpha)(src[3]));
};

exports.ycbcraRgba = ycbcraRgba;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./internal/ensure-alpha":"../node_modules/@thi.ng/color/internal/ensure-alpha.js"}],"../node_modules/@thi.ng/color/convert.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.asCSS = asCSS;
exports.asRGBA = asRGBA;
exports.asHCYA = asHCYA;
exports.asHSIA = asHSIA;
exports.asHSLA = asHSLA;
exports.asHSVA = asHSVA;
exports.asXYZA = asXYZA;
exports.asYCbCrA = asYCbCrA;
exports.convert = void 0;

var _defmulti = require("@thi.ng/defmulti");

var _errors = require("@thi.ng/errors");

var _constants = require("./constants");

var _hcyaRgba = require("./hcya-rgba");

var _hsiaRgba = require("./hsia-rgba");

var _hslaCss = require("./hsla-css");

var _hslaHsva = require("./hsla-hsva");

var _hslaRgba = require("./hsla-rgba");

var _hsvaCss = require("./hsva-css");

var _hsvaHsla = require("./hsva-hsla");

var _hsvaRgba = require("./hsva-rgba");

var _intCss = require("./int-css");

var _intRgba = require("./int-rgba");

var _parseCss = require("./parse-css");

var _rgbaCss = require("./rgba-css");

var _rgbaHcya = require("./rgba-hcya");

var _rgbaHsia = require("./rgba-hsia");

var _rgbaHsla = require("./rgba-hsla");

var _rgbaHsva = require("./rgba-hsva");

var _rgbaInt = require("./rgba-int");

var _rgbaXyza = require("./rgba-xyza");

var _rgbaYcbcra = require("./rgba-ycbcra");

var _xyzaRgba = require("./xyza-rgba");

var _ycbcraRgba = require("./ycbcra-rgba");

const convert = (0, _defmulti.defmulti)((col, mdest, msrc) => col.mode !== undefined ? `${mdest}-${col.mode}` : msrc !== undefined ? `${mdest}-${msrc}` : (0, _errors.illegalArgs)(`missing src color mode`));
exports.convert = convert;
convert.add(_defmulti.DEFAULT, (col, mdest, msrc) => col.mode !== undefined && col.mode === mdest || mdest === msrc ? col : (0, _errors.illegalArgs)(`missing conversion for mode ${msrc} -> ${mdest}`));

function asCSS(col, mode) {
  return convert(col, _constants.ColorMode.CSS, mode);
}

function asRGBA(col, mode) {
  return convert(col, _constants.ColorMode.RGBA, mode);
}

function asHCYA(col, mode) {
  return convert(col, _constants.ColorMode.HCYA, mode);
}

function asHSIA(col, mode) {
  return convert(col, _constants.ColorMode.HSIA, mode);
}

function asHSLA(col, mode) {
  return convert(col, _constants.ColorMode.HSLA, mode);
}

function asHSVA(col, mode) {
  return convert(col, _constants.ColorMode.HSVA, mode);
}

function asXYZA(col, mode) {
  return convert(col, _constants.ColorMode.XYZA, mode);
}

function asYCbCrA(col, mode) {
  return convert(col, _constants.ColorMode.YCBCRA, mode);
}

const defConversion = (dest, src, impl) => convert.add(`${dest}-${src}`, impl);

const defConversions = (src, toRGBA, ...dest) => {
  defConversion(_constants.ColorMode.RGBA, src, x => toRGBA([], x));
  dest.forEach(id => defConversion(id, src, x => convert(toRGBA([], x), id, _constants.ColorMode.RGBA)));
}; // CSS


defConversion(_constants.ColorMode.RGBA, _constants.ColorMode.CSS, x => (0, _parseCss.parseCss)(x));
[_constants.ColorMode.HCYA, _constants.ColorMode.HSIA, _constants.ColorMode.HSLA, _constants.ColorMode.HSVA, _constants.ColorMode.INT32, _constants.ColorMode.XYZA, _constants.ColorMode.YCBCRA].forEach(id => defConversion(id, _constants.ColorMode.CSS, x => convert((0, _parseCss.parseCss)(x), id, _constants.ColorMode.RGBA))); // Int

defConversions(_constants.ColorMode.INT32, _intRgba.int32Rgba, _constants.ColorMode.HCYA, _constants.ColorMode.HSIA, _constants.ColorMode.HSLA, _constants.ColorMode.HSVA, _constants.ColorMode.XYZA, _constants.ColorMode.YCBCRA);
defConversion(_constants.ColorMode.CSS, _constants.ColorMode.INT32, x => (0, _intCss.int32Css)(x)); // HCYA

defConversions(_constants.ColorMode.HCYA, _hcyaRgba.hcyaRgba, _constants.ColorMode.CSS, _constants.ColorMode.INT32, _constants.ColorMode.HSLA, _constants.ColorMode.HSVA, _constants.ColorMode.XYZA, _constants.ColorMode.YCBCRA); // HSIA

defConversions(_constants.ColorMode.HSIA, _hsiaRgba.hsiaRgba, _constants.ColorMode.CSS, _constants.ColorMode.INT32, _constants.ColorMode.HCYA, _constants.ColorMode.HSLA, _constants.ColorMode.HSVA, _constants.ColorMode.XYZA, _constants.ColorMode.YCBCRA); // HSLA

defConversions(_constants.ColorMode.HSLA, _hslaRgba.hslaRgba, _constants.ColorMode.HCYA, _constants.ColorMode.HSIA, _constants.ColorMode.INT32, _constants.ColorMode.XYZA, _constants.ColorMode.YCBCRA);
defConversion(_constants.ColorMode.CSS, _constants.ColorMode.HSLA, x => (0, _hslaCss.hslaCss)(x));
defConversion(_constants.ColorMode.HSVA, _constants.ColorMode.HSLA, x => (0, _hslaHsva.hslaHsva)([], x)); // HSVA

defConversions(_constants.ColorMode.HSVA, _hsvaRgba.hsvaRgba, _constants.ColorMode.HCYA, _constants.ColorMode.HSIA, _constants.ColorMode.INT32, _constants.ColorMode.XYZA, _constants.ColorMode.YCBCRA);
defConversion(_constants.ColorMode.CSS, _constants.ColorMode.HSVA, x => (0, _hsvaCss.hsvaCss)(x));
defConversion(_constants.ColorMode.HSLA, _constants.ColorMode.HSVA, x => (0, _hsvaHsla.hsvaHsla)([], x)); // RGBA

[[_constants.ColorMode.HCYA, _rgbaHcya.rgbaHcya], [_constants.ColorMode.HSIA, _rgbaHsia.rgbaHsia], [_constants.ColorMode.HSLA, _rgbaHsla.rgbaHsla], [_constants.ColorMode.HSVA, _rgbaHsva.rgbaHsva], [_constants.ColorMode.XYZA, _rgbaXyza.rgbaXyza], [_constants.ColorMode.YCBCRA, _rgbaYcbcra.rgbaYcbcra]].forEach(([id, fn]) => defConversion(id, _constants.ColorMode.RGBA, x => fn([], x)));
defConversion(_constants.ColorMode.CSS, _constants.ColorMode.RGBA, x => (0, _rgbaCss.rgbaCss)(x));
defConversion(_constants.ColorMode.INT32, _constants.ColorMode.RGBA, x => (0, _rgbaInt.rgbaInt)(x)); // XYZA

defConversions(_constants.ColorMode.XYZA, _xyzaRgba.xyzaRgba, _constants.ColorMode.CSS, _constants.ColorMode.HCYA, _constants.ColorMode.HSIA, _constants.ColorMode.HSLA, _constants.ColorMode.HSVA, _constants.ColorMode.INT32, _constants.ColorMode.YCBCRA); // YCbCr

defConversions(_constants.ColorMode.YCBCRA, _ycbcraRgba.ycbcraRgba, _constants.ColorMode.CSS, _constants.ColorMode.HCYA, _constants.ColorMode.HSIA, _constants.ColorMode.HSLA, _constants.ColorMode.HSVA, _constants.ColorMode.INT32, _constants.ColorMode.XYZA);
},{"@thi.ng/defmulti":"../node_modules/@thi.ng/defmulti/index.js","@thi.ng/errors":"../node_modules/@thi.ng/errors/index.js","./constants":"../node_modules/@thi.ng/color/constants.js","./hcya-rgba":"../node_modules/@thi.ng/color/hcya-rgba.js","./hsia-rgba":"../node_modules/@thi.ng/color/hsia-rgba.js","./hsla-css":"../node_modules/@thi.ng/color/hsla-css.js","./hsla-hsva":"../node_modules/@thi.ng/color/hsla-hsva.js","./hsla-rgba":"../node_modules/@thi.ng/color/hsla-rgba.js","./hsva-css":"../node_modules/@thi.ng/color/hsva-css.js","./hsva-hsla":"../node_modules/@thi.ng/color/hsva-hsla.js","./hsva-rgba":"../node_modules/@thi.ng/color/hsva-rgba.js","./int-css":"../node_modules/@thi.ng/color/int-css.js","./int-rgba":"../node_modules/@thi.ng/color/int-rgba.js","./parse-css":"../node_modules/@thi.ng/color/parse-css.js","./rgba-css":"../node_modules/@thi.ng/color/rgba-css.js","./rgba-hcya":"../node_modules/@thi.ng/color/rgba-hcya.js","./rgba-hsia":"../node_modules/@thi.ng/color/rgba-hsia.js","./rgba-hsla":"../node_modules/@thi.ng/color/rgba-hsla.js","./rgba-hsva":"../node_modules/@thi.ng/color/rgba-hsva.js","./rgba-int":"../node_modules/@thi.ng/color/rgba-int.js","./rgba-xyza":"../node_modules/@thi.ng/color/rgba-xyza.js","./rgba-ycbcra":"../node_modules/@thi.ng/color/rgba-ycbcra.js","./xyza-rgba":"../node_modules/@thi.ng/color/xyza-rgba.js","./ycbcra-rgba":"../node_modules/@thi.ng/color/ycbcra-rgba.js"}],"../node_modules/@thi.ng/color/resolve.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.resolveAsCSS = void 0;

var _checks = require("@thi.ng/checks");

var _constants = require("./constants");

var _convert = require("./convert");

/**
 * Takes a color in one of the following formats and tries to convert it
 * to a CSS string:
 *
 * - any IColor instance
 * - raw RGBA vector
 * - number ((A)RGB int)
 * - string (unchanged)
 *
 * @param col - source color
 */
const resolveAsCSS = col => (0, _checks.isArrayLike)(col) ? (0, _checks.isNumber)(col.mode) ? (0, _convert.asCSS)(col) : (0, _convert.asCSS)(col, _constants.ColorMode.RGBA) : (0, _checks.isNumber)(col) ? (0, _convert.asCSS)(col, _constants.ColorMode.INT32) : col;

exports.resolveAsCSS = resolveAsCSS;
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","./constants":"../node_modules/@thi.ng/color/constants.js","./convert":"../node_modules/@thi.ng/color/convert.js"}],"../node_modules/@thi.ng/color/srgba.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.srgbaRgba = exports.rgbaSrgba = exports.srgbLinear = exports.linearSrgb = void 0;

var _vectors = require("@thi.ng/vectors");

var _constants = require("./constants");

var _ensureAlpha = require("./internal/ensure-alpha");

/**
 * Maps a single linear RGB channel value to sRGB.
 *
 * {@link https://en.wikipedia.org/wiki/SRGB}
 *
 * @param x - channel value
 */
const linearSrgb = x => x <= 0.0031308 ? 12.92 * x : (1.0 + _constants.SRGB_ALPHA) * Math.pow(x, 1.0 / 2.4) - _constants.SRGB_ALPHA;
/**
 * Maps a single linear sRGB channel value to linear RGB.
 *
 * {@link https://en.wikipedia.org/wiki/SRGB}
 *
 * @param x - channel value
 */


exports.linearSrgb = linearSrgb;

const srgbLinear = x => x <= 0.04045 ? x / 12.92 : Math.pow((x + _constants.SRGB_ALPHA) / (1 + _constants.SRGB_ALPHA), 2.4);
/**
 * Converts linear RGB to sRGB.
 *
 * @param out - result
 * @param src - source color
 */


exports.srgbLinear = srgbLinear;

const rgbaSrgba = (out, src) => (0, _vectors.setC4)(out || src, linearSrgb(src[0]), linearSrgb(src[1]), linearSrgb(src[2]), (0, _ensureAlpha.ensureAlpha)(src[3]));
/**
 * Converts sRGB to linear RGB.
 *
 * @param out - result
 * @param src - source color
 */


exports.rgbaSrgba = rgbaSrgba;

const srgbaRgba = (out, src) => (0, _vectors.setC4)(out || src, srgbLinear(src[0]), srgbLinear(src[1]), srgbLinear(src[2]), (0, _ensureAlpha.ensureAlpha)(src[3]));

exports.srgbaRgba = srgbaRgba;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./constants":"../node_modules/@thi.ng/color/constants.js","./internal/ensure-alpha":"../node_modules/@thi.ng/color/internal/ensure-alpha.js"}],"../node_modules/@thi.ng/color/int.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Int32 = exports.int24 = exports.int32 = void 0;

var _constants = require("./constants");

/**
 * Returns new {@link Int32} wrapping given ARGB int.
 *
 * @param rgba - packed ARGB int
 */
const int32 = rgba => new Int32(rgba);
/**
 * Returns new {@link Int32} wrapping given 24bit RGB color and setting alpha
 * channel set to 100% opaque.
 *
 * @param rgb - packed RGB int
 */


exports.int32 = int32;

const int24 = rgb => new Int32(rgb | 0xff000000);

exports.int24 = int24;

class Int32 {
  constructor(col) {
    this.value = col >>> 0;
  }

  get mode() {
    return _constants.ColorMode.INT32;
  }

  copy() {
    return new Int32(this.value);
  }

  deref() {
    return this.value;
  }

}

exports.Int32 = Int32;
},{"./constants":"../node_modules/@thi.ng/color/constants.js"}],"../node_modules/@thi.ng/color/css.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CSS = exports.css = void 0;

var _constants = require("./constants");

const css = col => new CSS(col);

exports.css = css;

class CSS {
  constructor(col) {
    this.value = col;
  }

  get mode() {
    return _constants.ColorMode.CSS;
  }

  copy() {
    return new CSS(this.value);
  }

  deref() {
    return this.value;
  }

}

exports.CSS = CSS;
},{"./constants":"../node_modules/@thi.ng/color/constants.js"}],"../node_modules/@thi.ng/color/internal/acolor.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AColor = void 0;

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

class AColor {
  constructor(buf, offset = 0, stride = 1) {
    this.buf = buf || [0, 0, 0, 0];
    this.offset = offset;
    this.stride = stride;
  }

  [Symbol.iterator]() {
    return (0, _vectors.stridedValues)(this.buf, 4, this.offset, this.stride);
  }

  get length() {
    return 4;
  }

  deref() {
    return [this[0], this[1], this[2], this[3]];
  }

  eqDelta(o, eps = _math.EPS) {
    return (0, _vectors.eqDelta4)(this, o, eps);
  }

}

exports.AColor = AColor;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/color/internal/ensure-args.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ensureArgs = void 0;

/** @internal */
const ensureArgs = args => {
  if (typeof args[0] === "number") {
    switch (args.length) {
      case 1:
        return args.push(0, 0, 1), [args];

      case 2:
        return args.push(0, 1), [args];

      case 3:
        return args.push(1), [args];

      default:
        return [args];
    }
  }

  return args;
};

exports.ensureArgs = ensureArgs;
},{}],"../node_modules/@thi.ng/color/hcya.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hcya = hcya;
exports.HCYA = void 0;

var _vectors = require("@thi.ng/vectors");

var _constants = require("./constants");

var _acolor = require("./internal/acolor");

var _ensureArgs = require("./internal/ensure-args");

function hcya(...args) {
  return new HCYA(...(0, _ensureArgs.ensureArgs)(args));
}

class HCYA extends _acolor.AColor {
  get mode() {
    return _constants.ColorMode.HCYA;
  }

  copy() {
    return new HCYA(this.deref());
  }

  copyView() {
    return new HCYA(this.buf, this.offset, this.stride);
  }

  empty() {
    return new HCYA();
  }

}

exports.HCYA = HCYA;
(0, _vectors.declareIndices)(HCYA.prototype, ["h", "c", "y", "a"]);
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./constants":"../node_modules/@thi.ng/color/constants.js","./internal/acolor":"../node_modules/@thi.ng/color/internal/acolor.js","./internal/ensure-args":"../node_modules/@thi.ng/color/internal/ensure-args.js"}],"../node_modules/@thi.ng/color/hsia.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hsia = hsia;
exports.HSIA = void 0;

var _vectors = require("@thi.ng/vectors");

var _constants = require("./constants");

var _acolor = require("./internal/acolor");

var _ensureArgs = require("./internal/ensure-args");

function hsia(...args) {
  return new HSIA(...(0, _ensureArgs.ensureArgs)(args));
}

class HSIA extends _acolor.AColor {
  get mode() {
    return _constants.ColorMode.HSIA;
  }

  copy() {
    return new HSIA(this.deref());
  }

  copyView() {
    return new HSIA(this.buf, this.offset, this.stride);
  }

  empty() {
    return new HSIA();
  }

}

exports.HSIA = HSIA;
(0, _vectors.declareIndices)(HSIA.prototype, ["h", "s", "i", "a"]);
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./constants":"../node_modules/@thi.ng/color/constants.js","./internal/acolor":"../node_modules/@thi.ng/color/internal/acolor.js","./internal/ensure-args":"../node_modules/@thi.ng/color/internal/ensure-args.js"}],"../node_modules/@thi.ng/color/hsla.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hsla = hsla;
exports.HSLA = void 0;

var _vectors = require("@thi.ng/vectors");

var _constants = require("./constants");

var _acolor = require("./internal/acolor");

var _ensureArgs = require("./internal/ensure-args");

function hsla(...args) {
  return new HSLA(...(0, _ensureArgs.ensureArgs)(args));
}

class HSLA extends _acolor.AColor {
  get mode() {
    return _constants.ColorMode.HSLA;
  }

  copy() {
    return new HSLA(this.deref());
  }

  copyView() {
    return new HSLA(this.buf, this.offset, this.stride);
  }

  empty() {
    return new HSLA();
  }

}

exports.HSLA = HSLA;
(0, _vectors.declareIndices)(HSLA.prototype, ["h", "s", "l", "a"]);
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./constants":"../node_modules/@thi.ng/color/constants.js","./internal/acolor":"../node_modules/@thi.ng/color/internal/acolor.js","./internal/ensure-args":"../node_modules/@thi.ng/color/internal/ensure-args.js"}],"../node_modules/@thi.ng/color/hsva.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hsva = hsva;
exports.HSVA = void 0;

var _vectors = require("@thi.ng/vectors");

var _constants = require("./constants");

var _acolor = require("./internal/acolor");

var _ensureArgs = require("./internal/ensure-args");

function hsva(...args) {
  return new HSVA(...(0, _ensureArgs.ensureArgs)(args));
}

class HSVA extends _acolor.AColor {
  get mode() {
    return _constants.ColorMode.HSVA;
  }

  copy() {
    return new HSVA(this.deref());
  }

  copyView() {
    return new HSVA(this.buf, this.offset, this.stride);
  }

  empty() {
    return new HSVA();
  }

}

exports.HSVA = HSVA;
(0, _vectors.declareIndices)(HSVA.prototype, ["h", "s", "v", "a"]);
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./constants":"../node_modules/@thi.ng/color/constants.js","./internal/acolor":"../node_modules/@thi.ng/color/internal/acolor.js","./internal/ensure-args":"../node_modules/@thi.ng/color/internal/ensure-args.js"}],"../node_modules/@thi.ng/color/rgba.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rgba = rgba;
exports.RGBA = void 0;

var _vectors = require("@thi.ng/vectors");

var _constants = require("./constants");

var _acolor = require("./internal/acolor");

var _ensureArgs = require("./internal/ensure-args");

function rgba(...args) {
  return new RGBA(...(0, _ensureArgs.ensureArgs)(args));
}

class RGBA extends _acolor.AColor {
  get mode() {
    return _constants.ColorMode.RGBA;
  }

  copy() {
    return new RGBA(this.deref());
  }

  copyView() {
    return new RGBA(this.buf, this.offset, this.stride);
  }

  empty() {
    return new RGBA();
  }

}

exports.RGBA = RGBA;
(0, _vectors.declareIndices)(RGBA.prototype, ["r", "g", "b", "a"]);
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./constants":"../node_modules/@thi.ng/color/constants.js","./internal/acolor":"../node_modules/@thi.ng/color/internal/acolor.js","./internal/ensure-args":"../node_modules/@thi.ng/color/internal/ensure-args.js"}],"../node_modules/@thi.ng/color/xyza.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.xyza = xyza;
exports.XYZA = void 0;

var _vectors = require("@thi.ng/vectors");

var _constants = require("./constants");

var _acolor = require("./internal/acolor");

var _ensureArgs = require("./internal/ensure-args");

function xyza(...args) {
  return new XYZA(...(0, _ensureArgs.ensureArgs)(args));
}

class XYZA extends _acolor.AColor {
  get mode() {
    return _constants.ColorMode.XYZA;
  }

  copy() {
    return new XYZA(this.deref());
  }

  copyView() {
    return new XYZA(this.buf, this.offset, this.stride);
  }

  empty() {
    return new XYZA();
  }

}

exports.XYZA = XYZA;
(0, _vectors.declareIndices)(XYZA.prototype, ["x", "y", "z", "a"]);
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./constants":"../node_modules/@thi.ng/color/constants.js","./internal/acolor":"../node_modules/@thi.ng/color/internal/acolor.js","./internal/ensure-args":"../node_modules/@thi.ng/color/internal/ensure-args.js"}],"../node_modules/@thi.ng/color/ycbcr.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ycbcra = ycbcra;
exports.YCbCrA = void 0;

var _vectors = require("@thi.ng/vectors");

var _constants = require("./constants");

var _acolor = require("./internal/acolor");

var _ensureArgs = require("./internal/ensure-args");

function ycbcra(...args) {
  return new YCbCrA(...(0, _ensureArgs.ensureArgs)(args));
}

class YCbCrA extends _acolor.AColor {
  get mode() {
    return _constants.ColorMode.YCBCRA;
  }

  copy() {
    return new YCbCrA(this.deref());
  }

  copyView() {
    return new YCbCrA(this.buf, this.offset, this.stride);
  }

  empty() {
    return new YCbCrA();
  }

}

exports.YCbCrA = YCbCrA;
(0, _vectors.declareIndices)(YCbCrA.prototype, ["y", "b", "r", "a"]);
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./constants":"../node_modules/@thi.ng/color/constants.js","./internal/acolor":"../node_modules/@thi.ng/color/internal/acolor.js","./internal/ensure-args":"../node_modules/@thi.ng/color/internal/ensure-args.js"}],"../node_modules/@thi.ng/color/alpha.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setAlpha = exports.alpha = void 0;

var _vectors = require("@thi.ng/vectors");

const alpha = src => src[3] !== undefined ? src[3] : 1;

exports.alpha = alpha;

const setAlpha = (out, src, alpha) => (0, _vectors.setC4)(out || src, src[0], src[1], src[2], alpha);

exports.setAlpha = setAlpha;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/color/closest-hue.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.closestPrimaryHue = exports.closestHue = void 0;

var _ensureHue = require("./internal/ensure-hue");

/**
 * Returns the {@link Hue} constant of the closest of 12 defined hues.
 *
 * @param h - normalized hue
 */
const closestHue = h => Math.round((0, _ensureHue.ensureHue)(h) * 12) % 12;
/**
 * Returns the {@link Hue} constant of the closest primary or secondary hue.
 *
 * @param h - normalized hue
 */


exports.closestHue = closestHue;

const closestPrimaryHue = h => Math.round((0, _ensureHue.ensureHue)(h) * 12) % 12 & 0xe;

exports.closestPrimaryHue = closestPrimaryHue;
},{"./internal/ensure-hue":"../node_modules/@thi.ng/color/internal/ensure-hue.js"}],"../node_modules/@thi.ng/color/cosine-gradients.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.multiCosineGradient = exports.cosineCoeffs = exports.cosineGradient = exports.cosineColor = exports.GRADIENTS = void 0;

var _compose = require("@thi.ng/compose");

var _math = require("@thi.ng/math");

var _transducers = require("@thi.ng/transducers");

var _clamp = require("./clamp");

// see http://dev.thi.ng/gradients/ - unlike the clojure version, these
// presets are for RGBA (though the alpha channel is configured to
// always be 1.0)
const GRADIENTS = {
  "blue-cyan": [[0, 0.5, 0.5, 1], [0, 0.5, 0.5, 0], [0, 0.5, 0.3333, 0], [0, 0.5, 0.6666, 0]],
  "blue-magenta-orange": [[0.938, 0.328, 0.718, 1], [0.659, 0.438, 0.328, 0], [0.388, 0.388, 0.296, 0], [2.538, 2.478, 0.168, 0]],
  "blue-white-red": [[0.66, 0.56, 0.68, 1], [0.718, 0.438, 0.72, 0], [0.52, 0.8, 0.52, 0], [-0.43, -0.397, -0.083, 0]],
  "cyan-magenta": [[0.61, 0.498, 0.65, 1], [0.388, 0.498, 0.35, 0], [0.53, 0.498, 0.62, 0], [3.438, 3.012, 4.025, 0]],
  "green-blue-orange": [[0.892, 0.725, 0, 1], [0.878, 0.278, 0.725, 0], [0.332, 0.518, 0.545, 0], [2.44, 5.043, 0.732, 0]],
  "green-cyan": [[0, 0.5, 0.5, 1], [0, 0.5, 0.5, 0], [0, 0.3333, 0.5, 0], [0, 0.6666, 0.5, 0]],
  "green-magenta": [[0.6666, 0.5, 0.5, 1], [0.5, 0.6666, 0.5, 0], [0.6666, 0.666, 0.5, 0], [0.2, 0, 0.5, 0]],
  "green-red": [[0.5, 0.5, 0, 1], [0.5, 0.5, 0, 0], [0.5, 0.5, 0, 0], [0.5, 0, 0, 0]],
  "magenta-green": [[0.59, 0.811, 0.12, 1], [0.41, 0.392, 0.59, 0], [0.94, 0.548, 0.278, 0], [-4.242, -6.611, -4.045, 0]],
  "orange-blue": [[0.5, 0.5, 0.5, 1], [0.5, 0.5, 0.5, 0], [0.8, 0.8, 0.5, 0], [0, 0.2, 0.5, 0]],
  "orange-magenta-blue": [[0.821, 0.328, 0.242, 1], [0.659, 0.481, 0.896, 0], [0.612, 0.34, 0.296, 0], [2.82, 3.026, -0.273, 0]],
  rainbow1: [[0.5, 0.5, 0.5, 1], [0.5, 0.5, 0.5, 0], [1.0, 1.0, 1.0, 0], [0, 0.3333, 0.6666, 0]],
  rainbow2: [[0.5, 0.5, 0.5, 1], [0.666, 0.666, 0.666, 0], [1.0, 1.0, 1.0, 0], [0, 0.3333, 0.6666, 0]],
  rainbow3: [[0.5, 0.5, 0.5, 1], [0.75, 0.75, 0.75, 0], [1.0, 1.0, 1.0, 0], [0, 0.3333, 0.6666, 0]],
  rainbow4: [[0.5, 0.5, 0.5, 1], [1, 1, 1, 0], [1.0, 1.0, 1.0, 0], [0, 0.3333, 0.6666, 0]],
  "red-blue": [[0.5, 0, 0.5, 1], [0.5, 0, 0.5, 0], [0.5, 0, 0.5, 0], [0, 0, 0.5, 0]],
  "yellow-green-blue": [[0.65, 0.5, 0.31, 1], [-0.65, 0.5, 0.6, 0], [0.333, 0.278, 0.278, 0], [0.66, 0, 0.667, 0]],
  "yellow-magenta-cyan": [[1, 0.5, 0.5, 1], [0.5, 0.5, 0.5, 0], [0.75, 1.0, 0.6666, 0], [0.8, 1.0, 0.3333, 0]],
  "yellow-purple-magenta": [[0.731, 1.098, 0.192, 1], [0.358, 1.09, 0.657, 0], [1.077, 0.36, 0.328, 0], [0.965, 2.265, 0.837, 0]],
  "yellow-red": [[0.5, 0.5, 0, 1], [0.5, 0.5, 0, 0], [0.1, 0.5, 0, 0], [0, 0, 0, 0]],
  "purple-orange-cyan": [[0.5, 0.5, 0.5, 1], [0.5, 0.5, 0.5, 0], [0.5, 0.5, 1, 0], [-0.25, 0.5, 1, 0]],
  heat1: [[0.5, 0.4, 0.25, 1], [0.5, 0.5, 0.666, 0], [0.5, 0.666, 0.8, 0], [0.5, 0.666, 0.8, 0]]
};
exports.GRADIENTS = GRADIENTS;

const cosineColor = (spec, t) => (0, _transducers.transduce)((0, _transducers.map)(([a, b, c, d]) => (0, _math.clamp01)(a + b * Math.cos(_math.TAU * (c * t + d)))), (0, _transducers.push)(), // @ts-ignore
(0, _transducers.zip)(...spec));

exports.cosineColor = cosineColor;

const cosineGradient = (n, spec) => (0, _transducers.transduce)((0, _transducers.map)((0, _compose.partial)(cosineColor, spec)), (0, _transducers.push)(), (0, _transducers.normRange)(n - 1));
/**
 * Returns coefficients to produce a cosine gradient between the two
 * given RGBA colors.
 *
 * @param from - start color
 * @param to - end color
 */


exports.cosineGradient = cosineGradient;

const cosineCoeffs = (from, to) => {
  from = (0, _clamp.clamp)([], from);
  to = (0, _clamp.clamp)([], to);
  const amp = [...(0, _transducers.map)(([a, b]) => 0.5 * (a - b), (0, _transducers.zip)(from, to))];
  return [[...(0, _transducers.map)(([s, a]) => s - a, (0, _transducers.zip)(from, amp))], amp, [-0.5, -0.5, -0.5, -0.5], [0, 0, 0, 0]];
};
/**
 * Multi-color cosine gradient generator using RGBA color stops. Returns
 * an array of `n+1` color samples.
 *
 * @example
 * ```ts
 * multiCosineGradient(
 *   // num colors to produce
 *   10,
 *   // gradient stops (normalized positions)
 *   [0.1, [1, 0, 0, 1]], [0.5, [0, 1, 0, 1]], [0.9, [0, 0, 1, 1]]
 * )
 * ```
 *
 * {@link @thi.ng/transducers#tween}
 *
 * @param num - number of color steps to produce
 * @param stops - gradient stops
 */


exports.cosineCoeffs = cosineCoeffs;

const multiCosineGradient = (num, ...stops) => [...(0, _transducers.tween)({
  num,
  min: 0,
  max: 1,
  init: cosineCoeffs,
  mix: cosineColor,
  stops
})];

exports.multiCosineGradient = multiCosineGradient;
},{"@thi.ng/compose":"../node_modules/@thi.ng/compose/index.js","@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/transducers":"../node_modules/@thi.ng/transducers/index.js","./clamp":"../node_modules/@thi.ng/color/clamp.js"}],"../node_modules/@thi.ng/color/invert.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.invertInt = exports.invertRGB = void 0;

var _vectors = require("@thi.ng/vectors");

var _clamp = require("./clamp");

/**
 * Inverts the RGB channels of an RGBA color.
 *
 * @param out - result
 * @param src - source color
 */
const invertRGB = (out, src) => (out = (0, _clamp.clamp)(out || src, src), (0, _vectors.sub3)(out, _vectors.ONE3, out));
/**
 * Inverts the lowest 24 bits of an ARGB int. Does not modify alpha.
 *
 * @param src - packed RGB int
 */


exports.invertRGB = invertRGB;

const invertInt = src => src ^ 0xffffff;

exports.invertInt = invertInt;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./clamp":"../node_modules/@thi.ng/color/clamp.js"}],"../node_modules/@thi.ng/color/luminance.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.luminance = void 0;

var _defmulti = require("@thi.ng/defmulti");

var _errors = require("@thi.ng/errors");

var _constants = require("./constants");

var _convert = require("./convert");

var _luminanceRgb = require("./luminance-rgb");

/**
 * Multi-method to compute relative luminance from any supported input
 * color format. Unless color already is an RGBA or ARGB int (plain or
 * wrapped), it will first be converted to RGBA.
 */
const luminance = (0, _defmulti.defmulti)((col, mode) => col.mode !== undefined ? col.mode : mode !== undefined ? mode : (0, _errors.illegalArgs)(`missing color mode`));
exports.luminance = luminance;
luminance.add(_constants.ColorMode.RGBA, x => (0, _luminanceRgb.luminanceRGB)(x));
luminance.add(_constants.ColorMode.INT32, x => (0, _luminanceRgb.luminanceInt)(typeof x === "number" ? x : x.deref()));
luminance.add(_defmulti.DEFAULT, (x, mode) => (0, _luminanceRgb.luminanceRGB)((0, _convert.convert)(x, _constants.ColorMode.RGBA, mode)));
},{"@thi.ng/defmulti":"../node_modules/@thi.ng/defmulti/index.js","@thi.ng/errors":"../node_modules/@thi.ng/errors/index.js","./constants":"../node_modules/@thi.ng/color/constants.js","./convert":"../node_modules/@thi.ng/color/convert.js","./luminance-rgb":"../node_modules/@thi.ng/color/luminance-rgb.js"}],"../node_modules/@thi.ng/color/mix.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mixAlpha = exports.mix = void 0;

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

const mix = _vectors.mixN4;
exports.mix = mix;

const mixAlpha = (out, a, b) => (0, _vectors.setC4)(out || a, (0, _math.mix)(a[0], b[0], a[3]), (0, _math.mix)(a[0], b[0], a[3]), (0, _math.mix)(a[0], b[0], a[3]), a[3]);

exports.mixAlpha = mixAlpha;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/color/transform.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.luminanceAlpha = exports.grayscale = exports.tint = exports.sepia = exports.temperature = exports.hueRotate = exports.saturation = exports.exposure = exports.contrast = exports.brightness = exports.subtract = exports.IDENTITY = exports.concat = exports.transform = void 0;

var _math = require("@thi.ng/math");

var _constants = require("./constants");

var _matrixOps = require("./internal/matrix-ops");

// https://drafts.fxtf.org/filter-effects/#feColorMatrixElement
const S0 = 0.072;
const S1 = 0.213;
const S2 = 0.285;
const S3 = 0.715;
const S4 = 0.787;
const S5 = 0.928;
const S6 = 0.14;
const S7 = 0.143;
const S8 = 0.283;
/**
 * Transforms `src` RGBA color with given matrix and stores result in
 * `out` (writes back to `src` if `out` is `null` or `undefined`).
 * Unless `clampOut` is false, the result color will be clamped to `[0,1]`
 * interval.
 *
 * @param out - result
 * @param mat - transform matrix
 * @param src - source color
 * @param clampOut - true, if result should be clamped to [0..1]
 */

const transform = _matrixOps.mulV45;
/**
 * Concatenates given color matrices by pairwise multiplying them in
 * left-right order. Returns combined result matrix to be used with
 * {@link transform}.
 *
 * @remarks
 * Using {@link concat} is the recommended way when applying multiple
 * color transformations in sequence. Since the transforms are combined
 * into a single matrix, it is faster than multiple, individual
 * {@link transform} calls and will also produce more correct results,
 * since result color clamping is only applied once at the end (by
 * default, unless disabled).
 *
 * @param mat - first matrix
 * @param xs - other matrices
 */

exports.transform = transform;

const concat = (mat, ...xs) => xs.reduce(_matrixOps.mulM45, mat); // prettier-ignore


exports.concat = concat;
const IDENTITY = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0];
/**
 * Returns a transformation matrix which subtracts user color from given
 * `src` color. With the default color white, this results in the
 * inverted color. Does NOT modify alpha channel.
 *
 * @param src - source color
 */
// prettier-ignore

exports.IDENTITY = IDENTITY;

const subtract = (src = _constants.WHITE) => [-1, 0, 0, 0, src[0], 0, -1, 0, 0, src[1], 0, 0, -1, 0, src[2], 0, 0, 0, 1, 0];
/**
 * Returns a transformation matrix which adds the given constant offset
 * `x` to RGB channels. Does NOT modify alpha channel.
 *
 * If `x < 0` results in darker color.
 * If `x > 0` results in brighter color.
 *
 * @param x - brightness offset
 */
// prettier-ignore


exports.subtract = subtract;

const brightness = x => [1, 0, 0, 0, x, 0, 1, 0, 0, x, 0, 0, 1, 0, x, 0, 0, 0, 1, 0]; // prettier-ignore


exports.brightness = brightness;

const contrast = (x, o = 0.5 * (1 - x)) => [x, 0, 0, 0, o, 0, x, 0, 0, o, 0, 0, x, 0, o, 0, 0, 0, 1, 0]; // prettier-ignore


exports.contrast = contrast;

const exposure = x => [x, 0, 0, 0, 0, 0, x, 0, 0, 0, 0, 0, x, 0, 0, 0, 0, 0, 1, 0]; // prettier-ignore


exports.exposure = exposure;

const saturation = x => [S1 + S4 * x, S3 - S3 * x, S0 - S0 * x, 0, 0, S1 - S1 * x, S3 + S2 * x, S0 - S0 * x, 0, 0, S1 - S1 * x, S3 - S3 * x, S0 + S5 * x, 0, 0, 0, 0, 0, 1, 0]; // prettier-ignore


exports.saturation = saturation;

const hueRotate = theta => {
  const s = Math.sin(theta);
  const c = Math.cos(theta);
  return [S1 + c * S4 - s * S1, S3 - c * S3 - s * S3, S0 - c * S0 + s * S5, 0, 0, S1 - c * S1 + s * S7, S3 + c * S2 + s * S6, S0 - c * S0 - s * S8, 0, 0, S1 - c * S1 - s * S4, S3 - c * S3 + s * S3, S0 + c * S5 + s * S0, 0, 0, 0, 0, 0, 1, 0];
}; // prettier-ignore


exports.hueRotate = hueRotate;

const temperature = x => [1 + x, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1 - x, 0, 0, 0, 0, 0, 1, 0]; // prettier-ignore


exports.temperature = temperature;

const sepia = (x = 1) => [(0, _math.mix)(1, 0.393, x), 0.769 * x, 0.189 * x, 0, 0, 0.349 * x, (0, _math.mix)(1, 0.686, x), 0.168 * x, 0, 0, 0.272 * x, 0.534 * x, (0, _math.mix)(1, 0.131, x), 0, 0, 0, 0, 0, 1, 0]; // prettier-ignore


exports.sepia = sepia;

const tint = x => [1 + x, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1 + x, 0, 0, 0, 0, 0, 1, 0];
/**
 * Returns transformation matrix which computes luminance of user color
 * (optionally with custom coefficients). Does NOT modify alpha channel.
 *
 * @remarks
 * See {@link RGB_LUMINANCE} for default coefficients
 *
 * @param offset - brightness offset
 * @param coeffs - luminance coefficients
 */
// prettier-ignore


exports.tint = tint;

const grayscale = (offset = 0, [r, g, b] = _constants.RGB_LUMINANCE) => [r, g, b, 0, offset, r, g, b, 0, offset, r, g, b, 0, offset, 0, 0, 0, 1, 0];
/**
 * Returns transformation matrix which computes luminance of user color
 * (optionally with custom coefficients), uses result as alpha channel
 * and clears RGB channels (all set to zero).
 *
 * @remarks
 * See {@link RGB_LUMINANCE} for default coefficients
 *
 * @param coeffs - luminance coefficients
 */
// prettier-ignore


exports.grayscale = grayscale;

const luminanceAlpha = ([r, g, b] = _constants.RGB_LUMINANCE) => [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, r, g, b, 0, 0];

exports.luminanceAlpha = luminanceAlpha;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","./constants":"../node_modules/@thi.ng/color/constants.js","./internal/matrix-ops":"../node_modules/@thi.ng/color/internal/matrix-ops.js"}],"../node_modules/@thi.ng/color/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _api = require("./api");

Object.keys(_api).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _api[key];
    }
  });
});

var _constants = require("./constants");

Object.keys(_constants).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _constants[key];
    }
  });
});

var _names = require("./names");

Object.keys(_names).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _names[key];
    }
  });
});

var _hcyaRgba = require("./hcya-rgba");

Object.keys(_hcyaRgba).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _hcyaRgba[key];
    }
  });
});

var _hsiaRgba = require("./hsia-rgba");

Object.keys(_hsiaRgba).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _hsiaRgba[key];
    }
  });
});

var _hslaCss = require("./hsla-css");

Object.keys(_hslaCss).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _hslaCss[key];
    }
  });
});

var _hslaHsva = require("./hsla-hsva");

Object.keys(_hslaHsva).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _hslaHsva[key];
    }
  });
});

var _hslaRgba = require("./hsla-rgba");

Object.keys(_hslaRgba).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _hslaRgba[key];
    }
  });
});

var _hsvaCss = require("./hsva-css");

Object.keys(_hsvaCss).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _hsvaCss[key];
    }
  });
});

var _hsvaHsla = require("./hsva-hsla");

Object.keys(_hsvaHsla).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _hsvaHsla[key];
    }
  });
});

var _hsvaRgba = require("./hsva-rgba");

Object.keys(_hsvaRgba).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _hsvaRgba[key];
    }
  });
});

var _hueRgba = require("./hue-rgba");

Object.keys(_hueRgba).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _hueRgba[key];
    }
  });
});

var _intCss = require("./int-css");

Object.keys(_intCss).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _intCss[key];
    }
  });
});

var _intRgba = require("./int-rgba");

Object.keys(_intRgba).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _intRgba[key];
    }
  });
});

var _kelvinRgba = require("./kelvin-rgba");

Object.keys(_kelvinRgba).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _kelvinRgba[key];
    }
  });
});

var _resolve = require("./resolve");

Object.keys(_resolve).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _resolve[key];
    }
  });
});

var _rgbaCss = require("./rgba-css");

Object.keys(_rgbaCss).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _rgbaCss[key];
    }
  });
});

var _rgbaHcva = require("./rgba-hcva");

Object.keys(_rgbaHcva).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _rgbaHcva[key];
    }
  });
});

var _rgbaHcya = require("./rgba-hcya");

Object.keys(_rgbaHcya).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _rgbaHcya[key];
    }
  });
});

var _rgbaHsia = require("./rgba-hsia");

Object.keys(_rgbaHsia).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _rgbaHsia[key];
    }
  });
});

var _rgbaHsla = require("./rgba-hsla");

Object.keys(_rgbaHsla).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _rgbaHsla[key];
    }
  });
});

var _rgbaHsva = require("./rgba-hsva");

Object.keys(_rgbaHsva).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _rgbaHsva[key];
    }
  });
});

var _rgbaInt = require("./rgba-int");

Object.keys(_rgbaInt).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _rgbaInt[key];
    }
  });
});

var _rgbaXyza = require("./rgba-xyza");

Object.keys(_rgbaXyza).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _rgbaXyza[key];
    }
  });
});

var _rgbaYcbcra = require("./rgba-ycbcra");

Object.keys(_rgbaYcbcra).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _rgbaYcbcra[key];
    }
  });
});

var _srgba = require("./srgba");

Object.keys(_srgba).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _srgba[key];
    }
  });
});

var _xyzaRgba = require("./xyza-rgba");

Object.keys(_xyzaRgba).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _xyzaRgba[key];
    }
  });
});

var _ycbcraRgba = require("./ycbcra-rgba");

Object.keys(_ycbcraRgba).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _ycbcraRgba[key];
    }
  });
});

var _convert = require("./convert");

Object.keys(_convert).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _convert[key];
    }
  });
});

var _parseCss = require("./parse-css");

Object.keys(_parseCss).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _parseCss[key];
    }
  });
});

var _int = require("./int");

Object.keys(_int).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _int[key];
    }
  });
});

var _css = require("./css");

Object.keys(_css).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _css[key];
    }
  });
});

var _hcya = require("./hcya");

Object.keys(_hcya).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _hcya[key];
    }
  });
});

var _hsia = require("./hsia");

Object.keys(_hsia).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _hsia[key];
    }
  });
});

var _hsla = require("./hsla");

Object.keys(_hsla).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _hsla[key];
    }
  });
});

var _hsva = require("./hsva");

Object.keys(_hsva).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _hsva[key];
    }
  });
});

var _rgba = require("./rgba");

Object.keys(_rgba).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _rgba[key];
    }
  });
});

var _xyza = require("./xyza");

Object.keys(_xyza).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _xyza[key];
    }
  });
});

var _ycbcr = require("./ycbcr");

Object.keys(_ycbcr).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _ycbcr[key];
    }
  });
});

var _alpha = require("./alpha");

Object.keys(_alpha).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _alpha[key];
    }
  });
});

var _clamp = require("./clamp");

Object.keys(_clamp).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _clamp[key];
    }
  });
});

var _closestHue = require("./closest-hue");

Object.keys(_closestHue).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _closestHue[key];
    }
  });
});

var _cosineGradients = require("./cosine-gradients");

Object.keys(_cosineGradients).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _cosineGradients[key];
    }
  });
});

var _invert = require("./invert");

Object.keys(_invert).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _invert[key];
    }
  });
});

var _luminance = require("./luminance");

Object.keys(_luminance).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _luminance[key];
    }
  });
});

var _luminanceRgb = require("./luminance-rgb");

Object.keys(_luminanceRgb).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _luminanceRgb[key];
    }
  });
});

var _mix = require("./mix");

Object.keys(_mix).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _mix[key];
    }
  });
});

var _transform = require("./transform");

Object.keys(_transform).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _transform[key];
    }
  });
});
},{"./api":"../node_modules/@thi.ng/color/api.js","./constants":"../node_modules/@thi.ng/color/constants.js","./names":"../node_modules/@thi.ng/color/names.js","./hcya-rgba":"../node_modules/@thi.ng/color/hcya-rgba.js","./hsia-rgba":"../node_modules/@thi.ng/color/hsia-rgba.js","./hsla-css":"../node_modules/@thi.ng/color/hsla-css.js","./hsla-hsva":"../node_modules/@thi.ng/color/hsla-hsva.js","./hsla-rgba":"../node_modules/@thi.ng/color/hsla-rgba.js","./hsva-css":"../node_modules/@thi.ng/color/hsva-css.js","./hsva-hsla":"../node_modules/@thi.ng/color/hsva-hsla.js","./hsva-rgba":"../node_modules/@thi.ng/color/hsva-rgba.js","./hue-rgba":"../node_modules/@thi.ng/color/hue-rgba.js","./int-css":"../node_modules/@thi.ng/color/int-css.js","./int-rgba":"../node_modules/@thi.ng/color/int-rgba.js","./kelvin-rgba":"../node_modules/@thi.ng/color/kelvin-rgba.js","./resolve":"../node_modules/@thi.ng/color/resolve.js","./rgba-css":"../node_modules/@thi.ng/color/rgba-css.js","./rgba-hcva":"../node_modules/@thi.ng/color/rgba-hcva.js","./rgba-hcya":"../node_modules/@thi.ng/color/rgba-hcya.js","./rgba-hsia":"../node_modules/@thi.ng/color/rgba-hsia.js","./rgba-hsla":"../node_modules/@thi.ng/color/rgba-hsla.js","./rgba-hsva":"../node_modules/@thi.ng/color/rgba-hsva.js","./rgba-int":"../node_modules/@thi.ng/color/rgba-int.js","./rgba-xyza":"../node_modules/@thi.ng/color/rgba-xyza.js","./rgba-ycbcra":"../node_modules/@thi.ng/color/rgba-ycbcra.js","./srgba":"../node_modules/@thi.ng/color/srgba.js","./xyza-rgba":"../node_modules/@thi.ng/color/xyza-rgba.js","./ycbcra-rgba":"../node_modules/@thi.ng/color/ycbcra-rgba.js","./convert":"../node_modules/@thi.ng/color/convert.js","./parse-css":"../node_modules/@thi.ng/color/parse-css.js","./int":"../node_modules/@thi.ng/color/int.js","./css":"../node_modules/@thi.ng/color/css.js","./hcya":"../node_modules/@thi.ng/color/hcya.js","./hsia":"../node_modules/@thi.ng/color/hsia.js","./hsla":"../node_modules/@thi.ng/color/hsla.js","./hsva":"../node_modules/@thi.ng/color/hsva.js","./rgba":"../node_modules/@thi.ng/color/rgba.js","./xyza":"../node_modules/@thi.ng/color/xyza.js","./ycbcr":"../node_modules/@thi.ng/color/ycbcr.js","./alpha":"../node_modules/@thi.ng/color/alpha.js","./clamp":"../node_modules/@thi.ng/color/clamp.js","./closest-hue":"../node_modules/@thi.ng/color/closest-hue.js","./cosine-gradients":"../node_modules/@thi.ng/color/cosine-gradients.js","./invert":"../node_modules/@thi.ng/color/invert.js","./luminance":"../node_modules/@thi.ng/color/luminance.js","./luminance-rgb":"../node_modules/@thi.ng/color/luminance-rgb.js","./mix":"../node_modules/@thi.ng/color/mix.js","./transform":"../node_modules/@thi.ng/color/transform.js"}],"../node_modules/@thi.ng/hiccup-svg/format.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.withoutKeys = exports.fcolor = exports.fattribs = exports.fpoints = exports.fpoint = exports.ff = exports.setPrecision = void 0;

var _checks = require("@thi.ng/checks");

var _color = require("@thi.ng/color");

let PRECISION = 2;

const setPrecision = n => PRECISION = n;
/** @internal */


exports.setPrecision = setPrecision;

const ff = x => x === (x | 0) ? x : x.toFixed(PRECISION);
/** @internal */


exports.ff = ff;

const fpoint = p => ff(p[0]) + "," + ff(p[1]);
/** @internal */


exports.fpoint = fpoint;

const fpoints = (pts, sep = " ") => pts ? pts.map(fpoint).join(sep) : "";
/**
 * Takes an attributes object and converts any `fill`, `stroke` or
 * transformation attributes, i.e. `transform`, `rotate`, `scale`,
 * `translate`. If the element has a `transform` attrib, conversion of
 * the other attribs will be skipped, else the values are assumed to be
 * either strings or:
 *
 * - `transform`: 6-element numeric array (mat23)
 * - `translate`: 2-element array
 * - `rotate`: number (angle in radians)
 * - `scale`: number (uniform scale) or 2-elem array
 *
 * If no `transform` is given, the resulting transformation order will
 * always be TRS. Any string values given will be used as-is and
 * therefore need to be complete, e.g. `{ rotate: "rotate(60)" }`
 *
 * For color related attribs (`fill`, `stroke`), if given value is
 * array-like, a number or an {@link @thi.ng/color#IColor} instance, it
 * will be converted into a CSS color string using
 * {@link @thi.ng/color#asCSS}.
 *
 * String color attribs prefixed with `$` are replaced with `url(#...)`
 * refs (used for referencing gradients).
 *
 * Returns updated attribs or `undefined` if `attribs` itself is
 * null-ish.
 *
 * @param attribs - attributes object
 *
 * @internal
 */


exports.fpoints = fpoints;

const fattribs = attribs => {
  if (!attribs) return;
  const res = ftransforms(attribs);
  let v;
  (v = attribs.fill) && (res.fill = fcolor(v));
  (v = attribs.stroke) && (res.stroke = fcolor(v));
  return res;
};
/**
 * Converts any transformation related attribs.
 *
 * {@link fattribs}
 *
 * @param attribs - attributes object
 *
 * @internal
 */


exports.fattribs = fattribs;

const ftransforms = attribs => {
  let v;

  if ((v = attribs.transform) || attribs.translate || attribs.scale || attribs.rotate) {
    if (v) {
      attribs.transform = !(0, _checks.isString)(v) ? `matrix(${[...v].map(ff).join(" ")})` : v;
      delete attribs.translate;
      delete attribs.rotate;
      delete attribs.scale;
    } else {
      attribs.transform = buildTransform(attribs);
    }
  }

  return attribs;
};

const buildTransform = attribs => {
  const tx = [];
  let v;

  if (v = attribs.translate) {
    tx.push((0, _checks.isString)(v) ? v : `translate(${ff(v[0])} ${ff(v[1])})`);
    delete attribs.translate;
  }

  if (v = attribs.rotate) {
    tx.push((0, _checks.isString)(v) ? v : `rotate(${ff(v * 180 / Math.PI)})`);
    delete attribs.rotate;
  }

  if (v = attribs.scale) {
    tx.push((0, _checks.isString)(v) ? v : (0, _checks.isArrayLike)(v) ? `scale(${ff(v[0])} ${ff(v[1])})` : `scale(${ff(v)})`);
    delete attribs.scale;
  }

  return tx.join(" ");
};
/**
 * Attempts to convert a single color attrib value.
 *
 * {@link fattribs}
 *
 * @param col - color value
 *
 * @internal
 */


const fcolor = col => (0, _checks.isString)(col) ? col[0] === "$" ? `url(#${col.substr(1)})` : col : (0, _color.resolveAsCSS)(col);

exports.fcolor = fcolor;

const withoutKeys = (src, keys) => {
  const dest = {};

  for (let k in src) {
    src.hasOwnProperty(k) && !keys.has(k) && (dest[k] = src[k]);
  }

  return dest;
};

exports.withoutKeys = withoutKeys;
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","@thi.ng/color":"../node_modules/@thi.ng/color/index.js"}],"../node_modules/@thi.ng/hiccup-svg/circle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.circle = void 0;

var _format = require("./format");

const circle = (p, r, attribs, ...body) => ["circle", (0, _format.fattribs)(Object.assign(Object.assign({}, attribs), {
  cx: (0, _format.ff)(p[0]),
  cy: (0, _format.ff)(p[1]),
  r: (0, _format.ff)(r)
})), ...body];

exports.circle = circle;
},{"./format":"../node_modules/@thi.ng/hiccup-svg/format.js"}],"../node_modules/@thi.ng/hiccup-svg/defs.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defs = void 0;

const defs = (...defs) => ["defs", {}, ...defs];

exports.defs = defs;
},{}],"../node_modules/@thi.ng/hiccup-svg/ellipse.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ellipse = void 0;

var _format = require("./format");

const ellipse = (p, rx, ry, attribs, ...body) => ["ellipse", (0, _format.fattribs)(Object.assign(Object.assign({}, attribs), {
  cx: (0, _format.ff)(p[0]),
  cy: (0, _format.ff)(p[1]),
  rx: (0, _format.ff)(rx),
  ry: (0, _format.ff)(ry)
})), ...body];

exports.ellipse = ellipse;
},{"./format":"../node_modules/@thi.ng/hiccup-svg/format.js"}],"../node_modules/@thi.ng/hiccup-svg/gradients.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.radialGradient = exports.linearGradient = void 0;

var _format = require("./format");

const RE_ALPHA_COLOR = /(rgb|hsl)a\(([a-z0-9.-]+),([0-9.%]+),([0-9.%]+),([0-9.]+)\)/;

const gradient = (type, attribs, stops) => [type, (0, _format.fattribs)(attribs), ...stops.map(gradientStop)];

const gradientStop = ([offset, col]) => {
  col = (0, _format.fcolor)(col); // use stop-opacity attrib for safari compatibility
  // https://stackoverflow.com/a/26220870/294515

  let opacity;
  const parts = RE_ALPHA_COLOR.exec(col);

  if (parts) {
    col = `${parts[1]}(${parts[2]},${parts[3]},${parts[4]})`;
    opacity = parts[5];
  }

  return ["stop", {
    offset,
    "stop-color": col,
    "stop-opacity": opacity
  }];
};

const linearGradient = (id, from, to, stops, attribs) => gradient("linearGradient", Object.assign(Object.assign({}, attribs), {
  id,
  x1: (0, _format.ff)(from[0]),
  y1: (0, _format.ff)(from[1]),
  x2: (0, _format.ff)(to[0]),
  y2: (0, _format.ff)(to[1])
}), stops);

exports.linearGradient = linearGradient;

const radialGradient = (id, from, to, fr, r, stops, attribs) => gradient("radialGradient", Object.assign(Object.assign({}, attribs), {
  id,
  fx: (0, _format.ff)(from[0]),
  fy: (0, _format.ff)(from[1]),
  cx: (0, _format.ff)(to[0]),
  cy: (0, _format.ff)(to[1]),
  fr: (0, _format.ff)(fr),
  r: (0, _format.ff)(r)
}), stops);

exports.radialGradient = radialGradient;
},{"./format":"../node_modules/@thi.ng/hiccup-svg/format.js"}],"../node_modules/@thi.ng/hiccup-svg/group.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.group = void 0;

var _format = require("./format");

const group = (attribs, ...body) => ["g", (0, _format.fattribs)(Object.assign({}, attribs)), ...body];

exports.group = group;
},{"./format":"../node_modules/@thi.ng/hiccup-svg/format.js"}],"../node_modules/@thi.ng/hiccup-svg/image.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.image = void 0;

var _format = require("./format");

const image = (pos, url, attribs, ...body) => ["image", (0, _format.fattribs)(Object.assign(Object.assign({}, attribs), {
  // TODO replace w/ SVG2 `href` once Safari supports it
  "xlink:href": url,
  x: (0, _format.ff)(pos[0]),
  y: (0, _format.ff)(pos[1])
})), ...body];

exports.image = image;
},{"./format":"../node_modules/@thi.ng/hiccup-svg/format.js"}],"../node_modules/@thi.ng/hiccup-svg/line.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.vline = exports.hline = exports.line = void 0;

var _format = require("./format");

const line = (a, b, attribs, ...body) => ["line", (0, _format.fattribs)(Object.assign(Object.assign({}, attribs), {
  x1: (0, _format.ff)(a[0]),
  y1: (0, _format.ff)(a[1]),
  x2: (0, _format.ff)(b[0]),
  y2: (0, _format.ff)(b[1])
})), ...body];

exports.line = line;

const hline = (y, attribs) => line([-1e6, y], [1e6, y], attribs);

exports.hline = hline;

const vline = (x, attribs) => line([x, -1e6], [x, 1e6], attribs);

exports.vline = vline;
},{"./format":"../node_modules/@thi.ng/hiccup-svg/format.js"}],"../node_modules/@thi.ng/hiccup-svg/path.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.path = void 0;

var _format = require("./format");

const DEG = 180 / Math.PI;

const path = (segments, attribs, ...body) => {
  let res = [];

  for (let seg of segments) {
    res.push(seg[0]);

    switch (seg[0].toLowerCase()) {
      case "a":
        res.push([// rx
        (0, _format.ff)(seg[1]), // ry
        (0, _format.ff)(seg[2]), // x-axis (theta)
        (0, _format.ff)(seg[3] * DEG), // xl
        seg[4] ? 1 : 0, // clockwise
        seg[5] ? 1 : 0, // target xy
        (0, _format.ff)(seg[6][0]), (0, _format.ff)(seg[6][1])].join(","));
        break;

      case "h":
      case "v":
        res.push((0, _format.ff)(seg[1]));
        break;

      case "m":
      case "l":
        res.push((0, _format.fpoint)(seg[1]));
        break;

      case "z":
        break;

      default:
        res.push((0, _format.fpoints)(seg.slice(1), ","));
    }
  }

  return ["path", (0, _format.fattribs)(Object.assign(Object.assign({}, attribs), {
    d: res.join("")
  })), ...body];
};

exports.path = path;
},{"./format":"../node_modules/@thi.ng/hiccup-svg/format.js"}],"../node_modules/@thi.ng/hiccup-svg/points.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.packedPoints = exports.points = void 0;

var _format = require("./format");

/**
 * Shape instancing group.
 *
 * @remarks
 * The `shape` arg can be an SVG shape `#id` defined elsewhere in the
 * document or set to `circle` or `rect` (default).
 *
 * The `size` arg is only used for the latter two shape types and
 * defines the radius or width respectively.
 *
 * @param pts - points
 * @param shape - shape type
 * @param size - point size/radius
 * @param attribs - attributes
 */
const points = (pts, shape, size = 1, attribs, ...body) => {
  const group = ["g", (0, _format.fattribs)((0, _format.withoutKeys)(attribs, new Set(["shape", "size"]))), ...body];
  const href = buildSymbol(group, shape, size);

  for (let p of pts) {
    // TODO replace w/ SVG2 `href` once Safari supports it
    group.push(["use", {
      "xlink:href": href,
      x: (0, _format.ff)(p[0]),
      y: (0, _format.ff)(p[1])
    }]);
  }

  return group;
};
/**
 * Similar to {@link points}, but takes points from a single large flat
 * buffer of coordinates with arbitrary striding.
 *
 * @remarks
 * In addition to `shape` and `size`, the following attribs can be used
 * to define the index range and strides:
 *
 * - `start` - start index (default: 0)
 * - `num` - number of points (default: buffer length/2)
 * - `cstride` - component stride (default: 1)
 * - `estride` - element stride (default: 2)
 *
 * @param pts - flat point buffer
 * @param shape - shape type
 * @param size - point size/radius
 * @param attribs - other attributes
 */


exports.points = points;

const packedPoints = (pts, shape, size = 1, attribs, ...body) => {
  attribs = Object.assign({
    start: 0,
    cstride: 1,
    estride: 2
  }, attribs);
  const {
    start,
    cstride,
    estride
  } = attribs;
  let num = attribs && attribs.num != null ? attribs.num : (pts.length - start) / estride | 0;
  const group = ["g", (0, _format.fattribs)((0, _format.withoutKeys)(attribs, new Set(["start", "cstride", "estride", "shape", "size", "num"]))), ...body];
  const href = buildSymbol(group, shape, size);

  for (let i = start; --num >= 0; i += estride) {
    // TODO replace w/ SVG2 `href` once Safari supports it
    group.push(["use", {
      "xlink:href": href,
      x: (0, _format.ff)(pts[i]),
      y: (0, _format.ff)(pts[i + cstride])
    }]);
  }

  return group;
};

exports.packedPoints = packedPoints;

const buildSymbol = (group, shape, size) => {
  let href;

  if (!shape || shape[0] !== "#") {
    href = "_" + (Math.random() * 1e6 | 0).toString(36);
    group.push(["g", {
      opacity: 0
    }, buildShape(shape, href, size)]);
    href = "#" + href;
  } else {
    href = shape;
  }

  return href;
};

const buildShape = (shape, id, r) => {
  const rf = (0, _format.ff)(r);

  if (shape === "circle") {
    return ["circle", {
      id,
      cx: 0,
      cy: 0,
      r: rf
    }];
  }

  const rf2 = (0, _format.ff)(-r / 2);
  return ["rect", {
    id,
    x: rf2,
    y: rf2,
    width: rf,
    height: rf
  }];
};
},{"./format":"../node_modules/@thi.ng/hiccup-svg/format.js"}],"../node_modules/@thi.ng/hiccup-svg/polygon.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.polygon = void 0;

var _format = require("./format");

const polygon = (pts, attribs, ...body) => ["polygon", (0, _format.fattribs)(Object.assign(Object.assign({}, attribs), {
  points: (0, _format.fpoints)(pts)
})), ...body];

exports.polygon = polygon;
},{"./format":"../node_modules/@thi.ng/hiccup-svg/format.js"}],"../node_modules/@thi.ng/hiccup-svg/polyline.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.polyline = void 0;

var _format = require("./format");

const polyline = (pts, attribs, ...body) => ["polyline", (0, _format.fattribs)(Object.assign({
  fill: "none",
  points: (0, _format.fpoints)(pts)
}, attribs)), ...body];

exports.polyline = polyline;
},{"./format":"../node_modules/@thi.ng/hiccup-svg/format.js"}],"../node_modules/@thi.ng/hiccup-svg/rect.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.roundedRect = exports.rect = void 0;

var _format = require("./format");

const rect = (p, width, height, attribs, ...body) => roundedRect(p, width, height, 0, 0, attribs, ...body);

exports.rect = rect;

const roundedRect = (p, width, height, rx, ry, attribs, ...body) => {
  attribs = (0, _format.fattribs)(Object.assign(Object.assign({}, attribs), {
    x: (0, _format.ff)(p[0]),
    y: (0, _format.ff)(p[1]),
    width: (0, _format.ff)(width),
    height: (0, _format.ff)(height)
  }));

  if (rx > 0 || ry > 0) {
    attribs.rx = (0, _format.ff)(rx);
    attribs.ry = (0, _format.ff)(ry);
  }

  return ["rect", attribs, ...body];
};

exports.roundedRect = roundedRect;
},{"./format":"../node_modules/@thi.ng/hiccup-svg/format.js"}],"../node_modules/@thi.ng/prefixes/dc.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dctypes = exports.dcterms = exports.dc = void 0;
const dc = "http://purl.org/dc/elements/1.1/";
exports.dc = dc;
const dcterms = "http://purl.org/dc/terms/";
exports.dcterms = dcterms;
const dctypes = "http://purl.org/dc/dcmitype/";
exports.dctypes = dctypes;
},{}],"../node_modules/@thi.ng/prefixes/geo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.omg = exports.locn = exports.geosparql = exports.geonames = exports.geom = exports.geo = void 0;
const geo = "http://www.w3.org/2003/01/geo/wgs84_pos#";
exports.geo = geo;
const geom = "http://data.ign.fr/def/geometrie";
exports.geom = geom;
const geonames = "http://www.geonames.org/ontology#";
exports.geonames = geonames;
const geosparql = "http://www.opengis.net/ont/geosparql#";
exports.geosparql = geosparql;
const locn = "http://www.w3.org/ns/locn#";
exports.locn = locn;
const omg = "https://w3id.org/omg#";
exports.omg = omg;
},{}],"../node_modules/@thi.ng/prefixes/json.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.jsonsc = exports.jsonld = void 0;
const jsonld = "http://www.w3.org/ns/json-ld#";
exports.jsonld = jsonld;
const jsonsc = "https://www.w3.org/2019/wot/json-schema#";
exports.jsonsc = jsonsc;
},{}],"../node_modules/@thi.ng/prefixes/media.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ssn = exports.oa = exports.ma = exports.doap = exports.cc = exports.bibo = exports.atom = void 0;
const atom = "http://www.w3.org/2005/Atom/";
exports.atom = atom;
const bibo = "http://purl.org/ontology/bibo/";
exports.bibo = bibo;
const cc = "http://creativecommons.org/ns#";
exports.cc = cc;
const doap = "http://usefulinc.com/ns/doap#";
exports.doap = doap;
const ma = "http://www.w3.org/ns/ma-ont#";
exports.ma = ma;
const oa = "http://www.w3.org/ns/oa#";
exports.oa = oa;
const ssn = "http://www.w3.org/ns/ssn/";
exports.ssn = ssn;
},{}],"../node_modules/@thi.ng/prefixes/rdf.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.xsd = exports.xhv = exports.vs = exports.VOID = exports.vann = exports.spin = exports.sparql = exports.skosxl = exports.skos = exports.sioc = exports.shacl = exports.rdfs = exports.rdfa = exports.rdf = exports.qb = exports.prov = exports.owl = exports.ldp = exports.http = exports.dcat = exports.csvw = void 0;
const csvw = "http://www.w3.org/ns/csvw#";
exports.csvw = csvw;
const dcat = "http://www.w3.org/ns/dcat#";
exports.dcat = dcat;
const http = "http://www.w3.org/2011/http#";
exports.http = http;
const ldp = "http://www.w3.org/ns/ldp#";
exports.ldp = ldp;
const owl = "http://www.w3.org/2002/07/owl#";
exports.owl = owl;
const prov = "http://www.w3.org/ns/prov";
exports.prov = prov;
const qb = "http://purl.org/linked-data/cube#";
exports.qb = qb;
const rdf = "http://www.w3.org/1999/02/22-rdf-syntax-ns#";
exports.rdf = rdf;
const rdfa = "http://www.w3.org/ns/rdfa#";
exports.rdfa = rdfa;
const rdfs = "http://www.w3.org/2000/01/rdf-schema#";
exports.rdfs = rdfs;
const shacl = "http://www.w3.org/ns/shacl#";
exports.shacl = shacl;
const sioc = "http://rdfs.org/sioc/ns#";
exports.sioc = sioc;
const skos = "http://www.w3.org/2004/02/skos/core#";
exports.skos = skos;
const skosxl = "http://www.w3.org/2008/05/skos-xl#";
exports.skosxl = skosxl;
const sparql = "http://www.w3.org/ns/sparql#";
exports.sparql = sparql;
const spin = "http://spinrdf.org/spin#";
exports.spin = spin;
const vann = "http://purl.org/vocab/vann/";
exports.vann = vann;
const VOID = "http://rdfs.org/ns/void#";
exports.VOID = VOID;
const vs = "http://www.w3.org/2003/06/sw-vocab-status/ns#";
exports.vs = vs;
const xhv = "http://www.w3.org/1999/xhtml/vocab#";
exports.xhv = xhv;
const xsd = "http://www.w3.org/2001/XMLSchema#";
exports.xsd = xsd;
},{}],"../node_modules/@thi.ng/prefixes/social.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.org = exports.vcard = exports.og = exports.foaf = void 0;
const foaf = "http://xmlns.com/foaf/0.1/";
exports.foaf = foaf;
const og = "http://ogp.me/ns#";
exports.og = og;
const vcard = "http://www.w3.org/2006/vcard/ns#";
exports.vcard = vcard;
const org = "http://www.w3.org/ns/org#";
exports.org = org;
},{}],"../node_modules/@thi.ng/prefixes/time.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.time = exports.ical = exports.event = void 0;
const event = "http://purl.org/NET/c4dm/event.owl#";
exports.event = event;
const ical = "http://www.w3.org/2002/12/cal/ical#";
exports.ical = ical;
const time = "http://www.w3.org/2006/time";
exports.time = time;
},{}],"../node_modules/@thi.ng/prefixes/upper.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.yago = exports.sweet = exports.schema = exports.mads = void 0;
const mads = "http://www.loc.gov/mads/rdf/v1#";
exports.mads = mads;
const schema = "http://schema.org/";
exports.schema = schema;
const sweet = "http://sweetontology.net/";
exports.sweet = sweet;
const yago = "http://yago-knowledge.org/resource/";
exports.yago = yago;
},{}],"../node_modules/@thi.ng/prefixes/wiki.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.wikidata = exports.wiki = exports.dbr = exports.dbp = exports.dbo = void 0;
const dbo = "http://dbpedia.org/ontology/";
exports.dbo = dbo;
const dbp = "http://dbpedia.org/property/";
exports.dbp = dbp;
const dbr = "http://dbpedia.org/resource/";
exports.dbr = dbr;
const wiki = "http://en.wikipedia.org/wiki/";
exports.wiki = wiki;
const wikidata = "http://www.wikidata.org/entity/";
exports.wikidata = wikidata;
},{}],"../node_modules/@thi.ng/prefixes/xml.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.XML_XSL = exports.XML_XSD = exports.XML_XMLNS = exports.XML_XLINK = exports.XML_XHTML = exports.XML_SVG = exports.XML_FO = exports.XML_FN = exports.XML = void 0;
const XML = "http://www.w3.org/XML/1998/namespace";
exports.XML = XML;
const XML_FN = "http://www.w3.org/2005/xpath-functions";
exports.XML_FN = XML_FN;
const XML_FO = "http://www.w3.org/1999/XSL/Format";
exports.XML_FO = XML_FO;
const XML_SVG = "http://www.w3.org/2000/svg";
exports.XML_SVG = XML_SVG;
const XML_XHTML = "http://www.w3.org/1999/xhtml";
exports.XML_XHTML = XML_XHTML;
const XML_XLINK = "http://www.w3.org/1999/xlink";
exports.XML_XLINK = XML_XLINK;
const XML_XMLNS = "http://www.w3.org/2000/xmlns/";
exports.XML_XMLNS = XML_XMLNS;
const XML_XSD = "http://www.w3.org/2001/XMLSchema";
exports.XML_XSD = XML_XSD;
const XML_XSL = "http://www.w3.org/1999/XSL/Transform";
exports.XML_XSL = XML_XSL;
},{}],"../node_modules/@thi.ng/prefixes/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _dc = require("./dc");

Object.keys(_dc).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _dc[key];
    }
  });
});

var _geo = require("./geo");

Object.keys(_geo).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _geo[key];
    }
  });
});

var _json = require("./json");

Object.keys(_json).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _json[key];
    }
  });
});

var _media = require("./media");

Object.keys(_media).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _media[key];
    }
  });
});

var _rdf = require("./rdf");

Object.keys(_rdf).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _rdf[key];
    }
  });
});

var _social = require("./social");

Object.keys(_social).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _social[key];
    }
  });
});

var _time = require("./time");

Object.keys(_time).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _time[key];
    }
  });
});

var _upper = require("./upper");

Object.keys(_upper).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _upper[key];
    }
  });
});

var _wiki = require("./wiki");

Object.keys(_wiki).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _wiki[key];
    }
  });
});

var _xml = require("./xml");

Object.keys(_xml).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _xml[key];
    }
  });
});
},{"./dc":"../node_modules/@thi.ng/prefixes/dc.js","./geo":"../node_modules/@thi.ng/prefixes/geo.js","./json":"../node_modules/@thi.ng/prefixes/json.js","./media":"../node_modules/@thi.ng/prefixes/media.js","./rdf":"../node_modules/@thi.ng/prefixes/rdf.js","./social":"../node_modules/@thi.ng/prefixes/social.js","./time":"../node_modules/@thi.ng/prefixes/time.js","./upper":"../node_modules/@thi.ng/prefixes/upper.js","./wiki":"../node_modules/@thi.ng/prefixes/wiki.js","./xml":"../node_modules/@thi.ng/prefixes/xml.js"}],"../node_modules/@thi.ng/hiccup-svg/svg.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.svg = void 0;

var _prefixes = require("@thi.ng/prefixes");

var _format = require("./format");

/**
 * Defines an <svg> root element with default XML namespaces. By default
 * currently still sets SVG version to 1.1 to support Safari and other
 * legacy tooling.
 *
 * @param attribs - attributes object
 * @param body - shape primitives
 */
const svg = (attribs, ...body) => ["svg", (0, _format.fattribs)(Object.assign({
  version: "1.1",
  xmlns: _prefixes.XML_SVG,
  "xmlns:xlink": _prefixes.XML_XLINK
}, attribs)), ...body];

exports.svg = svg;
},{"@thi.ng/prefixes":"../node_modules/@thi.ng/prefixes/index.js","./format":"../node_modules/@thi.ng/hiccup-svg/format.js"}],"../node_modules/@thi.ng/hiccup-svg/text.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.text = void 0;

var _format = require("./format");

const text = (p, body, attribs, ...xs) => ["text", (0, _format.fattribs)(Object.assign(Object.assign({}, attribs), {
  x: (0, _format.ff)(p[0]),
  y: (0, _format.ff)(p[1])
})), body, ...xs];

exports.text = text;
},{"./format":"../node_modules/@thi.ng/hiccup-svg/format.js"}],"../node_modules/@thi.ng/hiccup-svg/convert.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.convertTree = void 0;

var _checks = require("@thi.ng/checks");

var _circle = require("./circle");

var _ellipse = require("./ellipse");

var _format = require("./format");

var _gradients = require("./gradients");

var _image = require("./image");

var _line = require("./line");

var _path = require("./path");

var _points = require("./points");

var _polygon = require("./polygon");

var _polyline = require("./polyline");

var _rect = require("./rect");

var _text = require("./text");

const ATTRIB_ALIASES = {
  alpha: "opacity",
  dash: "stroke-dasharray",
  dashOffset: "stroke-dashoffset",
  lineCap: "stroke-linecap",
  lineJoin: "stroke-linejoin",
  miterLimit: "stroke-miterlimit",
  weight: "stroke-width"
};
const TEXT_ALIGN = {
  left: "start",
  right: "end",
  center: "middle",
  start: "start",
  end: "end"
};
const BASE_LINE = {
  top: "text-top",
  bottom: "text-bottom"
};
/**
 * Takes a normalized hiccup tree of {@link @thi.ng/geom# | @thi.ng/geom} or
 * {@link @thi.ng/hdom-canvas# | @thi.ng/hdom-canvas} shape definitions and recursively
 * converts it into an hiccup flavor which is compatible for SVG
 * serialization. This conversion also involves translation & reorg of
 * various attributes. Returns new tree. The original remains untouched,
 * as will any unrecognized tree/shape nodes.
 *
 * @param tree - shape tree
 */

const convertTree = tree => {
  if (tree == null) return null;

  if ((0, _checks.implementsFunction)(tree, "toHiccup")) {
    return convertTree(tree.toHiccup());
  }

  const type = tree[0];

  if ((0, _checks.isArray)(type)) {
    return tree.map(convertTree);
  }

  let attribs = convertAttribs(tree[1]);

  switch (tree[0]) {
    case "svg":
    case "defs":
    case "a":
    case "g":
      {
        const res = [type, (0, _format.fattribs)(attribs)];

        for (let i = 2, n = tree.length; i < n; i++) {
          const c = convertTree(tree[i]);
          c != null && res.push(c);
        }

        return res;
      }

    case "linearGradient":
      return (0, _gradients.linearGradient)(attribs.id, attribs.from, attribs.to, tree[2], {
        gradientUnits: attribs.gradientUnits || "userSpaceOnUse",
        gradientTransform: attribs.gradientTransform
      });

    case "radialGradient":
      return (0, _gradients.radialGradient)(attribs.id, attribs.from, attribs.to, attribs.r1, attribs.r2, tree[2], {
        gradientUnits: attribs.gradientUnits || "userSpaceOnUse",
        gradientTransform: attribs.gradientTransform
      });

    case "circle":
      return (0, _circle.circle)(tree[2], tree[3], attribs, ...tree.slice(4));

    case "ellipse":
      return (0, _ellipse.ellipse)(tree[2], tree[3][0], tree[3][1], attribs, ...tree.slice(4));

    case "rect":
      {
        const r = tree[5] || 0;
        return (0, _rect.roundedRect)(tree[2], tree[3], tree[4], r, r, attribs, ...tree.slice(6));
      }

    case "line":
      return (0, _line.line)(tree[2], tree[3], attribs, ...tree.slice(4));

    case "hline":
      return (0, _line.hline)(tree[2], attribs);

    case "vline":
      return (0, _line.vline)(tree[2], attribs);

    case "polyline":
      return (0, _polyline.polyline)(tree[2], attribs, ...tree.slice(3));

    case "polygon":
      return (0, _polygon.polygon)(tree[2], attribs, ...tree.slice(3));

    case "path":
      return (0, _path.path)(tree[2], attribs, ...tree.slice(3));

    case "text":
      return (0, _text.text)(tree[2], tree[3], attribs, ...tree.slice(4));

    case "img":
      return (0, _image.image)(tree[3], tree[2].src, attribs, ...tree.slice(4));

    case "points":
      return (0, _points.points)(tree[2], attribs.shape, attribs.size, attribs, ...tree.slice(3));

    case "packedPoints":
      return (0, _points.packedPoints)(tree[2], attribs.shape, attribs.size, attribs, ...tree.slice(3));

    default:
      return tree;
  }
};

exports.convertTree = convertTree;

const convertAttribs = attribs => {
  const res = {};
  if (!attribs) return res; // convertTransforms(res, attribs);

  for (let id in attribs) {
    const v = attribs[id];
    const aid = ATTRIB_ALIASES[id];

    if (aid) {
      res[aid] = v;
    } else {
      convertAttrib(res, id, v);
    }
  }

  return res;
};

const convertAttrib = (res, id, v) => {
  switch (id) {
    case "font":
      {
        const i = v.indexOf(" ");
        res["font-size"] = v.substr(0, i);
        res["font-family"] = v.substr(i + 1);
        break;
      }

    case "align":
      res["text-anchor"] = TEXT_ALIGN[v];
      break;

    case "baseline":
      res["dominant-baseline"] = BASE_LINE[v] || v;
      break;

    case "filter":
      // TODO needs to be translated into <filter> def first
      // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/filter
      // https://developer.mozilla.org/en-US/docs/Web/SVG/Element/filter
      break;

    default:
      res[id] = v;
  }
};
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","./circle":"../node_modules/@thi.ng/hiccup-svg/circle.js","./ellipse":"../node_modules/@thi.ng/hiccup-svg/ellipse.js","./format":"../node_modules/@thi.ng/hiccup-svg/format.js","./gradients":"../node_modules/@thi.ng/hiccup-svg/gradients.js","./image":"../node_modules/@thi.ng/hiccup-svg/image.js","./line":"../node_modules/@thi.ng/hiccup-svg/line.js","./path":"../node_modules/@thi.ng/hiccup-svg/path.js","./points":"../node_modules/@thi.ng/hiccup-svg/points.js","./polygon":"../node_modules/@thi.ng/hiccup-svg/polygon.js","./polyline":"../node_modules/@thi.ng/hiccup-svg/polyline.js","./rect":"../node_modules/@thi.ng/hiccup-svg/rect.js","./text":"../node_modules/@thi.ng/hiccup-svg/text.js"}],"../node_modules/@thi.ng/hiccup-svg/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _api = require("./api");

Object.keys(_api).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _api[key];
    }
  });
});

var _circle = require("./circle");

Object.keys(_circle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _circle[key];
    }
  });
});

var _defs = require("./defs");

Object.keys(_defs).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _defs[key];
    }
  });
});

var _ellipse = require("./ellipse");

Object.keys(_ellipse).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _ellipse[key];
    }
  });
});

var _gradients = require("./gradients");

Object.keys(_gradients).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _gradients[key];
    }
  });
});

var _group = require("./group");

Object.keys(_group).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _group[key];
    }
  });
});

var _image = require("./image");

Object.keys(_image).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _image[key];
    }
  });
});

var _line = require("./line");

Object.keys(_line).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _line[key];
    }
  });
});

var _path = require("./path");

Object.keys(_path).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _path[key];
    }
  });
});

var _points = require("./points");

Object.keys(_points).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _points[key];
    }
  });
});

var _polygon = require("./polygon");

Object.keys(_polygon).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _polygon[key];
    }
  });
});

var _polyline = require("./polyline");

Object.keys(_polyline).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _polyline[key];
    }
  });
});

var _rect = require("./rect");

Object.keys(_rect).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _rect[key];
    }
  });
});

var _svg = require("./svg");

Object.keys(_svg).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _svg[key];
    }
  });
});

var _text = require("./text");

Object.keys(_text).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _text[key];
    }
  });
});

var _format = require("./format");

Object.keys(_format).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _format[key];
    }
  });
});

var _convert = require("./convert");

Object.keys(_convert).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _convert[key];
    }
  });
});
},{"./api":"../node_modules/@thi.ng/hiccup-svg/api.js","./circle":"../node_modules/@thi.ng/hiccup-svg/circle.js","./defs":"../node_modules/@thi.ng/hiccup-svg/defs.js","./ellipse":"../node_modules/@thi.ng/hiccup-svg/ellipse.js","./gradients":"../node_modules/@thi.ng/hiccup-svg/gradients.js","./group":"../node_modules/@thi.ng/hiccup-svg/group.js","./image":"../node_modules/@thi.ng/hiccup-svg/image.js","./line":"../node_modules/@thi.ng/hiccup-svg/line.js","./path":"../node_modules/@thi.ng/hiccup-svg/path.js","./points":"../node_modules/@thi.ng/hiccup-svg/points.js","./polygon":"../node_modules/@thi.ng/hiccup-svg/polygon.js","./polyline":"../node_modules/@thi.ng/hiccup-svg/polyline.js","./rect":"../node_modules/@thi.ng/hiccup-svg/rect.js","./svg":"../node_modules/@thi.ng/hiccup-svg/svg.js","./text":"../node_modules/@thi.ng/hiccup-svg/text.js","./format":"../node_modules/@thi.ng/hiccup-svg/format.js","./convert":"../node_modules/@thi.ng/hiccup-svg/convert.js"}],"../node_modules/@thi.ng/geom/internal/union-bounds.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.unionBounds = void 0;

var _vectors = require("@thi.ng/vectors");

/**
 * Takes the position and size vectors of 2
 * {@link @thi.ng/geom-api#AABBLike}s and returns 2-tuple of
 * `[pos,size]` of their union bounds.
 *
 * @param apos - bbox 1 min pos
 * @param asize - bbox1 size
 * @param bpos - bbox 2 min pos
 * @param bsize - bbox 2 size
 */
const unionBounds = (apos, asize, bpos, bsize) => {
  const p = (0, _vectors.add)([], apos, asize);
  const q = (0, _vectors.add)([], bpos, bsize);
  const pos = (0, _vectors.min)([], apos, bpos);
  return [pos, (0, _vectors.sub)(null, (0, _vectors.max)(null, p, q), pos)];
};

exports.unionBounds = unionBounds;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom/internal/coll-bounds.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.collBounds = void 0;

var _unionBounds = require("./union-bounds");

/**
 * Computes the total bounds for the given shape collection, which
 * should either contain only 2D or 3D types. No mixed dimensions are
 * allowed! Currently the {@link bounds} function MUST be passed in as
 * arg to avoid circular module dependencies.
 *
 * @param shapes - input shapes
 * @param bounds - bbox function
 */
const collBounds = (shapes, bounds) => {
  let n = shapes.length - 1;
  if (n < 0) return;
  let b = bounds(shapes[n]);
  if (!b) return;
  let {
    pos,
    size
  } = b;

  for (; --n >= 0;) {
    b = bounds(shapes[n]);
    if (!b) continue;
    [pos, size] = (0, _unionBounds.unionBounds)(pos, size, b.pos, b.size);
  }

  return [pos, size];
};

exports.collBounds = collBounds;
},{"./union-bounds":"../node_modules/@thi.ng/geom/internal/union-bounds.js"}],"../node_modules/@thi.ng/geom/ops/bounds.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bounds = void 0;

var _defmulti = require("@thi.ng/defmulti");

var _geomApi = require("@thi.ng/geom-api");

var _geomArc = require("@thi.ng/geom-arc");

var _geomPolyUtils = require("@thi.ng/geom-poly-utils");

var _geomSplines = require("@thi.ng/geom-splines");

var _transducers = require("@thi.ng/transducers");

var _vectors = require("@thi.ng/vectors");

var _rect = require("../api/rect");

var _aabb = require("../ctors/aabb");

var _rect2 = require("../ctors/rect");

var _collBounds = require("../internal/coll-bounds");

var _dispatch = require("../internal/dispatch");

const bounds = (0, _defmulti.defmulti)(_dispatch.dispatch);
exports.bounds = bounds;
bounds.addAll({
  [_geomApi.Type.ARC]: $ => (0, _rect2.rectFromMinMax)(...(0, _geomArc.bounds)($.pos, $.r, $.axis, $.start, $.end)),
  [_geomApi.Type.CIRCLE]: $ => new _rect.Rect((0, _vectors.subN2)([], $.pos, $.r), (0, _vectors.mulN2)(null, [2, 2], $.r)),
  [_geomApi.Type.CUBIC]: ({
    points
  }) => (0, _rect2.rectFromMinMax)(...(0, _geomSplines.cubicBounds)(points[0], points[1], points[2], points[3])),
  [_geomApi.Type.ELLIPSE]: $ => new _rect.Rect((0, _vectors.sub2)([], $.pos, $.r), (0, _vectors.mul2)(null, [2, 2], $.r)),
  [_geomApi.Type.GROUP]: $ => {
    const res = (0, _collBounds.collBounds)($.children, bounds);
    return res ? new _rect.Rect(...res) : undefined;
  },
  [_geomApi.Type.LINE]: ({
    points: [a, b]
  }) => (0, _rect2.rectFromMinMax)((0, _vectors.min)([], a, b), (0, _vectors.max)([], a, b)),
  [_geomApi.Type.PATH]: path => {
    const b = (0, _collBounds.collBounds)([...(0, _transducers.iterator1)((0, _transducers.comp)((0, _transducers.map)(s => s.geo), (0, _transducers.filter)(s => !!s)), path.segments)], bounds);
    return b ? new _rect.Rect(...b) : undefined;
  },
  [_geomApi.Type.POINTS]: $ => (0, _rect2.rectFromMinMax)(...(0, _geomPolyUtils.bounds)($.points, (0, _vectors.set2)([], _vectors.MAX2), (0, _vectors.set2)([], _vectors.MIN2))),
  [_geomApi.Type.POINTS3]: $ => (0, _aabb.aabbFromMinMax)(...(0, _geomPolyUtils.bounds)($.points, (0, _vectors.set3)([], _vectors.MAX3), (0, _vectors.set3)([], _vectors.MIN3))),
  [_geomApi.Type.QUADRATIC]: ({
    points
  }) => (0, _rect2.rectFromMinMax)(...(0, _geomSplines.quadraticBounds)(points[0], points[1], points[2])),
  [_geomApi.Type.RECT]: $ => $.copy(),
  [_geomApi.Type.TEXT]: $ => new _rect.Rect((0, _vectors.set2)([], $.pos), [0, 0])
});
bounds.isa(_geomApi.Type.AABB, _geomApi.Type.RECT);
bounds.isa(_geomApi.Type.POLYGON, _geomApi.Type.POINTS);
bounds.isa(_geomApi.Type.POLYLINE, _geomApi.Type.POINTS);
bounds.isa(_geomApi.Type.QUAD, _geomApi.Type.POINTS);
bounds.isa(_geomApi.Type.TRIANGLE, _geomApi.Type.POINTS);
},{"@thi.ng/defmulti":"../node_modules/@thi.ng/defmulti/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/geom-arc":"../node_modules/@thi.ng/geom-arc/index.js","@thi.ng/geom-poly-utils":"../node_modules/@thi.ng/geom-poly-utils/index.js","@thi.ng/geom-splines":"../node_modules/@thi.ng/geom-splines/index.js","@thi.ng/transducers":"../node_modules/@thi.ng/transducers/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../api/rect":"../node_modules/@thi.ng/geom/api/rect.js","../ctors/aabb":"../node_modules/@thi.ng/geom/ctors/aabb.js","../ctors/rect":"../node_modules/@thi.ng/geom/ctors/rect.js","../internal/coll-bounds":"../node_modules/@thi.ng/geom/internal/coll-bounds.js","../internal/dispatch":"../node_modules/@thi.ng/geom/internal/dispatch.js"}],"../node_modules/@thi.ng/geom/ops/as-svg.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.svgDoc = exports.asSvg = void 0;

var _hiccup = require("@thi.ng/hiccup");

var _hiccupSvg = require("@thi.ng/hiccup-svg");

var _collBounds = require("../internal/coll-bounds");

var _bounds = require("./bounds");

const asSvg = (...args) => args.map(x => (0, _hiccup.serialize)((0, _hiccupSvg.convertTree)(x))).join("");

exports.asSvg = asSvg;

const svgDoc = (attribs, ...xs) => {
  if (xs.length > 0) {
    if (!attribs || !attribs.viewBox) {
      const cbounds = (0, _collBounds.collBounds)(xs, _bounds.bounds);

      if (cbounds) {
        const [[x, y], [w, h]] = cbounds;
        attribs = Object.assign({
          width: (0, _hiccupSvg.ff)(w),
          height: (0, _hiccupSvg.ff)(h),
          viewBox: `${(0, _hiccupSvg.ff)(x)} ${(0, _hiccupSvg.ff)(y)} ${(0, _hiccupSvg.ff)(w)} ${(0, _hiccupSvg.ff)(h)}`
        }, attribs);
      }
    }
  }

  return (0, _hiccupSvg.svg)(attribs, ...xs);
};

exports.svgDoc = svgDoc;
},{"@thi.ng/hiccup":"../node_modules/@thi.ng/hiccup/index.js","@thi.ng/hiccup-svg":"../node_modules/@thi.ng/hiccup-svg/index.js","../internal/coll-bounds":"../node_modules/@thi.ng/geom/internal/coll-bounds.js","./bounds":"../node_modules/@thi.ng/geom/ops/bounds.js"}],"../node_modules/@thi.ng/geom/ops/centroid.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.centroid = void 0;

var _defmulti = require("@thi.ng/defmulti");

var _geomApi = require("@thi.ng/geom-api");

var _geomPolyUtils = require("@thi.ng/geom-poly-utils");

var _vectors = require("@thi.ng/vectors");

var _dispatch = require("../internal/dispatch");

var _bounds = require("./bounds");

const centroid = (0, _defmulti.defmulti)(_dispatch.dispatch);
exports.centroid = centroid;
centroid.addAll({
  [_geomApi.Type.CIRCLE]: ($, out) => (0, _vectors.set)(out || [], $.pos),
  [_geomApi.Type.GROUP]: $ => {
    const b = (0, _bounds.bounds)($);
    return b ? centroid(b) : undefined;
  },
  [_geomApi.Type.LINE]: ({
    points
  }, out) => (0, _vectors.mixN)(out || [], points[0], points[1], 0.5),
  [_geomApi.Type.POINTS]: ($, out) => (0, _geomPolyUtils.centroid)($.points, out),
  [_geomApi.Type.PLANE]: ($, out) => (0, _vectors.mulN)(out || [], $.normal, $.w),
  [_geomApi.Type.POLYGON]: ($, out) => (0, _geomPolyUtils.centerOfWeight2)($.points, out),
  [_geomApi.Type.RECT]: ($, out) => (0, _vectors.maddN)(out || [], $.size, 0.5, $.pos),
  [_geomApi.Type.TRIANGLE]: ({
    points
  }, out) => (0, _vectors.divN)(null, (0, _vectors.add)(null, (0, _vectors.add)(out || [], points[0], points[1]), points[2]), 3)
});
centroid.isa(_geomApi.Type.ARC, _geomApi.Type.CIRCLE);
centroid.isa(_geomApi.Type.AABB, _geomApi.Type.RECT);
centroid.isa(_geomApi.Type.ELLIPSE, _geomApi.Type.CIRCLE);
centroid.isa(_geomApi.Type.LINE3, _geomApi.Type.LINE);
centroid.isa(_geomApi.Type.POINTS3, _geomApi.Type.POINTS);
centroid.isa(_geomApi.Type.POLYLINE, _geomApi.Type.POINTS);
centroid.isa(_geomApi.Type.QUAD, _geomApi.Type.POLYGON);
centroid.isa(_geomApi.Type.SPHERE, _geomApi.Type.CIRCLE);
centroid.isa(_geomApi.Type.TEXT, _geomApi.Type.CIRCLE);
centroid.isa(_geomApi.Type.TRIANGLE3, _geomApi.Type.TRIANGLE);
},{"@thi.ng/defmulti":"../node_modules/@thi.ng/defmulti/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/geom-poly-utils":"../node_modules/@thi.ng/geom-poly-utils/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../internal/dispatch":"../node_modules/@thi.ng/geom/internal/dispatch.js","./bounds":"../node_modules/@thi.ng/geom/ops/bounds.js"}],"../node_modules/@thi.ng/geom/internal/translate-points.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.translatedShape = exports.translatedPoints = void 0;

var _vectors = require("@thi.ng/vectors");

var _copyAttribs = require("./copy-attribs");

const translatedPoints = (pts, delta) => pts.map(x => (0, _vectors.add)([], x, delta));

exports.translatedPoints = translatedPoints;

const translatedShape = ctor => ($, delta) => new ctor(translatedPoints($.points, delta), (0, _copyAttribs.copyAttribs)($));

exports.translatedShape = translatedShape;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./copy-attribs":"../node_modules/@thi.ng/geom/internal/copy-attribs.js"}],"../node_modules/@thi.ng/geom/ops/translate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.translate = void 0;

var _defmulti = require("@thi.ng/defmulti");

var _geomApi = require("@thi.ng/geom-api");

var _vectors = require("@thi.ng/vectors");

var _aabb = require("../api/aabb");

var _circle = require("../api/circle");

var _ellipse = require("../api/ellipse");

var _group = require("../api/group");

var _line = require("../api/line");

var _path = require("../api/path");

var _points = require("../api/points");

var _polygon = require("../api/polygon");

var _polyline = require("../api/polyline");

var _quad = require("../api/quad");

var _ray = require("../api/ray");

var _rect = require("../api/rect");

var _sphere = require("../api/sphere");

var _text = require("../api/text");

var _triangle = require("../api/triangle");

var _copyAttribs = require("../internal/copy-attribs");

var _dispatch = require("../internal/dispatch");

var _translatePoints = require("../internal/translate-points");

const translate = (0, _defmulti.defmulti)(_dispatch.dispatch);
exports.translate = translate;
translate.addAll({
  [_geomApi.Type.AABB]: ($, delta) => new _aabb.AABB((0, _vectors.add3)([], $.pos, delta), (0, _vectors.set3)([], $.size), (0, _copyAttribs.copyAttribs)($)),
  [_geomApi.Type.ARC]: ($, delta) => {
    const a = $.copy();
    (0, _vectors.add2)(null, a.pos, delta);
    return a;
  },
  [_geomApi.Type.CIRCLE]: ($, delta) => new _circle.Circle((0, _vectors.add2)([], $.pos, delta), $.r, (0, _copyAttribs.copyAttribs)($)),
  [_geomApi.Type.ELLIPSE]: ($, delta) => new _ellipse.Ellipse((0, _vectors.add2)([], $.pos, delta), (0, _vectors.set2)([], $.r), (0, _copyAttribs.copyAttribs)($)),
  [_geomApi.Type.GROUP]: ($, delta) => new _group.Group((0, _copyAttribs.copyAttribs)($), $.children.map(s => translate(s, delta))),
  [_geomApi.Type.LINE]: (0, _translatePoints.translatedShape)(_line.Line),
  [_geomApi.Type.PATH]: ($, delta) => new _path.Path($.segments.map(s => s.geo ? {
    type: s.type,
    geo: translate(s.geo, delta)
  } : {
    type: s.type,
    point: (0, _vectors.add2)([], s.point, delta)
  }), (0, _copyAttribs.copyAttribs)($)),
  [_geomApi.Type.POINTS]: (0, _translatePoints.translatedShape)(_points.Points),
  [_geomApi.Type.POINTS3]: (0, _translatePoints.translatedShape)(_points.Points3),
  [_geomApi.Type.POLYGON]: (0, _translatePoints.translatedShape)(_polygon.Polygon),
  [_geomApi.Type.POLYLINE]: (0, _translatePoints.translatedShape)(_polyline.Polyline),
  [_geomApi.Type.QUAD]: (0, _translatePoints.translatedShape)(_quad.Quad),
  [_geomApi.Type.RAY]: ($, delta) => new _ray.Ray((0, _vectors.add2)([], $.pos, delta), $.dir, (0, _copyAttribs.copyAttribs)($)),
  [_geomApi.Type.RECT]: ($, delta) => new _rect.Rect((0, _vectors.add2)([], $.pos, delta), (0, _vectors.set2)([], $.size), (0, _copyAttribs.copyAttribs)($)),
  [_geomApi.Type.SPHERE]: ($, delta) => new _sphere.Sphere((0, _vectors.add3)([], $.pos, delta), $.r, (0, _copyAttribs.copyAttribs)($)),
  [_geomApi.Type.TEXT]: ($, delta) => new _text.Text((0, _vectors.add2)([], $.pos, delta), $.body, (0, _copyAttribs.copyAttribs)($)),
  [_geomApi.Type.TRIANGLE]: (0, _translatePoints.translatedShape)(_triangle.Triangle)
});
},{"@thi.ng/defmulti":"../node_modules/@thi.ng/defmulti/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../api/aabb":"../node_modules/@thi.ng/geom/api/aabb.js","../api/circle":"../node_modules/@thi.ng/geom/api/circle.js","../api/ellipse":"../node_modules/@thi.ng/geom/api/ellipse.js","../api/group":"../node_modules/@thi.ng/geom/api/group.js","../api/line":"../node_modules/@thi.ng/geom/api/line.js","../api/path":"../node_modules/@thi.ng/geom/api/path.js","../api/points":"../node_modules/@thi.ng/geom/api/points.js","../api/polygon":"../node_modules/@thi.ng/geom/api/polygon.js","../api/polyline":"../node_modules/@thi.ng/geom/api/polyline.js","../api/quad":"../node_modules/@thi.ng/geom/api/quad.js","../api/ray":"../node_modules/@thi.ng/geom/api/ray.js","../api/rect":"../node_modules/@thi.ng/geom/api/rect.js","../api/sphere":"../node_modules/@thi.ng/geom/api/sphere.js","../api/text":"../node_modules/@thi.ng/geom/api/text.js","../api/triangle":"../node_modules/@thi.ng/geom/api/triangle.js","../internal/copy-attribs":"../node_modules/@thi.ng/geom/internal/copy-attribs.js","../internal/dispatch":"../node_modules/@thi.ng/geom/internal/dispatch.js","../internal/translate-points":"../node_modules/@thi.ng/geom/internal/translate-points.js"}],"../node_modules/@thi.ng/geom/ops/center.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.center = void 0;

var _defmulti = require("@thi.ng/defmulti");

var _geomApi = require("@thi.ng/geom-api");

var _vectors = require("@thi.ng/vectors");

var _arc = require("../api/arc");

var _circle = require("../api/circle");

var _ellipse = require("../api/ellipse");

var _sphere = require("../api/sphere");

var _copyAttribs = require("../internal/copy-attribs");

var _dispatch = require("../internal/dispatch");

var _centroid = require("./centroid");

var _translate = require("./translate");

const center = (0, _defmulti.defmulti)(_dispatch.dispatch);
exports.center = center;
center.add(_defmulti.DEFAULT, ($, origin = _vectors.ZERO3) => {
  const c = (0, _centroid.centroid)($);
  return c ? (0, _translate.translate)($, (0, _vectors.submN)(null, c, origin, -1)) : undefined;
});
center.addAll({
  [_geomApi.Type.ARC]: ($, origin = _vectors.ZERO2) => new _arc.Arc((0, _vectors.set2)([], origin), (0, _vectors.set2)([], $.r), $.axis, $.start, $.end, $.xl, $.cw, (0, _copyAttribs.copyAttribs)($)),
  [_geomApi.Type.CIRCLE]: ($, origin = _vectors.ZERO2) => new _circle.Circle((0, _vectors.set2)([], origin), $.r, (0, _copyAttribs.copyAttribs)($)),
  [_geomApi.Type.ELLIPSE]: ($, origin = _vectors.ZERO2) => new _ellipse.Ellipse((0, _vectors.set2)([], origin), (0, _vectors.set2)([], $.r), (0, _copyAttribs.copyAttribs)($)),
  [_geomApi.Type.SPHERE]: ($, origin = _vectors.ZERO3) => new _sphere.Sphere((0, _vectors.set3)([], origin), $.r, (0, _copyAttribs.copyAttribs)($))
});
},{"@thi.ng/defmulti":"../node_modules/@thi.ng/defmulti/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../api/arc":"../node_modules/@thi.ng/geom/api/arc.js","../api/circle":"../node_modules/@thi.ng/geom/api/circle.js","../api/ellipse":"../node_modules/@thi.ng/geom/api/ellipse.js","../api/sphere":"../node_modules/@thi.ng/geom/api/sphere.js","../internal/copy-attribs":"../node_modules/@thi.ng/geom/internal/copy-attribs.js","../internal/dispatch":"../node_modules/@thi.ng/geom/internal/dispatch.js","./centroid":"../node_modules/@thi.ng/geom/ops/centroid.js","./translate":"../node_modules/@thi.ng/geom/ops/translate.js"}],"../node_modules/@thi.ng/geom/ops/classify-point.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.classifyPoint = void 0;

var _defmulti = require("@thi.ng/defmulti");

var _geomApi = require("@thi.ng/geom-api");

var _geomIsec = require("@thi.ng/geom-isec");

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

var _dispatch = require("../internal/dispatch");

const classifyPoint = (0, _defmulti.defmulti)(_dispatch.dispatch);
exports.classifyPoint = classifyPoint;
classifyPoint.addAll({
  [_geomApi.Type.CIRCLE]: ($, p, eps = _math.EPS) => (0, _geomIsec.classifyPointInCircle)(p, $.pos, $.r, eps),
  [_geomApi.Type.PLANE]: ($, p, eps) => (0, _math.sign)((0, _vectors.dot)($.normal, p) - $.w, eps),
  [_geomApi.Type.TRIANGLE]: ({
    points
  }, p, eps = _math.EPS) => (0, _geomIsec.classifyPointInTriangle2)(p, points[0], points[1], points[2], eps)
});
classifyPoint.isa(_geomApi.Type.SPHERE, _geomApi.Type.CIRCLE);
},{"@thi.ng/defmulti":"../node_modules/@thi.ng/defmulti/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/geom-isec":"../node_modules/@thi.ng/geom-isec/index.js","@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../internal/dispatch":"../node_modules/@thi.ng/geom/internal/dispatch.js"}],"../node_modules/@thi.ng/geom-clip-poly/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sutherlandHodgeman = void 0;

var _geomIsec = require("@thi.ng/geom-isec");

var _geomPolyUtils = require("@thi.ng/geom-poly-utils");

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

/**
 * Extended version of Sutherland-Hodgeman convex polygon clipping
 * supporting any convex boundary polygon (not only rects). Returns new
 * array of clipped vertices.
 *
 * {@link https://en.wikipedia.org/wiki/Sutherland%E2%80%93Hodgman_algorithm}
 *
 * @param pts - subject poly vertices
 * @param bounds - clipping boundary vertices
 * @param bc - pre-computed boundary centroid
 * @param eps - edge classification tolerance
 */
const sutherlandHodgeman = (pts, bounds, bc, eps = _math.EPS) => {
  bc = bc || (0, _geomPolyUtils.centroid)(bounds);

  for (let ne = bounds.length, j = ne - 1, i = 0; i < ne; j = i, i++) {
    const clipped = [];
    const ca = bounds[j];
    const cb = bounds[i];
    const sign = (0, _vectors.corner2)(ca, cb, bc, eps);

    for (let np = pts.length, k = np - 1, l = 0; l < np; k = l, l++) {
      const p = pts[k];
      const q = pts[l];
      const cqsign = (0, _vectors.corner2)(ca, cb, q, eps);

      if ((0, _vectors.corner2)(ca, cb, p, eps) === sign) {
        clipped.push(cqsign !== sign ? (0, _geomIsec.intersectLineLine)(ca, cb, p, q).isec : q);
      } else if (cqsign === sign) {
        clipped.push((0, _geomIsec.intersectLineLine)(ca, cb, p, q).isec, q);
      }
    }

    if (clipped.length < 2) {
      return [];
    }

    pts = clipped;
  }

  return pts;
};

exports.sutherlandHodgeman = sutherlandHodgeman;
},{"@thi.ng/geom-isec":"../node_modules/@thi.ng/geom-isec/index.js","@thi.ng/geom-poly-utils":"../node_modules/@thi.ng/geom-poly-utils/index.js","@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom/ops/clip-convex.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.clipConvex = void 0;

var _defmulti = require("@thi.ng/defmulti");

var _geomApi = require("@thi.ng/geom-api");

var _geomClipLine = require("@thi.ng/geom-clip-line");

var _geomClipPoly = require("@thi.ng/geom-clip-poly");

var _geomPolyUtils = require("@thi.ng/geom-poly-utils");

var _group = require("../api/group");

var _line = require("../api/line");

var _polygon = require("../api/polygon");

var _copyAttribs = require("../internal/copy-attribs");

var _dispatch = require("../internal/dispatch");

var _vertices = require("./vertices");

const clipConvex = (0, _defmulti.defmulti)(_dispatch.dispatch);
exports.clipConvex = clipConvex;
clipConvex.addAll({
  [_geomApi.Type.GROUP]: ({
    children,
    attribs
  }, boundary) => {
    boundary = (0, _vertices.ensureVertices)(boundary);
    const clipped = [];

    for (let c of children) {
      const res = clipConvex(c, boundary);
      if (res) clipped.push(res);
    }

    return new _group.Group(Object.assign({}, attribs), clipped);
  },
  [_geomApi.Type.LINE]: ($, boundary) => {
    const segments = (0, _geomClipLine.clipLineSegmentPoly)($.points[0], $.points[1], (0, _vertices.ensureVertices)(boundary));
    return segments && segments.length ? new _line.Line(segments[0], (0, _copyAttribs.copyAttribs)($)) : undefined;
  },
  [_geomApi.Type.POLYGON]: ($, boundary) => {
    boundary = (0, _vertices.ensureVertices)(boundary);
    const pts = (0, _geomClipPoly.sutherlandHodgeman)($.points, boundary, (0, _geomPolyUtils.centroid)(boundary));
    return pts.length ? new _polygon.Polygon(pts, (0, _copyAttribs.copyAttribs)($)) : undefined;
  },
  [_geomApi.Type.RECT]: ($, boundary) => {
    boundary = (0, _vertices.ensureVertices)(boundary);
    const pts = (0, _geomClipPoly.sutherlandHodgeman)((0, _vertices.vertices)($), boundary, (0, _geomPolyUtils.centroid)(boundary));
    return pts.length ? new _polygon.Polygon(pts, (0, _copyAttribs.copyAttribs)($)) : undefined;
  }
});
clipConvex.isa(_geomApi.Type.CIRCLE, _geomApi.Type.RECT);
clipConvex.isa(_geomApi.Type.ELLIPSE, _geomApi.Type.RECT);
clipConvex.isa(_geomApi.Type.PATH, _geomApi.Type.RECT);
clipConvex.isa(_geomApi.Type.QUAD, _geomApi.Type.POLYGON);
clipConvex.isa(_geomApi.Type.TRIANGLE, _geomApi.Type.POLYGON);
},{"@thi.ng/defmulti":"../node_modules/@thi.ng/defmulti/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/geom-clip-line":"../node_modules/@thi.ng/geom-clip-line/index.js","@thi.ng/geom-clip-poly":"../node_modules/@thi.ng/geom-clip-poly/index.js","@thi.ng/geom-poly-utils":"../node_modules/@thi.ng/geom-poly-utils/index.js","../api/group":"../node_modules/@thi.ng/geom/api/group.js","../api/line":"../node_modules/@thi.ng/geom/api/line.js","../api/polygon":"../node_modules/@thi.ng/geom/api/polygon.js","../internal/copy-attribs":"../node_modules/@thi.ng/geom/internal/copy-attribs.js","../internal/dispatch":"../node_modules/@thi.ng/geom/internal/dispatch.js","./vertices":"../node_modules/@thi.ng/geom/ops/vertices.js"}],"../node_modules/@thi.ng/geom/ops/closest-point.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.closestPoint = void 0;

var _defmulti = require("@thi.ng/defmulti");

var _geomApi = require("@thi.ng/geom-api");

var _geomArc = require("@thi.ng/geom-arc");

var _geomClosestPoint = require("@thi.ng/geom-closest-point");

var _geomSplines = require("@thi.ng/geom-splines");

var _vectors = require("@thi.ng/vectors");

var _dispatch = require("../internal/dispatch");

const closestPoint = (0, _defmulti.defmulti)(_dispatch.dispatch);
exports.closestPoint = closestPoint;
closestPoint.addAll({
  [_geomApi.Type.AABB]: ($, p, out) => (0, _geomClosestPoint.closestPointAABB)(p, $.pos, (0, _vectors.add3)([], $.pos, $.size), out),
  [_geomApi.Type.ARC]: ($, p, out) => (0, _geomArc.closestPoint)(p, $.pos, $.r, $.axis, $.start, $.end, out),
  [_geomApi.Type.CIRCLE]: ($, p, out) => (0, _geomClosestPoint.closestPointCircle)(p, $.pos, $.r, out),
  [_geomApi.Type.CUBIC]: ({
    points
  }, p, out) => (0, _geomSplines.closestPointCubic)(p, points[0], points[1], points[2], points[3], out),
  [_geomApi.Type.LINE]: ({
    points
  }, p, out) => (0, _geomClosestPoint.closestPointSegment)(p, points[0], points[1], out),
  [_geomApi.Type.PLANE]: ($, p, out) => (0, _geomClosestPoint.closestPointPlane)(p, $.normal, $.w, out),
  [_geomApi.Type.POINTS]: ($, p, out) => (0, _geomClosestPoint.closestPointArray)(p, $.points, out),
  [_geomApi.Type.POLYGON]: ($, p, out) => (0, _geomClosestPoint.closestPointPolyline)(p, $.points, true, out),
  [_geomApi.Type.POLYLINE]: ($, p, out) => (0, _geomClosestPoint.closestPointPolyline)(p, $.points, false, out),
  [_geomApi.Type.QUADRATIC]: ({
    points
  }, p, out) => (0, _geomSplines.closestPointQuadratic)(p, points[0], points[1], points[2], out),
  [_geomApi.Type.RECT]: ($, p, out) => (0, _geomClosestPoint.closestPointRect)(p, $.pos, (0, _vectors.add2)([], $.pos, $.size), out)
});
closestPoint.isa(_geomApi.Type.QUAD, _geomApi.Type.POLYGON);
closestPoint.isa(_geomApi.Type.SPHERE, _geomApi.Type.CIRCLE);
closestPoint.isa(_geomApi.Type.TRIANGLE, _geomApi.Type.POLYGON);
},{"@thi.ng/defmulti":"../node_modules/@thi.ng/defmulti/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/geom-arc":"../node_modules/@thi.ng/geom-arc/index.js","@thi.ng/geom-closest-point":"../node_modules/@thi.ng/geom-closest-point/index.js","@thi.ng/geom-splines":"../node_modules/@thi.ng/geom-splines/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../internal/dispatch":"../node_modules/@thi.ng/geom/internal/dispatch.js"}],"../node_modules/@thi.ng/geom-hull/graham-scan.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.grahamScan2 = void 0;

var _math = require("@thi.ng/math");

const atan2 = Math.atan2;
/**
 * Returns array of points defining the 2D Convex Hull of `pts` using
 * the Graham Scan method.
 *
 * - {@link https://en.wikipedia.org/wiki/Graham_scan}
 * - {@link http://c.thi.ng/}
 *
 * @param pts - input points
 * @param eps - tolerance for colinear neighbor detection
 */

const grahamScan2 = (pts, eps = _math.EPS) => {
  const num = pts.length;
  if (num <= 3) return pts.slice();
  let h = 1;
  let i;
  let p;
  let q;
  let r;
  let rx;
  let ry; // find min YX index

  const min = findMin(pts);
  [rx, ry] = pts[min];
  const sorted = []; // compute & sort by polar ordering relative to min

  for (i = 0; i < num; i++) {
    p = pts[i];
    sorted[i] = {
      p,
      t: atan2(p[1] - ry, p[0] - rx)
    };
  }

  sorted.sort((a, b) => a.t !== b.t ? a.t - b.t : a.p[0] - b.p[0]);
  const hull = [sorted[0].p];

  for (i = 1; i < num; i++) {
    p = hull[h - 2];
    q = hull[h - 1];
    r = sorted[i].p;
    rx = r[0];
    ry = r[1];

    while (h > 1 && notCCW(p[0], p[1], q[0], q[1], rx, ry, eps) || h === 1 && q[0] === rx && q[1] === ry) {
      h--;
      q = p;
      p = hull[h - 2];
    }

    hull[h++] = r;
  }

  hull.length = h;
  return hull;
};
/**
 * Returns true, if triangle defined by ABC is NOT counter clockwise,
 * i.e. clockwise or colinear.
 *
 * {@link @thi.ng/vectors#signedArea2}
 *
 * @param ax -
 * @param ay -
 * @param bx -
 * @param by -
 * @param cx -
 * @param cy -
 */


exports.grahamScan2 = grahamScan2;

const notCCW = (ax, ay, bx, by, cx, cy, eps) => (by - ay) * (cx - ax) >= (bx - ax) * (cy - ay) - eps;
/**
 * Returns index of point with lowest YX coords.
 *
 * @param pts -
 */


const findMin = pts => {
  let n = pts.length - 1;
  let minID = n;
  let [minX, minY] = pts[n];
  let p, y;

  for (; --n >= 0;) {
    p = pts[n];
    y = p[1];

    if (y < minY || y === minY && p[0] < minX) {
      minX = p[0];
      minY = y;
      minID = n;
    }
  }

  return minID;
};
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js"}],"../node_modules/@thi.ng/geom-hull/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _grahamScan = require("./graham-scan");

Object.keys(_grahamScan).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _grahamScan[key];
    }
  });
});
},{"./graham-scan":"../node_modules/@thi.ng/geom-hull/graham-scan.js"}],"../node_modules/@thi.ng/geom/ops/convex-hull.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.convexHull = void 0;

var _defmulti = require("@thi.ng/defmulti");

var _geomApi = require("@thi.ng/geom-api");

var _geomHull = require("@thi.ng/geom-hull");

var _polygon = require("../api/polygon");

var _copyAttribs = require("../internal/copy-attribs");

var _dispatch = require("../internal/dispatch");

var _vertices = require("./vertices");

const convexHull = (0, _defmulti.defmulti)(_dispatch.dispatch);
exports.convexHull = convexHull;
convexHull.addAll({
  [_geomApi.Type.GROUP]: $ => new _polygon.Polygon((0, _vertices.vertices)($), (0, _copyAttribs.copyAttribs)($)),
  [_geomApi.Type.POINTS]: $ => new _polygon.Polygon((0, _geomHull.grahamScan2)($.points), (0, _copyAttribs.copyAttribs)($)),
  [_geomApi.Type.TRIANGLE]: $ => $.copy()
});
convexHull.isa(_geomApi.Type.CIRCLE, _geomApi.Type.TRIANGLE);
convexHull.isa(_geomApi.Type.ELLIPSE, _geomApi.Type.TRIANGLE);
convexHull.isa(_geomApi.Type.POLYGON, _geomApi.Type.POINTS);
convexHull.isa(_geomApi.Type.POLYLINE, _geomApi.Type.POINTS);
convexHull.isa(_geomApi.Type.QUAD, _geomApi.Type.POINTS);
convexHull.isa(_geomApi.Type.RECT, _geomApi.Type.TRIANGLE);
},{"@thi.ng/defmulti":"../node_modules/@thi.ng/defmulti/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/geom-hull":"../node_modules/@thi.ng/geom-hull/index.js","../api/polygon":"../node_modules/@thi.ng/geom/api/polygon.js","../internal/copy-attribs":"../node_modules/@thi.ng/geom/internal/copy-attribs.js","../internal/dispatch":"../node_modules/@thi.ng/geom/internal/dispatch.js","./vertices":"../node_modules/@thi.ng/geom/ops/vertices.js"}],"../node_modules/@thi.ng/geom/internal/edges.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.edgeIterator = void 0;

var _transducers = require("@thi.ng/transducers");

const edgeIterator = (vertices, closed = false) => (0, _transducers.partition)(2, 1, closed ? (0, _transducers.wrapSides)(vertices, 0, 1) : vertices);

exports.edgeIterator = edgeIterator;
},{"@thi.ng/transducers":"../node_modules/@thi.ng/transducers/index.js"}],"../node_modules/@thi.ng/geom/ops/edges.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.edges = void 0;

var _defmulti = require("@thi.ng/defmulti");

var _geomApi = require("@thi.ng/geom-api");

var _dispatch = require("../internal/dispatch");

var _edges = require("../internal/edges");

var _vertices = require("./vertices");

const edges = (0, _defmulti.defmulti)(_dispatch.dispatch);
exports.edges = edges;
edges.addAll({
  [_geomApi.Type.AABB]: $ => {
    const [a, b, c, d, e, f, g, h] = (0, _vertices.vertices)($);
    return [[a, b], [b, c], [c, d], [d, a], [e, f], [f, g], [g, h], [h, e], [a, e], [b, f], [c, g], [d, h]];
  },
  [_geomApi.Type.POLYGON]: $ => (0, _edges.edgeIterator)($.points, true),
  [_geomApi.Type.POLYLINE]: $ => (0, _edges.edgeIterator)($.points),
  [_geomApi.Type.RECT]: $ => (0, _edges.edgeIterator)((0, _vertices.vertices)($), true)
});
edges.isa(_geomApi.Type.LINE, _geomApi.Type.POLYLINE);
edges.isa(_geomApi.Type.QUAD, _geomApi.Type.POLYGON);
edges.isa(_geomApi.Type.TRIANGLE, _geomApi.Type.POLYGON);
},{"@thi.ng/defmulti":"../node_modules/@thi.ng/defmulti/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","../internal/dispatch":"../node_modules/@thi.ng/geom/internal/dispatch.js","../internal/edges":"../node_modules/@thi.ng/geom/internal/edges.js","./vertices":"../node_modules/@thi.ng/geom/ops/vertices.js"}],"../node_modules/@thi.ng/geom/ops/map-point.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mapPoint = void 0;

var _defmulti = require("@thi.ng/defmulti");

var _geomApi = require("@thi.ng/geom-api");

var _vectors = require("@thi.ng/vectors");

var _dispatch = require("../internal/dispatch");

const mapPoint = (0, _defmulti.defmulti)(_dispatch.dispatch);
exports.mapPoint = mapPoint;
mapPoint.addAll({
  [_geomApi.Type.RECT]: ($, p, out = []) => (0, _vectors.div)(null, (0, _vectors.sub)(out, p, $.pos), $.size)
});
mapPoint.isa(_geomApi.Type.AABB, _geomApi.Type.RECT);
},{"@thi.ng/defmulti":"../node_modules/@thi.ng/defmulti/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../internal/dispatch":"../node_modules/@thi.ng/geom/internal/dispatch.js"}],"../node_modules/@thi.ng/geom/internal/transform-points.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.transformedShapePoints3 = exports.transformedShape3 = exports.transformedPointsWith3 = exports.transformedPoints3 = exports.transformPoints3 = exports.transformedShapePoints = exports.transformedShape = exports.transformedPointsWith = exports.transformPointsWith = exports.transformedPoints = exports.transformPoints = void 0;

var _matrices = require("@thi.ng/matrices");

var _copyAttribs = require("./copy-attribs");

const transformPoints = (pts, mat, op = _matrices.mulV) => (pts.forEach(p => op(null, mat, p)), pts);

exports.transformPoints = transformPoints;

const transformedPoints = (pts, mat, op = _matrices.mulV) => pts.map(p => op([], mat, p));

exports.transformedPoints = transformedPoints;

const transformPointsWith = (pts, fn, op = _matrices.mulV) => (pts.forEach(p => op(null, fn(p), p)), pts);

exports.transformPointsWith = transformPointsWith;

const transformedPointsWith = (pts, fn, op = _matrices.mulV) => pts.map(p => op([], fn(p), p));

exports.transformedPointsWith = transformedPointsWith;

const transformedShape = ctor => ($, mat) => new ctor(transformedPoints($.points, mat), (0, _copyAttribs.copyAttribs)($));

exports.transformedShape = transformedShape;

const transformedShapePoints = ctor => ($, fn) => new ctor(transformedPointsWith($.points, fn), (0, _copyAttribs.copyAttribs)($)); // 3d versions


exports.transformedShapePoints = transformedShapePoints;

const transformPoints3 = (pts, mat) => transformPoints(pts, mat, _matrices.mulV344);

exports.transformPoints3 = transformPoints3;

const transformedPoints3 = (pts, mat) => transformedPoints(pts, mat, _matrices.mulV344);

exports.transformedPoints3 = transformedPoints3;

const transformedPointsWith3 = (pts, fn) => transformedPointsWith(pts, fn, _matrices.mulV344);

exports.transformedPointsWith3 = transformedPointsWith3;

const transformedShape3 = ctor => ($, mat) => new ctor(transformedPoints3($.points, mat), (0, _copyAttribs.copyAttribs)($));

exports.transformedShape3 = transformedShape3;

const transformedShapePoints3 = ctor => ($, fn) => new ctor(transformedPointsWith3($.points, fn), (0, _copyAttribs.copyAttribs)($));

exports.transformedShapePoints3 = transformedShapePoints3;
},{"@thi.ng/matrices":"../node_modules/@thi.ng/matrices/index.js","./copy-attribs":"../node_modules/@thi.ng/geom/internal/copy-attribs.js"}],"../node_modules/@thi.ng/geom/ops/transform.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.transform = void 0;

var _defmulti = require("@thi.ng/defmulti");

var _geomApi = require("@thi.ng/geom-api");

var _matrices = require("@thi.ng/matrices");

var _transducers = require("@thi.ng/transducers");

var _cubic = require("../api/cubic");

var _group = require("../api/group");

var _line = require("../api/line");

var _path = require("../api/path");

var _points = require("../api/points");

var _polygon = require("../api/polygon");

var _polyline = require("../api/polyline");

var _quad = require("../api/quad");

var _quadratic = require("../api/quadratic");

var _text = require("../api/text");

var _triangle = require("../api/triangle");

var _copyAttribs = require("../internal/copy-attribs");

var _dispatch = require("../internal/dispatch");

var _transformPoints = require("../internal/transform-points");

var _asPath = require("./as-path");

var _asPolygon = require("./as-polygon");

/**
 * Transforms given shape with provided matrix. Some shape types will be
 * automatically converted to other types prior to transformation because they
 * cannot be reliably represented in their original type anymore, this
 * includes:
 *
 * - Arc => Path (cubics)
 * - Circle => Path (cubics)
 * - Ellipse => Path (cubics)
 * - Rect => Polygon
 */
const transform = (0, _defmulti.defmulti)(_dispatch.dispatch);
exports.transform = transform;
transform.addAll({
  [_geomApi.Type.ARC]: ($, mat) => transform((0, _asPath.asPath)($), mat),
  [_geomApi.Type.CUBIC]: (0, _transformPoints.transformedShape)(_cubic.Cubic),
  [_geomApi.Type.GROUP]: ($, mat) => new _group.Group((0, _copyAttribs.copyAttribs)($), $.children.map(x => transform(x, mat))),
  [_geomApi.Type.LINE]: (0, _transformPoints.transformedShape)(_line.Line),
  [_geomApi.Type.PATH]: ($, mat) => new _path.Path([...(0, _transducers.map)(s => s.type === _geomApi.SegmentType.MOVE ? {
    type: s.type,
    point: (0, _matrices.mulV)([], mat, s.point)
  } : {
    type: s.type,
    geo: transform(s.geo, mat)
  }, $.segments)], (0, _copyAttribs.copyAttribs)($)),
  [_geomApi.Type.POINTS]: (0, _transformPoints.transformedShape)(_points.Points),
  [_geomApi.Type.POINTS3]: (0, _transformPoints.transformedShape3)(_points.Points3),
  [_geomApi.Type.POLYGON]: (0, _transformPoints.transformedShape)(_polygon.Polygon),
  [_geomApi.Type.POLYLINE]: (0, _transformPoints.transformedShape)(_polyline.Polyline),
  [_geomApi.Type.QUAD]: (0, _transformPoints.transformedShape)(_quad.Quad),
  [_geomApi.Type.QUADRATIC]: (0, _transformPoints.transformedShape)(_quadratic.Quadratic),
  [_geomApi.Type.RECT]: ($, mat) => transform((0, _asPolygon.asPolygon)($), mat),
  [_geomApi.Type.TEXT]: ($, mat) => new _text.Text((0, _matrices.mulV)([], mat, $.pos), $.body, (0, _copyAttribs.copyAttribs)($)),
  [_geomApi.Type.TRIANGLE]: (0, _transformPoints.transformedShape)(_triangle.Triangle)
});
transform.isa(_geomApi.Type.CIRCLE, _geomApi.Type.ARC);
transform.isa(_geomApi.Type.ELLIPSE, _geomApi.Type.CIRCLE);
},{"@thi.ng/defmulti":"../node_modules/@thi.ng/defmulti/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/matrices":"../node_modules/@thi.ng/matrices/index.js","@thi.ng/transducers":"../node_modules/@thi.ng/transducers/index.js","../api/cubic":"../node_modules/@thi.ng/geom/api/cubic.js","../api/group":"../node_modules/@thi.ng/geom/api/group.js","../api/line":"../node_modules/@thi.ng/geom/api/line.js","../api/path":"../node_modules/@thi.ng/geom/api/path.js","../api/points":"../node_modules/@thi.ng/geom/api/points.js","../api/polygon":"../node_modules/@thi.ng/geom/api/polygon.js","../api/polyline":"../node_modules/@thi.ng/geom/api/polyline.js","../api/quad":"../node_modules/@thi.ng/geom/api/quad.js","../api/quadratic":"../node_modules/@thi.ng/geom/api/quadratic.js","../api/text":"../node_modules/@thi.ng/geom/api/text.js","../api/triangle":"../node_modules/@thi.ng/geom/api/triangle.js","../internal/copy-attribs":"../node_modules/@thi.ng/geom/internal/copy-attribs.js","../internal/dispatch":"../node_modules/@thi.ng/geom/internal/dispatch.js","../internal/transform-points":"../node_modules/@thi.ng/geom/internal/transform-points.js","./as-path":"../node_modules/@thi.ng/geom/ops/as-path.js","./as-polygon":"../node_modules/@thi.ng/geom/ops/as-polygon.js"}],"../node_modules/@thi.ng/geom/ops/unmap-point.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.unmapPoint = void 0;

var _defmulti = require("@thi.ng/defmulti");

var _geomApi = require("@thi.ng/geom-api");

var _vectors = require("@thi.ng/vectors");

var _dispatch = require("../internal/dispatch");

/**
 * Projects given point `uv` (normalized coords) into the target space
 * defined by `shape` and writes result to `out` (or returns new
 * vector). See {@link mapPoint} for reverse operation. Both functions
 * together can be used to warp points from one shape into another.
 *
 * Currently only implemented for these shape types:
 *
 * - AABB
 * - Quad
 * - Rect
 *
 * @param shape - shape to operate on
 * @param uv - point to map in UV space
 * @param out - result
 */
const unmapPoint = (0, _defmulti.defmulti)(_dispatch.dispatch);
exports.unmapPoint = unmapPoint;
unmapPoint.addAll({
  [_geomApi.Type.QUAD]: ({
    points
  }, uv, out = []) => (0, _vectors.mixBilinear)(out, points[0], points[1], points[3], points[2], uv[0], uv[1]),
  [_geomApi.Type.RECT]: ($, uvw, out = []) => (0, _vectors.madd)(out, $.size, uvw, $.pos)
});
unmapPoint.isa(_geomApi.Type.AABB, _geomApi.Type.RECT);
unmapPoint.isa(_geomApi.Type.QUAD3, _geomApi.Type.QUAD);
},{"@thi.ng/defmulti":"../node_modules/@thi.ng/defmulti/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../internal/dispatch":"../node_modules/@thi.ng/geom/internal/dispatch.js"}],"../node_modules/@thi.ng/geom/ops/fit-into-bounds.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fitAllIntoBounds2 = exports.fitIntoBounds3 = exports.fitIntoBounds2 = void 0;

var _math = require("@thi.ng/math");

var _matrices = require("@thi.ng/matrices");

var _vectors = require("@thi.ng/vectors");

var _rect = require("../api/rect");

var _collBounds = require("../internal/coll-bounds");

var _bounds = require("./bounds");

var _center = require("./center");

var _centroid = require("./centroid");

var _mapPoint = require("./map-point");

var _transform = require("./transform");

var _unmapPoint = require("./unmap-point");

const translateScale = (tmat, smat, shape, preTrans, postTrans, scale) => (0, _transform.transform)(shape, (0, _matrices.concat)([], tmat([], postTrans), smat([], scale), tmat([], preTrans)));

const fitIntoBounds2 = (shape, dest) => {
  const src = (0, _bounds.bounds)(shape);
  if (!src) return;
  const c = (0, _centroid.centroid)(src);
  if (!c) return;
  return translateScale(_matrices.translation23, _matrices.scale23, shape, (0, _vectors.neg)(null, c), (0, _centroid.centroid)(dest), (0, _math.minNonZero2)((0, _math.safeDiv)(dest.size[0], src.size[0]), (0, _math.safeDiv)(dest.size[1], src.size[1])));
};

exports.fitIntoBounds2 = fitIntoBounds2;

const fitIntoBounds3 = (shape, dest) => {
  const src = (0, _bounds.bounds)(shape);
  if (!src) return;
  const c = (0, _centroid.centroid)(src);
  if (!c) return;
  return translateScale(_matrices.translation44, _matrices.scale44, shape, (0, _vectors.neg)(null, c), (0, _centroid.centroid)(dest), (0, _math.minNonZero3)((0, _math.safeDiv)(dest.size[0], src.size[0]), (0, _math.safeDiv)(dest.size[1], src.size[1]), (0, _math.safeDiv)(dest.size[2], src.size[2])));
};

exports.fitIntoBounds3 = fitIntoBounds3;

const fitAllIntoBounds2 = (shapes, dest) => {
  const sbraw = (0, _collBounds.collBounds)(shapes, _bounds.bounds);
  if (!sbraw) return;
  const src = new _rect.Rect(...sbraw);
  const sx = (0, _math.safeDiv)(dest.size[0], src.size[0]);
  const sy = (0, _math.safeDiv)(dest.size[1], src.size[1]);
  const scale = sx > 0 ? sy > 0 ? Math.min(sx, sy) : sx : sy;
  const smat = (0, _matrices.scale23)([], scale);
  const b = (0, _center.center)((0, _transform.transform)(src, smat), (0, _centroid.centroid)(dest));
  const c1 = [];
  const c2 = [];
  const res = [];

  for (let i = shapes.length; --i >= 0;) {
    const s = shapes[i];
    const sc = (0, _centroid.centroid)(s, c1);

    if (sc) {
      (0, _unmapPoint.unmapPoint)(b, (0, _mapPoint.mapPoint)(src, sc), c2);
      res.push(translateScale(_matrices.translation23, _matrices.scale23, s, (0, _vectors.neg)(null, c1), c2, smat));
    } else {
      res.push(s);
    }
  }

  return res;
};

exports.fitAllIntoBounds2 = fitAllIntoBounds2;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/matrices":"../node_modules/@thi.ng/matrices/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../api/rect":"../node_modules/@thi.ng/geom/api/rect.js","../internal/coll-bounds":"../node_modules/@thi.ng/geom/internal/coll-bounds.js","./bounds":"../node_modules/@thi.ng/geom/ops/bounds.js","./center":"../node_modules/@thi.ng/geom/ops/center.js","./centroid":"../node_modules/@thi.ng/geom/ops/centroid.js","./map-point":"../node_modules/@thi.ng/geom/ops/map-point.js","./transform":"../node_modules/@thi.ng/geom/ops/transform.js","./unmap-point":"../node_modules/@thi.ng/geom/ops/unmap-point.js"}],"../node_modules/@thi.ng/geom/ops/flip.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.flip = void 0;

var _defmulti = require("@thi.ng/defmulti");

var _geomApi = require("@thi.ng/geom-api");

var _vectors = require("@thi.ng/vectors");

var _dispatch = require("../internal/dispatch");

const flip = (0, _defmulti.defmulti)(_dispatch.dispatch);
exports.flip = flip;
flip.add(_defmulti.DEFAULT, $ => $);
flip.addAll({
  [_geomApi.Type.ARC]: $ => {
    const t = $.start;
    $.start = $.end;
    $.end = t;
    $.cw = !$.cw;
    return $;
  },
  [_geomApi.Type.GROUP]: $ => {
    $.children.forEach(flip);
    return $;
  },
  [_geomApi.Type.PATH]: $ => {
    // TODO
    return $;
  },
  [_geomApi.Type.POINTS]: $ => {
    $.points.reverse();
    return $;
  },
  [_geomApi.Type.RAY]: $ => {
    $.dir = (0, _vectors.neg)(null, $.dir);
    return $;
  }
});
flip.isa(_geomApi.Type.CUBIC, _geomApi.Type.POINTS);
flip.isa(_geomApi.Type.LINE, _geomApi.Type.POINTS);
flip.isa(_geomApi.Type.POINTS3, _geomApi.Type.POINTS);
flip.isa(_geomApi.Type.POLYGON, _geomApi.Type.POINTS);
flip.isa(_geomApi.Type.POLYLINE, _geomApi.Type.POINTS);
flip.isa(_geomApi.Type.QUAD, _geomApi.Type.POINTS);
flip.isa(_geomApi.Type.QUADRATIC, _geomApi.Type.POINTS);
flip.isa(_geomApi.Type.TRIANGLE, _geomApi.Type.POINTS);
},{"@thi.ng/defmulti":"../node_modules/@thi.ng/defmulti/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../internal/dispatch":"../node_modules/@thi.ng/geom/internal/dispatch.js"}],"../node_modules/@thi.ng/geom/ops/intersects.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.intersects = void 0;

var _defmulti = require("@thi.ng/defmulti");

var _geomApi = require("@thi.ng/geom-api");

var _geomIsec = require("@thi.ng/geom-isec");

var _dispatch = require("../internal/dispatch");

const intersects = (0, _defmulti.defmulti)(_dispatch.dispatch2);
exports.intersects = intersects;
intersects.addAll({
  [`${_geomApi.Type.CIRCLE}-${_geomApi.Type.CIRCLE}`]: (a, b) => (0, _geomIsec.intersectCircleCircle)(a.pos, b.pos, a.r, b.r),
  [`${_geomApi.Type.LINE}-${_geomApi.Type.LINE}`]: ({
    points: a
  }, {
    points: b
  }) => (0, _geomIsec.intersectLineLine)(a[0], a[1], b[0], b[1]),
  [`${_geomApi.Type.PLANE}-${_geomApi.Type.PLANE}`]: (a, b) => (0, _geomIsec.intersectPlanePlane)(a.normal, a.w, b.normal, b.w),
  [`${_geomApi.Type.RAY}-${_geomApi.Type.AABB}`]: (ray, box) => (0, _geomIsec.intersectRayAABB)(ray.pos, ray.dir, box.pos, box.max()),
  [`${_geomApi.Type.RAY}-${_geomApi.Type.CIRCLE}`]: (ray, sphere) => (0, _geomIsec.intersectRayCircle)(ray.pos, ray.dir, sphere.pos, sphere.r),
  [`${_geomApi.Type.RAY}-${_geomApi.Type.PLANE}`]: (ray, plane) => (0, _geomIsec.intersectRayPlane)(ray.pos, ray.dir, plane.normal, plane.w),
  [`${_geomApi.Type.RAY}-${_geomApi.Type.POLYGON}`]: (ray, poly) => (0, _geomIsec.intersectRayPolyline)(ray.pos, ray.dir, poly.points, true),
  [`${_geomApi.Type.RAY}-${_geomApi.Type.POLYLINE}`]: (ray, poly) => (0, _geomIsec.intersectRayPolyline)(ray.pos, ray.dir, poly.points, false),
  [`${_geomApi.Type.RAY}-${_geomApi.Type.RECT}`]: (ray, rect) => (0, _geomIsec.intersectRayRect)(ray.pos, ray.dir, rect.pos, rect.max()),
  [`${_geomApi.Type.RECT}-${_geomApi.Type.CIRCLE}`]: (rect, circle) => ({
    type: (0, _geomIsec.testRectCircle)(rect.pos, rect.size, circle.pos, circle.r) ? _geomApi.IntersectionType.INTERSECT : _geomApi.IntersectionType.NONE
  }),
  [`${_geomApi.Type.RECT}-${_geomApi.Type.RECT}`]: (a, b) => ({
    type: (0, _geomIsec.testRectRect)(a.pos, a.size, b.pos, b.size) ? _geomApi.IntersectionType.INTERSECT : _geomApi.IntersectionType.NONE
  })
});
intersects.isa(`${_geomApi.Type.RAY}-${_geomApi.Type.SPHERE}`, `${_geomApi.Type.RAY}-${_geomApi.Type.CIRCLE}`);
intersects.isa(`${_geomApi.Type.RAY}-${_geomApi.Type.QUAD}`, `${_geomApi.Type.RAY}-${_geomApi.Type.POLYGON}`);
intersects.isa(`${_geomApi.Type.RAY}-${_geomApi.Type.TRIANGLE}`, `${_geomApi.Type.RAY}-${_geomApi.Type.POLYGON}`);
intersects.isa(`${_geomApi.Type.SPHERE}-${_geomApi.Type.SPHERE}`, `${_geomApi.Type.CIRCLE}-${_geomApi.Type.CIRCLE}`);
},{"@thi.ng/defmulti":"../node_modules/@thi.ng/defmulti/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/geom-isec":"../node_modules/@thi.ng/geom-isec/index.js","../internal/dispatch":"../node_modules/@thi.ng/geom/internal/dispatch.js"}],"../node_modules/@thi.ng/geom/ops/offset.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.offset = void 0;

var _defmulti = require("@thi.ng/defmulti");

var _geomApi = require("@thi.ng/geom-api");

var _vectors = require("@thi.ng/vectors");

var _circle = require("../api/circle");

var _quad = require("../api/quad");

var _rect = require("../ctors/rect");

var _copyAttribs = require("../internal/copy-attribs");

var _dispatch = require("../internal/dispatch");

var _centroid = require("./centroid");

const offset = (0, _defmulti.defmulti)(_dispatch.dispatch);
exports.offset = offset;
offset.addAll({
  [_geomApi.Type.CIRCLE]: ($, n) => new _circle.Circle((0, _vectors.set2)([], $.pos), Math.max($.r + n, 0)),
  [_geomApi.Type.LINE]: ({
    points: [a, b],
    attribs
  }, n) => {
    const norm = (0, _vectors.normalCW)([], a, b, n);
    return new _quad.Quad([(0, _vectors.add2)([], a, norm), (0, _vectors.add2)([], b, norm), (0, _vectors.sub2)([], b, norm), (0, _vectors.sub2)([], a, norm)], Object.assign({}, attribs));
  },
  [_geomApi.Type.RECT]: ($, n) => (0, _rect.rectFromCentroid)((0, _centroid.centroid)($), (0, _vectors.max2)(null, (0, _vectors.addN2)([], $.size, n), _vectors.ZERO2), (0, _copyAttribs.copyAttribs)($))
});
},{"@thi.ng/defmulti":"../node_modules/@thi.ng/defmulti/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../api/circle":"../node_modules/@thi.ng/geom/api/circle.js","../api/quad":"../node_modules/@thi.ng/geom/api/quad.js","../ctors/rect":"../node_modules/@thi.ng/geom/ctors/rect.js","../internal/copy-attribs":"../node_modules/@thi.ng/geom/internal/copy-attribs.js","../internal/dispatch":"../node_modules/@thi.ng/geom/internal/dispatch.js","./centroid":"../node_modules/@thi.ng/geom/ops/centroid.js"}],"../node_modules/@thi.ng/geom/ops/point-at.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pointAt = void 0;

var _defmulti = require("@thi.ng/defmulti");

var _geomApi = require("@thi.ng/geom-api");

var _geomResample = require("@thi.ng/geom-resample");

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

var _dispatch = require("../internal/dispatch");

var _vertices = require("./vertices");

const pointAt = (0, _defmulti.defmulti)(_dispatch.dispatch);
exports.pointAt = pointAt;
pointAt.addAll({
  [_geomApi.Type.ARC]: ($, t) => $.pointAtTheta((0, _math.fit01)(t, $.start, $.end)),
  [_geomApi.Type.CIRCLE]: ($, t) => (0, _vectors.cartesian2)(null, [$.r, _math.TAU * t], $.pos),
  [_geomApi.Type.CUBIC]: ({
    points
  }, t) => (0, _vectors.mixCubic)([], points[0], points[1], points[2], points[3], t),
  [_geomApi.Type.ELLIPSE]: ($, t) => (0, _vectors.madd2)([], (0, _math.cossin)(_math.TAU * t), $.r, $.pos),
  [_geomApi.Type.LINE]: ({
    points
  }, t) => (0, _vectors.mixN2)([], points[0], points[1], t),
  [_geomApi.Type.POLYGON]: ($, t) => new _geomResample.Sampler($.points, true).pointAt(t),
  [_geomApi.Type.POLYLINE]: ($, t) => new _geomResample.Sampler($.points).pointAt(t),
  [_geomApi.Type.QUADRATIC]: ({
    points
  }, t) => (0, _vectors.mixQuadratic)([], points[0], points[1], points[2], t),
  [_geomApi.Type.RAY]: ($, t) => (0, _vectors.pointOnRay2)([], $.pos, $.dir, t),
  [_geomApi.Type.RAY3]: ($, t) => (0, _vectors.pointOnRay3)([], $.pos, $.dir, t),
  [_geomApi.Type.RECT]: ($, t) => new _geomResample.Sampler((0, _vertices.vertices)($), true).pointAt(t)
});
pointAt.isa(_geomApi.Type.QUAD, _geomApi.Type.POLYGON);
pointAt.isa(_geomApi.Type.TRIANGLE, _geomApi.Type.POLYGON);
},{"@thi.ng/defmulti":"../node_modules/@thi.ng/defmulti/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/geom-resample":"../node_modules/@thi.ng/geom-resample/index.js","@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../internal/dispatch":"../node_modules/@thi.ng/geom/internal/dispatch.js","./vertices":"../node_modules/@thi.ng/geom/ops/vertices.js"}],"../node_modules/@thi.ng/geom/ops/point-inside.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pointInside = void 0;

var _defmulti = require("@thi.ng/defmulti");

var _geomApi = require("@thi.ng/geom-api");

var _geomIsec = require("@thi.ng/geom-isec");

var _vectors = require("@thi.ng/vectors");

var _dispatch = require("../internal/dispatch");

const pointInside = (0, _defmulti.defmulti)(_dispatch.dispatch);
exports.pointInside = pointInside;
pointInside.addAll({
  [_geomApi.Type.AABB]: ($, p) => (0, _geomIsec.pointInAABB)(p, $.pos, $.size),
  [_geomApi.Type.CIRCLE]: ($, p) => (0, _geomIsec.pointInCircle)(p, $.pos, $.r),
  [_geomApi.Type.LINE]: ($, p) => (0, _geomIsec.pointInSegment)(p, $.points[0], $.points[1]),
  [_geomApi.Type.POINTS]: ({
    points
  }, p) => (0, _vectors.isInArray)(p, points),
  [_geomApi.Type.POLYGON]: ($, p) => (0, _geomIsec.pointInPolygon2)(p, $.points) > 0,
  [_geomApi.Type.RECT]: ($, p) => (0, _geomIsec.pointInRect)(p, $.pos, $.size),
  [_geomApi.Type.TRIANGLE]: (tri, p) => (0, _geomIsec.pointInTriangle2)(p, ...tri.points)
});
pointInside.isa(_geomApi.Type.POINTS3, _geomApi.Type.POINTS);
pointInside.isa(_geomApi.Type.QUAD, _geomApi.Type.POLYGON);
pointInside.isa(_geomApi.Type.SPHERE, _geomApi.Type.CIRCLE);
},{"@thi.ng/defmulti":"../node_modules/@thi.ng/defmulti/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/geom-isec":"../node_modules/@thi.ng/geom-isec/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../internal/dispatch":"../node_modules/@thi.ng/geom/internal/dispatch.js"}],"../node_modules/@thi.ng/geom/ops/resample.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.resample = void 0;

var _defmulti = require("@thi.ng/defmulti");

var _geomApi = require("@thi.ng/geom-api");

var _geomResample = require("@thi.ng/geom-resample");

var _polygon = require("../api/polygon");

var _polyline = require("../api/polyline");

var _copyAttribs = require("../internal/copy-attribs");

var _dispatch = require("../internal/dispatch");

var _asPolygon = require("./as-polygon");

const resample = (0, _defmulti.defmulti)(_dispatch.dispatch);
exports.resample = resample;
resample.addAll({
  [_geomApi.Type.CIRCLE]: ($, opts) => (0, _asPolygon.asPolygon)($, opts),
  [_geomApi.Type.POLYGON]: ($, opts) => new _polygon.Polygon((0, _geomResample.resample)($.points, opts, true, true), (0, _copyAttribs.copyAttribs)($)),
  [_geomApi.Type.POLYLINE]: ($, opts) => new _polyline.Polyline((0, _geomResample.resample)($.points, opts, false, true), (0, _copyAttribs.copyAttribs)($))
});
resample.isa(_geomApi.Type.ELLIPSE, _geomApi.Type.CIRCLE);
resample.isa(_geomApi.Type.LINE, _geomApi.Type.POLYLINE);
resample.isa(_geomApi.Type.QUAD, _geomApi.Type.POLYGON);
resample.isa(_geomApi.Type.TRIANGLE, _geomApi.Type.POLYGON);
resample.isa(_geomApi.Type.RECT, _geomApi.Type.CIRCLE);
},{"@thi.ng/defmulti":"../node_modules/@thi.ng/defmulti/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/geom-resample":"../node_modules/@thi.ng/geom-resample/index.js","../api/polygon":"../node_modules/@thi.ng/geom/api/polygon.js","../api/polyline":"../node_modules/@thi.ng/geom/api/polyline.js","../internal/copy-attribs":"../node_modules/@thi.ng/geom/internal/copy-attribs.js","../internal/dispatch":"../node_modules/@thi.ng/geom/internal/dispatch.js","./as-polygon":"../node_modules/@thi.ng/geom/ops/as-polygon.js"}],"../node_modules/@thi.ng/geom/ops/scatter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.scatter = void 0;

var _random = require("@thi.ng/random");

var _vectors = require("@thi.ng/vectors");

var _bounds = require("./bounds");

var _pointInside = require("./point-inside");

const scatter = (shape, num, rnd = _random.SYSTEM, out = []) => {
  const b = (0, _bounds.bounds)(shape);
  if (!b) return;
  const mi = b.pos;
  const mx = b.max();

  for (; --num >= 0;) {
    while (true) {
      const p = (0, _vectors.randMinMax)([], mi, mx, rnd);

      if ((0, _pointInside.pointInside)(shape, p)) {
        out.push(p);
        break;
      }
    }
  }

  return out;
};

exports.scatter = scatter;
},{"@thi.ng/random":"../node_modules/@thi.ng/random/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./bounds":"../node_modules/@thi.ng/geom/ops/bounds.js","./point-inside":"../node_modules/@thi.ng/geom/ops/point-inside.js"}],"../node_modules/@thi.ng/geom/ops/simplify.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.simplify = void 0;

var _arrays = require("@thi.ng/arrays");

var _defmulti = require("@thi.ng/defmulti");

var _geomApi = require("@thi.ng/geom-api");

var _geomResample = require("@thi.ng/geom-resample");

var _path = require("../api/path");

var _polygon = require("../api/polygon");

var _polyline = require("../api/polyline");

var _copyAttribs = require("../internal/copy-attribs");

var _dispatch = require("../internal/dispatch");

var _vertices = require("./vertices");

const simplify = (0, _defmulti.defmulti)(_dispatch.dispatch);
exports.simplify = simplify;
simplify.addAll({
  [_geomApi.Type.PATH]: ($, eps = 0.1) => {
    const res = [];
    const orig = $.segments;
    const n = orig.length;
    let points;
    let lastP;

    for (let i = 0; i < n; i++) {
      const s = orig[i];

      if (s.type === _geomApi.SegmentType.LINE || s.type === _geomApi.SegmentType.POLYLINE) {
        points = points ? points.concat((0, _vertices.vertices)(s.geo)) : (0, _vertices.vertices)(s.geo);
        lastP = (0, _arrays.peek)(points);
      } else if (points) {
        points.push(lastP);
        res.push({
          geo: new _polyline.Polyline((0, _geomResample.simplify)(points, eps)),
          type: _geomApi.SegmentType.POLYLINE
        });
        points = null;
      } else {
        res.push(Object.assign({}, s));
      }
    }

    if (points) {
      points.push(lastP);
      res.push({
        geo: new _polyline.Polyline(points),
        type: _geomApi.SegmentType.POLYLINE
      });
    }

    return new _path.Path(res, (0, _copyAttribs.copyAttribs)($));
  },
  [_geomApi.Type.POLYGON]: ($, eps = 0.1) => new _polygon.Polygon((0, _geomResample.simplify)($.points, eps, true), (0, _copyAttribs.copyAttribs)($)),
  [_geomApi.Type.POLYLINE]: ($, eps = 0.1) => new _polyline.Polyline((0, _geomResample.simplify)($.points, eps), (0, _copyAttribs.copyAttribs)($))
});
},{"@thi.ng/arrays":"../node_modules/@thi.ng/arrays/index.js","@thi.ng/defmulti":"../node_modules/@thi.ng/defmulti/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/geom-resample":"../node_modules/@thi.ng/geom-resample/index.js","../api/path":"../node_modules/@thi.ng/geom/api/path.js","../api/polygon":"../node_modules/@thi.ng/geom/api/polygon.js","../api/polyline":"../node_modules/@thi.ng/geom/api/polyline.js","../internal/copy-attribs":"../node_modules/@thi.ng/geom/internal/copy-attribs.js","../internal/dispatch":"../node_modules/@thi.ng/geom/internal/dispatch.js","./vertices":"../node_modules/@thi.ng/geom/ops/vertices.js"}],"../node_modules/@thi.ng/geom/internal/points-as-shape.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pointArraysAsShapes = void 0;

var _transducers = require("@thi.ng/transducers");

var _vectors = require("@thi.ng/vectors");

const pointArraysAsShapes = (ctor, src, attribs) => src ? [...(0, _transducers.map)(pts => new ctor((0, _vectors.copyVectors)(pts), Object.assign({}, attribs)), src)] : undefined;

exports.pointArraysAsShapes = pointArraysAsShapes;
},{"@thi.ng/transducers":"../node_modules/@thi.ng/transducers/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom/internal/split.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.splitLine = void 0;

var _vectors = require("@thi.ng/vectors");

const splitLine = (a, b, t) => {
  const p = (0, _vectors.mixN)([], a, b, t);
  return [[a, p], [(0, _vectors.set)([], p), b]];
};

exports.splitLine = splitLine;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom/ops/split-at.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.splitAt = void 0;

var _defmulti = require("@thi.ng/defmulti");

var _geomApi = require("@thi.ng/geom-api");

var _geomResample = require("@thi.ng/geom-resample");

var _geomSplines = require("@thi.ng/geom-splines");

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

var _arc = require("../api/arc");

var _cubic = require("../api/cubic");

var _line = require("../api/line");

var _polyline = require("../api/polyline");

var _quadratic = require("../api/quadratic");

var _copyAttribs = require("../internal/copy-attribs");

var _dispatch = require("../internal/dispatch");

var _pointsAsShape = require("../internal/points-as-shape");

var _split = require("../internal/split");

const splitAt = (0, _defmulti.defmulti)(_dispatch.dispatch);
exports.splitAt = splitAt;
splitAt.addAll({
  [_geomApi.Type.ARC]: ($, t) => {
    const theta = (0, _math.fit01)(t, $.start, $.end);
    return [new _arc.Arc((0, _vectors.set)([], $.pos), (0, _vectors.set)([], $.r), $.axis, $.start, theta, $.xl, $.cw, (0, _copyAttribs.copyAttribs)($)), new _arc.Arc((0, _vectors.set)([], $.pos), (0, _vectors.set)([], $.r), $.axis, theta, $.end, $.xl, $.cw, (0, _copyAttribs.copyAttribs)($))];
  },
  [_geomApi.Type.CUBIC]: ({
    attribs,
    points
  }, t) => (0, _geomSplines.cubicSplitAt)(points[0], points[1], points[2], points[3], t).map(pts => new _cubic.Cubic(pts, Object.assign({}, attribs))),
  [_geomApi.Type.LINE]: ({
    attribs,
    points
  }, t) => (0, _split.splitLine)(points[0], points[1], t).map(pts => new _line.Line(pts, Object.assign({}, attribs))),
  [_geomApi.Type.POLYLINE]: ($, t) => (0, _pointsAsShape.pointArraysAsShapes)(_polyline.Polyline, new _geomResample.Sampler($.points).splitAt(t), $.attribs),
  [_geomApi.Type.QUADRATIC]: ({
    attribs,
    points
  }, t) => (0, _geomSplines.quadraticSplitAt)(points[0], points[1], points[2], t).map(pts => new _quadratic.Quadratic(pts, Object.assign({}, attribs)))
});
},{"@thi.ng/defmulti":"../node_modules/@thi.ng/defmulti/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/geom-resample":"../node_modules/@thi.ng/geom-resample/index.js","@thi.ng/geom-splines":"../node_modules/@thi.ng/geom-splines/index.js","@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../api/arc":"../node_modules/@thi.ng/geom/api/arc.js","../api/cubic":"../node_modules/@thi.ng/geom/api/cubic.js","../api/line":"../node_modules/@thi.ng/geom/api/line.js","../api/polyline":"../node_modules/@thi.ng/geom/api/polyline.js","../api/quadratic":"../node_modules/@thi.ng/geom/api/quadratic.js","../internal/copy-attribs":"../node_modules/@thi.ng/geom/internal/copy-attribs.js","../internal/dispatch":"../node_modules/@thi.ng/geom/internal/dispatch.js","../internal/points-as-shape":"../node_modules/@thi.ng/geom/internal/points-as-shape.js","../internal/split":"../node_modules/@thi.ng/geom/internal/split.js"}],"../node_modules/@thi.ng/geom/ops/split-near.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.splitNearPoint = void 0;

var _defmulti = require("@thi.ng/defmulti");

var _geomApi = require("@thi.ng/geom-api");

var _geomClosestPoint = require("@thi.ng/geom-closest-point");

var _geomResample = require("@thi.ng/geom-resample");

var _geomSplines = require("@thi.ng/geom-splines");

var _math = require("@thi.ng/math");

var _cubic = require("../api/cubic");

var _line = require("../api/line");

var _polyline = require("../api/polyline");

var _quadratic = require("../api/quadratic");

var _copyAttribs = require("../internal/copy-attribs");

var _dispatch = require("../internal/dispatch");

var _pointsAsShape = require("../internal/points-as-shape");

var _split = require("../internal/split");

/**
 * Similar to {@link splitAt}, but instead of taking a normalized parametric
 * split position, splits the given curve at the closest point to `p`.
 * Returns tuple of split shapes of same type as `shape`.
 *
 * Implemented for:
 *
 * - Cubic
 * - Line
 * - Polyline
 * - Quadratic
 *
 * @param shape - shape to operate on
 * @param p - split point
 */
const splitNearPoint = (0, _defmulti.defmulti)(_dispatch.dispatch);
exports.splitNearPoint = splitNearPoint;
splitNearPoint.addAll({
  [_geomApi.Type.CUBIC]: ({
    points,
    attribs
  }, p) => (0, _geomSplines.splitCubicNearPoint)(p, points[0], points[1], points[2], points[3]).map(pts => new _cubic.Cubic(pts, Object.assign({}, attribs))),
  [_geomApi.Type.LINE]: ($, p) => {
    const t = (0, _geomClosestPoint.closestT)(p, $.points[0], $.points[1]) || 0;
    return (0, _split.splitLine)($.points[0], $.points[1], (0, _math.clamp01)(t)).map(pts => new _line.Line(pts, (0, _copyAttribs.copyAttribs)($)));
  },
  [_geomApi.Type.POLYLINE]: ($, p) => (0, _pointsAsShape.pointArraysAsShapes)(_polyline.Polyline, new _geomResample.Sampler($.points).splitNear(p), $.attribs),
  [_geomApi.Type.QUADRATIC]: ({
    points,
    attribs
  }, p) => (0, _geomSplines.quadraticSplitNearPoint)(p, points[0], points[1], points[2]).map(pts => new _quadratic.Quadratic(pts, Object.assign({}, attribs)))
});
},{"@thi.ng/defmulti":"../node_modules/@thi.ng/defmulti/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/geom-closest-point":"../node_modules/@thi.ng/geom-closest-point/index.js","@thi.ng/geom-resample":"../node_modules/@thi.ng/geom-resample/index.js","@thi.ng/geom-splines":"../node_modules/@thi.ng/geom-splines/index.js","@thi.ng/math":"../node_modules/@thi.ng/math/index.js","../api/cubic":"../node_modules/@thi.ng/geom/api/cubic.js","../api/line":"../node_modules/@thi.ng/geom/api/line.js","../api/polyline":"../node_modules/@thi.ng/geom/api/polyline.js","../api/quadratic":"../node_modules/@thi.ng/geom/api/quadratic.js","../internal/copy-attribs":"../node_modules/@thi.ng/geom/internal/copy-attribs.js","../internal/dispatch":"../node_modules/@thi.ng/geom/internal/dispatch.js","../internal/points-as-shape":"../node_modules/@thi.ng/geom/internal/points-as-shape.js","../internal/split":"../node_modules/@thi.ng/geom/internal/split.js"}],"../node_modules/@thi.ng/geom-subdiv-curve/kernels.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.kernel5 = exports.kernel3 = exports.kernel2 = void 0;

var _vectors = require("@thi.ng/vectors");

/**
 * HOF subdiv kernel function for computing 2 split points from 2 source
 * points, using weighted summation (thi.ng/vectors/addW2)
 *
 * @param u - split coeffs
 * @param v - split coeffs
 */
const kernel2 = ([ua, ub], [va, vb]) => ([a, b]) => [(0, _vectors.addW2)([], a, b, ua, ub), (0, _vectors.addW2)([], a, b, va, vb)];
/**
 * HOF subdiv kernel function for computing 2 split points from 3 source
 * points, using weighted summation (thi.ng/vectors/addW3)
 *
 * @param u - split coeffs
 * @param v - split coeffs
 */


exports.kernel2 = kernel2;

const kernel3 = ([ua, ub, uc], [va, vb, vc]) => ([a, b, c]) => [(0, _vectors.addW3)([], a, b, c, ua, ub, uc), (0, _vectors.addW3)([], a, b, c, va, vb, vc)];
/**
 * HOF subdiv kernel function for computing 2 split points from 5 source
 * points, using weighted summation (thi.ng/vectors/addW5)
 *
 * @param u - split coeffs
 * @param v - split coeffs
 */


exports.kernel3 = kernel3;

const kernel5 = ([ua, ub, uc, ud, ue], [va, vb, vc, vd, ve]) => ([a, b, c, d, e]) => [(0, _vectors.addW5)([], a, b, c, d, e, ua, ub, uc, ud, ue), (0, _vectors.addW5)([], a, b, c, d, e, va, vb, vc, vd, ve)];

exports.kernel5 = kernel5;
},{"@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-subdiv-curve/api.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SUBDIV_CUBIC_CLOSED = exports.SUBDIV_CHAIKIN_CLOSED = exports.SUBDIV_CHAIKIN_OPEN = exports.SUBDIV_THIRDS_CLOSED = exports.SUBDIV_THIRDS_OPEN = exports.SUBDIV_MID_CLOSED = exports.SUBDIV_MID_OPEN = void 0;

var _transducers = require("@thi.ng/transducers");

var _vectors = require("@thi.ng/vectors");

var _kernels = require("./kernels");

const MIDP = ([a, b]) => [a, (0, _vectors.addmN)([], a, b, 0.5)];

const THIRDS = ([a, b]) => [a, (0, _vectors.mixN)([], a, b, 1 / 3), (0, _vectors.mixN)([], a, b, 2 / 3)];

const wrap2 = pts => (0, _transducers.wrapSides)(pts, 0, 1);

const wrap3 = pts => (0, _transducers.wrapSides)(pts, 1, 1);

const subdivWith = fn => (pts, i, n) => i < n - 2 ? fn(pts) : [...fn(pts), pts[1]];
/**
 * Splits each curve / line segment into halves at midpoint. Version for
 * open curves.
 */


const SUBDIV_MID_OPEN = {
  fn: subdivWith(MIDP),
  size: 2
};
/**
 * Splits each curve / line segment into halves at midpoint. Version for
 * closed curves.
 */

exports.SUBDIV_MID_OPEN = SUBDIV_MID_OPEN;
const SUBDIV_MID_CLOSED = {
  fn: MIDP,
  pre: wrap2,
  size: 2
};
/**
 * Splits each curve / line segment into 3 parts at 1/3 and 2/3. Version for
 * open curves.
 */

exports.SUBDIV_MID_CLOSED = SUBDIV_MID_CLOSED;
const SUBDIV_THIRDS_OPEN = {
  fn: subdivWith(THIRDS),
  size: 2
};
/**
 * Splits each curve / line segment into 3 parts at 1/3 and 2/3. Version for
 * open curves.
 */

exports.SUBDIV_THIRDS_OPEN = SUBDIV_THIRDS_OPEN;
const SUBDIV_THIRDS_CLOSED = {
  fn: THIRDS,
  pre: wrap2,
  size: 2
};
exports.SUBDIV_THIRDS_CLOSED = SUBDIV_THIRDS_CLOSED;
const CHAIKIN_FIRST = (0, _kernels.kernel3)([1 / 2, 1 / 2, 0], [0, 3 / 4, 1 / 4]);
const CHAIKIN_MAIN = (0, _kernels.kernel3)([1 / 4, 3 / 4, 0], [0, 3 / 4, 1 / 4]);
const CHAIKIN_LAST = (0, _kernels.kernel3)([1 / 4, 3 / 4, 0], [0, 1 / 2, 1 / 2]);
/**
 * Chaikin subdivision scheme for open curves.
 */

const SUBDIV_CHAIKIN_OPEN = {
  fn: (pts, i, n) => i == 0 ? [pts[0], ...CHAIKIN_FIRST(pts)] : i === n - 3 ? [...CHAIKIN_LAST(pts), pts[2]] : CHAIKIN_MAIN(pts),
  size: 3
};
/**
 * Chaikin subdivision scheme for closed curves.
 */

exports.SUBDIV_CHAIKIN_OPEN = SUBDIV_CHAIKIN_OPEN;
const SUBDIV_CHAIKIN_CLOSED = {
  fn: CHAIKIN_MAIN,
  pre: wrap3,
  size: 3
};
exports.SUBDIV_CHAIKIN_CLOSED = SUBDIV_CHAIKIN_CLOSED;
const CUBIC_MAIN = (0, _kernels.kernel3)([1 / 8, 3 / 4, 1 / 8], [0, 1 / 2, 1 / 2]);
/**
 * Cubic bezier subdivision scheme for closed curves.
 */

const SUBDIV_CUBIC_CLOSED = {
  fn: CUBIC_MAIN,
  pre: wrap3,
  size: 3
};
exports.SUBDIV_CUBIC_CLOSED = SUBDIV_CUBIC_CLOSED;
},{"@thi.ng/transducers":"../node_modules/@thi.ng/transducers/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","./kernels":"../node_modules/@thi.ng/geom-subdiv-curve/kernels.js"}],"../node_modules/@thi.ng/geom-subdiv-curve/subdivide.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.subdivide = void 0;

var _transducers = require("@thi.ng/transducers");

/**
 * {@link http://algorithmicbotany.org/papers/subgpu.sig2003.pdf}
 *
 * @param kernel - subdivision scheme
 * @param pts - source points
 * @param iter - number of iterations
 */
const subdivide = (pts, {
  fn,
  pre,
  size
}, iter = 1) => {
  while (--iter >= 0) {
    const nump = pts.length;
    pts = (0, _transducers.transduce)((0, _transducers.comp)((0, _transducers.partition)(size, 1), (0, _transducers.mapcatIndexed)((i, pts) => fn(pts, i, nump))), (0, _transducers.push)(), pre ? pre(pts) : pts);
  }

  return pts;
};

exports.subdivide = subdivide;
},{"@thi.ng/transducers":"../node_modules/@thi.ng/transducers/index.js"}],"../node_modules/@thi.ng/geom-subdiv-curve/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _api = require("./api");

Object.keys(_api).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _api[key];
    }
  });
});

var _kernels = require("./kernels");

Object.keys(_kernels).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _kernels[key];
    }
  });
});

var _subdivide = require("./subdivide");

Object.keys(_subdivide).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _subdivide[key];
    }
  });
});
},{"./api":"../node_modules/@thi.ng/geom-subdiv-curve/api.js","./kernels":"../node_modules/@thi.ng/geom-subdiv-curve/kernels.js","./subdivide":"../node_modules/@thi.ng/geom-subdiv-curve/subdivide.js"}],"../node_modules/@thi.ng/geom/ops/subdiv-curve.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.subdivCurve = void 0;

var _defmulti = require("@thi.ng/defmulti");

var _geomApi = require("@thi.ng/geom-api");

var _geomSubdivCurve = require("@thi.ng/geom-subdiv-curve");

var _polygon = require("../api/polygon");

var _polyline = require("../api/polyline");

var _copyAttribs = require("../internal/copy-attribs");

var _dispatch = require("../internal/dispatch");

const subdivCurve = (0, _defmulti.defmulti)(_dispatch.dispatch);
exports.subdivCurve = subdivCurve;
subdivCurve.addAll({
  [_geomApi.Type.POLYGON]: ($, kernel, iter = 1) => new _polygon.Polygon((0, _geomSubdivCurve.subdivide)($.points, kernel, iter), (0, _copyAttribs.copyAttribs)($)),
  [_geomApi.Type.POLYLINE]: ($, kernel, iter = 1) => new _polyline.Polyline((0, _geomSubdivCurve.subdivide)($.points, kernel, iter), (0, _copyAttribs.copyAttribs)($))
});
},{"@thi.ng/defmulti":"../node_modules/@thi.ng/defmulti/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/geom-subdiv-curve":"../node_modules/@thi.ng/geom-subdiv-curve/index.js","../api/polygon":"../node_modules/@thi.ng/geom/api/polygon.js","../api/polyline":"../node_modules/@thi.ng/geom/api/polyline.js","../internal/copy-attribs":"../node_modules/@thi.ng/geom/internal/copy-attribs.js","../internal/dispatch":"../node_modules/@thi.ng/geom/internal/dispatch.js"}],"../node_modules/@thi.ng/geom/ops/tangent-at.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tangentAt = void 0;

var _defmulti = require("@thi.ng/defmulti");

var _geomApi = require("@thi.ng/geom-api");

var _geomResample = require("@thi.ng/geom-resample");

var _math = require("@thi.ng/math");

var _vectors = require("@thi.ng/vectors");

var _dispatch = require("../internal/dispatch");

var _vertices = require("./vertices");

const tangentAt = (0, _defmulti.defmulti)(_dispatch.dispatch);
exports.tangentAt = tangentAt;
tangentAt.addAll({
  [_geomApi.Type.CIRCLE]: (_, t) => (0, _math.cossin)(_math.TAU * t + _math.HALF_PI),
  [_geomApi.Type.LINE]: ({
    points
  }) => (0, _vectors.direction)([], points[0], points[1]),
  [_geomApi.Type.POLYGON]: ($, t) => new _geomResample.Sampler($.points, true).tangentAt(t),
  [_geomApi.Type.POLYLINE]: ($, t) => new _geomResample.Sampler($.points).tangentAt(t),
  [_geomApi.Type.RECT]: ($, t) => new _geomResample.Sampler((0, _vertices.vertices)($), true).tangentAt(t)
});
tangentAt.isa(_geomApi.Type.QUAD, _geomApi.Type.POLYGON);
tangentAt.isa(_geomApi.Type.TRIANGLE, _geomApi.Type.POLYGON);
},{"@thi.ng/defmulti":"../node_modules/@thi.ng/defmulti/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/geom-resample":"../node_modules/@thi.ng/geom-resample/index.js","@thi.ng/math":"../node_modules/@thi.ng/math/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js","../internal/dispatch":"../node_modules/@thi.ng/geom/internal/dispatch.js","./vertices":"../node_modules/@thi.ng/geom/ops/vertices.js"}],"../node_modules/@thi.ng/geom-tessellate/tessellate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tessellate = tessellate;

var _checks = require("@thi.ng/checks");

var _transducers = require("@thi.ng/transducers");

function tessellate(...args) {
  return (0, _transducers.transduce)((0, _transducers.scan)((0, _transducers.reducer)(() => [args[0]], (acc, fn) => (0, _transducers.transduce)((0, _transducers.mapcat)(fn), (0, _transducers.push)(), acc))), (0, _transducers.last)(), (0, _checks.isFunction)(args[1]) ? (0, _transducers.repeat)(args[1], args[2] || 1) : args[1]);
}
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","@thi.ng/transducers":"../node_modules/@thi.ng/transducers/index.js"}],"../node_modules/@thi.ng/geom-tessellate/earcut.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.earCut2 = void 0;

var _geomIsec = require("@thi.ng/geom-isec");

var _geomPolyUtils = require("@thi.ng/geom-poly-utils");

var _transducers = require("@thi.ng/transducers");

var _vectors = require("@thi.ng/vectors");

const snip = (points, u, v, w, n, ids) => {
  const a = points[ids[u]];
  const b = points[ids[v]];
  const c = points[ids[w]];

  if ((0, _vectors.signedArea2)(a, b, c) > 0) {
    for (let i = 0; i < n; i++) {
      if (i !== u && i !== v && i !== w) {
        if ((0, _geomIsec.pointInTriangle2)(points[ids[i]], a, b, c)) {
          return;
        }
      }
    }

    return [a, b, c];
  }
};
/**
 * Tessellator for simple 2D polygons.
 *
 * @param points - polygon vertices
 */


const earCut2 = points => {
  const tris = [];
  let n = points.length;
  const ids = [...((0, _geomPolyUtils.polyArea2)(points) > 0 ? (0, _transducers.range)(n) : (0, _transducers.range)(n - 1, -1, -1))];
  let count = 2 * n - 1;
  let v = n - 1,
      u,
      w,
      t;

  while (count > 0 && n > 2) {
    u = n <= v ? 0 : v;
    v = u + 1;
    v = n <= v ? 0 : v;
    w = v + 1;
    w = n <= w ? 0 : w;
    t = snip(points, u, v, w, n, ids);

    if (t !== undefined) {
      tris.push(t);
      ids.splice(v, 1);
      n--;
      count = 2 * n;
    } else {
      count--;
    }
  }

  return tris;
};

exports.earCut2 = earCut2;
},{"@thi.ng/geom-isec":"../node_modules/@thi.ng/geom-isec/index.js","@thi.ng/geom-poly-utils":"../node_modules/@thi.ng/geom-poly-utils/index.js","@thi.ng/transducers":"../node_modules/@thi.ng/transducers/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-tessellate/edge-split.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.edgeSplit = void 0;

var _geomPolyUtils = require("@thi.ng/geom-poly-utils");

var _transducers = require("@thi.ng/transducers");

var _vectors = require("@thi.ng/vectors");

const edgeSplit = points => {
  const c = (0, _geomPolyUtils.centroid)(points);
  return (0, _transducers.transduce)((0, _transducers.comp)((0, _transducers.partition)(2, 1), (0, _transducers.mapcat)(([a, b]) => {
    const m = (0, _vectors.mixN)([], a, b, 0.5);
    return [[a, m, c], [m, b, c]];
  })), (0, _transducers.push)(), (0, _transducers.wrapSides)(points, 0, 1));
};

exports.edgeSplit = edgeSplit;
},{"@thi.ng/geom-poly-utils":"../node_modules/@thi.ng/geom-poly-utils/index.js","@thi.ng/transducers":"../node_modules/@thi.ng/transducers/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-tessellate/inset.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tesselInset = void 0;

var _geomPolyUtils = require("@thi.ng/geom-poly-utils");

var _transducers = require("@thi.ng/transducers");

var _vectors = require("@thi.ng/vectors");

const tesselInset = (inset = 0.5, keepInterior = false) => points => {
  const c = (0, _geomPolyUtils.centroid)(points);
  const inner = points.map(p => (0, _vectors.mixN)([], p, c, inset));
  return (0, _transducers.transduce)((0, _transducers.comp)((0, _transducers.partition)(2, 1), (0, _transducers.map)(([[a, b], [c, d]]) => [a, b, d, c])), (0, _transducers.push)(), keepInterior ? [inner] : [], (0, _transducers.wrapSides)([...(0, _transducers.zip)(points, inner)], 0, 1));
};

exports.tesselInset = tesselInset;
},{"@thi.ng/geom-poly-utils":"../node_modules/@thi.ng/geom-poly-utils/index.js","@thi.ng/transducers":"../node_modules/@thi.ng/transducers/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-tessellate/quad-fan.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.quadFan = void 0;

var _geomPolyUtils = require("@thi.ng/geom-poly-utils");

var _transducers = require("@thi.ng/transducers");

var _vectors = require("@thi.ng/vectors");

const quadFan = points => {
  const p = (0, _geomPolyUtils.centroid)(points);
  return (0, _transducers.transduce)((0, _transducers.comp)((0, _transducers.partition)(3, 1), (0, _transducers.map)(([a, b, c]) => [(0, _vectors.mixN)([], a, b, 0.5), b, (0, _vectors.mixN)([], b, c, 0.5), p])), (0, _transducers.push)(), (0, _transducers.wrapSides)(points));
};

exports.quadFan = quadFan;
},{"@thi.ng/geom-poly-utils":"../node_modules/@thi.ng/geom-poly-utils/index.js","@thi.ng/transducers":"../node_modules/@thi.ng/transducers/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-tessellate/rim-tris.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rimTris = void 0;

var _transducers = require("@thi.ng/transducers");

var _vectors = require("@thi.ng/vectors");

const rimTris = points => {
  const edgeCentroids = (0, _transducers.transduce)((0, _transducers.comp)((0, _transducers.partition)(2, 1), (0, _transducers.map)(e => (0, _vectors.mixN)([], e[0], e[1], 0.5))), (0, _transducers.push)(), (0, _transducers.wrapSides)(points, 0, 1));
  return (0, _transducers.transduce)((0, _transducers.comp)((0, _transducers.partition)(2, 1), (0, _transducers.map)(t => [t[0][0], t[1][1], t[1][0]])), (0, _transducers.push)(), [edgeCentroids], (0, _transducers.wrapSides)([...(0, _transducers.zip)(edgeCentroids, points)], 1, 0));
};

exports.rimTris = rimTris;
},{"@thi.ng/transducers":"../node_modules/@thi.ng/transducers/index.js","@thi.ng/vectors":"../node_modules/@thi.ng/vectors/index.js"}],"../node_modules/@thi.ng/geom-tessellate/tri-fan.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.triFan = void 0;

var _geomPolyUtils = require("@thi.ng/geom-poly-utils");

var _transducers = require("@thi.ng/transducers");

const triFan = points => {
  const c = (0, _geomPolyUtils.centroid)(points);
  return (0, _transducers.transduce)((0, _transducers.comp)((0, _transducers.partition)(2, 1), (0, _transducers.map)(([a, b]) => [a, b, c])), (0, _transducers.push)(), (0, _transducers.wrapSides)(points, 0, 1));
};

exports.triFan = triFan;
},{"@thi.ng/geom-poly-utils":"../node_modules/@thi.ng/geom-poly-utils/index.js","@thi.ng/transducers":"../node_modules/@thi.ng/transducers/index.js"}],"../node_modules/@thi.ng/geom-tessellate/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _tessellate = require("./tessellate");

Object.keys(_tessellate).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _tessellate[key];
    }
  });
});

var _earcut = require("./earcut");

Object.keys(_earcut).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _earcut[key];
    }
  });
});

var _edgeSplit = require("./edge-split");

Object.keys(_edgeSplit).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _edgeSplit[key];
    }
  });
});

var _inset = require("./inset");

Object.keys(_inset).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _inset[key];
    }
  });
});

var _quadFan = require("./quad-fan");

Object.keys(_quadFan).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _quadFan[key];
    }
  });
});

var _rimTris = require("./rim-tris");

Object.keys(_rimTris).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _rimTris[key];
    }
  });
});

var _triFan = require("./tri-fan");

Object.keys(_triFan).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _triFan[key];
    }
  });
});
},{"./tessellate":"../node_modules/@thi.ng/geom-tessellate/tessellate.js","./earcut":"../node_modules/@thi.ng/geom-tessellate/earcut.js","./edge-split":"../node_modules/@thi.ng/geom-tessellate/edge-split.js","./inset":"../node_modules/@thi.ng/geom-tessellate/inset.js","./quad-fan":"../node_modules/@thi.ng/geom-tessellate/quad-fan.js","./rim-tris":"../node_modules/@thi.ng/geom-tessellate/rim-tris.js","./tri-fan":"../node_modules/@thi.ng/geom-tessellate/tri-fan.js"}],"../node_modules/@thi.ng/geom/ops/tessellate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tessellate = void 0;

var _defmulti = require("@thi.ng/defmulti");

var _geomTessellate = require("@thi.ng/geom-tessellate");

var _dispatch = require("../internal/dispatch");

var _vertices = require("./vertices");

const tessellate = (0, _defmulti.defmulti)(_dispatch.dispatch);
exports.tessellate = tessellate;
tessellate.add(_defmulti.DEFAULT, ($, fns) => (0, _geomTessellate.tessellate)((0, _vertices.vertices)($), fns));
},{"@thi.ng/defmulti":"../node_modules/@thi.ng/defmulti/index.js","@thi.ng/geom-tessellate":"../node_modules/@thi.ng/geom-tessellate/index.js","../internal/dispatch":"../node_modules/@thi.ng/geom/internal/dispatch.js","./vertices":"../node_modules/@thi.ng/geom/ops/vertices.js"}],"../node_modules/@thi.ng/geom/ops/transform-vertices.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.transformVertices = void 0;

var _defmulti = require("@thi.ng/defmulti");

var _geomApi = require("@thi.ng/geom-api");

var _matrices = require("@thi.ng/matrices");

var _transducers = require("@thi.ng/transducers");

var _cubic = require("../api/cubic");

var _group = require("../api/group");

var _line = require("../api/line");

var _path = require("../api/path");

var _points = require("../api/points");

var _polygon = require("../api/polygon");

var _polyline = require("../api/polyline");

var _quad = require("../api/quad");

var _quadratic = require("../api/quadratic");

var _triangle = require("../api/triangle");

var _copyAttribs = require("../internal/copy-attribs");

var _dispatch = require("../internal/dispatch");

var _transformPoints = require("../internal/transform-points");

var _asPolygon = require("./as-polygon");

var _asPolyline = require("./as-polyline");

/**
 * Transforms vertices of given shape with provided function, which is
 * being called for each vertex individually and should produce a
 * transformation matrix. Some shape types will be automatically
 * converted to other types prior to transformation because they cannot
 * be reliably represented in their original type anymore, this
 * includes:
 *
 * - Arc => Path (cubics)
 * - Circle => Path (cubics)
 * - Ellipse => Path (cubics)
 * - Rect => Polygon
 */
const transformVertices = (0, _defmulti.defmulti)(_dispatch.dispatch);
exports.transformVertices = transformVertices;
transformVertices.addAll({
  [_geomApi.Type.ARC]: ($, fn) => transformVertices((0, _asPolyline.asPolyline)($), fn),
  [_geomApi.Type.CUBIC]: (0, _transformPoints.transformedShapePoints)(_cubic.Cubic),
  [_geomApi.Type.GROUP]: ($, fn) => new _group.Group((0, _copyAttribs.copyAttribs)($), $.children.map(x => transformVertices(x, fn))),
  [_geomApi.Type.LINE]: (0, _transformPoints.transformedShapePoints)(_line.Line),
  [_geomApi.Type.PATH]: ($, fn) => new _path.Path([...(0, _transducers.map)(s => s.type === _geomApi.SegmentType.MOVE ? {
    type: s.type,
    point: (0, _matrices.mulV)([], fn(s.point), s.point)
  } : {
    type: s.type,
    geo: transformVertices(s.geo, fn)
  }, $.segments)], (0, _copyAttribs.copyAttribs)($)),
  [_geomApi.Type.POINTS]: (0, _transformPoints.transformedShapePoints)(_points.Points),
  [_geomApi.Type.POINTS3]: (0, _transformPoints.transformedShapePoints3)(_points.Points3),
  [_geomApi.Type.POLYGON]: (0, _transformPoints.transformedShapePoints)(_polygon.Polygon),
  [_geomApi.Type.POLYLINE]: (0, _transformPoints.transformedShapePoints)(_polyline.Polyline),
  [_geomApi.Type.QUAD]: (0, _transformPoints.transformedShapePoints)(_quad.Quad),
  [_geomApi.Type.QUADRATIC]: (0, _transformPoints.transformedShapePoints)(_quadratic.Quadratic),
  [_geomApi.Type.RECT]: ($, fn) => transformVertices((0, _asPolygon.asPolygon)($), fn),
  [_geomApi.Type.TRIANGLE]: (0, _transformPoints.transformedShapePoints)(_triangle.Triangle)
});
transformVertices.isa(_geomApi.Type.CIRCLE, _geomApi.Type.RECT);
transformVertices.isa(_geomApi.Type.ELLIPSE, _geomApi.Type.CIRCLE);
},{"@thi.ng/defmulti":"../node_modules/@thi.ng/defmulti/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/matrices":"../node_modules/@thi.ng/matrices/index.js","@thi.ng/transducers":"../node_modules/@thi.ng/transducers/index.js","../api/cubic":"../node_modules/@thi.ng/geom/api/cubic.js","../api/group":"../node_modules/@thi.ng/geom/api/group.js","../api/line":"../node_modules/@thi.ng/geom/api/line.js","../api/path":"../node_modules/@thi.ng/geom/api/path.js","../api/points":"../node_modules/@thi.ng/geom/api/points.js","../api/polygon":"../node_modules/@thi.ng/geom/api/polygon.js","../api/polyline":"../node_modules/@thi.ng/geom/api/polyline.js","../api/quad":"../node_modules/@thi.ng/geom/api/quad.js","../api/quadratic":"../node_modules/@thi.ng/geom/api/quadratic.js","../api/triangle":"../node_modules/@thi.ng/geom/api/triangle.js","../internal/copy-attribs":"../node_modules/@thi.ng/geom/internal/copy-attribs.js","../internal/dispatch":"../node_modules/@thi.ng/geom/internal/dispatch.js","../internal/transform-points":"../node_modules/@thi.ng/geom/internal/transform-points.js","./as-polygon":"../node_modules/@thi.ng/geom/ops/as-polygon.js","./as-polyline":"../node_modules/@thi.ng/geom/ops/as-polyline.js"}],"../node_modules/@thi.ng/geom/ops/union.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.union = void 0;

var _defmulti = require("@thi.ng/defmulti");

var _geomApi = require("@thi.ng/geom-api");

var _aabb = require("../api/aabb");

var _rect = require("../api/rect");

var _dispatch = require("../internal/dispatch");

var _unionBounds = require("../internal/union-bounds");

const union = (0, _defmulti.defmulti)(_dispatch.dispatch);
exports.union = union;
union.addAll({
  [_geomApi.Type.AABB]: (a, b) => [new _aabb.AABB(...(0, _unionBounds.unionBounds)(a.pos, a.size, b.pos, b.size))],
  [_geomApi.Type.RECT]: (a, b) => [new _rect.Rect(...(0, _unionBounds.unionBounds)(a.pos, a.size, b.pos, b.size))]
});
},{"@thi.ng/defmulti":"../node_modules/@thi.ng/defmulti/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","../api/aabb":"../node_modules/@thi.ng/geom/api/aabb.js","../api/rect":"../node_modules/@thi.ng/geom/api/rect.js","../internal/dispatch":"../node_modules/@thi.ng/geom/internal/dispatch.js","../internal/union-bounds":"../node_modules/@thi.ng/geom/internal/union-bounds.js"}],"../node_modules/@thi.ng/geom/ops/volume.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.volume = void 0;

var _defmulti = require("@thi.ng/defmulti");

var _geomApi = require("@thi.ng/geom-api");

var _math = require("@thi.ng/math");

var _dispatch = require("../internal/dispatch");

/**
 * Returns the volume of given 3D shape. Returns 0 for all others.
 *
 * Currently only implemented for:
 *
 * - AABB
 * - Sphere
 */
const volume = (0, _defmulti.defmulti)(_dispatch.dispatch);
exports.volume = volume;
volume.add(_defmulti.DEFAULT, () => 0);
volume.addAll({
  [_geomApi.Type.AABB]: ({
    size
  }) => size[0] * size[1] * size[2],
  [_geomApi.Type.SPHERE]: $ => 4 / 3 * _math.PI * $.r ** 3
});
},{"@thi.ng/defmulti":"../node_modules/@thi.ng/defmulti/index.js","@thi.ng/geom-api":"../node_modules/@thi.ng/geom-api/index.js","@thi.ng/math":"../node_modules/@thi.ng/math/index.js","../internal/dispatch":"../node_modules/@thi.ng/geom/internal/dispatch.js"}],"../node_modules/@thi.ng/geom/ops/warp-points.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.warpPoints = void 0;

var _mapPoint = require("./map-point");

var _unmapPoint = require("./unmap-point");

const warpPoints = (pts, dest, src) => {
  const res = [];

  for (let n = pts.length, i = 0; i < n; i++) {
    res.push((0, _unmapPoint.unmapPoint)(dest, (0, _mapPoint.mapPoint)(src, pts[i])));
  }

  return res;
};

exports.warpPoints = warpPoints;
},{"./map-point":"../node_modules/@thi.ng/geom/ops/map-point.js","./unmap-point":"../node_modules/@thi.ng/geom/ops/unmap-point.js"}],"../node_modules/@thi.ng/geom/ops/with-attribs.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.withAttribs = void 0;

const withAttribs = (shape, attribs, replace = true) => {
  shape.attribs = replace ? attribs : Object.assign(Object.assign({}, shape.attribs), attribs);
  return shape;
};

exports.withAttribs = withAttribs;
},{}],"../node_modules/@thi.ng/geom/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _aabb = require("./api/aabb");

Object.keys(_aabb).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _aabb[key];
    }
  });
});

var _apc = require("./api/apc");

Object.keys(_apc).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _apc[key];
    }
  });
});

var _arc = require("./api/arc");

Object.keys(_arc).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _arc[key];
    }
  });
});

var _circle = require("./api/circle");

Object.keys(_circle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _circle[key];
    }
  });
});

var _cubic = require("./api/cubic");

Object.keys(_cubic).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _cubic[key];
    }
  });
});

var _ellipse = require("./api/ellipse");

Object.keys(_ellipse).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _ellipse[key];
    }
  });
});

var _group = require("./api/group");

Object.keys(_group).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _group[key];
    }
  });
});

var _line = require("./api/line");

Object.keys(_line).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _line[key];
    }
  });
});

var _path = require("./api/path");

Object.keys(_path).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _path[key];
    }
  });
});

var _plane = require("./api/plane");

Object.keys(_plane).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _plane[key];
    }
  });
});

var _points = require("./api/points");

Object.keys(_points).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _points[key];
    }
  });
});

var _polygon = require("./api/polygon");

Object.keys(_polygon).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _polygon[key];
    }
  });
});

var _polyline = require("./api/polyline");

Object.keys(_polyline).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _polyline[key];
    }
  });
});

var _quad = require("./api/quad");

Object.keys(_quad).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _quad[key];
    }
  });
});

var _quad2 = require("./api/quad3");

Object.keys(_quad2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _quad2[key];
    }
  });
});

var _quadratic = require("./api/quadratic");

Object.keys(_quadratic).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _quadratic[key];
    }
  });
});

var _ray = require("./api/ray");

Object.keys(_ray).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _ray[key];
    }
  });
});

var _rect = require("./api/rect");

Object.keys(_rect).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _rect[key];
    }
  });
});

var _sphere = require("./api/sphere");

Object.keys(_sphere).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _sphere[key];
    }
  });
});

var _text = require("./api/text");

Object.keys(_text).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _text[key];
    }
  });
});

var _triangle = require("./api/triangle");

Object.keys(_triangle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _triangle[key];
    }
  });
});

var _aabb2 = require("./ctors/aabb");

Object.keys(_aabb2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _aabb2[key];
    }
  });
});

var _arc2 = require("./ctors/arc");

Object.keys(_arc2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _arc2[key];
    }
  });
});

var _circle2 = require("./ctors/circle");

Object.keys(_circle2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _circle2[key];
    }
  });
});

var _cubic2 = require("./ctors/cubic");

Object.keys(_cubic2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _cubic2[key];
    }
  });
});

var _ellipse2 = require("./ctors/ellipse");

Object.keys(_ellipse2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _ellipse2[key];
    }
  });
});

var _group2 = require("./ctors/group");

Object.keys(_group2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _group2[key];
    }
  });
});

var _line2 = require("./ctors/line");

Object.keys(_line2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _line2[key];
    }
  });
});

var _path2 = require("./ctors/path");

Object.keys(_path2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _path2[key];
    }
  });
});

var _pathBuilder = require("./ctors/path-builder");

Object.keys(_pathBuilder).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _pathBuilder[key];
    }
  });
});

var _pathFromSvg = require("./ctors/path-from-svg");

Object.keys(_pathFromSvg).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _pathFromSvg[key];
    }
  });
});

var _plane2 = require("./ctors/plane");

Object.keys(_plane2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _plane2[key];
    }
  });
});

var _points2 = require("./ctors/points");

Object.keys(_points2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _points2[key];
    }
  });
});

var _polygon2 = require("./ctors/polygon");

Object.keys(_polygon2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _polygon2[key];
    }
  });
});

var _polyline2 = require("./ctors/polyline");

Object.keys(_polyline2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _polyline2[key];
    }
  });
});

var _quad3 = require("./ctors/quad");

Object.keys(_quad3).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _quad3[key];
    }
  });
});

var _quadratic2 = require("./ctors/quadratic");

Object.keys(_quadratic2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _quadratic2[key];
    }
  });
});

var _ray2 = require("./ctors/ray");

Object.keys(_ray2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _ray2[key];
    }
  });
});

var _rect2 = require("./ctors/rect");

Object.keys(_rect2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _rect2[key];
    }
  });
});

var _text2 = require("./ctors/text");

Object.keys(_text2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _text2[key];
    }
  });
});

var _triangle2 = require("./ctors/triangle");

Object.keys(_triangle2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _triangle2[key];
    }
  });
});

var _arcLength = require("./ops/arc-length");

Object.keys(_arcLength).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _arcLength[key];
    }
  });
});

var _area = require("./ops/area");

Object.keys(_area).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _area[key];
    }
  });
});

var _asCubic = require("./ops/as-cubic");

Object.keys(_asCubic).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _asCubic[key];
    }
  });
});

var _asPath = require("./ops/as-path");

Object.keys(_asPath).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _asPath[key];
    }
  });
});

var _asPolygon = require("./ops/as-polygon");

Object.keys(_asPolygon).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _asPolygon[key];
    }
  });
});

var _asPolyline = require("./ops/as-polyline");

Object.keys(_asPolyline).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _asPolyline[key];
    }
  });
});

var _asSvg = require("./ops/as-svg");

Object.keys(_asSvg).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _asSvg[key];
    }
  });
});

var _bounds = require("./ops/bounds");

Object.keys(_bounds).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _bounds[key];
    }
  });
});

var _center = require("./ops/center");

Object.keys(_center).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _center[key];
    }
  });
});

var _centroid = require("./ops/centroid");

Object.keys(_centroid).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _centroid[key];
    }
  });
});

var _classifyPoint = require("./ops/classify-point");

Object.keys(_classifyPoint).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _classifyPoint[key];
    }
  });
});

var _clipConvex = require("./ops/clip-convex");

Object.keys(_clipConvex).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _clipConvex[key];
    }
  });
});

var _closestPoint = require("./ops/closest-point");

Object.keys(_closestPoint).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _closestPoint[key];
    }
  });
});

var _convexHull = require("./ops/convex-hull");

Object.keys(_convexHull).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _convexHull[key];
    }
  });
});

var _edges = require("./ops/edges");

Object.keys(_edges).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _edges[key];
    }
  });
});

var _fitIntoBounds = require("./ops/fit-into-bounds");

Object.keys(_fitIntoBounds).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _fitIntoBounds[key];
    }
  });
});

var _flip = require("./ops/flip");

Object.keys(_flip).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _flip[key];
    }
  });
});

var _intersects = require("./ops/intersects");

Object.keys(_intersects).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _intersects[key];
    }
  });
});

var _mapPoint = require("./ops/map-point");

Object.keys(_mapPoint).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _mapPoint[key];
    }
  });
});

var _offset = require("./ops/offset");

Object.keys(_offset).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _offset[key];
    }
  });
});

var _pointAt = require("./ops/point-at");

Object.keys(_pointAt).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _pointAt[key];
    }
  });
});

var _pointInside = require("./ops/point-inside");

Object.keys(_pointInside).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _pointInside[key];
    }
  });
});

var _resample = require("./ops/resample");

Object.keys(_resample).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _resample[key];
    }
  });
});

var _scatter = require("./ops/scatter");

Object.keys(_scatter).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _scatter[key];
    }
  });
});

var _simplify = require("./ops/simplify");

Object.keys(_simplify).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _simplify[key];
    }
  });
});

var _splitAt = require("./ops/split-at");

Object.keys(_splitAt).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _splitAt[key];
    }
  });
});

var _splitNear = require("./ops/split-near");

Object.keys(_splitNear).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _splitNear[key];
    }
  });
});

var _subdivCurve = require("./ops/subdiv-curve");

Object.keys(_subdivCurve).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _subdivCurve[key];
    }
  });
});

var _tangentAt = require("./ops/tangent-at");

Object.keys(_tangentAt).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _tangentAt[key];
    }
  });
});

var _tessellate = require("./ops/tessellate");

Object.keys(_tessellate).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _tessellate[key];
    }
  });
});

var _transform = require("./ops/transform");

Object.keys(_transform).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _transform[key];
    }
  });
});

var _transformVertices = require("./ops/transform-vertices");

Object.keys(_transformVertices).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _transformVertices[key];
    }
  });
});

var _translate = require("./ops/translate");

Object.keys(_translate).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _translate[key];
    }
  });
});

var _union = require("./ops/union");

Object.keys(_union).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _union[key];
    }
  });
});

var _unmapPoint = require("./ops/unmap-point");

Object.keys(_unmapPoint).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _unmapPoint[key];
    }
  });
});

var _vertices = require("./ops/vertices");

Object.keys(_vertices).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _vertices[key];
    }
  });
});

var _volume = require("./ops/volume");

Object.keys(_volume).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _volume[key];
    }
  });
});

var _warpPoints = require("./ops/warp-points");

Object.keys(_warpPoints).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _warpPoints[key];
    }
  });
});

var _withAttribs = require("./ops/with-attribs");

Object.keys(_withAttribs).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _withAttribs[key];
    }
  });
});

var _collBounds = require("./internal/coll-bounds");

Object.keys(_collBounds).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _collBounds[key];
    }
  });
});

var _copyAttribs = require("./internal/copy-attribs");

Object.keys(_copyAttribs).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _copyAttribs[key];
    }
  });
});

var _copyShape = require("./internal/copy-shape");

Object.keys(_copyShape).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _copyShape[key];
    }
  });
});

var _edges2 = require("./internal/edges");

Object.keys(_edges2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _edges2[key];
    }
  });
});

var _pclike = require("./internal/pclike");

Object.keys(_pclike).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _pclike[key];
    }
  });
});

var _pointsAsShape = require("./internal/points-as-shape");

Object.keys(_pointsAsShape).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _pointsAsShape[key];
    }
  });
});

var _split = require("./internal/split");

Object.keys(_split).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _split[key];
    }
  });
});

var _transformPoints = require("./internal/transform-points");

Object.keys(_transformPoints).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _transformPoints[key];
    }
  });
});

var _translatePoints = require("./internal/translate-points");

Object.keys(_translatePoints).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _translatePoints[key];
    }
  });
});

var _unionBounds = require("./internal/union-bounds");

Object.keys(_unionBounds).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _unionBounds[key];
    }
  });
});
},{"./api/aabb":"../node_modules/@thi.ng/geom/api/aabb.js","./api/apc":"../node_modules/@thi.ng/geom/api/apc.js","./api/arc":"../node_modules/@thi.ng/geom/api/arc.js","./api/circle":"../node_modules/@thi.ng/geom/api/circle.js","./api/cubic":"../node_modules/@thi.ng/geom/api/cubic.js","./api/ellipse":"../node_modules/@thi.ng/geom/api/ellipse.js","./api/group":"../node_modules/@thi.ng/geom/api/group.js","./api/line":"../node_modules/@thi.ng/geom/api/line.js","./api/path":"../node_modules/@thi.ng/geom/api/path.js","./api/plane":"../node_modules/@thi.ng/geom/api/plane.js","./api/points":"../node_modules/@thi.ng/geom/api/points.js","./api/polygon":"../node_modules/@thi.ng/geom/api/polygon.js","./api/polyline":"../node_modules/@thi.ng/geom/api/polyline.js","./api/quad":"../node_modules/@thi.ng/geom/api/quad.js","./api/quad3":"../node_modules/@thi.ng/geom/api/quad3.js","./api/quadratic":"../node_modules/@thi.ng/geom/api/quadratic.js","./api/ray":"../node_modules/@thi.ng/geom/api/ray.js","./api/rect":"../node_modules/@thi.ng/geom/api/rect.js","./api/sphere":"../node_modules/@thi.ng/geom/api/sphere.js","./api/text":"../node_modules/@thi.ng/geom/api/text.js","./api/triangle":"../node_modules/@thi.ng/geom/api/triangle.js","./ctors/aabb":"../node_modules/@thi.ng/geom/ctors/aabb.js","./ctors/arc":"../node_modules/@thi.ng/geom/ctors/arc.js","./ctors/circle":"../node_modules/@thi.ng/geom/ctors/circle.js","./ctors/cubic":"../node_modules/@thi.ng/geom/ctors/cubic.js","./ctors/ellipse":"../node_modules/@thi.ng/geom/ctors/ellipse.js","./ctors/group":"../node_modules/@thi.ng/geom/ctors/group.js","./ctors/line":"../node_modules/@thi.ng/geom/ctors/line.js","./ctors/path":"../node_modules/@thi.ng/geom/ctors/path.js","./ctors/path-builder":"../node_modules/@thi.ng/geom/ctors/path-builder.js","./ctors/path-from-svg":"../node_modules/@thi.ng/geom/ctors/path-from-svg.js","./ctors/plane":"../node_modules/@thi.ng/geom/ctors/plane.js","./ctors/points":"../node_modules/@thi.ng/geom/ctors/points.js","./ctors/polygon":"../node_modules/@thi.ng/geom/ctors/polygon.js","./ctors/polyline":"../node_modules/@thi.ng/geom/ctors/polyline.js","./ctors/quad":"../node_modules/@thi.ng/geom/ctors/quad.js","./ctors/quadratic":"../node_modules/@thi.ng/geom/ctors/quadratic.js","./ctors/ray":"../node_modules/@thi.ng/geom/ctors/ray.js","./ctors/rect":"../node_modules/@thi.ng/geom/ctors/rect.js","./ctors/text":"../node_modules/@thi.ng/geom/ctors/text.js","./ctors/triangle":"../node_modules/@thi.ng/geom/ctors/triangle.js","./ops/arc-length":"../node_modules/@thi.ng/geom/ops/arc-length.js","./ops/area":"../node_modules/@thi.ng/geom/ops/area.js","./ops/as-cubic":"../node_modules/@thi.ng/geom/ops/as-cubic.js","./ops/as-path":"../node_modules/@thi.ng/geom/ops/as-path.js","./ops/as-polygon":"../node_modules/@thi.ng/geom/ops/as-polygon.js","./ops/as-polyline":"../node_modules/@thi.ng/geom/ops/as-polyline.js","./ops/as-svg":"../node_modules/@thi.ng/geom/ops/as-svg.js","./ops/bounds":"../node_modules/@thi.ng/geom/ops/bounds.js","./ops/center":"../node_modules/@thi.ng/geom/ops/center.js","./ops/centroid":"../node_modules/@thi.ng/geom/ops/centroid.js","./ops/classify-point":"../node_modules/@thi.ng/geom/ops/classify-point.js","./ops/clip-convex":"../node_modules/@thi.ng/geom/ops/clip-convex.js","./ops/closest-point":"../node_modules/@thi.ng/geom/ops/closest-point.js","./ops/convex-hull":"../node_modules/@thi.ng/geom/ops/convex-hull.js","./ops/edges":"../node_modules/@thi.ng/geom/ops/edges.js","./ops/fit-into-bounds":"../node_modules/@thi.ng/geom/ops/fit-into-bounds.js","./ops/flip":"../node_modules/@thi.ng/geom/ops/flip.js","./ops/intersects":"../node_modules/@thi.ng/geom/ops/intersects.js","./ops/map-point":"../node_modules/@thi.ng/geom/ops/map-point.js","./ops/offset":"../node_modules/@thi.ng/geom/ops/offset.js","./ops/point-at":"../node_modules/@thi.ng/geom/ops/point-at.js","./ops/point-inside":"../node_modules/@thi.ng/geom/ops/point-inside.js","./ops/resample":"../node_modules/@thi.ng/geom/ops/resample.js","./ops/scatter":"../node_modules/@thi.ng/geom/ops/scatter.js","./ops/simplify":"../node_modules/@thi.ng/geom/ops/simplify.js","./ops/split-at":"../node_modules/@thi.ng/geom/ops/split-at.js","./ops/split-near":"../node_modules/@thi.ng/geom/ops/split-near.js","./ops/subdiv-curve":"../node_modules/@thi.ng/geom/ops/subdiv-curve.js","./ops/tangent-at":"../node_modules/@thi.ng/geom/ops/tangent-at.js","./ops/tessellate":"../node_modules/@thi.ng/geom/ops/tessellate.js","./ops/transform":"../node_modules/@thi.ng/geom/ops/transform.js","./ops/transform-vertices":"../node_modules/@thi.ng/geom/ops/transform-vertices.js","./ops/translate":"../node_modules/@thi.ng/geom/ops/translate.js","./ops/union":"../node_modules/@thi.ng/geom/ops/union.js","./ops/unmap-point":"../node_modules/@thi.ng/geom/ops/unmap-point.js","./ops/vertices":"../node_modules/@thi.ng/geom/ops/vertices.js","./ops/volume":"../node_modules/@thi.ng/geom/ops/volume.js","./ops/warp-points":"../node_modules/@thi.ng/geom/ops/warp-points.js","./ops/with-attribs":"../node_modules/@thi.ng/geom/ops/with-attribs.js","./internal/coll-bounds":"../node_modules/@thi.ng/geom/internal/coll-bounds.js","./internal/copy-attribs":"../node_modules/@thi.ng/geom/internal/copy-attribs.js","./internal/copy-shape":"../node_modules/@thi.ng/geom/internal/copy-shape.js","./internal/edges":"../node_modules/@thi.ng/geom/internal/edges.js","./internal/pclike":"../node_modules/@thi.ng/geom/internal/pclike.js","./internal/points-as-shape":"../node_modules/@thi.ng/geom/internal/points-as-shape.js","./internal/split":"../node_modules/@thi.ng/geom/internal/split.js","./internal/transform-points":"../node_modules/@thi.ng/geom/internal/transform-points.js","./internal/translate-points":"../node_modules/@thi.ng/geom/internal/translate-points.js","./internal/union-bounds":"../node_modules/@thi.ng/geom/internal/union-bounds.js"}],"../node_modules/@thi.ng/hiccup-canvas/api.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
},{}],"../node_modules/@thi.ng/hiccup-canvas/end-shape.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.endShape = void 0;

/** @internal */
const endShape = (ctx, attribs) => {
  let v;

  if ((v = attribs.fill) && v !== "none") {
    ctx.fill();
  }

  if ((v = attribs.stroke) && v !== "none") {
    ctx.stroke();
  }

  if (v = attribs.clip) {
    ctx.clip(v === true ? "nonzero" : v);
  }
};

exports.endShape = endShape;
},{}],"../node_modules/@thi.ng/hiccup-canvas/arc.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ellipticArc = exports.circularArc = void 0;

var _math = require("@thi.ng/math");

var _endShape = require("./end-shape");

const circularArc = (ctx, attribs, pos, r, start = 0, end = _math.TAU, antiCCW = false) => {
  ctx.beginPath();
  ctx.arc(pos[0], pos[1], r, start, end, antiCCW);
  (0, _endShape.endShape)(ctx, attribs);
};

exports.circularArc = circularArc;

const ellipticArc = (ctx, attribs, pos, r, axis = 0, start = 0, end = _math.TAU, ccw = false) => {
  ctx.beginPath();
  ctx.ellipse(pos[0], pos[1], r[0], r[1], axis, start, end, ccw);
  (0, _endShape.endShape)(ctx, attribs);
};

exports.ellipticArc = ellipticArc;
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js","./end-shape":"../node_modules/@thi.ng/hiccup-canvas/end-shape.js"}],"../node_modules/@thi.ng/hiccup-canvas/color.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defRadialGradient = exports.defLinearGradient = exports.resolveGradientOrColor = exports.resolveColor = void 0;

var _checks = require("@thi.ng/checks");

var _color = require("@thi.ng/color");

const resolveColor = v => (0, _checks.isString)(v) ? v : (0, _color.resolveAsCSS)(v);

exports.resolveColor = resolveColor;

const resolveGradientOrColor = (state, v) => (0, _checks.isString)(v) ? v[0] === "$" ? state.grads[v.substr(1)] : v : (0, _color.resolveAsCSS)(v);

exports.resolveGradientOrColor = resolveGradientOrColor;

const defLinearGradient = (ctx, {
  from,
  to
}, stops) => {
  const g = ctx.createLinearGradient(from[0], from[1], to[0], to[1]);

  for (let s of stops) {
    g.addColorStop(s[0], resolveColor(s[1]));
  }

  return g;
};

exports.defLinearGradient = defLinearGradient;

const defRadialGradient = (ctx, {
  from,
  to,
  r1,
  r2
}, stops) => {
  const g = ctx.createRadialGradient(from[0], from[1], r1, to[0], to[1], r2);

  for (let s of stops) {
    g.addColorStop(s[0], resolveColor(s[1]));
  }

  return g;
};

exports.defRadialGradient = defRadialGradient;
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","@thi.ng/color":"../node_modules/@thi.ng/color/index.js"}],"../node_modules/@thi.ng/hiccup-canvas/image.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.image = void 0;

const image = (ctx, _, {
  width,
  height
}, img, dpos, spos, ssize) => {
  width = width || img.width;
  height = height || img.height;
  spos ? ctx.drawImage(img, spos[0], spos[1], ssize ? ssize[0] : width, ssize ? ssize[1] : height, dpos[0], dpos[1], width, height) : ctx.drawImage(img, dpos[0], dpos[1], width, height);
};

exports.image = image;
},{}],"../node_modules/@thi.ng/hiccup-canvas/line.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.lines = exports.line = void 0;

const line = (ctx, attribs, a, b) => {
  if (attribs.stroke === "none") return;
  ctx.beginPath();
  ctx.moveTo(a[0], a[1]);
  ctx.lineTo(b[0], b[1]);
  ctx.stroke();
};

exports.line = line;

const lines = (ctx, attribs, pairs) => {
  if (attribs.stroke === "none") return;
  ctx.beginPath();

  for (let {
    0: a,
    1: b
  } of pairs) {
    ctx.moveTo(a[0], a[1]);
    ctx.lineTo(b[0], b[1]);
  }

  ctx.stroke();
};

exports.lines = lines;
},{}],"../node_modules/@thi.ng/hiccup-canvas/packed-points.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.packedPoints = void 0;

var _math = require("@thi.ng/math");

const packedPoints = (ctx, attribs, opts, pts) => {
  let v;

  if ((v = attribs.fill) && v !== "none") {
    __drawPoints(ctx, opts, pts, "fill", "fillRect");
  }

  if ((v = attribs.stroke) && v !== "none") {
    __drawPoints(ctx, opts, pts, "stroke", "strokeRect");
  }
};

exports.packedPoints = packedPoints;

const __drawPoints = (ctx, opts, pts, cmd, cmdR) => {
  const {
    start,
    cstride,
    estride,
    size
  } = Object.assign({
    start: 0,
    cstride: 1,
    estride: 2,
    size: 1
  }, opts);
  let num = opts && opts.num != null ? opts.num : (pts.length - start) / estride | 0;

  if (opts.shape === "circle") {
    for (let i = start; --num >= 0; i += estride) {
      ctx.beginPath();
      ctx.arc(pts[i], pts[i + cstride], size, 0, _math.TAU);
      ctx[cmd]();
    }
  } else {
    const r = size / 2;

    for (let i = start; --num >= 0; i += estride) {
      ctx[cmdR](pts[i] - r, pts[i + cstride] - r, size, size);
    }
  }
};
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js"}],"../node_modules/@thi.ng/hiccup-canvas/path.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.path = void 0;

var _endShape = require("./end-shape");

const path = (ctx, attribs, segments) => {
  ctx.beginPath();
  let a = [0, 0];

  for (let i = 0, n = segments.length; i < n; i++) {
    const s = segments[i];
    let b = s[1],
        c,
        d;

    switch (s[0]) {
      // move to
      case "m":
        b = [a[0] + b[0], a[1] + b[1]];

      case "M":
        ctx.moveTo(b[0], b[1]);
        a = b;
        break;
      // line to

      case "l":
        b = [a[0] + b[0], a[1] + b[1]];

      case "L":
        ctx.lineTo(b[0], b[1]);
        a = b;
        break;
      // horizontal line rel

      case "h":
        b = [a[0] + b, a[1]];
        ctx.lineTo(b[0], b[1]);
        a = b;
        break;
      // horizontal line abs

      case "H":
        b = [b, a[1]];
        ctx.lineTo(b[0], b[1]);
        a = b;
        break;
      // vertical line rel

      case "v":
        b = [a[0], a[1] + b];
        ctx.lineTo(b[0], b[1]);
        a = b;
        break;
      // vertical line abs

      case "V":
        b = [a[0], b];
        ctx.lineTo(b[0], b[1]);
        a = b;
        break;
      // cubic curve rel

      case "c":
        c = s[2];
        d = s[3];
        d = [a[0] + d[0], a[1] + d[1]];
        ctx.bezierCurveTo(a[0] + b[0], a[1] + b[1], a[0] + c[0], a[1] + c[1], d[0], d[1]);
        a = d;
        break;
      // cubic curve abs

      case "C":
        c = s[2];
        d = s[3];
        ctx.bezierCurveTo(b[0], b[1], c[0], c[1], d[0], d[1]);
        a = d;
        break;
      // quadratic curve rel

      case "q":
        c = s[2];
        c = [a[0] + c[0], a[1] + c[1]];
        ctx.quadraticCurveTo(a[0] + b[0], a[1] + b[1], c[0], c[1]);
        a = c;
        break;
      // quadratic curve abs

      case "Q":
        c = s[2];
        ctx.quadraticCurveTo(b[0], b[1], c[0], c[1]);
        a = c;
        break;
      // circular arc rel
      // Note: NOT compatible w/ SVG arc segments

      case "a":
        c = s[2];
        c = [a[0] + c[0], a[1] + c[1]];
        ctx.arcTo(a[0] + b[0], a[1] + b[1], c[0], c[1], s[3]);
        a = c;
        break;
      // circular arc abs
      // Note: NOT compatible w/ SVG arc segments

      case "A":
        c = s[2];
        ctx.arcTo(b[0], b[1], c[0], c[1], s[3]);
        a = c;
        break;
      // close path

      case "z":
      case "Z":
        ctx.closePath();
    }
  }

  (0, _endShape.endShape)(ctx, attribs);
};

exports.path = path;
},{"./end-shape":"../node_modules/@thi.ng/hiccup-canvas/end-shape.js"}],"../node_modules/@thi.ng/hiccup-canvas/points.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.points = void 0;

var _math = require("@thi.ng/math");

const points = (ctx, attribs, opts, pts) => {
  let v;

  if ((v = attribs.fill) && v !== "none") {
    __drawPoints(ctx, opts, pts, "fill", "fillRect");
  }

  if ((v = attribs.stroke) && v !== "none") {
    __drawPoints(ctx, opts, pts, "stroke", "strokeRect");
  }
};

exports.points = points;

const __drawPoints = (ctx, opts, pts, cmd, cmdR) => {
  const s = opts && opts.size || 1;

  if (opts.shape === "circle") {
    for (let p of pts) {
      ctx.beginPath();
      ctx.arc(p[0], p[1], s, 0, _math.TAU);
      ctx[cmd]();
    }
  } else {
    const r = s / 2;

    for (let p of pts) {
      ctx[cmdR](p[0] - r, p[1] - r, s, s);
    }
  }
};
},{"@thi.ng/math":"../node_modules/@thi.ng/math/index.js"}],"../node_modules/@thi.ng/hiccup-canvas/polygon.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.__drawPoly = exports.polygon = void 0;

var _endShape = require("./end-shape");

const polygon = (ctx, attribs, pts) => {
  if (pts.length < 2) return;

  __drawPoly(ctx, pts);

  ctx.closePath();
  (0, _endShape.endShape)(ctx, attribs);
};
/**
 * Shared internal helper for polygon & polyline fns.
 *
 * @param ctx - canvas context
 * @param pts - poly vertices
 */


exports.polygon = polygon;

const __drawPoly = (ctx, pts) => {
  let p = pts[0];
  ctx.beginPath();
  ctx.moveTo(p[0], p[1]);

  for (let i = 1, n = pts.length; i < n; i++) {
    p = pts[i];
    ctx.lineTo(p[0], p[1]);
  }
};

exports.__drawPoly = __drawPoly;
},{"./end-shape":"../node_modules/@thi.ng/hiccup-canvas/end-shape.js"}],"../node_modules/@thi.ng/hiccup-canvas/polyline.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.polyline = void 0;

var _polygon = require("./polygon");

const polyline = (ctx, attribs, pts) => {
  if (pts.length < 2 || attribs.stroke == "none") return;
  (0, _polygon.__drawPoly)(ctx, pts);
  ctx.stroke();
};

exports.polyline = polyline;
},{"./polygon":"../node_modules/@thi.ng/hiccup-canvas/polygon.js"}],"../node_modules/@thi.ng/hiccup-canvas/rect.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rect = void 0;

var _path = require("./path");

const rect = (ctx, attribs, pos, w, h, r = 0) => {
  let v;

  if (r > 0) {
    r = Math.min(Math.min(w, h) / 2, r);
    w -= 2 * r;
    h -= 2 * r;
    return (0, _path.path)(ctx, attribs, [["M", [pos[0] + r, pos[1]]], ["h", w], ["a", [r, 0], [r, r], r], ["v", h], ["a", [0, r], [-r, r], r], ["h", -w], ["a", [-r, 0], [-r, -r], r], ["v", -h], ["a", [0, -r], [r, -r], r]]);
  }

  if ((v = attribs.fill) && v !== "none") {
    ctx.fillRect(pos[0], pos[1], w, h);
  }

  if ((v = attribs.stroke) && v !== "none") {
    ctx.strokeRect(pos[0], pos[1], w, h);
  }
};

exports.rect = rect;
},{"./path":"../node_modules/@thi.ng/hiccup-canvas/path.js"}],"../node_modules/@thi.ng/hiccup-canvas/state.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.registerGradient = exports.restoreState = exports.mergeState = void 0;

var _checks = require("@thi.ng/checks");

var _color = require("./color");

const DEFAULTS = {
  align: "left",
  alpha: 1,
  baseline: "alphabetic",
  compose: "source-over",
  dash: [],
  dashOffset: 0,
  direction: "inherit",
  fill: "#000",
  filter: "none",
  font: "10px sans-serif",
  lineCap: "butt",
  lineJoin: "miter",
  miterLimit: 10,
  shadowBlur: 0,
  shadowColor: "rgba(0,0,0,0)",
  shadowX: 0,
  shadowY: 0,
  smooth: true,
  stroke: "#000",
  weight: 1
};
const CTX_ATTRIBS = {
  align: "textAlign",
  alpha: "globalAlpha",
  baseline: "textBaseline",
  clip: "clip",
  compose: "globalCompositeOperation",
  dash: "setLineDash",
  dashOffset: "lineDashOffset",
  direction: "direction",
  fill: "fillStyle",
  filter: "filter",
  font: "font",
  lineCap: "lineCap",
  lineJoin: "lineJoin",
  miterLimit: "miterLimit",
  shadowBlur: "shadowBlur",
  shadowColor: "shadowColor",
  shadowX: "shadowOffsetX",
  shadowY: "shadowOffsetY",
  smooth: "imageSmoothingEnabled",
  stroke: "strokeStyle",
  weight: "lineWidth"
};

const newState = (state, restore = false) => ({
  attribs: Object.assign({}, state.attribs),
  grads: Object.assign({}, state.grads),
  edits: [],
  restore
});
/** @internal */


const mergeState = (ctx, state, attribs) => {
  let res;
  if (!attribs) return;

  if (applyTransform(ctx, attribs)) {
    res = newState(state, true);
  }

  for (let id in attribs) {
    const k = CTX_ATTRIBS[id];

    if (k) {
      const v = attribs[id];

      if (v != null && state.attribs[id] !== v) {
        !res && (res = newState(state));
        res.attribs[id] = v;
        res.edits.push(id);
        setAttrib(ctx, state, id, k, v);
      }
    }
  }

  return res;
};
/** @internal */


exports.mergeState = mergeState;

const restoreState = (ctx, prev, curr) => {
  if (curr.restore) {
    ctx.restore();
    return;
  }

  const edits = curr.edits;
  const attribs = prev.attribs;

  for (let i = edits.length; --i >= 0;) {
    const id = edits[i];
    const v = attribs[id];
    setAttrib(ctx, prev, id, CTX_ATTRIBS[id], v != null ? v : DEFAULTS[id]);
  }
};
/** @internal */


exports.restoreState = restoreState;

const registerGradient = (state, id, g) => {
  !state.grads && (state.grads = {});
  state.grads[id] = g;
};

exports.registerGradient = registerGradient;

const setAttrib = (ctx, state, id, k, val) => {
  switch (id) {
    case "fill":
    case "stroke":
    case "shadowColor":
      ctx[k] = (0, _color.resolveGradientOrColor)(state, val);
      break;

    case "dash":
      ctx[k].call(ctx, val);
      break;

    case "clip":
      break;

    default:
      ctx[k] = val;
  }
};

const applyTransform = (ctx, attribs) => {
  let v;

  if ((v = attribs.transform) || attribs.setTransform || attribs.translate || attribs.scale || attribs.rotate) {
    ctx.save();

    if (v) {
      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);
    } else if (v = attribs.setTransform) {
      ctx.setTransform(v[0], v[1], v[2], v[3], v[4], v[5]);
    } else {
      (v = attribs.translate) && ctx.translate(v[0], v[1]);
      (v = attribs.rotate) && ctx.rotate(v);
      (v = attribs.scale) && ((0, _checks.isArrayLike)(v) ? ctx.scale(v[0], v[1]) : ctx.scale(v, v));
    }

    return true;
  }

  return false;
};
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","./color":"../node_modules/@thi.ng/hiccup-canvas/color.js"}],"../node_modules/@thi.ng/hiccup-canvas/text.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.text = void 0;

const text = (ctx, attribs, pos, body, maxWidth) => {
  let v;

  if ((v = attribs.fill) && v !== "none") {
    ctx.fillText(body.toString(), pos[0], pos[1], maxWidth);
  }

  if ((v = attribs.stroke) && v !== "none") {
    ctx.strokeText(body.toString(), pos[0], pos[1], maxWidth);
  }
};

exports.text = text;
},{}],"../node_modules/@thi.ng/hiccup-canvas/draw.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.draw = void 0;

var _checks = require("@thi.ng/checks");

var _arc = require("./arc");

var _color = require("./color");

var _image = require("./image");

var _line = require("./line");

var _packedPoints = require("./packed-points");

var _path = require("./path");

var _points = require("./points");

var _polygon = require("./polygon");

var _polyline = require("./polyline");

var _rect = require("./rect");

var _state = require("./state");

var _text = require("./text");

const draw = (ctx, shape, pstate = {
  attribs: {},
  edits: []
}) => {
  if (!shape) return;

  if ((0, _checks.implementsFunction)(shape, "toHiccup")) {
    draw(ctx, shape.toHiccup(), pstate);
    return;
  }

  if ((0, _checks.isArray)(shape[0])) {
    for (let s of shape) {
      draw(ctx, s, pstate);
    }

    return;
  }

  const state = (0, _state.mergeState)(ctx, pstate, shape[1]);
  const attribs = state ? state.attribs : pstate.attribs;
  if (attribs.__skip) return;

  switch (shape[0]) {
    case "g":
    case "defs":
      defs(ctx, state, pstate, shape);
      break;

    case "linearGradient":
      (0, _state.registerGradient)(pstate, shape[1].id, (0, _color.defLinearGradient)(ctx, shape[1], shape[2]));
      break;

    case "radialGradient":
      (0, _state.registerGradient)(pstate, shape[1].id, (0, _color.defRadialGradient)(ctx, shape[1], shape[2]));
      break;

    case "points":
      (0, _points.points)(ctx, attribs, shape[1], shape[2]);
      break;

    case "packedPoints":
      (0, _packedPoints.packedPoints)(ctx, attribs, shape[1], shape[2]);
      break;

    case "line":
      (0, _line.line)(ctx, attribs, shape[2], shape[3]);
      break;

    case "lines":
      (0, _line.lines)(ctx, attribs, shape[2]);
      break;

    case "hline":
      (0, _line.line)(ctx, attribs, [-1e6, shape[2]], [1e6, shape[2]]);
      break;

    case "vline":
      (0, _line.line)(ctx, attribs, [shape[2], -1e6], [shape[2], 1e6]);
      break;

    case "polyline":
      (0, _polyline.polyline)(ctx, attribs, shape[2]);
      break;

    case "polygon":
      (0, _polygon.polygon)(ctx, attribs, shape[2]);
      break;

    case "path":
      (0, _path.path)(ctx, attribs, shape[2]);
      break;

    case "rect":
      (0, _rect.rect)(ctx, attribs, shape[2], shape[3], shape[4], shape[5]);
      break;

    case "circle":
      (0, _arc.circularArc)(ctx, attribs, shape[2], shape[3]);
      break;

    case "ellipse":
      (0, _arc.ellipticArc)(ctx, attribs, shape[2], shape[3], shape[4], shape[5], shape[6]);
      break;

    case "arc":
      (0, _arc.circularArc)(ctx, attribs, shape[2], shape[3], shape[4], shape[5]);
      break;

    case "text":
      (0, _text.text)(ctx, attribs, shape[2], shape[3], shape[4]);
      break;

    case "img":
      (0, _image.image)(ctx, attribs, shape[1], shape[2], shape[3], shape[4], shape[5]);

    default:
  }

  state && (0, _state.restoreState)(ctx, pstate, state);
};

exports.draw = draw;

const defs = (ctx, state, pstate, shape) => {
  const n = shape.length;

  const __state = shape[0] === "g" ? state || pstate : pstate;

  for (let i = 2; i < n; i++) {
    draw(ctx, shape[i], __state);
  }
};
},{"@thi.ng/checks":"../node_modules/@thi.ng/checks/index.js","./arc":"../node_modules/@thi.ng/hiccup-canvas/arc.js","./color":"../node_modules/@thi.ng/hiccup-canvas/color.js","./image":"../node_modules/@thi.ng/hiccup-canvas/image.js","./line":"../node_modules/@thi.ng/hiccup-canvas/line.js","./packed-points":"../node_modules/@thi.ng/hiccup-canvas/packed-points.js","./path":"../node_modules/@thi.ng/hiccup-canvas/path.js","./points":"../node_modules/@thi.ng/hiccup-canvas/points.js","./polygon":"../node_modules/@thi.ng/hiccup-canvas/polygon.js","./polyline":"../node_modules/@thi.ng/hiccup-canvas/polyline.js","./rect":"../node_modules/@thi.ng/hiccup-canvas/rect.js","./state":"../node_modules/@thi.ng/hiccup-canvas/state.js","./text":"../node_modules/@thi.ng/hiccup-canvas/text.js"}],"../node_modules/@thi.ng/hiccup-canvas/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _api = require("./api");

Object.keys(_api).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _api[key];
    }
  });
});

var _arc = require("./arc");

Object.keys(_arc).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _arc[key];
    }
  });
});

var _color = require("./color");

Object.keys(_color).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _color[key];
    }
  });
});

var _draw = require("./draw");

Object.keys(_draw).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _draw[key];
    }
  });
});

var _endShape = require("./end-shape");

Object.keys(_endShape).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _endShape[key];
    }
  });
});

var _image = require("./image");

Object.keys(_image).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _image[key];
    }
  });
});

var _line = require("./line");

Object.keys(_line).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _line[key];
    }
  });
});

var _packedPoints = require("./packed-points");

Object.keys(_packedPoints).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _packedPoints[key];
    }
  });
});

var _path = require("./path");

Object.keys(_path).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _path[key];
    }
  });
});

var _points = require("./points");

Object.keys(_points).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _points[key];
    }
  });
});

var _polygon = require("./polygon");

Object.keys(_polygon).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _polygon[key];
    }
  });
});

var _polyline = require("./polyline");

Object.keys(_polyline).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _polyline[key];
    }
  });
});

var _rect = require("./rect");

Object.keys(_rect).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _rect[key];
    }
  });
});

var _state = require("./state");

Object.keys(_state).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _state[key];
    }
  });
});

var _text = require("./text");

Object.keys(_text).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _text[key];
    }
  });
});
},{"./api":"../node_modules/@thi.ng/hiccup-canvas/api.js","./arc":"../node_modules/@thi.ng/hiccup-canvas/arc.js","./color":"../node_modules/@thi.ng/hiccup-canvas/color.js","./draw":"../node_modules/@thi.ng/hiccup-canvas/draw.js","./end-shape":"../node_modules/@thi.ng/hiccup-canvas/end-shape.js","./image":"../node_modules/@thi.ng/hiccup-canvas/image.js","./line":"../node_modules/@thi.ng/hiccup-canvas/line.js","./packed-points":"../node_modules/@thi.ng/hiccup-canvas/packed-points.js","./path":"../node_modules/@thi.ng/hiccup-canvas/path.js","./points":"../node_modules/@thi.ng/hiccup-canvas/points.js","./polygon":"../node_modules/@thi.ng/hiccup-canvas/polygon.js","./polyline":"../node_modules/@thi.ng/hiccup-canvas/polyline.js","./rect":"../node_modules/@thi.ng/hiccup-canvas/rect.js","./state":"../node_modules/@thi.ng/hiccup-canvas/state.js","./text":"../node_modules/@thi.ng/hiccup-canvas/text.js"}],"../src/typescript/helpers/findLast.ts":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.findLast = void 0;
/**
 * Find the last element in an array to pass a predicate.
 *
 * @param arr The array to search trough.
 * @param predicate The predicate to run on all elements.
 */

exports.findLast = function (arr, predicate) {
  return arr.reduce(function (acc, curr) {
    return predicate(curr) ? curr : acc;
  }, null);
};
},{}],"../src/typescript/target.ts":[function(require,module,exports) {
"use strict";

var __spreadArrays = this && this.__spreadArrays || function () {
  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {
    s += arguments[i].length;
  }

  for (var r = Array(s), k = 0, i = 0; i < il; i++) {
    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {
      r[k] = a[j];
    }
  }

  return r;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getMouseTarget = exports.MouseTargetKind = void 0;

var geom_1 = require("@thi.ng/geom");

var findLast_1 = require("./helpers/findLast");

var MouseTargetKind;

(function (MouseTargetKind) {
  MouseTargetKind["Object"] = "object";
  MouseTargetKind["Nothing"] = "Nothing";
})(MouseTargetKind = exports.MouseTargetKind || (exports.MouseTargetKind = {}));
/**
 * Finds the object in the scene the mouse is hovering over
 *
 * @param mousePosition The position the mouse is at
 * @param cache The geometry cache to search trough
 */


exports.getMouseTarget = function (mousePosition, cache) {
  if (cache.objects.length === 0) {
    return null;
  }

  var nodes = __spreadArrays(cache.objects);

  {
    var closestObject = findLast_1.findLast(nodes, function (node) {
      return geom_1.pointInside(node.shape, mousePosition);
    });

    if (closestObject) {
      return {
        type: MouseTargetKind.Object,
        target: closestObject
      };
    }
  }
  return {
    type: MouseTargetKind.Nothing
  };
};
},{"@thi.ng/geom":"../node_modules/@thi.ng/geom/index.js","./helpers/findLast":"../src/typescript/helpers/findLast.ts"}],"../src/typescript/index.ts":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.render = exports.onMouseUp = exports.onMouseDown = exports.onMouseMove = exports.emptyGeometryCache = void 0;

var geom_1 = require("@thi.ng/geom");

var hiccup_canvas_1 = require("@thi.ng/hiccup-canvas");

var matrices_1 = require("@thi.ng/matrices");

var target_1 = require("./target");

var W = 300;
var H = 300;

exports.emptyGeometryCache = function () {
  return {
    objects: [{
      name: "blah",
      position: [100, 100],
      shape: geom_1.circle([100, 100], 10, {
        fill: "black"
      })
    }],
    morphisms: [],
    camera: matrices_1.transform23(null, [0, 0], 0, 1)
  };
};

var getMouseTransform = function getMouseTransform(ctx, cache) {
  var bounds = ctx.canvas.getBoundingClientRect();
  var transform = matrices_1.transform23(null, [-bounds.left - bounds.width / 2, -bounds.height / 2], 0, 1);
  matrices_1.concat(null, transform, matrices_1.invert23([], cache.camera));
  return transform;
};

var getEventData = function getEventData(ctx, event, cache) {
  var mouse = [event.pageX + W, event.pageY + H];
  var transform = getMouseTransform(ctx, cache);
  var mousePosition = matrices_1.mulV23(null, transform, mouse);
  var target = target_1.getMouseTarget(mousePosition, cache);
  return {
    mousePosition: mousePosition,
    transform: transform,
    mouse: mouse,
    target: target
  };
};
/**
 * Handle a mouseMove event
 *
 * @param ctx The context to re-render to.
 * @param event The event to handle.
 * @param cache The cache to mutate.
 */


exports.onMouseMove = function (ctx, event, cache) {
  var mouse = [event.pageX + W, event.pageY + H];
  var transform = getMouseTransform(ctx, cache);
  var mousePosition = matrices_1.mulV23(null, transform, mouse);
  var target = target_1.getMouseTarget(mousePosition, cache);
  cache.objects.map(function (l) {
    return l.shape.attribs.fill = "#000";
  });

  if (target.type === target_1.MouseTargetKind.Object && target.target !== cache.dragging) {
    target.target.shape.attribs.fill = "#999";
  }

  if (cache.dragging) {
    cache.dragging.position = mouse;
    cache.dragging.shape.pos = mouse;
  }

  return function () {};
};
/**
 * Handle a mouseDown event
 *
 * @param ctx The context to re-render to.
 * @param event The event to handle.
 * @param cache The cache to mutate.
 */


exports.onMouseDown = function (ctx, event, cache) {
  var _a = getEventData(ctx, event, cache),
      mousePosition = _a.mousePosition,
      target = _a.target;

  if (target.type === target_1.MouseTargetKind.Nothing) {
    cache.objects.push({
      position: mousePosition,
      name: "blah",
      shape: geom_1.circle(mousePosition, 10, {
        fill: "black"
      })
    });
  } else if (target.type === target_1.MouseTargetKind.Object) {
    cache.dragging = target.target;
  }

  return function () {};
};
/**
 * Handle a mouseUp event
 *
 * @param ctx The context to re-render to.
 * @param event The event to handle.
 * @param cache The cache to mutate.
 */


exports.onMouseUp = function (ctx, event, cache) {
  if (cache.dragging) {
    delete cache.dragging;
  }

  return function () {};
};

exports.render = function (ctx) {
  return function (cache) {
    ctx.resetTransform();
    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);
    cache.objects.map(function (l) {
      hiccup_canvas_1.draw(ctx, l.shape);
    });
    return function () {};
  };
};
},{"@thi.ng/geom":"../node_modules/@thi.ng/geom/index.js","@thi.ng/hiccup-canvas":"../node_modules/@thi.ng/hiccup-canvas/index.js","@thi.ng/matrices":"../node_modules/@thi.ng/matrices/index.js","./target":"../src/typescript/target.ts"}],"../output/Render/foreign.js":[function(require,module,exports) {
var render = require("../../src/typescript/index.ts");

exports.renderCanvas = render.render;
exports.handleMouseUpImpl = render.onMouseUp;
exports.handleMouseDownImpl = render.onMouseDown;
exports.handleMouseMoveImpl = render.onMouseMove;
exports.emptyGeometryCache = render.emptyGeometryCache; // Scale a canvas to its bounding box

exports.resizeCanvas = function (canvas) {
  return function () {
    var _canvas$getBoundingCl = canvas.getBoundingClientRect(),
        width = _canvas$getBoundingCl.width,
        height = _canvas$getBoundingCl.height;

    canvas.width = width;
    canvas.height = height;
  };
}; // To be able to get contexts from purescript


exports.getContext = function (canvas) {
  return function () {
    return canvas.getContext("2d");
  };
};
},{"../../src/typescript/index.ts":"../src/typescript/index.ts"}],"../output/Control.Monad.State.Class/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var MonadState = function MonadState(Monad0, state) {
  this.Monad0 = Monad0;
  this.state = state;
};

var state = function state(dict) {
  return dict.state;
};

var put = function put(dictMonadState) {
  return function (s) {
    return state(dictMonadState)(function (v) {
      return new Data_Tuple.Tuple(Data_Unit.unit, s);
    });
  };
};

var modify_ = function modify_(dictMonadState) {
  return function (f) {
    return state(dictMonadState)(function (s) {
      return new Data_Tuple.Tuple(Data_Unit.unit, f(s));
    });
  };
};

var modify = function modify(dictMonadState) {
  return function (f) {
    return state(dictMonadState)(function (s) {
      var s$prime = f(s);
      return new Data_Tuple.Tuple(s$prime, s$prime);
    });
  };
};

var gets = function gets(dictMonadState) {
  return function (f) {
    return state(dictMonadState)(function (s) {
      return new Data_Tuple.Tuple(f(s), s);
    });
  };
};

var get = function get(dictMonadState) {
  return state(dictMonadState)(function (s) {
    return new Data_Tuple.Tuple(s, s);
  });
};

module.exports = {
  state: state,
  MonadState: MonadState,
  get: get,
  gets: gets,
  put: put,
  modify: modify,
  modify_: modify_
};
},{"../Data.Tuple/index.js":"../output/Data.Tuple/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js"}],"../output/Data.Function.Uncurried/foreign.js":[function(require,module,exports) {
"use strict"; // module Data.Function.Uncurried

exports.mkFn0 = function (fn) {
  return function () {
    return fn({});
  };
};

exports.mkFn2 = function (fn) {
  /* jshint maxparams: 2 */
  return function (a, b) {
    return fn(a)(b);
  };
};

exports.mkFn3 = function (fn) {
  /* jshint maxparams: 3 */
  return function (a, b, c) {
    return fn(a)(b)(c);
  };
};

exports.mkFn4 = function (fn) {
  /* jshint maxparams: 4 */
  return function (a, b, c, d) {
    return fn(a)(b)(c)(d);
  };
};

exports.mkFn5 = function (fn) {
  /* jshint maxparams: 5 */
  return function (a, b, c, d, e) {
    return fn(a)(b)(c)(d)(e);
  };
};

exports.mkFn6 = function (fn) {
  /* jshint maxparams: 6 */
  return function (a, b, c, d, e, f) {
    return fn(a)(b)(c)(d)(e)(f);
  };
};

exports.mkFn7 = function (fn) {
  /* jshint maxparams: 7 */
  return function (a, b, c, d, e, f, g) {
    return fn(a)(b)(c)(d)(e)(f)(g);
  };
};

exports.mkFn8 = function (fn) {
  /* jshint maxparams: 8 */
  return function (a, b, c, d, e, f, g, h) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h);
  };
};

exports.mkFn9 = function (fn) {
  /* jshint maxparams: 9 */
  return function (a, b, c, d, e, f, g, h, i) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);
  };
};

exports.mkFn10 = function (fn) {
  /* jshint maxparams: 10 */
  return function (a, b, c, d, e, f, g, h, i, j) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);
  };
};

exports.runFn0 = function (fn) {
  return fn();
};

exports.runFn2 = function (fn) {
  return function (a) {
    return function (b) {
      return fn(a, b);
    };
  };
};

exports.runFn3 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return fn(a, b, c);
      };
    };
  };
};

exports.runFn4 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return fn(a, b, c, d);
        };
      };
    };
  };
};

exports.runFn5 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return fn(a, b, c, d, e);
          };
        };
      };
    };
  };
};

exports.runFn6 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return fn(a, b, c, d, e, f);
            };
          };
        };
      };
    };
  };
};

exports.runFn7 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return fn(a, b, c, d, e, f, g);
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn8 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return fn(a, b, c, d, e, f, g, h);
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn9 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return fn(a, b, c, d, e, f, g, h, i);
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn10 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return function (j) {
                      return fn(a, b, c, d, e, f, g, h, i, j);
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};
},{}],"../output/Data.Function.Uncurried/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var runFn1 = function runFn1(f) {
  return f;
};

var mkFn1 = function mkFn1(f) {
  return f;
};

module.exports = {
  mkFn1: mkFn1,
  runFn1: runFn1,
  mkFn0: $foreign.mkFn0,
  mkFn2: $foreign.mkFn2,
  mkFn3: $foreign.mkFn3,
  mkFn4: $foreign.mkFn4,
  mkFn5: $foreign.mkFn5,
  mkFn6: $foreign.mkFn6,
  mkFn7: $foreign.mkFn7,
  mkFn8: $foreign.mkFn8,
  mkFn9: $foreign.mkFn9,
  mkFn10: $foreign.mkFn10,
  runFn0: $foreign.runFn0,
  runFn2: $foreign.runFn2,
  runFn3: $foreign.runFn3,
  runFn4: $foreign.runFn4,
  runFn5: $foreign.runFn5,
  runFn6: $foreign.runFn6,
  runFn7: $foreign.runFn7,
  runFn8: $foreign.runFn8,
  runFn9: $foreign.runFn9,
  runFn10: $foreign.runFn10
};
},{"./foreign.js":"../output/Data.Function.Uncurried/foreign.js"}],"../output/Effect.Aff/foreign.js":[function(require,module,exports) {
/* globals setImmediate, clearImmediate, setTimeout, clearTimeout */

/* jshint -W083, -W098, -W003 */
"use strict";

var Aff = function () {
  // A unique value for empty.
  var EMPTY = {};
  /*
   An awkward approximation. We elide evidence we would otherwise need in PS for
  efficiency sake.
   data Aff eff a
    = Pure a
    | Throw Error
    | Catch (Aff eff a) (Error -> Aff eff a)
    | Sync (Eff eff a)
    | Async ((Either Error a -> Eff eff Unit) -> Eff eff (Canceler eff))
    | forall b. Bind (Aff eff b) (b -> Aff eff a)
    | forall b. Bracket (Aff eff b) (BracketConditions eff b) (b -> Aff eff a)
    | forall b. Fork Boolean (Aff eff b) ?(Fiber eff b -> a)
    | Sequential (ParAff aff a)
   */

  var PURE = "Pure";
  var THROW = "Throw";
  var CATCH = "Catch";
  var SYNC = "Sync";
  var ASYNC = "Async";
  var BIND = "Bind";
  var BRACKET = "Bracket";
  var FORK = "Fork";
  var SEQ = "Sequential";
  /*
   data ParAff eff a
    = forall b. Map (b -> a) (ParAff eff b)
    | forall b. Apply (ParAff eff (b -> a)) (ParAff eff b)
    | Alt (ParAff eff a) (ParAff eff a)
    | ?Par (Aff eff a)
   */

  var MAP = "Map";
  var APPLY = "Apply";
  var ALT = "Alt"; // Various constructors used in interpretation

  var CONS = "Cons"; // Cons-list, for stacks

  var RESUME = "Resume"; // Continue indiscriminately

  var RELEASE = "Release"; // Continue with bracket finalizers

  var FINALIZER = "Finalizer"; // A non-interruptible effect

  var FINALIZED = "Finalized"; // Marker for finalization

  var FORKED = "Forked"; // Reference to a forked fiber, with resumption stack

  var FIBER = "Fiber"; // Actual fiber reference

  var THUNK = "Thunk"; // Primed effect, ready to invoke

  function Aff(tag, _1, _2, _3) {
    this.tag = tag;
    this._1 = _1;
    this._2 = _2;
    this._3 = _3;
  }

  function AffCtr(tag) {
    var fn = function fn(_1, _2, _3) {
      return new Aff(tag, _1, _2, _3);
    };

    fn.tag = tag;
    return fn;
  }

  function nonCanceler(error) {
    return new Aff(PURE, void 0);
  }

  function runEff(eff) {
    try {
      eff();
    } catch (error) {
      setTimeout(function () {
        throw error;
      }, 0);
    }
  }

  function runSync(left, right, eff) {
    try {
      return right(eff());
    } catch (error) {
      return left(error);
    }
  }

  function runAsync(left, eff, k) {
    try {
      return eff(k)();
    } catch (error) {
      k(left(error))();
      return nonCanceler;
    }
  }

  var Scheduler = function () {
    var limit = 1024;
    var size = 0;
    var ix = 0;
    var queue = new Array(limit);
    var draining = false;

    function drain() {
      var thunk;
      draining = true;

      while (size !== 0) {
        size--;
        thunk = queue[ix];
        queue[ix] = void 0;
        ix = (ix + 1) % limit;
        thunk();
      }

      draining = false;
    }

    return {
      isDraining: function isDraining() {
        return draining;
      },
      enqueue: function enqueue(cb) {
        var i, tmp;

        if (size === limit) {
          tmp = draining;
          drain();
          draining = tmp;
        }

        queue[(ix + size) % limit] = cb;
        size++;

        if (!draining) {
          drain();
        }
      }
    };
  }();

  function Supervisor(util) {
    var fibers = {};
    var fiberId = 0;
    var count = 0;
    return {
      register: function register(fiber) {
        var fid = fiberId++;
        fiber.onComplete({
          rethrow: true,
          handler: function handler(result) {
            return function () {
              count--;
              delete fibers[fid];
            };
          }
        })();
        fibers[fid] = fiber;
        count++;
      },
      isEmpty: function isEmpty() {
        return count === 0;
      },
      killAll: function killAll(killError, cb) {
        return function () {
          if (count === 0) {
            return cb();
          }

          var killCount = 0;
          var kills = {};

          function kill(fid) {
            kills[fid] = fibers[fid].kill(killError, function (result) {
              return function () {
                delete kills[fid];
                killCount--;

                if (util.isLeft(result) && util.fromLeft(result)) {
                  setTimeout(function () {
                    throw util.fromLeft(result);
                  }, 0);
                }

                if (killCount === 0) {
                  cb();
                }
              };
            })();
          }

          for (var k in fibers) {
            if (fibers.hasOwnProperty(k)) {
              killCount++;
              kill(k);
            }
          }

          fibers = {};
          fiberId = 0;
          count = 0;
          return function (error) {
            return new Aff(SYNC, function () {
              for (var k in kills) {
                if (kills.hasOwnProperty(k)) {
                  kills[k]();
                }
              }
            });
          };
        };
      }
    };
  } // Fiber state machine


  var SUSPENDED = 0; // Suspended, pending a join.

  var CONTINUE = 1; // Interpret the next instruction.

  var STEP_BIND = 2; // Apply the next bind.

  var STEP_RESULT = 3; // Handle potential failure from a result.

  var PENDING = 4; // An async effect is running.

  var RETURN = 5; // The current stack has returned.

  var COMPLETED = 6; // The entire fiber has completed.

  function Fiber(util, supervisor, aff) {
    // Monotonically increasing tick, increased on each asynchronous turn.
    var runTick = 0; // The current branch of the state machine.

    var status = SUSPENDED; // The current point of interest for the state machine branch.

    var step = aff; // Successful step

    var fail = null; // Failure step

    var interrupt = null; // Asynchronous interrupt
    // Stack of continuations for the current fiber.

    var bhead = null;
    var btail = null; // Stack of attempts and finalizers for error recovery. Every `Cons` is also
    // tagged with current `interrupt` state. We use this to track which items
    // should be ignored or evaluated as a result of a kill.

    var attempts = null; // A special state is needed for Bracket, because it cannot be killed. When
    // we enter a bracket acquisition or finalizer, we increment the counter,
    // and then decrement once complete.

    var bracketCount = 0; // Each join gets a new id so they can be revoked.

    var joinId = 0;
    var joins = null;
    var rethrow = true; // Each invocation of `run` requires a tick. When an asynchronous effect is
    // resolved, we must check that the local tick coincides with the fiber
    // tick before resuming. This prevents multiple async continuations from
    // accidentally resuming the same fiber. A common example may be invoking
    // the provided callback in `makeAff` more than once, but it may also be an
    // async effect resuming after the fiber was already cancelled.

    function _run(localRunTick) {
      var tmp, result, attempt;

      while (true) {
        tmp = null;
        result = null;
        attempt = null;

        switch (status) {
          case STEP_BIND:
            status = CONTINUE;

            try {
              step = bhead(step);

              if (btail === null) {
                bhead = null;
              } else {
                bhead = btail._1;
                btail = btail._2;
              }
            } catch (e) {
              status = RETURN;
              fail = util.left(e);
              step = null;
            }

            break;

          case STEP_RESULT:
            if (util.isLeft(step)) {
              status = RETURN;
              fail = step;
              step = null;
            } else if (bhead === null) {
              status = RETURN;
            } else {
              status = STEP_BIND;
              step = util.fromRight(step);
            }

            break;

          case CONTINUE:
            switch (step.tag) {
              case BIND:
                if (bhead) {
                  btail = new Aff(CONS, bhead, btail);
                }

                bhead = step._2;
                status = CONTINUE;
                step = step._1;
                break;

              case PURE:
                if (bhead === null) {
                  status = RETURN;
                  step = util.right(step._1);
                } else {
                  status = STEP_BIND;
                  step = step._1;
                }

                break;

              case SYNC:
                status = STEP_RESULT;
                step = runSync(util.left, util.right, step._1);
                break;

              case ASYNC:
                status = PENDING;
                step = runAsync(util.left, step._1, function (result) {
                  return function () {
                    if (runTick !== localRunTick) {
                      return;
                    }

                    runTick++;
                    Scheduler.enqueue(function () {
                      // It's possible to interrupt the fiber between enqueuing and
                      // resuming, so we need to check that the runTick is still
                      // valid.
                      if (runTick !== localRunTick + 1) {
                        return;
                      }

                      status = STEP_RESULT;
                      step = result;

                      _run(runTick);
                    });
                  };
                });
                return;

              case THROW:
                status = RETURN;
                fail = util.left(step._1);
                step = null;
                break;
              // Enqueue the Catch so that we can call the error handler later on
              // in case of an exception.

              case CATCH:
                if (bhead === null) {
                  attempts = new Aff(CONS, step, attempts, interrupt);
                } else {
                  attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
                }

                bhead = null;
                btail = null;
                status = CONTINUE;
                step = step._1;
                break;
              // Enqueue the Bracket so that we can call the appropriate handlers
              // after resource acquisition.

              case BRACKET:
                bracketCount++;

                if (bhead === null) {
                  attempts = new Aff(CONS, step, attempts, interrupt);
                } else {
                  attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
                }

                bhead = null;
                btail = null;
                status = CONTINUE;
                step = step._1;
                break;

              case FORK:
                status = STEP_RESULT;
                tmp = Fiber(util, supervisor, step._2);

                if (supervisor) {
                  supervisor.register(tmp);
                }

                if (step._1) {
                  tmp.run();
                }

                step = util.right(tmp);
                break;

              case SEQ:
                status = CONTINUE;
                step = sequential(util, supervisor, step._1);
                break;
            }

            break;

          case RETURN:
            bhead = null;
            btail = null; // If the current stack has returned, and we have no other stacks to
            // resume or finalizers to run, the fiber has halted and we can
            // invoke all join callbacks. Otherwise we need to resume.

            if (attempts === null) {
              status = COMPLETED;
              step = interrupt || fail || step;
            } else {
              // The interrupt status for the enqueued item.
              tmp = attempts._3;
              attempt = attempts._1;
              attempts = attempts._2;

              switch (attempt.tag) {
                // We cannot recover from an unmasked interrupt. Otherwise we should
                // continue stepping, or run the exception handler if an exception
                // was raised.
                case CATCH:
                  // We should compare the interrupt status as well because we
                  // only want it to apply if there has been an interrupt since
                  // enqueuing the catch.
                  if (interrupt && interrupt !== tmp && bracketCount === 0) {
                    status = RETURN;
                  } else if (fail) {
                    status = CONTINUE;
                    step = attempt._2(util.fromLeft(fail));
                    fail = null;
                  }

                  break;
                // We cannot resume from an unmasked interrupt or exception.

                case RESUME:
                  // As with Catch, we only want to ignore in the case of an
                  // interrupt since enqueing the item.
                  if (interrupt && interrupt !== tmp && bracketCount === 0 || fail) {
                    status = RETURN;
                  } else {
                    bhead = attempt._1;
                    btail = attempt._2;
                    status = STEP_BIND;
                    step = util.fromRight(step);
                  }

                  break;
                // If we have a bracket, we should enqueue the handlers,
                // and continue with the success branch only if the fiber has
                // not been interrupted. If the bracket acquisition failed, we
                // should not run either.

                case BRACKET:
                  bracketCount--;

                  if (fail === null) {
                    result = util.fromRight(step); // We need to enqueue the Release with the same interrupt
                    // status as the Bracket that is initiating it.

                    attempts = new Aff(CONS, new Aff(RELEASE, attempt._2, result), attempts, tmp); // We should only coninue as long as the interrupt status has not changed or
                    // we are currently within a non-interruptable finalizer.

                    if (interrupt === tmp || bracketCount > 0) {
                      status = CONTINUE;
                      step = attempt._3(result);
                    }
                  }

                  break;
                // Enqueue the appropriate handler. We increase the bracket count
                // because it should not be cancelled.

                case RELEASE:
                  attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                  status = CONTINUE; // It has only been killed if the interrupt status has changed
                  // since we enqueued the item, and the bracket count is 0. If the
                  // bracket count is non-zero then we are in a masked state so it's
                  // impossible to be killed.

                  if (interrupt && interrupt !== tmp && bracketCount === 0) {
                    step = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);
                  } else if (fail) {
                    step = attempt._1.failed(util.fromLeft(fail))(attempt._2);
                  } else {
                    step = attempt._1.completed(util.fromRight(step))(attempt._2);
                  }

                  fail = null;
                  bracketCount++;
                  break;

                case FINALIZER:
                  bracketCount++;
                  attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                  status = CONTINUE;
                  step = attempt._1;
                  break;

                case FINALIZED:
                  bracketCount--;
                  status = RETURN;
                  step = attempt._1;
                  fail = attempt._2;
                  break;
              }
            }

            break;

          case COMPLETED:
            for (var k in joins) {
              if (joins.hasOwnProperty(k)) {
                rethrow = rethrow && joins[k].rethrow;
                runEff(joins[k].handler(step));
              }
            }

            joins = null; // If we have an interrupt and a fail, then the thread threw while
            // running finalizers. This should always rethrow in a fresh stack.

            if (interrupt && fail) {
              setTimeout(function () {
                throw util.fromLeft(fail);
              }, 0); // If we have an unhandled exception, and no other fiber has joined
              // then we need to throw the exception in a fresh stack.
            } else if (util.isLeft(step) && rethrow) {
              setTimeout(function () {
                // Guard on reathrow because a completely synchronous fiber can
                // still have an observer which was added after-the-fact.
                if (rethrow) {
                  throw util.fromLeft(step);
                }
              }, 0);
            }

            return;

          case SUSPENDED:
            status = CONTINUE;
            break;

          case PENDING:
            return;
        }
      }
    }

    function onComplete(join) {
      return function () {
        if (status === COMPLETED) {
          rethrow = rethrow && join.rethrow;
          join.handler(step)();
          return function () {};
        }

        var jid = joinId++;
        joins = joins || {};
        joins[jid] = join;
        return function () {
          if (joins !== null) {
            delete joins[jid];
          }
        };
      };
    }

    function kill(error, cb) {
      return function () {
        if (status === COMPLETED) {
          cb(util.right(void 0))();
          return function () {};
        }

        var canceler = onComplete({
          rethrow: false,
          handler: function handler()
          /* unused */
          {
            return cb(util.right(void 0));
          }
        })();

        switch (status) {
          case SUSPENDED:
            interrupt = util.left(error);
            status = COMPLETED;
            step = interrupt;

            _run(runTick);

            break;

          case PENDING:
            if (interrupt === null) {
              interrupt = util.left(error);
            }

            if (bracketCount === 0) {
              if (status === PENDING) {
                attempts = new Aff(CONS, new Aff(FINALIZER, step(error)), attempts, interrupt);
              }

              status = RETURN;
              step = null;
              fail = null;

              _run(++runTick);
            }

            break;

          default:
            if (interrupt === null) {
              interrupt = util.left(error);
            }

            if (bracketCount === 0) {
              status = RETURN;
              step = null;
              fail = null;
            }

        }

        return canceler;
      };
    }

    function join(cb) {
      return function () {
        var canceler = onComplete({
          rethrow: false,
          handler: cb
        })();

        if (status === SUSPENDED) {
          _run(runTick);
        }

        return canceler;
      };
    }

    return {
      kill: kill,
      join: join,
      onComplete: onComplete,
      isSuspended: function isSuspended() {
        return status === SUSPENDED;
      },
      run: function run() {
        if (status === SUSPENDED) {
          if (!Scheduler.isDraining()) {
            Scheduler.enqueue(function () {
              _run(runTick);
            });
          } else {
            _run(runTick);
          }
        }
      }
    };
  }

  function runPar(util, supervisor, par, cb) {
    // Table of all forked fibers.
    var fiberId = 0;
    var fibers = {}; // Table of currently running cancelers, as a product of `Alt` behavior.

    var killId = 0;
    var kills = {}; // Error used for early cancelation on Alt branches.

    var early = new Error("[ParAff] Early exit"); // Error used to kill the entire tree.

    var interrupt = null; // The root pointer of the tree.

    var root = EMPTY; // Walks a tree, invoking all the cancelers. Returns the table of pending
    // cancellation fibers.

    function kill(error, par, cb) {
      var step = par;
      var head = null;
      var tail = null;
      var count = 0;
      var kills = {};
      var tmp, kid;

      loop: while (true) {
        tmp = null;

        switch (step.tag) {
          case FORKED:
            if (step._3 === EMPTY) {
              tmp = fibers[step._1];
              kills[count++] = tmp.kill(error, function (result) {
                return function () {
                  count--;

                  if (count === 0) {
                    cb(result)();
                  }
                };
              });
            } // Terminal case.


            if (head === null) {
              break loop;
            } // Go down the right side of the tree.


            step = head._2;

            if (tail === null) {
              head = null;
            } else {
              head = tail._1;
              tail = tail._2;
            }

            break;

          case MAP:
            step = step._2;
            break;

          case APPLY:
          case ALT:
            if (head) {
              tail = new Aff(CONS, head, tail);
            }

            head = step;
            step = step._1;
            break;
        }
      }

      if (count === 0) {
        cb(util.right(void 0))();
      } else {
        // Run the cancelation effects. We alias `count` because it's mutable.
        kid = 0;
        tmp = count;

        for (; kid < tmp; kid++) {
          kills[kid] = kills[kid]();
        }
      }

      return kills;
    } // When a fiber resolves, we need to bubble back up the tree with the
    // result, computing the applicative nodes.


    function join(result, head, tail) {
      var fail, step, lhs, rhs, tmp, kid;

      if (util.isLeft(result)) {
        fail = result;
        step = null;
      } else {
        step = result;
        fail = null;
      }

      loop: while (true) {
        lhs = null;
        rhs = null;
        tmp = null;
        kid = null; // We should never continue if the entire tree has been interrupted.

        if (interrupt !== null) {
          return;
        } // We've made it all the way to the root of the tree, which means
        // the tree has fully evaluated.


        if (head === null) {
          cb(fail || step)();
          return;
        } // The tree has already been computed, so we shouldn't try to do it
        // again. This should never happen.
        // TODO: Remove this?


        if (head._3 !== EMPTY) {
          return;
        }

        switch (head.tag) {
          case MAP:
            if (fail === null) {
              head._3 = util.right(head._1(util.fromRight(step)));
              step = head._3;
            } else {
              head._3 = fail;
            }

            break;

          case APPLY:
            lhs = head._1._3;
            rhs = head._2._3; // If we have a failure we should kill the other side because we
            // can't possible yield a result anymore.

            if (fail) {
              head._3 = fail;
              tmp = true;
              kid = killId++;
              kills[kid] = kill(early, fail === lhs ? head._2 : head._1, function ()
              /* unused */
              {
                return function () {
                  delete kills[kid];

                  if (tmp) {
                    tmp = false;
                  } else if (tail === null) {
                    join(fail, null, null);
                  } else {
                    join(fail, tail._1, tail._2);
                  }
                };
              });

              if (tmp) {
                tmp = false;
                return;
              }
            } else if (lhs === EMPTY || rhs === EMPTY) {
              // We can only proceed if both sides have resolved.
              return;
            } else {
              step = util.right(util.fromRight(lhs)(util.fromRight(rhs)));
              head._3 = step;
            }

            break;

          case ALT:
            lhs = head._1._3;
            rhs = head._2._3; // We can only proceed if both have resolved or we have a success

            if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) {
              return;
            } // If both sides resolve with an error, we should continue with the
            // first error


            if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {
              fail = step === lhs ? rhs : lhs;
              step = null;
              head._3 = fail;
            } else {
              head._3 = step;
              tmp = true;
              kid = killId++; // Once a side has resolved, we need to cancel the side that is still
              // pending before we can continue.

              kills[kid] = kill(early, step === lhs ? head._2 : head._1, function ()
              /* unused */
              {
                return function () {
                  delete kills[kid];

                  if (tmp) {
                    tmp = false;
                  } else if (tail === null) {
                    join(step, null, null);
                  } else {
                    join(step, tail._1, tail._2);
                  }
                };
              });

              if (tmp) {
                tmp = false;
                return;
              }
            }

            break;
        }

        if (tail === null) {
          head = null;
        } else {
          head = tail._1;
          tail = tail._2;
        }
      }
    }

    function resolve(fiber) {
      return function (result) {
        return function () {
          delete fibers[fiber._1];
          fiber._3 = result;
          join(result, fiber._2._1, fiber._2._2);
        };
      };
    } // Walks the applicative tree, substituting non-applicative nodes with
    // `FORKED` nodes. In this tree, all applicative nodes use the `_3` slot
    // as a mutable slot for memoization. In an unresolved state, the `_3`
    // slot is `EMPTY`. In the cases of `ALT` and `APPLY`, we always walk
    // the left side first, because both operations are left-associative. As
    // we `RETURN` from those branches, we then walk the right side.


    function run() {
      var status = CONTINUE;
      var step = par;
      var head = null;
      var tail = null;
      var tmp, fid;

      loop: while (true) {
        tmp = null;
        fid = null;

        switch (status) {
          case CONTINUE:
            switch (step.tag) {
              case MAP:
                if (head) {
                  tail = new Aff(CONS, head, tail);
                }

                head = new Aff(MAP, step._1, EMPTY, EMPTY);
                step = step._2;
                break;

              case APPLY:
                if (head) {
                  tail = new Aff(CONS, head, tail);
                }

                head = new Aff(APPLY, EMPTY, step._2, EMPTY);
                step = step._1;
                break;

              case ALT:
                if (head) {
                  tail = new Aff(CONS, head, tail);
                }

                head = new Aff(ALT, EMPTY, step._2, EMPTY);
                step = step._1;
                break;

              default:
                // When we hit a leaf value, we suspend the stack in the `FORKED`.
                // When the fiber resolves, it can bubble back up the tree.
                fid = fiberId++;
                status = RETURN;
                tmp = step;
                step = new Aff(FORKED, fid, new Aff(CONS, head, tail), EMPTY);
                tmp = Fiber(util, supervisor, tmp);
                tmp.onComplete({
                  rethrow: false,
                  handler: resolve(step)
                })();
                fibers[fid] = tmp;

                if (supervisor) {
                  supervisor.register(tmp);
                }

            }

            break;

          case RETURN:
            // Terminal case, we are back at the root.
            if (head === null) {
              break loop;
            } // If we are done with the right side, we need to continue down the
            // left. Otherwise we should continue up the stack.


            if (head._1 === EMPTY) {
              head._1 = step;
              status = CONTINUE;
              step = head._2;
              head._2 = EMPTY;
            } else {
              head._2 = step;
              step = head;

              if (tail === null) {
                head = null;
              } else {
                head = tail._1;
                tail = tail._2;
              }
            }

        }
      } // Keep a reference to the tree root so it can be cancelled.


      root = step;

      for (fid = 0; fid < fiberId; fid++) {
        fibers[fid].run();
      }
    } // Cancels the entire tree. If there are already subtrees being canceled,
    // we need to first cancel those joins. We will then add fresh joins for
    // all pending branches including those that were in the process of being
    // canceled.


    function cancel(error, cb) {
      interrupt = util.left(error);
      var innerKills;

      for (var kid in kills) {
        if (kills.hasOwnProperty(kid)) {
          innerKills = kills[kid];

          for (kid in innerKills) {
            if (innerKills.hasOwnProperty(kid)) {
              innerKills[kid]();
            }
          }
        }
      }

      kills = null;
      var newKills = kill(error, root, cb);
      return function (killError) {
        return new Aff(ASYNC, function (killCb) {
          return function () {
            for (var kid in newKills) {
              if (newKills.hasOwnProperty(kid)) {
                newKills[kid]();
              }
            }

            return nonCanceler;
          };
        });
      };
    }

    run();
    return function (killError) {
      return new Aff(ASYNC, function (killCb) {
        return function () {
          return cancel(killError, killCb);
        };
      });
    };
  }

  function sequential(util, supervisor, par) {
    return new Aff(ASYNC, function (cb) {
      return function () {
        return runPar(util, supervisor, par, cb);
      };
    });
  }

  Aff.EMPTY = EMPTY;
  Aff.Pure = AffCtr(PURE);
  Aff.Throw = AffCtr(THROW);
  Aff.Catch = AffCtr(CATCH);
  Aff.Sync = AffCtr(SYNC);
  Aff.Async = AffCtr(ASYNC);
  Aff.Bind = AffCtr(BIND);
  Aff.Bracket = AffCtr(BRACKET);
  Aff.Fork = AffCtr(FORK);
  Aff.Seq = AffCtr(SEQ);
  Aff.ParMap = AffCtr(MAP);
  Aff.ParApply = AffCtr(APPLY);
  Aff.ParAlt = AffCtr(ALT);
  Aff.Fiber = Fiber;
  Aff.Supervisor = Supervisor;
  Aff.Scheduler = Scheduler;
  Aff.nonCanceler = nonCanceler;
  return Aff;
}();

exports._pure = Aff.Pure;
exports._throwError = Aff.Throw;

exports._catchError = function (aff) {
  return function (k) {
    return Aff.Catch(aff, k);
  };
};

exports._map = function (f) {
  return function (aff) {
    if (aff.tag === Aff.Pure.tag) {
      return Aff.Pure(f(aff._1));
    } else {
      return Aff.Bind(aff, function (value) {
        return Aff.Pure(f(value));
      });
    }
  };
};

exports._bind = function (aff) {
  return function (k) {
    return Aff.Bind(aff, k);
  };
};

exports._fork = function (immediate) {
  return function (aff) {
    return Aff.Fork(immediate, aff);
  };
};

exports._liftEffect = Aff.Sync;

exports._parAffMap = function (f) {
  return function (aff) {
    return Aff.ParMap(f, aff);
  };
};

exports._parAffApply = function (aff1) {
  return function (aff2) {
    return Aff.ParApply(aff1, aff2);
  };
};

exports._parAffAlt = function (aff1) {
  return function (aff2) {
    return Aff.ParAlt(aff1, aff2);
  };
};

exports.makeAff = Aff.Async;

exports.generalBracket = function (acquire) {
  return function (options) {
    return function (k) {
      return Aff.Bracket(acquire, options, k);
    };
  };
};

exports._makeFiber = function (util, aff) {
  return function () {
    return Aff.Fiber(util, null, aff);
  };
};

exports._makeSupervisedFiber = function (util, aff) {
  return function () {
    var supervisor = Aff.Supervisor(util);
    return {
      fiber: Aff.Fiber(util, supervisor, aff),
      supervisor: supervisor
    };
  };
};

exports._killAll = function (error, supervisor, cb) {
  return supervisor.killAll(error, cb);
};

exports._delay = function () {
  function setDelay(n, k) {
    if (n === 0 && typeof setImmediate !== "undefined") {
      return setImmediate(k);
    } else {
      return setTimeout(k, n);
    }
  }

  function clearDelay(n, t) {
    if (n === 0 && typeof clearImmediate !== "undefined") {
      return clearImmediate(t);
    } else {
      return clearTimeout(t);
    }
  }

  return function (right, ms) {
    return Aff.Async(function (cb) {
      return function () {
        var timer = setDelay(ms, cb(right()));
        return function () {
          return Aff.Sync(function () {
            return right(clearDelay(ms, timer));
          });
        };
      };
    });
  };
}();

exports._sequential = Aff.Seq;
},{}],"../output/Data.Either/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Extend = require("../Control.Extend/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_Bifoldable = require("../Data.Bifoldable/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Bitraversable = require("../Data.Bitraversable/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Left = function () {
  function Left(value0) {
    this.value0 = value0;
  }

  ;

  Left.create = function (value0) {
    return new Left(value0);
  };

  return Left;
}();

var Right = function () {
  function Right(value0) {
    this.value0 = value0;
  }

  ;

  Right.create = function (value0) {
    return new Right(value0);
  };

  return Right;
}();

var showEither = function showEither(dictShow) {
  return function (dictShow1) {
    return new Data_Show.Show(function (v) {
      if (v instanceof Left) {
        return "(Left " + (Data_Show.show(dictShow)(v.value0) + ")");
      }

      ;

      if (v instanceof Right) {
        return "(Right " + (Data_Show.show(dictShow1)(v.value0) + ")");
      }

      ;
      throw new Error("Failed pattern match at Data.Either (line 163, column 1 - line 165, column 46): " + [v.constructor.name]);
    });
  };
};

var note$prime = function note$prime(f) {
  return Data_Maybe["maybe'"](function ($198) {
    return Left.create(f($198));
  })(Right.create);
};

var note = function note(a) {
  return Data_Maybe.maybe(new Left(a))(Right.create);
};

var functorEither = new Data_Functor.Functor(function (f) {
  return function (m) {
    if (m instanceof Left) {
      return new Left(m.value0);
    }

    ;

    if (m instanceof Right) {
      return new Right(f(m.value0));
    }

    ;
    throw new Error("Failed pattern match at Data.Either (line 38, column 1 - line 38, column 52): " + [m.constructor.name]);
  };
});
var functorWithIndexEither = new Data_FunctorWithIndex.FunctorWithIndex(function () {
  return functorEither;
}, function (f) {
  return Data_Functor.map(functorEither)(f(Data_Unit.unit));
});
var invariantEither = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorEither));

var fromRight = function fromRight(dictPartial) {
  return function (v) {
    if (v instanceof Right) {
      return v.value0;
    }

    ;
    throw new Error("Failed pattern match at Data.Either (line 261, column 1 - line 261, column 52): " + [v.constructor.name]);
  };
};

var fromLeft = function fromLeft(dictPartial) {
  return function (v) {
    if (v instanceof Left) {
      return v.value0;
    }

    ;
    throw new Error("Failed pattern match at Data.Either (line 256, column 1 - line 256, column 51): " + [v.constructor.name]);
  };
};

var foldableEither = new Data_Foldable.Foldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      if (v instanceof Left) {
        return Data_Monoid.mempty(dictMonoid);
      }

      ;

      if (v instanceof Right) {
        return f(v.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Either (line 187, column 1 - line 193, column 28): " + [f.constructor.name, v.constructor.name]);
    };
  };
}, function (v) {
  return function (z) {
    return function (v1) {
      if (v1 instanceof Left) {
        return z;
      }

      ;

      if (v1 instanceof Right) {
        return v(z)(v1.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Either (line 187, column 1 - line 193, column 28): " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
    };
  };
}, function (v) {
  return function (z) {
    return function (v1) {
      if (v1 instanceof Left) {
        return z;
      }

      ;

      if (v1 instanceof Right) {
        return v(v1.value0)(z);
      }

      ;
      throw new Error("Failed pattern match at Data.Either (line 187, column 1 - line 193, column 28): " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
    };
  };
});
var foldableWithIndexEither = new Data_FoldableWithIndex.FoldableWithIndex(function () {
  return foldableEither;
}, function (dictMonoid) {
  return function (f) {
    return function (v) {
      if (v instanceof Left) {
        return Data_Monoid.mempty(dictMonoid);
      }

      ;

      if (v instanceof Right) {
        return f(Data_Unit.unit)(v.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Either (line 195, column 1 - line 201, column 42): " + [f.constructor.name, v.constructor.name]);
    };
  };
}, function (v) {
  return function (z) {
    return function (v1) {
      if (v1 instanceof Left) {
        return z;
      }

      ;

      if (v1 instanceof Right) {
        return v(Data_Unit.unit)(z)(v1.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Either (line 195, column 1 - line 201, column 42): " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
    };
  };
}, function (v) {
  return function (z) {
    return function (v1) {
      if (v1 instanceof Left) {
        return z;
      }

      ;

      if (v1 instanceof Right) {
        return v(Data_Unit.unit)(v1.value0)(z);
      }

      ;
      throw new Error("Failed pattern match at Data.Either (line 195, column 1 - line 201, column 42): " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
    };
  };
});
var traversableEither = new Data_Traversable.Traversable(function () {
  return foldableEither;
}, function () {
  return functorEither;
}, function (dictApplicative) {
  return function (v) {
    if (v instanceof Left) {
      return Control_Applicative.pure(dictApplicative)(new Left(v.value0));
    }

    ;

    if (v instanceof Right) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Right.create)(v.value0);
    }

    ;
    throw new Error("Failed pattern match at Data.Either (line 211, column 1 - line 215, column 36): " + [v.constructor.name]);
  };
}, function (dictApplicative) {
  return function (v) {
    return function (v1) {
      if (v1 instanceof Left) {
        return Control_Applicative.pure(dictApplicative)(new Left(v1.value0));
      }

      ;

      if (v1 instanceof Right) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Right.create)(v(v1.value0));
      }

      ;
      throw new Error("Failed pattern match at Data.Either (line 211, column 1 - line 215, column 36): " + [v.constructor.name, v1.constructor.name]);
    };
  };
});
var traversableWithIndexEither = new Data_TraversableWithIndex.TraversableWithIndex(function () {
  return foldableWithIndexEither;
}, function () {
  return functorWithIndexEither;
}, function () {
  return traversableEither;
}, function (dictApplicative) {
  return function (v) {
    return function (v1) {
      if (v1 instanceof Left) {
        return Control_Applicative.pure(dictApplicative)(new Left(v1.value0));
      }

      ;

      if (v1 instanceof Right) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Right.create)(v(Data_Unit.unit)(v1.value0));
      }

      ;
      throw new Error("Failed pattern match at Data.Either (line 217, column 1 - line 219, column 53): " + [v.constructor.name, v1.constructor.name]);
    };
  };
});
var extendEither = new Control_Extend.Extend(function () {
  return functorEither;
}, function (v) {
  return function (v1) {
    if (v1 instanceof Left) {
      return new Left(v1.value0);
    }

    ;
    return new Right(v(v1));
  };
});

var eqEither = function eqEither(dictEq) {
  return function (dictEq1) {
    return new Data_Eq.Eq(function (x) {
      return function (y) {
        if (x instanceof Left && y instanceof Left) {
          return Data_Eq.eq(dictEq)(x.value0)(y.value0);
        }

        ;

        if (x instanceof Right && y instanceof Right) {
          return Data_Eq.eq(dictEq1)(x.value0)(y.value0);
        }

        ;
        return false;
      };
    });
  };
};

var ordEither = function ordEither(dictOrd) {
  return function (dictOrd1) {
    return new Data_Ord.Ord(function () {
      return eqEither(dictOrd.Eq0())(dictOrd1.Eq0());
    }, function (x) {
      return function (y) {
        if (x instanceof Left && y instanceof Left) {
          return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
        }

        ;

        if (x instanceof Left) {
          return Data_Ordering.LT.value;
        }

        ;

        if (y instanceof Left) {
          return Data_Ordering.GT.value;
        }

        ;

        if (x instanceof Right && y instanceof Right) {
          return Data_Ord.compare(dictOrd1)(x.value0)(y.value0);
        }

        ;
        throw new Error("Failed pattern match at Data.Either (line 179, column 1 - line 179, column 64): " + [x.constructor.name, y.constructor.name]);
      };
    });
  };
};

var eq1Either = function eq1Either(dictEq) {
  return new Data_Eq.Eq1(function (dictEq1) {
    return Data_Eq.eq(eqEither(dictEq)(dictEq1));
  });
};

var ord1Either = function ord1Either(dictOrd) {
  return new Data_Ord.Ord1(function () {
    return eq1Either(dictOrd.Eq0());
  }, function (dictOrd1) {
    return Data_Ord.compare(ordEither(dictOrd)(dictOrd1));
  });
};

var either = function either(v) {
  return function (v1) {
    return function (v2) {
      if (v2 instanceof Left) {
        return v(v2.value0);
      }

      ;

      if (v2 instanceof Right) {
        return v1(v2.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Either (line 238, column 1 - line 238, column 64): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
    };
  };
};

var hush = either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);
var isLeft = either(Data_Function["const"](true))(Data_Function["const"](false));
var isRight = either(Data_Function["const"](false))(Data_Function["const"](true));

var choose = function choose(dictAlt) {
  return function (a) {
    return function (b) {
      return Control_Alt.alt(dictAlt)(Data_Functor.map(dictAlt.Functor0())(Left.create)(a))(Data_Functor.map(dictAlt.Functor0())(Right.create)(b));
    };
  };
};

var boundedEither = function boundedEither(dictBounded) {
  return function (dictBounded1) {
    return new Data_Bounded.Bounded(function () {
      return ordEither(dictBounded.Ord0())(dictBounded1.Ord0());
    }, new Left(Data_Bounded.bottom(dictBounded)), new Right(Data_Bounded.top(dictBounded1)));
  };
};

var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
  return function (v1) {
    return function (v2) {
      if (v2 instanceof Left) {
        return new Left(v(v2.value0));
      }

      ;

      if (v2 instanceof Right) {
        return new Right(v1(v2.value0));
      }

      ;
      throw new Error("Failed pattern match at Data.Either (line 46, column 1 - line 48, column 36): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
    };
  };
});
var bifoldableEither = new Data_Bifoldable.Bifoldable(function (dictMonoid) {
  return function (v) {
    return function (v1) {
      return function (v2) {
        if (v2 instanceof Left) {
          return v(v2.value0);
        }

        ;

        if (v2 instanceof Right) {
          return v1(v2.value0);
        }

        ;
        throw new Error("Failed pattern match at Data.Either (line 203, column 1 - line 209, column 32): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  };
}, function (v) {
  return function (v1) {
    return function (z) {
      return function (v2) {
        if (v2 instanceof Left) {
          return v(z)(v2.value0);
        }

        ;

        if (v2 instanceof Right) {
          return v1(z)(v2.value0);
        }

        ;
        throw new Error("Failed pattern match at Data.Either (line 203, column 1 - line 209, column 32): " + [v.constructor.name, v1.constructor.name, z.constructor.name, v2.constructor.name]);
      };
    };
  };
}, function (v) {
  return function (v1) {
    return function (z) {
      return function (v2) {
        if (v2 instanceof Left) {
          return v(v2.value0)(z);
        }

        ;

        if (v2 instanceof Right) {
          return v1(v2.value0)(z);
        }

        ;
        throw new Error("Failed pattern match at Data.Either (line 203, column 1 - line 209, column 32): " + [v.constructor.name, v1.constructor.name, z.constructor.name, v2.constructor.name]);
      };
    };
  };
});
var bitraversableEither = new Data_Bitraversable.Bitraversable(function () {
  return bifoldableEither;
}, function () {
  return bifunctorEither;
}, function (dictApplicative) {
  return function (v) {
    if (v instanceof Left) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Left.create)(v.value0);
    }

    ;

    if (v instanceof Right) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Right.create)(v.value0);
    }

    ;
    throw new Error("Failed pattern match at Data.Either (line 221, column 1 - line 225, column 37): " + [v.constructor.name]);
  };
}, function (dictApplicative) {
  return function (v) {
    return function (v1) {
      return function (v2) {
        if (v2 instanceof Left) {
          return Data_Functor.map(dictApplicative.Apply0().Functor0())(Left.create)(v(v2.value0));
        }

        ;

        if (v2 instanceof Right) {
          return Data_Functor.map(dictApplicative.Apply0().Functor0())(Right.create)(v1(v2.value0));
        }

        ;
        throw new Error("Failed pattern match at Data.Either (line 221, column 1 - line 225, column 37): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  };
});
var applyEither = new Control_Apply.Apply(function () {
  return functorEither;
}, function (v) {
  return function (v1) {
    if (v instanceof Left) {
      return new Left(v.value0);
    }

    ;

    if (v instanceof Right) {
      return Data_Functor.map(functorEither)(v.value0)(v1);
    }

    ;
    throw new Error("Failed pattern match at Data.Either (line 82, column 1 - line 84, column 30): " + [v.constructor.name, v1.constructor.name]);
  };
});
var bindEither = new Control_Bind.Bind(function () {
  return applyEither;
}, either(function (e) {
  return function (v) {
    return new Left(e);
  };
})(function (a) {
  return function (f) {
    return f(a);
  };
}));

var semigroupEither = function semigroupEither(dictSemigroup) {
  return new Data_Semigroup.Semigroup(function (x) {
    return function (y) {
      return Control_Apply.apply(applyEither)(Data_Functor.map(functorEither)(Data_Semigroup.append(dictSemigroup))(x))(y);
    };
  });
};

var applicativeEither = new Control_Applicative.Applicative(function () {
  return applyEither;
}, Right.create);
var monadEither = new Control_Monad.Monad(function () {
  return applicativeEither;
}, function () {
  return bindEither;
});
var altEither = new Control_Alt.Alt(function () {
  return functorEither;
}, function (v) {
  return function (v1) {
    if (v instanceof Left) {
      return v1;
    }

    ;
    return v;
  };
});
module.exports = {
  Left: Left,
  Right: Right,
  either: either,
  choose: choose,
  isLeft: isLeft,
  isRight: isRight,
  fromLeft: fromLeft,
  fromRight: fromRight,
  note: note,
  "note'": note$prime,
  hush: hush,
  functorEither: functorEither,
  functorWithIndexEither: functorWithIndexEither,
  invariantEither: invariantEither,
  bifunctorEither: bifunctorEither,
  applyEither: applyEither,
  applicativeEither: applicativeEither,
  altEither: altEither,
  bindEither: bindEither,
  monadEither: monadEither,
  extendEither: extendEither,
  showEither: showEither,
  eqEither: eqEither,
  eq1Either: eq1Either,
  ordEither: ordEither,
  ord1Either: ord1Either,
  boundedEither: boundedEither,
  foldableEither: foldableEither,
  foldableWithIndexEither: foldableWithIndexEither,
  bifoldableEither: bifoldableEither,
  traversableEither: traversableEither,
  traversableWithIndexEither: traversableWithIndexEither,
  bitraversableEither: bitraversableEither,
  semigroupEither: semigroupEither
};
},{"../Control.Alt/index.js":"../output/Control.Alt/index.js","../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Extend/index.js":"../output/Control.Extend/index.js","../Control.Monad/index.js":"../output/Control.Monad/index.js","../Data.Bifoldable/index.js":"../output/Data.Bifoldable/index.js","../Data.Bifunctor/index.js":"../output/Data.Bifunctor/index.js","../Data.Bitraversable/index.js":"../output/Data.Bitraversable/index.js","../Data.Bounded/index.js":"../output/Data.Bounded/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Foldable/index.js":"../output/Data.Foldable/index.js","../Data.FoldableWithIndex/index.js":"../output/Data.FoldableWithIndex/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Functor.Invariant/index.js":"../output/Data.Functor.Invariant/index.js","../Data.FunctorWithIndex/index.js":"../output/Data.FunctorWithIndex/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Ordering/index.js":"../output/Data.Ordering/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Show/index.js":"../output/Data.Show/index.js","../Data.Traversable/index.js":"../output/Data.Traversable/index.js","../Data.TraversableWithIndex/index.js":"../output/Data.TraversableWithIndex/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js"}],"../output/Effect/foreign.js":[function(require,module,exports) {
"use strict";

exports.pureE = function (a) {
  return function () {
    return a;
  };
};

exports.bindE = function (a) {
  return function (f) {
    return function () {
      return f(a())();
    };
  };
};

exports.untilE = function (f) {
  return function () {
    while (!f()) {
      ;
    }

    return {};
  };
};

exports.whileE = function (f) {
  return function (a) {
    return function () {
      while (f()) {
        a();
      }

      return {};
    };
  };
};

exports.forE = function (lo) {
  return function (hi) {
    return function (f) {
      return function () {
        for (var i = lo; i < hi; i++) {
          f(i)();
        }
      };
    };
  };
};

exports.foreachE = function (as) {
  return function (f) {
    return function () {
      for (var i = 0, l = as.length; i < l; i++) {
        f(as[i])();
      }
    };
  };
};
},{}],"../output/Effect/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var monadEffect = new Control_Monad.Monad(function () {
  return applicativeEffect;
}, function () {
  return bindEffect;
});
var bindEffect = new Control_Bind.Bind(function () {
  return applyEffect;
}, $foreign.bindE);
var applyEffect = new Control_Apply.Apply(function () {
  return functorEffect;
}, Control_Monad.ap(monadEffect));
var applicativeEffect = new Control_Applicative.Applicative(function () {
  return applyEffect;
}, $foreign.pureE);
var functorEffect = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEffect));

var semigroupEffect = function semigroupEffect(dictSemigroup) {
  return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyEffect)(Data_Semigroup.append(dictSemigroup)));
};

var monoidEffect = function monoidEffect(dictMonoid) {
  return new Data_Monoid.Monoid(function () {
    return semigroupEffect(dictMonoid.Semigroup0());
  }, $foreign.pureE(Data_Monoid.mempty(dictMonoid)));
};

module.exports = {
  functorEffect: functorEffect,
  applyEffect: applyEffect,
  applicativeEffect: applicativeEffect,
  bindEffect: bindEffect,
  monadEffect: monadEffect,
  semigroupEffect: semigroupEffect,
  monoidEffect: monoidEffect,
  untilE: $foreign.untilE,
  whileE: $foreign.whileE,
  forE: $foreign.forE,
  foreachE: $foreign.foreachE
};
},{"./foreign.js":"../output/Effect/foreign.js","../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Monad/index.js":"../output/Control.Monad/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js"}],"../output/Effect.Exception/foreign.js":[function(require,module,exports) {
"use strict";

exports.showErrorImpl = function (err) {
  return err.stack || err.toString();
};

exports.error = function (msg) {
  return new Error(msg);
};

exports.message = function (e) {
  return e.message;
};

exports.name = function (e) {
  return e.name || "Error";
};

exports.stackImpl = function (just) {
  return function (nothing) {
    return function (e) {
      return e.stack ? just(e.stack) : nothing;
    };
  };
};

exports.throwException = function (e) {
  return function () {
    throw e;
  };
};

exports.catchException = function (c) {
  return function (t) {
    return function () {
      try {
        return t();
      } catch (e) {
        if (e instanceof Error || Object.prototype.toString.call(e) === "[object Error]") {
          return c(e)();
        } else {
          return c(new Error(e.toString()))();
        }
      }
    };
  };
};
},{}],"../output/Effect.Exception/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Show = require("../Data.Show/index.js");

var Effect = require("../Effect/index.js");

var $$try = function $$try(action) {
  return $foreign.catchException(function () {
    var $0 = Control_Applicative.pure(Effect.applicativeEffect);
    return function ($1) {
      return $0(Data_Either.Left.create($1));
    };
  }())(Data_Functor.map(Effect.functorEffect)(Data_Either.Right.create)(action));
};

var $$throw = function $$throw($2) {
  return $foreign.throwException($foreign.error($2));
};

var stack = $foreign.stackImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var showError = new Data_Show.Show($foreign.showErrorImpl);
module.exports = {
  stack: stack,
  "throw": $$throw,
  "try": $$try,
  showError: showError,
  error: $foreign.error,
  message: $foreign.message,
  name: $foreign.name,
  throwException: $foreign.throwException,
  catchException: $foreign.catchException
};
},{"./foreign.js":"../output/Effect.Exception/foreign.js","../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Data.Either/index.js":"../output/Data.Either/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Show/index.js":"../output/Data.Show/index.js","../Effect/index.js":"../output/Effect/index.js"}],"../output/Control.Monad.Error.Class/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect = require("../Effect/index.js");

var Effect_Exception = require("../Effect.Exception/index.js");

var MonadThrow = function MonadThrow(Monad0, throwError) {
  this.Monad0 = Monad0;
  this.throwError = throwError;
};

var MonadError = function MonadError(MonadThrow0, catchError) {
  this.MonadThrow0 = MonadThrow0;
  this.catchError = catchError;
};

var throwError = function throwError(dict) {
  return dict.throwError;
};

var monadThrowMaybe = new MonadThrow(function () {
  return Data_Maybe.monadMaybe;
}, Data_Function["const"](Data_Maybe.Nothing.value));
var monadThrowEither = new MonadThrow(function () {
  return Data_Either.monadEither;
}, Data_Either.Left.create);
var monadThrowEffect = new MonadThrow(function () {
  return Effect.monadEffect;
}, Effect_Exception.throwException);
var monadErrorMaybe = new MonadError(function () {
  return monadThrowMaybe;
}, function (v) {
  return function (v1) {
    if (v instanceof Data_Maybe.Nothing) {
      return v1(Data_Unit.unit);
    }

    ;

    if (v instanceof Data_Maybe.Just) {
      return new Data_Maybe.Just(v.value0);
    }

    ;
    throw new Error("Failed pattern match at Control.Monad.Error.Class (line 79, column 1 - line 81, column 33): " + [v.constructor.name, v1.constructor.name]);
  };
});
var monadErrorEither = new MonadError(function () {
  return monadThrowEither;
}, function (v) {
  return function (v1) {
    if (v instanceof Data_Either.Left) {
      return v1(v.value0);
    }

    ;

    if (v instanceof Data_Either.Right) {
      return new Data_Either.Right(v.value0);
    }

    ;
    throw new Error("Failed pattern match at Control.Monad.Error.Class (line 72, column 1 - line 74, column 35): " + [v.constructor.name, v1.constructor.name]);
  };
});
var monadErrorEffect = new MonadError(function () {
  return monadThrowEffect;
}, Data_Function.flip(Effect_Exception.catchException));

var catchError = function catchError(dict) {
  return dict.catchError;
};

var catchJust = function catchJust(dictMonadError) {
  return function (p) {
    return function (act) {
      return function (handler) {
        var handle = function handle(e) {
          var v = p(e);

          if (v instanceof Data_Maybe.Nothing) {
            return throwError(dictMonadError.MonadThrow0())(e);
          }

          ;

          if (v instanceof Data_Maybe.Just) {
            return handler(v.value0);
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.Error.Class (line 57, column 5 - line 59, column 26): " + [v.constructor.name]);
        };

        return catchError(dictMonadError)(act)(handle);
      };
    };
  };
};

var $$try = function $$try(dictMonadError) {
  return function (a) {
    return catchError(dictMonadError)(Data_Functor.map(dictMonadError.MonadThrow0().Monad0().Bind1().Apply0().Functor0())(Data_Either.Right.create)(a))(function () {
      var $17 = Control_Applicative.pure(dictMonadError.MonadThrow0().Monad0().Applicative0());
      return function ($18) {
        return $17(Data_Either.Left.create($18));
      };
    }());
  };
};

var withResource = function withResource(dictMonadError) {
  return function (acquire) {
    return function (release) {
      return function (kleisli) {
        return Control_Bind.bind(dictMonadError.MonadThrow0().Monad0().Bind1())(acquire)(function (resource) {
          return Control_Bind.bind(dictMonadError.MonadThrow0().Monad0().Bind1())($$try(dictMonadError)(kleisli(resource)))(function (result) {
            return Control_Bind.discard(Control_Bind.discardUnit)(dictMonadError.MonadThrow0().Monad0().Bind1())(release(resource))(function () {
              return Data_Either.either(throwError(dictMonadError.MonadThrow0()))(Control_Applicative.pure(dictMonadError.MonadThrow0().Monad0().Applicative0()))(result);
            });
          });
        });
      };
    };
  };
};

module.exports = {
  catchError: catchError,
  throwError: throwError,
  MonadThrow: MonadThrow,
  MonadError: MonadError,
  catchJust: catchJust,
  "try": $$try,
  withResource: withResource,
  monadThrowEither: monadThrowEither,
  monadErrorEither: monadErrorEither,
  monadThrowMaybe: monadThrowMaybe,
  monadErrorMaybe: monadErrorMaybe,
  monadThrowEffect: monadThrowEffect,
  monadErrorEffect: monadErrorEffect
};
},{"../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Data.Either/index.js":"../output/Data.Either/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js","../Effect/index.js":"../output/Effect/index.js","../Effect.Exception/index.js":"../output/Effect.Exception/index.js"}],"../output/Effect.Ref/foreign.js":[function(require,module,exports) {
"use strict";

exports.new = function (val) {
  return function () {
    return {
      value: val
    };
  };
};

exports.read = function (ref) {
  return function () {
    return ref.value;
  };
};

exports["modify'"] = function (f) {
  return function (ref) {
    return function () {
      var t = f(ref.value);
      ref.value = t.state;
      return t.value;
    };
  };
};

exports.write = function (val) {
  return function (ref) {
    return function () {
      ref.value = val;
      return {};
    };
  };
};
},{}],"../output/Effect.Ref/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Effect = require("../Effect/index.js");

var modify = function modify(f) {
  return $foreign["modify'"](function (s) {
    var s$prime = f(s);
    return {
      state: s$prime,
      value: s$prime
    };
  });
};

var modify_ = function modify_(f) {
  return function (s) {
    return Data_Functor["void"](Effect.functorEffect)(modify(f)(s));
  };
};

module.exports = {
  modify: modify,
  modify_: modify_,
  "new": $foreign["new"],
  read: $foreign.read,
  "modify'": $foreign["modify'"],
  write: $foreign.write
};
},{"./foreign.js":"../output/Effect.Ref/foreign.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Effect/index.js":"../output/Effect/index.js"}],"../output/Control.Monad.Rec.Class/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect = require("../Effect/index.js");

var Effect_Ref = require("../Effect.Ref/index.js");

var Loop = function () {
  function Loop(value0) {
    this.value0 = value0;
  }

  ;

  Loop.create = function (value0) {
    return new Loop(value0);
  };

  return Loop;
}();

var Done = function () {
  function Done(value0) {
    this.value0 = value0;
  }

  ;

  Done.create = function (value0) {
    return new Done(value0);
  };

  return Done;
}();

var MonadRec = function MonadRec(Monad0, tailRecM) {
  this.Monad0 = Monad0;
  this.tailRecM = tailRecM;
};

var tailRecM = function tailRecM(dict) {
  return dict.tailRecM;
};

var tailRecM2 = function tailRecM2(dictMonadRec) {
  return function (f) {
    return function (a) {
      return function (b) {
        return tailRecM(dictMonadRec)(function (o) {
          return f(o.a)(o.b);
        })({
          a: a,
          b: b
        });
      };
    };
  };
};

var tailRecM3 = function tailRecM3(dictMonadRec) {
  return function (f) {
    return function (a) {
      return function (b) {
        return function (c) {
          return tailRecM(dictMonadRec)(function (o) {
            return f(o.a)(o.b)(o.c);
          })({
            a: a,
            b: b,
            c: c
          });
        };
      };
    };
  };
};

var untilJust = function untilJust(dictMonadRec) {
  return function (m) {
    return tailRecM(dictMonadRec)(function (v) {
      return Data_Functor.mapFlipped(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(m)(function (v1) {
        if (v1 instanceof Data_Maybe.Nothing) {
          return new Loop(Data_Unit.unit);
        }

        ;

        if (v1 instanceof Data_Maybe.Just) {
          return new Done(v1.value0);
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 155, column 43 - line 157, column 19): " + [v1.constructor.name]);
      });
    })(Data_Unit.unit);
  };
};

var whileJust = function whileJust(dictMonoid) {
  return function (dictMonadRec) {
    return function (m) {
      return tailRecM(dictMonadRec)(function (v) {
        return Data_Functor.mapFlipped(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(m)(function (v1) {
          if (v1 instanceof Data_Maybe.Nothing) {
            return new Done(v);
          }

          ;

          if (v1 instanceof Data_Maybe.Just) {
            return Loop.create(Data_Semigroup.append(dictMonoid.Semigroup0())(v)(v1.value0));
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 148, column 45 - line 150, column 26): " + [v1.constructor.name]);
        });
      })(Data_Monoid.mempty(dictMonoid));
    };
  };
};

var tailRec = function tailRec(f) {
  var go = function go($copy_v) {
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(v) {
      if (v instanceof Loop) {
        $copy_v = f(v.value0);
        return;
      }

      ;

      if (v instanceof Done) {
        $tco_done = true;
        return v.value0;
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 93, column 3 - line 93, column 25): " + [v.constructor.name]);
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }

    ;
    return $tco_result;
  };

  return function ($58) {
    return go(f($58));
  };
};

var monadRecMaybe = new MonadRec(function () {
  return Data_Maybe.monadMaybe;
}, function (f) {
  return function (a0) {
    var g = function g(v) {
      if (v instanceof Data_Maybe.Nothing) {
        return new Done(Data_Maybe.Nothing.value);
      }

      ;

      if (v instanceof Data_Maybe.Just && v.value0 instanceof Loop) {
        return new Loop(f(v.value0.value0));
      }

      ;

      if (v instanceof Data_Maybe.Just && v.value0 instanceof Done) {
        return new Done(new Data_Maybe.Just(v.value0.value0));
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 129, column 7 - line 129, column 31): " + [v.constructor.name]);
    };

    return tailRec(g)(f(a0));
  };
});
var monadRecIdentity = new MonadRec(function () {
  return Data_Identity.monadIdentity;
}, function (f) {
  var runIdentity = function runIdentity(v) {
    return v;
  };

  var $59 = tailRec(function ($61) {
    return runIdentity(f($61));
  });
  return function ($60) {
    return Data_Identity.Identity($59($60));
  };
});
var monadRecFunction = new MonadRec(function () {
  return Control_Monad.monadFn;
}, function (f) {
  return function (a0) {
    return function (e) {
      return tailRec(function (a) {
        return f(a)(e);
      })(a0);
    };
  };
});
var monadRecEither = new MonadRec(function () {
  return Data_Either.monadEither;
}, function (f) {
  return function (a0) {
    var g = function g(v) {
      if (v instanceof Data_Either.Left) {
        return new Done(new Data_Either.Left(v.value0));
      }

      ;

      if (v instanceof Data_Either.Right && v.value0 instanceof Loop) {
        return new Loop(f(v.value0.value0));
      }

      ;

      if (v instanceof Data_Either.Right && v.value0 instanceof Done) {
        return new Done(new Data_Either.Right(v.value0.value0));
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 121, column 7 - line 121, column 33): " + [v.constructor.name]);
    };

    return tailRec(g)(f(a0));
  };
});
var monadRecEffect = new MonadRec(function () {
  return Effect.monadEffect;
}, function (f) {
  return function (a) {
    var fromDone = function fromDone(v) {
      if (v instanceof Done) {
        return v.value0;
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 113, column 30 - line 113, column 44): " + [v.constructor.name]);
    };

    return function __do() {
      var r = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref["new"])(f(a))();

      (function () {
        while (!function __do() {
          var v = Effect_Ref.read(r)();

          if (v instanceof Loop) {
            var e = f(v.value0)();
            Effect_Ref.write(e)(r)();
            return false;
          }

          ;

          if (v instanceof Done) {
            return true;
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 104, column 22 - line 109, column 28): " + [v.constructor.name]);
        }()) {}

        ;
        return {};
      })();

      return Data_Functor.map(Effect.functorEffect)(fromDone)(Effect_Ref.read(r))();
    };
  };
});
var functorStep = new Data_Functor.Functor(function (f) {
  return function (m) {
    if (m instanceof Loop) {
      return new Loop(m.value0);
    }

    ;

    if (m instanceof Done) {
      return new Done(f(m.value0));
    }

    ;
    throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 27, column 1 - line 27, column 48): " + [m.constructor.name]);
  };
});

var forever = function forever(dictMonadRec) {
  return function (ma) {
    return tailRecM(dictMonadRec)(function (u) {
      return Data_Functor.voidRight(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(new Loop(u))(ma);
    })(Data_Unit.unit);
  };
};

var bifunctorStep = new Data_Bifunctor.Bifunctor(function (v) {
  return function (v1) {
    return function (v2) {
      if (v2 instanceof Loop) {
        return new Loop(v(v2.value0));
      }

      ;

      if (v2 instanceof Done) {
        return new Done(v1(v2.value0));
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 29, column 1 - line 31, column 34): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
    };
  };
});
module.exports = {
  Loop: Loop,
  Done: Done,
  MonadRec: MonadRec,
  tailRec: tailRec,
  tailRecM: tailRecM,
  tailRecM2: tailRecM2,
  tailRecM3: tailRecM3,
  forever: forever,
  whileJust: whileJust,
  untilJust: untilJust,
  functorStep: functorStep,
  bifunctorStep: bifunctorStep,
  monadRecIdentity: monadRecIdentity,
  monadRecEffect: monadRecEffect,
  monadRecFunction: monadRecFunction,
  monadRecEither: monadRecEither,
  monadRecMaybe: monadRecMaybe
};
},{"../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Monad/index.js":"../output/Control.Monad/index.js","../Data.Bifunctor/index.js":"../output/Data.Bifunctor/index.js","../Data.Either/index.js":"../output/Data.Either/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Identity/index.js":"../output/Data.Identity/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js","../Effect/index.js":"../output/Effect/index.js","../Effect.Ref/index.js":"../output/Effect.Ref/index.js"}],"../output/Control.Monad.Cont.Class/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var MonadCont = function MonadCont(Monad0, callCC) {
  this.Monad0 = Monad0;
  this.callCC = callCC;
};

var callCC = function callCC(dict) {
  return dict.callCC;
};

module.exports = {
  MonadCont: MonadCont,
  callCC: callCC
};
},{}],"../output/Control.Monad.Reader.Class/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var MonadAsk = function MonadAsk(Monad0, ask) {
  this.Monad0 = Monad0;
  this.ask = ask;
};

var MonadReader = function MonadReader(MonadAsk0, local) {
  this.MonadAsk0 = MonadAsk0;
  this.local = local;
};

var monadAskFun = new MonadAsk(function () {
  return Control_Monad.monadFn;
}, Control_Category.identity(Control_Category.categoryFn));
var monadReaderFun = new MonadReader(function () {
  return monadAskFun;
}, Control_Semigroupoid.composeFlipped(Control_Semigroupoid.semigroupoidFn));

var local = function local(dict) {
  return dict.local;
};

var ask = function ask(dict) {
  return dict.ask;
};

var asks = function asks(dictMonadAsk) {
  return function (f) {
    return Data_Functor.map(dictMonadAsk.Monad0().Bind1().Apply0().Functor0())(f)(ask(dictMonadAsk));
  };
};

module.exports = {
  ask: ask,
  local: local,
  MonadAsk: MonadAsk,
  asks: asks,
  MonadReader: MonadReader,
  monadAskFun: monadAskFun,
  monadReaderFun: monadReaderFun
};
},{"../Control.Category/index.js":"../output/Control.Category/index.js","../Control.Monad/index.js":"../output/Control.Monad/index.js","../Control.Semigroupoid/index.js":"../output/Control.Semigroupoid/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js"}],"../output/Control.Monad.Trans.Class/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var MonadTrans = function MonadTrans(lift) {
  this.lift = lift;
};

var lift = function lift(dict) {
  return dict.lift;
};

module.exports = {
  lift: lift,
  MonadTrans: MonadTrans
};
},{}],"../output/Effect.Class/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Effect = require("../Effect/index.js");

var MonadEffect = function MonadEffect(Monad0, liftEffect) {
  this.Monad0 = Monad0;
  this.liftEffect = liftEffect;
};

var monadEffectEffect = new MonadEffect(function () {
  return Effect.monadEffect;
}, Control_Category.identity(Control_Category.categoryFn));

var liftEffect = function liftEffect(dict) {
  return dict.liftEffect;
};

module.exports = {
  liftEffect: liftEffect,
  MonadEffect: MonadEffect,
  monadEffectEffect: monadEffectEffect
};
},{"../Control.Category/index.js":"../output/Control.Category/index.js","../Effect/index.js":"../output/Effect/index.js"}],"../output/Control.Monad.Cont.Trans/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class/index.js");

var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var ContT = function ContT(x) {
  return x;
};

var withContT = function withContT(f) {
  return function (v) {
    return function (k) {
      return v(f(k));
    };
  };
};

var runContT = function runContT(v) {
  return function (k) {
    return v(k);
  };
};

var newtypeContT = new Data_Newtype.Newtype(function (n) {
  return n;
}, ContT);
var monadTransContT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
  return function (m) {
    return function (k) {
      return Control_Bind.bind(dictMonad.Bind1())(m)(k);
    };
  };
});

var mapContT = function mapContT(f) {
  return function (v) {
    return function (k) {
      return f(v(k));
    };
  };
};

var functorContT = function functorContT(dictFunctor) {
  return new Data_Functor.Functor(function (f) {
    return function (v) {
      return function (k) {
        return v(function (a) {
          return k(f(a));
        });
      };
    };
  });
};

var applyContT = function applyContT(dictApply) {
  return new Control_Apply.Apply(function () {
    return functorContT(dictApply.Functor0());
  }, function (v) {
    return function (v1) {
      return function (k) {
        return v(function (g) {
          return v1(function (a) {
            return k(g(a));
          });
        });
      };
    };
  });
};

var bindContT = function bindContT(dictBind) {
  return new Control_Bind.Bind(function () {
    return applyContT(dictBind.Apply0());
  }, function (v) {
    return function (k) {
      return function (k$prime) {
        return v(function (a) {
          var v1 = k(a);
          return v1(k$prime);
        });
      };
    };
  });
};

var applicativeContT = function applicativeContT(dictApplicative) {
  return new Control_Applicative.Applicative(function () {
    return applyContT(dictApplicative.Apply0());
  }, function (a) {
    return function (k) {
      return k(a);
    };
  });
};

var monadContT = function monadContT(dictMonad) {
  return new Control_Monad.Monad(function () {
    return applicativeContT(dictMonad.Applicative0());
  }, function () {
    return bindContT(dictMonad.Bind1());
  });
};

var monadAskContT = function monadAskContT(dictMonadAsk) {
  return new Control_Monad_Reader_Class.MonadAsk(function () {
    return monadContT(dictMonadAsk.Monad0());
  }, Control_Monad_Trans_Class.lift(monadTransContT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
};

var monadReaderContT = function monadReaderContT(dictMonadReader) {
  return new Control_Monad_Reader_Class.MonadReader(function () {
    return monadAskContT(dictMonadReader.MonadAsk0());
  }, function (f) {
    return function (v) {
      return function (k) {
        return Control_Bind.bind(dictMonadReader.MonadAsk0().Monad0().Bind1())(Control_Monad_Reader_Class.ask(dictMonadReader.MonadAsk0()))(function (r) {
          return Control_Monad_Reader_Class.local(dictMonadReader)(f)(v(function () {
            var $43 = Control_Monad_Reader_Class.local(dictMonadReader)(Data_Function["const"](r));
            return function ($44) {
              return $43(k($44));
            };
          }()));
        });
      };
    };
  });
};

var monadContContT = function monadContContT(dictMonad) {
  return new Control_Monad_Cont_Class.MonadCont(function () {
    return monadContT(dictMonad);
  }, function (f) {
    return function (k) {
      var v = f(function (a) {
        return function (v1) {
          return k(a);
        };
      });
      return v(k);
    };
  });
};

var monadEffectContT = function monadEffectContT(dictMonadEffect) {
  return new Effect_Class.MonadEffect(function () {
    return monadContT(dictMonadEffect.Monad0());
  }, function () {
    var $45 = Control_Monad_Trans_Class.lift(monadTransContT)(dictMonadEffect.Monad0());
    var $46 = Effect_Class.liftEffect(dictMonadEffect);
    return function ($47) {
      return $45($46($47));
    };
  }());
};

var monadStateContT = function monadStateContT(dictMonadState) {
  return new Control_Monad_State_Class.MonadState(function () {
    return monadContT(dictMonadState.Monad0());
  }, function () {
    var $48 = Control_Monad_Trans_Class.lift(monadTransContT)(dictMonadState.Monad0());
    var $49 = Control_Monad_State_Class.state(dictMonadState);
    return function ($50) {
      return $48($49($50));
    };
  }());
};

module.exports = {
  ContT: ContT,
  runContT: runContT,
  mapContT: mapContT,
  withContT: withContT,
  newtypeContT: newtypeContT,
  monadContContT: monadContContT,
  functorContT: functorContT,
  applyContT: applyContT,
  applicativeContT: applicativeContT,
  bindContT: bindContT,
  monadContT: monadContT,
  monadTransContT: monadTransContT,
  monadEffectContT: monadEffectContT,
  monadAskContT: monadAskContT,
  monadReaderContT: monadReaderContT,
  monadStateContT: monadStateContT
};
},{"../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Monad/index.js":"../output/Control.Monad/index.js","../Control.Monad.Cont.Class/index.js":"../output/Control.Monad.Cont.Class/index.js","../Control.Monad.Reader.Class/index.js":"../output/Control.Monad.Reader.Class/index.js","../Control.Monad.State.Class/index.js":"../output/Control.Monad.State.Class/index.js","../Control.Monad.Trans.Class/index.js":"../output/Control.Monad.Trans.Class/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Effect.Class/index.js":"../output/Effect.Class/index.js"}],"../output/Control.Monad.Writer.Class/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var MonadTell = function MonadTell(Monad0, tell) {
  this.Monad0 = Monad0;
  this.tell = tell;
};

var MonadWriter = function MonadWriter(MonadTell0, listen, pass) {
  this.MonadTell0 = MonadTell0;
  this.listen = listen;
  this.pass = pass;
};

var tell = function tell(dict) {
  return dict.tell;
};

var pass = function pass(dict) {
  return dict.pass;
};

var listen = function listen(dict) {
  return dict.listen;
};

var listens = function listens(dictMonadWriter) {
  return function (f) {
    return function (m) {
      return Control_Bind.bind(dictMonadWriter.MonadTell0().Monad0().Bind1())(listen(dictMonadWriter)(m))(function (v) {
        return Control_Applicative.pure(dictMonadWriter.MonadTell0().Monad0().Applicative0())(new Data_Tuple.Tuple(v.value0, f(v.value1)));
      });
    };
  };
};

var censor = function censor(dictMonadWriter) {
  return function (f) {
    return function (m) {
      return pass(dictMonadWriter)(Control_Bind.bind(dictMonadWriter.MonadTell0().Monad0().Bind1())(m)(function (a) {
        return Control_Applicative.pure(dictMonadWriter.MonadTell0().Monad0().Applicative0())(new Data_Tuple.Tuple(a, f));
      }));
    };
  };
};

module.exports = {
  listen: listen,
  pass: pass,
  tell: tell,
  MonadTell: MonadTell,
  MonadWriter: MonadWriter,
  listens: listens,
  censor: censor
};
},{"../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Data.Tuple/index.js":"../output/Data.Tuple/index.js"}],"../output/Control.MonadPlus/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_MonadZero = require("../Control.MonadZero/index.js");

var MonadPlus = function MonadPlus(MonadZero0) {
  this.MonadZero0 = MonadZero0;
};

var monadPlusArray = new MonadPlus(function () {
  return Control_MonadZero.monadZeroArray;
});
module.exports = {
  MonadPlus: MonadPlus,
  monadPlusArray: monadPlusArray
};
},{"../Control.MonadZero/index.js":"../output/Control.MonadZero/index.js"}],"../output/Control.Monad.Except.Trans/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var ExceptT = function ExceptT(x) {
  return x;
};

var withExceptT = function withExceptT(dictFunctor) {
  return function (f) {
    return function (v) {
      var mapLeft = function mapLeft(v1) {
        return function (v2) {
          if (v2 instanceof Data_Either.Right) {
            return new Data_Either.Right(v2.value0);
          }

          ;

          if (v2 instanceof Data_Either.Left) {
            return new Data_Either.Left(v1(v2.value0));
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 42, column 3 - line 42, column 32): " + [v1.constructor.name, v2.constructor.name]);
        };
      };

      return ExceptT(Data_Functor.map(dictFunctor)(mapLeft(f))(v));
    };
  };
};

var runExceptT = function runExceptT(v) {
  return v;
};

var newtypeExceptT = new Data_Newtype.Newtype(function (n) {
  return n;
}, ExceptT);
var monadTransExceptT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
  return function (m) {
    return Control_Bind.bind(dictMonad.Bind1())(m)(function (a) {
      return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(a));
    });
  };
});

var mapExceptT = function mapExceptT(f) {
  return function (v) {
    return f(v);
  };
};

var functorExceptT = function functorExceptT(dictFunctor) {
  return new Data_Functor.Functor(function (f) {
    return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
  });
};

var except = function except(dictApplicative) {
  var $88 = Control_Applicative.pure(dictApplicative);
  return function ($89) {
    return ExceptT($88($89));
  };
};

var monadExceptT = function monadExceptT(dictMonad) {
  return new Control_Monad.Monad(function () {
    return applicativeExceptT(dictMonad);
  }, function () {
    return bindExceptT(dictMonad);
  });
};

var bindExceptT = function bindExceptT(dictMonad) {
  return new Control_Bind.Bind(function () {
    return applyExceptT(dictMonad);
  }, function (v) {
    return function (k) {
      return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function () {
        var $90 = Control_Applicative.pure(dictMonad.Applicative0());
        return function ($91) {
          return $90(Data_Either.Left.create($91));
        };
      }())(function (a) {
        var v1 = k(a);
        return v1;
      }));
    };
  });
};

var applyExceptT = function applyExceptT(dictMonad) {
  return new Control_Apply.Apply(function () {
    return functorExceptT(dictMonad.Bind1().Apply0().Functor0());
  }, Control_Monad.ap(monadExceptT(dictMonad)));
};

var applicativeExceptT = function applicativeExceptT(dictMonad) {
  return new Control_Applicative.Applicative(function () {
    return applyExceptT(dictMonad);
  }, function () {
    var $92 = Control_Applicative.pure(dictMonad.Applicative0());
    return function ($93) {
      return ExceptT($92(Data_Either.Right.create($93)));
    };
  }());
};

var monadAskExceptT = function monadAskExceptT(dictMonadAsk) {
  return new Control_Monad_Reader_Class.MonadAsk(function () {
    return monadExceptT(dictMonadAsk.Monad0());
  }, Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
};

var monadReaderExceptT = function monadReaderExceptT(dictMonadReader) {
  return new Control_Monad_Reader_Class.MonadReader(function () {
    return monadAskExceptT(dictMonadReader.MonadAsk0());
  }, function (f) {
    return mapExceptT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
  });
};

var monadContExceptT = function monadContExceptT(dictMonadCont) {
  return new Control_Monad_Cont_Class.MonadCont(function () {
    return monadExceptT(dictMonadCont.Monad0());
  }, function (f) {
    return ExceptT(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
      var v = f(function (a) {
        return ExceptT(c(new Data_Either.Right(a)));
      });
      return v;
    }));
  });
};

var monadEffectExceptT = function monadEffectExceptT(dictMonadEffect) {
  return new Effect_Class.MonadEffect(function () {
    return monadExceptT(dictMonadEffect.Monad0());
  }, function () {
    var $94 = Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadEffect.Monad0());
    var $95 = Effect_Class.liftEffect(dictMonadEffect);
    return function ($96) {
      return $94($95($96));
    };
  }());
};

var monadRecExceptT = function monadRecExceptT(dictMonadRec) {
  return new Control_Monad_Rec_Class.MonadRec(function () {
    return monadExceptT(dictMonadRec.Monad0());
  }, function (f) {
    var $97 = Control_Monad_Rec_Class.tailRecM(dictMonadRec)(function (a) {
      var v = f(a);
      return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(v)(function (m$prime) {
        return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(function () {
          if (m$prime instanceof Data_Either.Left) {
            return new Control_Monad_Rec_Class.Done(new Data_Either.Left(m$prime.value0));
          }

          ;

          if (m$prime instanceof Data_Either.Right && m$prime.value0 instanceof Control_Monad_Rec_Class.Loop) {
            return new Control_Monad_Rec_Class.Loop(m$prime.value0.value0);
          }

          ;

          if (m$prime instanceof Data_Either.Right && m$prime.value0 instanceof Control_Monad_Rec_Class.Done) {
            return new Control_Monad_Rec_Class.Done(new Data_Either.Right(m$prime.value0.value0));
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 74, column 14 - line 77, column 43): " + [m$prime.constructor.name]);
        }());
      });
    });
    return function ($98) {
      return ExceptT($97($98));
    };
  });
};

var monadStateExceptT = function monadStateExceptT(dictMonadState) {
  return new Control_Monad_State_Class.MonadState(function () {
    return monadExceptT(dictMonadState.Monad0());
  }, function (f) {
    return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f));
  });
};

var monadTellExceptT = function monadTellExceptT(dictMonadTell) {
  return new Control_Monad_Writer_Class.MonadTell(function () {
    return monadExceptT(dictMonadTell.Monad0());
  }, function () {
    var $99 = Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadTell.Monad0());
    var $100 = Control_Monad_Writer_Class.tell(dictMonadTell);
    return function ($101) {
      return $99($100($101));
    };
  }());
};

var monadWriterExceptT = function monadWriterExceptT(dictMonadWriter) {
  return new Control_Monad_Writer_Class.MonadWriter(function () {
    return monadTellExceptT(dictMonadWriter.MonadTell0());
  }, mapExceptT(function (m) {
    return Control_Bind.bind(dictMonadWriter.MonadTell0().Monad0().Bind1())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m))(function (v) {
      return Control_Applicative.pure(dictMonadWriter.MonadTell0().Monad0().Applicative0())(Data_Functor.map(Data_Either.functorEither)(function (r) {
        return new Data_Tuple.Tuple(r, v.value1);
      })(v.value0));
    });
  }), mapExceptT(function (m) {
    return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind(dictMonadWriter.MonadTell0().Monad0().Bind1())(m)(function (a) {
      return Control_Applicative.pure(dictMonadWriter.MonadTell0().Monad0().Applicative0())(function () {
        if (a instanceof Data_Either.Left) {
          return new Data_Tuple.Tuple(new Data_Either.Left(a.value0), Control_Category.identity(Control_Category.categoryFn));
        }

        ;

        if (a instanceof Data_Either.Right) {
          return new Data_Tuple.Tuple(new Data_Either.Right(a.value0.value0), a.value0.value1);
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 136, column 10 - line 138, column 45): " + [a.constructor.name]);
      }());
    }));
  }));
};

var monadThrowExceptT = function monadThrowExceptT(dictMonad) {
  return new Control_Monad_Error_Class.MonadThrow(function () {
    return monadExceptT(dictMonad);
  }, function () {
    var $102 = Control_Applicative.pure(dictMonad.Applicative0());
    return function ($103) {
      return ExceptT($102(Data_Either.Left.create($103)));
    };
  }());
};

var monadErrorExceptT = function monadErrorExceptT(dictMonad) {
  return new Control_Monad_Error_Class.MonadError(function () {
    return monadThrowExceptT(dictMonad);
  }, function (v) {
    return function (k) {
      return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function (a) {
        var v1 = k(a);
        return v1;
      })(function () {
        var $104 = Control_Applicative.pure(dictMonad.Applicative0());
        return function ($105) {
          return $104(Data_Either.Right.create($105));
        };
      }()));
    };
  });
};

var altExceptT = function altExceptT(dictSemigroup) {
  return function (dictMonad) {
    return new Control_Alt.Alt(function () {
      return functorExceptT(dictMonad.Bind1().Apply0().Functor0());
    }, function (v) {
      return function (v1) {
        return Control_Bind.bind(dictMonad.Bind1())(v)(function (rm) {
          if (rm instanceof Data_Either.Right) {
            return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(rm.value0));
          }

          ;

          if (rm instanceof Data_Either.Left) {
            return Control_Bind.bind(dictMonad.Bind1())(v1)(function (rn) {
              if (rn instanceof Data_Either.Right) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(rn.value0));
              }

              ;

              if (rn instanceof Data_Either.Left) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(Data_Semigroup.append(dictSemigroup)(rm.value0)(rn.value0)));
              }

              ;
              throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 86, column 9 - line 88, column 49): " + [rn.constructor.name]);
            });
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 82, column 5 - line 88, column 49): " + [rm.constructor.name]);
        });
      };
    });
  };
};

var plusExceptT = function plusExceptT(dictMonoid) {
  return function (dictMonad) {
    return new Control_Plus.Plus(function () {
      return altExceptT(dictMonoid.Semigroup0())(dictMonad);
    }, Control_Monad_Error_Class.throwError(monadThrowExceptT(dictMonad))(Data_Monoid.mempty(dictMonoid)));
  };
};

var alternativeExceptT = function alternativeExceptT(dictMonoid) {
  return function (dictMonad) {
    return new Control_Alternative.Alternative(function () {
      return applicativeExceptT(dictMonad);
    }, function () {
      return plusExceptT(dictMonoid)(dictMonad);
    });
  };
};

var monadZeroExceptT = function monadZeroExceptT(dictMonoid) {
  return function (dictMonad) {
    return new Control_MonadZero.MonadZero(function () {
      return alternativeExceptT(dictMonoid)(dictMonad);
    }, function () {
      return monadExceptT(dictMonad);
    });
  };
};

var monadPlusExceptT = function monadPlusExceptT(dictMonoid) {
  return function (dictMonad) {
    return new Control_MonadPlus.MonadPlus(function () {
      return monadZeroExceptT(dictMonoid)(dictMonad);
    });
  };
};

module.exports = {
  ExceptT: ExceptT,
  runExceptT: runExceptT,
  withExceptT: withExceptT,
  mapExceptT: mapExceptT,
  except: except,
  newtypeExceptT: newtypeExceptT,
  functorExceptT: functorExceptT,
  applyExceptT: applyExceptT,
  applicativeExceptT: applicativeExceptT,
  bindExceptT: bindExceptT,
  monadExceptT: monadExceptT,
  monadRecExceptT: monadRecExceptT,
  altExceptT: altExceptT,
  plusExceptT: plusExceptT,
  alternativeExceptT: alternativeExceptT,
  monadPlusExceptT: monadPlusExceptT,
  monadZeroExceptT: monadZeroExceptT,
  monadTransExceptT: monadTransExceptT,
  monadEffectExceptT: monadEffectExceptT,
  monadContExceptT: monadContExceptT,
  monadThrowExceptT: monadThrowExceptT,
  monadErrorExceptT: monadErrorExceptT,
  monadAskExceptT: monadAskExceptT,
  monadReaderExceptT: monadReaderExceptT,
  monadStateExceptT: monadStateExceptT,
  monadTellExceptT: monadTellExceptT,
  monadWriterExceptT: monadWriterExceptT
};
},{"../Control.Alt/index.js":"../output/Control.Alt/index.js","../Control.Alternative/index.js":"../output/Control.Alternative/index.js","../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Category/index.js":"../output/Control.Category/index.js","../Control.Monad/index.js":"../output/Control.Monad/index.js","../Control.Monad.Cont.Class/index.js":"../output/Control.Monad.Cont.Class/index.js","../Control.Monad.Error.Class/index.js":"../output/Control.Monad.Error.Class/index.js","../Control.Monad.Reader.Class/index.js":"../output/Control.Monad.Reader.Class/index.js","../Control.Monad.Rec.Class/index.js":"../output/Control.Monad.Rec.Class/index.js","../Control.Monad.State.Class/index.js":"../output/Control.Monad.State.Class/index.js","../Control.Monad.Trans.Class/index.js":"../output/Control.Monad.Trans.Class/index.js","../Control.Monad.Writer.Class/index.js":"../output/Control.Monad.Writer.Class/index.js","../Control.MonadPlus/index.js":"../output/Control.MonadPlus/index.js","../Control.MonadZero/index.js":"../output/Control.MonadZero/index.js","../Control.Plus/index.js":"../output/Control.Plus/index.js","../Data.Either/index.js":"../output/Data.Either/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Tuple/index.js":"../output/Data.Tuple/index.js","../Effect.Class/index.js":"../output/Effect.Class/index.js"}],"../output/Control.Monad.Maybe.Trans/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var MaybeT = function MaybeT(x) {
  return x;
};

var runMaybeT = function runMaybeT(v) {
  return v;
};

var newtypeMaybeT = new Data_Newtype.Newtype(function (n) {
  return n;
}, MaybeT);
var monadTransMaybeT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
  var $71 = Control_Monad.liftM1(dictMonad)(Data_Maybe.Just.create);
  return function ($72) {
    return MaybeT($71($72));
  };
});

var mapMaybeT = function mapMaybeT(f) {
  return function (v) {
    return f(v);
  };
};

var functorMaybeT = function functorMaybeT(dictFunctor) {
  return new Data_Functor.Functor(function (f) {
    return function (v) {
      return Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v);
    };
  });
};

var monadMaybeT = function monadMaybeT(dictMonad) {
  return new Control_Monad.Monad(function () {
    return applicativeMaybeT(dictMonad);
  }, function () {
    return bindMaybeT(dictMonad);
  });
};

var bindMaybeT = function bindMaybeT(dictMonad) {
  return new Control_Bind.Bind(function () {
    return applyMaybeT(dictMonad);
  }, function (v) {
    return function (f) {
      return Control_Bind.bind(dictMonad.Bind1())(v)(function (v1) {
        if (v1 instanceof Data_Maybe.Nothing) {
          return Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Nothing.value);
        }

        ;

        if (v1 instanceof Data_Maybe.Just) {
          var v2 = f(v1.value0);
          return v2;
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.Maybe.Trans (line 54, column 11 - line 56, column 42): " + [v1.constructor.name]);
      });
    };
  });
};

var applyMaybeT = function applyMaybeT(dictMonad) {
  return new Control_Apply.Apply(function () {
    return functorMaybeT(dictMonad.Bind1().Apply0().Functor0());
  }, Control_Monad.ap(monadMaybeT(dictMonad)));
};

var applicativeMaybeT = function applicativeMaybeT(dictMonad) {
  return new Control_Applicative.Applicative(function () {
    return applyMaybeT(dictMonad);
  }, function () {
    var $73 = Control_Applicative.pure(dictMonad.Applicative0());
    return function ($74) {
      return MaybeT($73(Data_Maybe.Just.create($74)));
    };
  }());
};

var monadAskMaybeT = function monadAskMaybeT(dictMonadAsk) {
  return new Control_Monad_Reader_Class.MonadAsk(function () {
    return monadMaybeT(dictMonadAsk.Monad0());
  }, Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
};

var monadReaderMaybeT = function monadReaderMaybeT(dictMonadReader) {
  return new Control_Monad_Reader_Class.MonadReader(function () {
    return monadAskMaybeT(dictMonadReader.MonadAsk0());
  }, function (f) {
    return mapMaybeT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
  });
};

var monadContMaybeT = function monadContMaybeT(dictMonadCont) {
  return new Control_Monad_Cont_Class.MonadCont(function () {
    return monadMaybeT(dictMonadCont.Monad0());
  }, function (f) {
    return MaybeT(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
      var v = f(function (a) {
        return MaybeT(c(new Data_Maybe.Just(a)));
      });
      return v;
    }));
  });
};

var monadEffectMaybe = function monadEffectMaybe(dictMonadEffect) {
  return new Effect_Class.MonadEffect(function () {
    return monadMaybeT(dictMonadEffect.Monad0());
  }, function () {
    var $75 = Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadEffect.Monad0());
    var $76 = Effect_Class.liftEffect(dictMonadEffect);
    return function ($77) {
      return $75($76($77));
    };
  }());
};

var monadRecMaybeT = function monadRecMaybeT(dictMonadRec) {
  return new Control_Monad_Rec_Class.MonadRec(function () {
    return monadMaybeT(dictMonadRec.Monad0());
  }, function (f) {
    var $78 = Control_Monad_Rec_Class.tailRecM(dictMonadRec)(function (a) {
      var v = f(a);
      return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(v)(function (m$prime) {
        return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(function () {
          if (m$prime instanceof Data_Maybe.Nothing) {
            return new Control_Monad_Rec_Class.Done(Data_Maybe.Nothing.value);
          }

          ;

          if (m$prime instanceof Data_Maybe.Just && m$prime.value0 instanceof Control_Monad_Rec_Class.Loop) {
            return new Control_Monad_Rec_Class.Loop(m$prime.value0.value0);
          }

          ;

          if (m$prime instanceof Data_Maybe.Just && m$prime.value0 instanceof Control_Monad_Rec_Class.Done) {
            return new Control_Monad_Rec_Class.Done(new Data_Maybe.Just(m$prime.value0.value0));
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.Maybe.Trans (line 84, column 16 - line 87, column 43): " + [m$prime.constructor.name]);
        }());
      });
    });
    return function ($79) {
      return MaybeT($78($79));
    };
  });
};

var monadStateMaybeT = function monadStateMaybeT(dictMonadState) {
  return new Control_Monad_State_Class.MonadState(function () {
    return monadMaybeT(dictMonadState.Monad0());
  }, function (f) {
    return Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f));
  });
};

var monadTellMaybeT = function monadTellMaybeT(dictMonadTell) {
  return new Control_Monad_Writer_Class.MonadTell(function () {
    return monadMaybeT(dictMonadTell.Monad0());
  }, function () {
    var $80 = Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadTell.Monad0());
    var $81 = Control_Monad_Writer_Class.tell(dictMonadTell);
    return function ($82) {
      return $80($81($82));
    };
  }());
};

var monadWriterMaybeT = function monadWriterMaybeT(dictMonadWriter) {
  return new Control_Monad_Writer_Class.MonadWriter(function () {
    return monadTellMaybeT(dictMonadWriter.MonadTell0());
  }, mapMaybeT(function (m) {
    return Control_Bind.bind(dictMonadWriter.MonadTell0().Monad0().Bind1())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m))(function (v) {
      return Control_Applicative.pure(dictMonadWriter.MonadTell0().Monad0().Applicative0())(Data_Functor.map(Data_Maybe.functorMaybe)(function (r) {
        return new Data_Tuple.Tuple(r, v.value1);
      })(v.value0));
    });
  }), mapMaybeT(function (m) {
    return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind(dictMonadWriter.MonadTell0().Monad0().Bind1())(m)(function (a) {
      return Control_Applicative.pure(dictMonadWriter.MonadTell0().Monad0().Applicative0())(function () {
        if (a instanceof Data_Maybe.Nothing) {
          return new Data_Tuple.Tuple(Data_Maybe.Nothing.value, Control_Category.identity(Control_Category.categoryFn));
        }

        ;

        if (a instanceof Data_Maybe.Just) {
          return new Data_Tuple.Tuple(new Data_Maybe.Just(a.value0.value0), a.value0.value1);
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.Maybe.Trans (line 121, column 10 - line 123, column 43): " + [a.constructor.name]);
      }());
    }));
  }));
};

var monadThrowMaybeT = function monadThrowMaybeT(dictMonadThrow) {
  return new Control_Monad_Error_Class.MonadThrow(function () {
    return monadMaybeT(dictMonadThrow.Monad0());
  }, function (e) {
    return Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)(e));
  });
};

var monadErrorMaybeT = function monadErrorMaybeT(dictMonadError) {
  return new Control_Monad_Error_Class.MonadError(function () {
    return monadThrowMaybeT(dictMonadError.MonadThrow0());
  }, function (v) {
    return function (h) {
      return MaybeT(Control_Monad_Error_Class.catchError(dictMonadError)(v)(function (a) {
        var v1 = h(a);
        return v1;
      }));
    };
  });
};

var altMaybeT = function altMaybeT(dictMonad) {
  return new Control_Alt.Alt(function () {
    return functorMaybeT(dictMonad.Bind1().Apply0().Functor0());
  }, function (v) {
    return function (v1) {
      return Control_Bind.bind(dictMonad.Bind1())(v)(function (m) {
        if (m instanceof Data_Maybe.Nothing) {
          return v1;
        }

        ;
        return Control_Applicative.pure(dictMonad.Applicative0())(m);
      });
    };
  });
};

var plusMaybeT = function plusMaybeT(dictMonad) {
  return new Control_Plus.Plus(function () {
    return altMaybeT(dictMonad);
  }, Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Nothing.value));
};

var alternativeMaybeT = function alternativeMaybeT(dictMonad) {
  return new Control_Alternative.Alternative(function () {
    return applicativeMaybeT(dictMonad);
  }, function () {
    return plusMaybeT(dictMonad);
  });
};

var monadZeroMaybeT = function monadZeroMaybeT(dictMonad) {
  return new Control_MonadZero.MonadZero(function () {
    return alternativeMaybeT(dictMonad);
  }, function () {
    return monadMaybeT(dictMonad);
  });
};

var monadPlusMaybeT = function monadPlusMaybeT(dictMonad) {
  return new Control_MonadPlus.MonadPlus(function () {
    return monadZeroMaybeT(dictMonad);
  });
};

module.exports = {
  MaybeT: MaybeT,
  runMaybeT: runMaybeT,
  mapMaybeT: mapMaybeT,
  newtypeMaybeT: newtypeMaybeT,
  functorMaybeT: functorMaybeT,
  applyMaybeT: applyMaybeT,
  applicativeMaybeT: applicativeMaybeT,
  bindMaybeT: bindMaybeT,
  monadMaybeT: monadMaybeT,
  monadTransMaybeT: monadTransMaybeT,
  altMaybeT: altMaybeT,
  plusMaybeT: plusMaybeT,
  alternativeMaybeT: alternativeMaybeT,
  monadPlusMaybeT: monadPlusMaybeT,
  monadZeroMaybeT: monadZeroMaybeT,
  monadRecMaybeT: monadRecMaybeT,
  monadEffectMaybe: monadEffectMaybe,
  monadContMaybeT: monadContMaybeT,
  monadThrowMaybeT: monadThrowMaybeT,
  monadErrorMaybeT: monadErrorMaybeT,
  monadAskMaybeT: monadAskMaybeT,
  monadReaderMaybeT: monadReaderMaybeT,
  monadStateMaybeT: monadStateMaybeT,
  monadTellMaybeT: monadTellMaybeT,
  monadWriterMaybeT: monadWriterMaybeT
};
},{"../Control.Alt/index.js":"../output/Control.Alt/index.js","../Control.Alternative/index.js":"../output/Control.Alternative/index.js","../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Category/index.js":"../output/Control.Category/index.js","../Control.Monad/index.js":"../output/Control.Monad/index.js","../Control.Monad.Cont.Class/index.js":"../output/Control.Monad.Cont.Class/index.js","../Control.Monad.Error.Class/index.js":"../output/Control.Monad.Error.Class/index.js","../Control.Monad.Reader.Class/index.js":"../output/Control.Monad.Reader.Class/index.js","../Control.Monad.Rec.Class/index.js":"../output/Control.Monad.Rec.Class/index.js","../Control.Monad.State.Class/index.js":"../output/Control.Monad.State.Class/index.js","../Control.Monad.Trans.Class/index.js":"../output/Control.Monad.Trans.Class/index.js","../Control.Monad.Writer.Class/index.js":"../output/Control.Monad.Writer.Class/index.js","../Control.MonadPlus/index.js":"../output/Control.MonadPlus/index.js","../Control.MonadZero/index.js":"../output/Control.MonadZero/index.js","../Control.Plus/index.js":"../output/Control.Plus/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Tuple/index.js":"../output/Data.Tuple/index.js","../Effect.Class/index.js":"../output/Effect.Class/index.js"}],"../output/Control.Monad.Reader.Trans/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Distributive = require("../Data.Distributive/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var ReaderT = function ReaderT(x) {
  return x;
};

var withReaderT = function withReaderT(f) {
  return function (v) {
    return function ($66) {
      return v(f($66));
    };
  };
};

var runReaderT = function runReaderT(v) {
  return v;
};

var newtypeReaderT = new Data_Newtype.Newtype(function (n) {
  return n;
}, ReaderT);
var monadTransReaderT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
  return function ($67) {
    return ReaderT(Data_Function["const"]($67));
  };
});

var mapReaderT = function mapReaderT(f) {
  return function (v) {
    return function ($68) {
      return f(v($68));
    };
  };
};

var functorReaderT = function functorReaderT(dictFunctor) {
  return new Data_Functor.Functor(function () {
    var $69 = Data_Functor.map(dictFunctor);
    return function ($70) {
      return mapReaderT($69($70));
    };
  }());
};

var distributiveReaderT = function distributiveReaderT(dictDistributive) {
  return new Data_Distributive.Distributive(function () {
    return functorReaderT(dictDistributive.Functor0());
  }, function (dictFunctor) {
    return function (f) {
      var $71 = Data_Distributive.distribute(distributiveReaderT(dictDistributive))(dictFunctor);
      var $72 = Data_Functor.map(dictFunctor)(f);
      return function ($73) {
        return $71($72($73));
      };
    };
  }, function (dictFunctor) {
    return function (a) {
      return function (e) {
        return Data_Distributive.collect(dictDistributive)(dictFunctor)(function (r) {
          return r(e);
        })(a);
      };
    };
  });
};

var applyReaderT = function applyReaderT(dictApply) {
  return new Control_Apply.Apply(function () {
    return functorReaderT(dictApply.Functor0());
  }, function (v) {
    return function (v1) {
      return function (r) {
        return Control_Apply.apply(dictApply)(v(r))(v1(r));
      };
    };
  });
};

var bindReaderT = function bindReaderT(dictBind) {
  return new Control_Bind.Bind(function () {
    return applyReaderT(dictBind.Apply0());
  }, function (v) {
    return function (k) {
      return function (r) {
        return Control_Bind.bind(dictBind)(v(r))(function (a) {
          var v1 = k(a);
          return v1(r);
        });
      };
    };
  });
};

var semigroupReaderT = function semigroupReaderT(dictApply) {
  return function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyReaderT(dictApply))(Data_Semigroup.append(dictSemigroup)));
  };
};

var applicativeReaderT = function applicativeReaderT(dictApplicative) {
  return new Control_Applicative.Applicative(function () {
    return applyReaderT(dictApplicative.Apply0());
  }, function () {
    var $74 = Control_Applicative.pure(dictApplicative);
    return function ($75) {
      return ReaderT(Data_Function["const"]($74($75)));
    };
  }());
};

var monadReaderT = function monadReaderT(dictMonad) {
  return new Control_Monad.Monad(function () {
    return applicativeReaderT(dictMonad.Applicative0());
  }, function () {
    return bindReaderT(dictMonad.Bind1());
  });
};

var monadAskReaderT = function monadAskReaderT(dictMonad) {
  return new Control_Monad_Reader_Class.MonadAsk(function () {
    return monadReaderT(dictMonad);
  }, Control_Applicative.pure(dictMonad.Applicative0()));
};

var monadReaderReaderT = function monadReaderReaderT(dictMonad) {
  return new Control_Monad_Reader_Class.MonadReader(function () {
    return monadAskReaderT(dictMonad);
  }, withReaderT);
};

var monadContReaderT = function monadContReaderT(dictMonadCont) {
  return new Control_Monad_Cont_Class.MonadCont(function () {
    return monadReaderT(dictMonadCont.Monad0());
  }, function (f) {
    return function (r) {
      return Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
        var v = f(function ($76) {
          return ReaderT(Data_Function["const"](c($76)));
        });
        return v(r);
      });
    };
  });
};

var monadEffectReader = function monadEffectReader(dictMonadEffect) {
  return new Effect_Class.MonadEffect(function () {
    return monadReaderT(dictMonadEffect.Monad0());
  }, function () {
    var $77 = Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadEffect.Monad0());
    var $78 = Effect_Class.liftEffect(dictMonadEffect);
    return function ($79) {
      return $77($78($79));
    };
  }());
};

var monadRecReaderT = function monadRecReaderT(dictMonadRec) {
  return new Control_Monad_Rec_Class.MonadRec(function () {
    return monadReaderT(dictMonadRec.Monad0());
  }, function (k) {
    return function (a) {
      var k$prime = function k$prime(r) {
        return function (a$prime) {
          var v = k(a$prime);
          return Control_Bind.bindFlipped(dictMonadRec.Monad0().Bind1())(Control_Applicative.pure(dictMonadRec.Monad0().Applicative0()))(v(r));
        };
      };

      return function (r) {
        return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(k$prime(r))(a);
      };
    };
  });
};

var monadStateReaderT = function monadStateReaderT(dictMonadState) {
  return new Control_Monad_State_Class.MonadState(function () {
    return monadReaderT(dictMonadState.Monad0());
  }, function () {
    var $80 = Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadState.Monad0());
    var $81 = Control_Monad_State_Class.state(dictMonadState);
    return function ($82) {
      return $80($81($82));
    };
  }());
};

var monadTellReaderT = function monadTellReaderT(dictMonadTell) {
  return new Control_Monad_Writer_Class.MonadTell(function () {
    return monadReaderT(dictMonadTell.Monad0());
  }, function () {
    var $83 = Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadTell.Monad0());
    var $84 = Control_Monad_Writer_Class.tell(dictMonadTell);
    return function ($85) {
      return $83($84($85));
    };
  }());
};

var monadWriterReaderT = function monadWriterReaderT(dictMonadWriter) {
  return new Control_Monad_Writer_Class.MonadWriter(function () {
    return monadTellReaderT(dictMonadWriter.MonadTell0());
  }, mapReaderT(Control_Monad_Writer_Class.listen(dictMonadWriter)), mapReaderT(Control_Monad_Writer_Class.pass(dictMonadWriter)));
};

var monadThrowReaderT = function monadThrowReaderT(dictMonadThrow) {
  return new Control_Monad_Error_Class.MonadThrow(function () {
    return monadReaderT(dictMonadThrow.Monad0());
  }, function () {
    var $86 = Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadThrow.Monad0());
    var $87 = Control_Monad_Error_Class.throwError(dictMonadThrow);
    return function ($88) {
      return $86($87($88));
    };
  }());
};

var monadErrorReaderT = function monadErrorReaderT(dictMonadError) {
  return new Control_Monad_Error_Class.MonadError(function () {
    return monadThrowReaderT(dictMonadError.MonadThrow0());
  }, function (v) {
    return function (h) {
      return function (r) {
        return Control_Monad_Error_Class.catchError(dictMonadError)(v(r))(function (e) {
          var v1 = h(e);
          return v1(r);
        });
      };
    };
  });
};

var monoidReaderT = function monoidReaderT(dictApplicative) {
  return function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
      return semigroupReaderT(dictApplicative.Apply0())(dictMonoid.Semigroup0());
    }, Control_Applicative.pure(applicativeReaderT(dictApplicative))(Data_Monoid.mempty(dictMonoid)));
  };
};

var altReaderT = function altReaderT(dictAlt) {
  return new Control_Alt.Alt(function () {
    return functorReaderT(dictAlt.Functor0());
  }, function (v) {
    return function (v1) {
      return function (r) {
        return Control_Alt.alt(dictAlt)(v(r))(v1(r));
      };
    };
  });
};

var plusReaderT = function plusReaderT(dictPlus) {
  return new Control_Plus.Plus(function () {
    return altReaderT(dictPlus.Alt0());
  }, Data_Function["const"](Control_Plus.empty(dictPlus)));
};

var alternativeReaderT = function alternativeReaderT(dictAlternative) {
  return new Control_Alternative.Alternative(function () {
    return applicativeReaderT(dictAlternative.Applicative0());
  }, function () {
    return plusReaderT(dictAlternative.Plus1());
  });
};

var monadZeroReaderT = function monadZeroReaderT(dictMonadZero) {
  return new Control_MonadZero.MonadZero(function () {
    return alternativeReaderT(dictMonadZero.Alternative1());
  }, function () {
    return monadReaderT(dictMonadZero.Monad0());
  });
};

var monadPlusReaderT = function monadPlusReaderT(dictMonadPlus) {
  return new Control_MonadPlus.MonadPlus(function () {
    return monadZeroReaderT(dictMonadPlus.MonadZero0());
  });
};

module.exports = {
  ReaderT: ReaderT,
  runReaderT: runReaderT,
  withReaderT: withReaderT,
  mapReaderT: mapReaderT,
  newtypeReaderT: newtypeReaderT,
  functorReaderT: functorReaderT,
  applyReaderT: applyReaderT,
  applicativeReaderT: applicativeReaderT,
  altReaderT: altReaderT,
  plusReaderT: plusReaderT,
  alternativeReaderT: alternativeReaderT,
  bindReaderT: bindReaderT,
  monadReaderT: monadReaderT,
  monadZeroReaderT: monadZeroReaderT,
  semigroupReaderT: semigroupReaderT,
  monoidReaderT: monoidReaderT,
  monadPlusReaderT: monadPlusReaderT,
  monadTransReaderT: monadTransReaderT,
  monadEffectReader: monadEffectReader,
  monadContReaderT: monadContReaderT,
  monadThrowReaderT: monadThrowReaderT,
  monadErrorReaderT: monadErrorReaderT,
  monadAskReaderT: monadAskReaderT,
  monadReaderReaderT: monadReaderReaderT,
  monadStateReaderT: monadStateReaderT,
  monadTellReaderT: monadTellReaderT,
  monadWriterReaderT: monadWriterReaderT,
  distributiveReaderT: distributiveReaderT,
  monadRecReaderT: monadRecReaderT
};
},{"../Control.Alt/index.js":"../output/Control.Alt/index.js","../Control.Alternative/index.js":"../output/Control.Alternative/index.js","../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Monad/index.js":"../output/Control.Monad/index.js","../Control.Monad.Cont.Class/index.js":"../output/Control.Monad.Cont.Class/index.js","../Control.Monad.Error.Class/index.js":"../output/Control.Monad.Error.Class/index.js","../Control.Monad.Reader.Class/index.js":"../output/Control.Monad.Reader.Class/index.js","../Control.Monad.Rec.Class/index.js":"../output/Control.Monad.Rec.Class/index.js","../Control.Monad.State.Class/index.js":"../output/Control.Monad.State.Class/index.js","../Control.Monad.Trans.Class/index.js":"../output/Control.Monad.Trans.Class/index.js","../Control.Monad.Writer.Class/index.js":"../output/Control.Monad.Writer.Class/index.js","../Control.MonadPlus/index.js":"../output/Control.MonadPlus/index.js","../Control.MonadZero/index.js":"../output/Control.MonadZero/index.js","../Control.Plus/index.js":"../output/Control.Plus/index.js","../Data.Distributive/index.js":"../output/Data.Distributive/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Effect.Class/index.js":"../output/Effect.Class/index.js"}],"../output/Control.Monad.Writer.Trans/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var WriterT = function WriterT(x) {
  return x;
};

var runWriterT = function runWriterT(v) {
  return v;
};

var newtypeWriterT = new Data_Newtype.Newtype(function (n) {
  return n;
}, WriterT);

var monadTransWriterT = function monadTransWriterT(dictMonoid) {
  return new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return function (m) {
      return Control_Bind.bind(dictMonad.Bind1())(m)(function (a) {
        return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid)));
      });
    };
  });
};

var mapWriterT = function mapWriterT(f) {
  return function (v) {
    return f(v);
  };
};

var functorWriterT = function functorWriterT(dictFunctor) {
  return new Data_Functor.Functor(function (f) {
    return mapWriterT(Data_Functor.map(dictFunctor)(function (v) {
      return new Data_Tuple.Tuple(f(v.value0), v.value1);
    }));
  });
};

var execWriterT = function execWriterT(dictFunctor) {
  return function (v) {
    return Data_Functor.map(dictFunctor)(Data_Tuple.snd)(v);
  };
};

var applyWriterT = function applyWriterT(dictSemigroup) {
  return function (dictApply) {
    return new Control_Apply.Apply(function () {
      return functorWriterT(dictApply.Functor0());
    }, function (v) {
      return function (v1) {
        var k = function k(v3) {
          return function (v4) {
            return new Data_Tuple.Tuple(v3.value0(v4.value0), Data_Semigroup.append(dictSemigroup)(v3.value1)(v4.value1));
          };
        };

        return Control_Apply.apply(dictApply)(Data_Functor.map(dictApply.Functor0())(k)(v))(v1);
      };
    });
  };
};

var bindWriterT = function bindWriterT(dictSemigroup) {
  return function (dictBind) {
    return new Control_Bind.Bind(function () {
      return applyWriterT(dictSemigroup)(dictBind.Apply0());
    }, function (v) {
      return function (k) {
        return WriterT(Control_Bind.bind(dictBind)(v)(function (v1) {
          var v2 = k(v1.value0);
          return Data_Functor.map(dictBind.Apply0().Functor0())(function (v3) {
            return new Data_Tuple.Tuple(v3.value0, Data_Semigroup.append(dictSemigroup)(v1.value1)(v3.value1));
          })(v2);
        }));
      };
    });
  };
};

var applicativeWriterT = function applicativeWriterT(dictMonoid) {
  return function (dictApplicative) {
    return new Control_Applicative.Applicative(function () {
      return applyWriterT(dictMonoid.Semigroup0())(dictApplicative.Apply0());
    }, function (a) {
      return WriterT(Control_Applicative.pure(dictApplicative)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
    });
  };
};

var monadWriterT = function monadWriterT(dictMonoid) {
  return function (dictMonad) {
    return new Control_Monad.Monad(function () {
      return applicativeWriterT(dictMonoid)(dictMonad.Applicative0());
    }, function () {
      return bindWriterT(dictMonoid.Semigroup0())(dictMonad.Bind1());
    });
  };
};

var monadAskWriterT = function monadAskWriterT(dictMonoid) {
  return function (dictMonadAsk) {
    return new Control_Monad_Reader_Class.MonadAsk(function () {
      return monadWriterT(dictMonoid)(dictMonadAsk.Monad0());
    }, Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
  };
};

var monadReaderWriterT = function monadReaderWriterT(dictMonoid) {
  return function (dictMonadReader) {
    return new Control_Monad_Reader_Class.MonadReader(function () {
      return monadAskWriterT(dictMonoid)(dictMonadReader.MonadAsk0());
    }, function (f) {
      return mapWriterT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
    });
  };
};

var monadContWriterT = function monadContWriterT(dictMonoid) {
  return function (dictMonadCont) {
    return new Control_Monad_Cont_Class.MonadCont(function () {
      return monadWriterT(dictMonoid)(dictMonadCont.Monad0());
    }, function (f) {
      return WriterT(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
        var v = f(function (a) {
          return WriterT(c(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
        });
        return v;
      }));
    });
  };
};

var monadEffectWriter = function monadEffectWriter(dictMonoid) {
  return function (dictMonadEffect) {
    return new Effect_Class.MonadEffect(function () {
      return monadWriterT(dictMonoid)(dictMonadEffect.Monad0());
    }, function () {
      var $121 = Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadEffect.Monad0());
      var $122 = Effect_Class.liftEffect(dictMonadEffect);
      return function ($123) {
        return $121($122($123));
      };
    }());
  };
};

var monadRecWriterT = function monadRecWriterT(dictMonoid) {
  return function (dictMonadRec) {
    return new Control_Monad_Rec_Class.MonadRec(function () {
      return monadWriterT(dictMonoid)(dictMonadRec.Monad0());
    }, function (f) {
      return function (a) {
        var f$prime = function f$prime(v) {
          var v1 = f(v.value0);
          return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(v1)(function (v2) {
            return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(function () {
              if (v2.value0 instanceof Control_Monad_Rec_Class.Loop) {
                return new Control_Monad_Rec_Class.Loop(new Data_Tuple.Tuple(v2.value0.value0, Data_Semigroup.append(dictMonoid.Semigroup0())(v.value1)(v2.value1)));
              }

              ;

              if (v2.value0 instanceof Control_Monad_Rec_Class.Done) {
                return new Control_Monad_Rec_Class.Done(new Data_Tuple.Tuple(v2.value0.value0, Data_Semigroup.append(dictMonoid.Semigroup0())(v.value1)(v2.value1)));
              }

              ;
              throw new Error("Failed pattern match at Control.Monad.Writer.Trans (line 83, column 16 - line 85, column 47): " + [v2.value0.constructor.name]);
            }());
          });
        };

        return WriterT(Control_Monad_Rec_Class.tailRecM(dictMonadRec)(f$prime)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
      };
    });
  };
};

var monadStateWriterT = function monadStateWriterT(dictMonoid) {
  return function (dictMonadState) {
    return new Control_Monad_State_Class.MonadState(function () {
      return monadWriterT(dictMonoid)(dictMonadState.Monad0());
    }, function (f) {
      return Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f));
    });
  };
};

var monadTellWriterT = function monadTellWriterT(dictMonoid) {
  return function (dictMonad) {
    return new Control_Monad_Writer_Class.MonadTell(function () {
      return monadWriterT(dictMonoid)(dictMonad);
    }, function () {
      var $124 = Control_Applicative.pure(dictMonad.Applicative0());
      var $125 = Data_Tuple.Tuple.create(Data_Unit.unit);
      return function ($126) {
        return WriterT($124($125($126)));
      };
    }());
  };
};

var monadWriterWriterT = function monadWriterWriterT(dictMonoid) {
  return function (dictMonad) {
    return new Control_Monad_Writer_Class.MonadWriter(function () {
      return monadTellWriterT(dictMonoid)(dictMonad);
    }, function (v) {
      return Control_Bind.bind(dictMonad.Bind1())(v)(function (v1) {
        return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v1.value0, v1.value1), v1.value1));
      });
    }, function (v) {
      return Control_Bind.bind(dictMonad.Bind1())(v)(function (v1) {
        return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0.value0, v1.value0.value1(v1.value1)));
      });
    });
  };
};

var monadThrowWriterT = function monadThrowWriterT(dictMonoid) {
  return function (dictMonadThrow) {
    return new Control_Monad_Error_Class.MonadThrow(function () {
      return monadWriterT(dictMonoid)(dictMonadThrow.Monad0());
    }, function (e) {
      return Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)(e));
    });
  };
};

var monadErrorWriterT = function monadErrorWriterT(dictMonoid) {
  return function (dictMonadError) {
    return new Control_Monad_Error_Class.MonadError(function () {
      return monadThrowWriterT(dictMonoid)(dictMonadError.MonadThrow0());
    }, function (v) {
      return function (h) {
        return WriterT(Control_Monad_Error_Class.catchError(dictMonadError)(v)(function (e) {
          var v1 = h(e);
          return v1;
        }));
      };
    });
  };
};

var altWriterT = function altWriterT(dictAlt) {
  return new Control_Alt.Alt(function () {
    return functorWriterT(dictAlt.Functor0());
  }, function (v) {
    return function (v1) {
      return Control_Alt.alt(dictAlt)(v)(v1);
    };
  });
};

var plusWriterT = function plusWriterT(dictPlus) {
  return new Control_Plus.Plus(function () {
    return altWriterT(dictPlus.Alt0());
  }, Control_Plus.empty(dictPlus));
};

var alternativeWriterT = function alternativeWriterT(dictMonoid) {
  return function (dictAlternative) {
    return new Control_Alternative.Alternative(function () {
      return applicativeWriterT(dictMonoid)(dictAlternative.Applicative0());
    }, function () {
      return plusWriterT(dictAlternative.Plus1());
    });
  };
};

var monadZeroWriterT = function monadZeroWriterT(dictMonoid) {
  return function (dictMonadZero) {
    return new Control_MonadZero.MonadZero(function () {
      return alternativeWriterT(dictMonoid)(dictMonadZero.Alternative1());
    }, function () {
      return monadWriterT(dictMonoid)(dictMonadZero.Monad0());
    });
  };
};

var monadPlusWriterT = function monadPlusWriterT(dictMonoid) {
  return function (dictMonadPlus) {
    return new Control_MonadPlus.MonadPlus(function () {
      return monadZeroWriterT(dictMonoid)(dictMonadPlus.MonadZero0());
    });
  };
};

module.exports = {
  WriterT: WriterT,
  runWriterT: runWriterT,
  execWriterT: execWriterT,
  mapWriterT: mapWriterT,
  newtypeWriterT: newtypeWriterT,
  functorWriterT: functorWriterT,
  applyWriterT: applyWriterT,
  applicativeWriterT: applicativeWriterT,
  altWriterT: altWriterT,
  plusWriterT: plusWriterT,
  alternativeWriterT: alternativeWriterT,
  bindWriterT: bindWriterT,
  monadWriterT: monadWriterT,
  monadRecWriterT: monadRecWriterT,
  monadZeroWriterT: monadZeroWriterT,
  monadPlusWriterT: monadPlusWriterT,
  monadTransWriterT: monadTransWriterT,
  monadEffectWriter: monadEffectWriter,
  monadContWriterT: monadContWriterT,
  monadThrowWriterT: monadThrowWriterT,
  monadErrorWriterT: monadErrorWriterT,
  monadAskWriterT: monadAskWriterT,
  monadReaderWriterT: monadReaderWriterT,
  monadStateWriterT: monadStateWriterT,
  monadTellWriterT: monadTellWriterT,
  monadWriterWriterT: monadWriterWriterT
};
},{"../Control.Alt/index.js":"../output/Control.Alt/index.js","../Control.Alternative/index.js":"../output/Control.Alternative/index.js","../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Monad/index.js":"../output/Control.Monad/index.js","../Control.Monad.Cont.Class/index.js":"../output/Control.Monad.Cont.Class/index.js","../Control.Monad.Error.Class/index.js":"../output/Control.Monad.Error.Class/index.js","../Control.Monad.Reader.Class/index.js":"../output/Control.Monad.Reader.Class/index.js","../Control.Monad.Rec.Class/index.js":"../output/Control.Monad.Rec.Class/index.js","../Control.Monad.State.Class/index.js":"../output/Control.Monad.State.Class/index.js","../Control.Monad.Trans.Class/index.js":"../output/Control.Monad.Trans.Class/index.js","../Control.Monad.Writer.Class/index.js":"../output/Control.Monad.Writer.Class/index.js","../Control.MonadPlus/index.js":"../output/Control.MonadPlus/index.js","../Control.MonadZero/index.js":"../output/Control.MonadZero/index.js","../Control.Plus/index.js":"../output/Control.Plus/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Tuple/index.js":"../output/Data.Tuple/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js","../Effect.Class/index.js":"../output/Effect.Class/index.js"}],"../output/Unsafe.Coerce/foreign.js":[function(require,module,exports) {
"use strict"; // module Unsafe.Coerce

exports.unsafeCoerce = function (x) {
  return x;
};
},{}],"../output/Unsafe.Coerce/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

module.exports = {
  unsafeCoerce: $foreign.unsafeCoerce
};
},{"./foreign.js":"../output/Unsafe.Coerce/foreign.js"}],"../output/Data.Functor.App/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var App = function App(x) {
  return x;
};

var traversableWithIndexApp = function traversableWithIndexApp(dictTraversableWithIndex) {
  return dictTraversableWithIndex;
};

var traversableApp = function traversableApp(dictTraversable) {
  return dictTraversable;
};

var showApp = function showApp(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(App " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semigroupApp = function semigroupApp(dictApply) {
  return function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
        return Control_Apply.lift2(dictApply)(Data_Semigroup.append(dictSemigroup))(v)(v1);
      };
    });
  };
};

var plusApp = function plusApp(dictPlus) {
  return dictPlus;
};

var newtypeApp = new Data_Newtype.Newtype(function (n) {
  return n;
}, App);

var monoidApp = function monoidApp(dictApplicative) {
  return function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
      return semigroupApp(dictApplicative.Apply0())(dictMonoid.Semigroup0());
    }, Control_Applicative.pure(dictApplicative)(Data_Monoid.mempty(dictMonoid)));
  };
};

var monadZeroApp = function monadZeroApp(dictMonadZero) {
  return dictMonadZero;
};

var monadPlusApp = function monadPlusApp(dictMonadPlus) {
  return dictMonadPlus;
};

var monadApp = function monadApp(dictMonad) {
  return dictMonad;
};

var lazyApp = function lazyApp(dictLazy) {
  return dictLazy;
};

var hoistLowerApp = Unsafe_Coerce.unsafeCoerce;
var hoistLiftApp = Unsafe_Coerce.unsafeCoerce;

var hoistApp = function hoistApp(f) {
  return function (v) {
    return f(v);
  };
};

var functorWithIndexApp = function functorWithIndexApp(dictFunctorWithIndex) {
  return dictFunctorWithIndex;
};

var functorApp = function functorApp(dictFunctor) {
  return dictFunctor;
};

var foldableWithIndexApp = function foldableWithIndexApp(dictFoldableWithIndex) {
  return dictFoldableWithIndex;
};

var foldableApp = function foldableApp(dictFoldable) {
  return dictFoldable;
};

var extendApp = function extendApp(dictExtend) {
  return dictExtend;
};

var eqApp = function eqApp(dictEq1) {
  return function (dictEq) {
    return new Data_Eq.Eq(function (x) {
      return function (y) {
        return Data_Eq.eq1(dictEq1)(dictEq)(x)(y);
      };
    });
  };
};

var ordApp = function ordApp(dictOrd1) {
  return function (dictOrd) {
    return new Data_Ord.Ord(function () {
      return eqApp(dictOrd1.Eq10())(dictOrd.Eq0());
    }, function (x) {
      return function (y) {
        return Data_Ord.compare1(dictOrd1)(dictOrd)(x)(y);
      };
    });
  };
};

var eq1App = function eq1App(dictEq1) {
  return new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqApp(dictEq1)(dictEq));
  });
};

var ord1App = function ord1App(dictOrd1) {
  return new Data_Ord.Ord1(function () {
    return eq1App(dictOrd1.Eq10());
  }, function (dictOrd) {
    return Data_Ord.compare(ordApp(dictOrd1)(dictOrd));
  });
};

var comonadApp = function comonadApp(dictComonad) {
  return dictComonad;
};

var bindApp = function bindApp(dictBind) {
  return dictBind;
};

var applyApp = function applyApp(dictApply) {
  return dictApply;
};

var applicativeApp = function applicativeApp(dictApplicative) {
  return dictApplicative;
};

var alternativeApp = function alternativeApp(dictAlternative) {
  return dictAlternative;
};

var altApp = function altApp(dictAlt) {
  return dictAlt;
};

module.exports = {
  App: App,
  hoistApp: hoistApp,
  hoistLiftApp: hoistLiftApp,
  hoistLowerApp: hoistLowerApp,
  newtypeApp: newtypeApp,
  eqApp: eqApp,
  eq1App: eq1App,
  ordApp: ordApp,
  ord1App: ord1App,
  showApp: showApp,
  semigroupApp: semigroupApp,
  monoidApp: monoidApp,
  functorApp: functorApp,
  functorWithIndexApp: functorWithIndexApp,
  applyApp: applyApp,
  applicativeApp: applicativeApp,
  bindApp: bindApp,
  monadApp: monadApp,
  altApp: altApp,
  plusApp: plusApp,
  alternativeApp: alternativeApp,
  monadZeroApp: monadZeroApp,
  monadPlusApp: monadPlusApp,
  lazyApp: lazyApp,
  foldableApp: foldableApp,
  traversableApp: traversableApp,
  foldableWithIndexApp: foldableWithIndexApp,
  traversableWithIndexApp: traversableWithIndexApp,
  extendApp: extendApp,
  comonadApp: comonadApp
};
},{"../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Show/index.js":"../output/Data.Show/index.js","../Unsafe.Coerce/index.js":"../output/Unsafe.Coerce/index.js"}],"../output/Data.Functor.Compose/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_App = require("../Data.Functor.App/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Compose = function Compose(x) {
  return x;
};

var showCompose = function showCompose(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Compose " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var newtypeCompose = new Data_Newtype.Newtype(function (n) {
  return n;
}, Compose);

var functorCompose = function functorCompose(dictFunctor) {
  return function (dictFunctor1) {
    return new Data_Functor.Functor(function (f) {
      return function (v) {
        return Compose(Data_Functor.map(dictFunctor)(Data_Functor.map(dictFunctor1)(f))(v));
      };
    });
  };
};

var functorWithIndexCompose = function functorWithIndexCompose(dictFunctorWithIndex) {
  return function (dictFunctorWithIndex1) {
    return new Data_FunctorWithIndex.FunctorWithIndex(function () {
      return functorCompose(dictFunctorWithIndex.Functor0())(dictFunctorWithIndex1.Functor0());
    }, function (f) {
      return function (v) {
        return Compose(Data_FunctorWithIndex.mapWithIndex(dictFunctorWithIndex)(function () {
          var $100 = Data_FunctorWithIndex.mapWithIndex(dictFunctorWithIndex1);
          var $101 = Data_Tuple.curry(f);
          return function ($102) {
            return $100($101($102));
          };
        }())(v));
      };
    });
  };
};

var foldableCompose = function foldableCompose(dictFoldable) {
  return function (dictFoldable1) {
    return new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
        return function (v) {
          return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(Data_Foldable.foldMap(dictFoldable1)(dictMonoid)(f))(v);
        };
      };
    }, function (f) {
      return function (i) {
        return function (v) {
          return Data_Foldable.foldl(dictFoldable)(Data_Foldable.foldl(dictFoldable1)(f))(i)(v);
        };
      };
    }, function (f) {
      return function (i) {
        return function (v) {
          return Data_Foldable.foldr(dictFoldable)(Data_Function.flip(Data_Foldable.foldr(dictFoldable1)(f)))(i)(v);
        };
      };
    });
  };
};

var foldableWithIndexCompose = function foldableWithIndexCompose(dictFoldableWithIndex) {
  return function (dictFoldableWithIndex1) {
    return new Data_FoldableWithIndex.FoldableWithIndex(function () {
      return foldableCompose(dictFoldableWithIndex.Foldable0())(dictFoldableWithIndex1.Foldable0());
    }, function (dictMonoid) {
      return function (f) {
        return function (v) {
          return Data_FoldableWithIndex.foldMapWithIndex(dictFoldableWithIndex)(dictMonoid)(function () {
            var $103 = Data_FoldableWithIndex.foldMapWithIndex(dictFoldableWithIndex1)(dictMonoid);
            var $104 = Data_Tuple.curry(f);
            return function ($105) {
              return $103($104($105));
            };
          }())(v);
        };
      };
    }, function (f) {
      return function (i) {
        return function (v) {
          return Data_FoldableWithIndex.foldlWithIndex(dictFoldableWithIndex)(function () {
            var $106 = Data_FoldableWithIndex.foldlWithIndex(dictFoldableWithIndex1);
            var $107 = Data_Tuple.curry(f);
            return function ($108) {
              return $106($107($108));
            };
          }())(i)(v);
        };
      };
    }, function (f) {
      return function (i) {
        return function (v) {
          return Data_FoldableWithIndex.foldrWithIndex(dictFoldableWithIndex)(function (a) {
            return Data_Function.flip(Data_FoldableWithIndex.foldrWithIndex(dictFoldableWithIndex1)(Data_Tuple.curry(f)(a)));
          })(i)(v);
        };
      };
    });
  };
};

var traversableCompose = function traversableCompose(dictTraversable) {
  return function (dictTraversable1) {
    return new Data_Traversable.Traversable(function () {
      return foldableCompose(dictTraversable.Foldable1())(dictTraversable1.Foldable1());
    }, function () {
      return functorCompose(dictTraversable.Functor0())(dictTraversable1.Functor0());
    }, function (dictApplicative) {
      return Data_Traversable.traverse(traversableCompose(dictTraversable)(dictTraversable1))(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
    }, function (dictApplicative) {
      return function (f) {
        return function (v) {
          return Data_Functor.map(dictApplicative.Apply0().Functor0())(Compose)(Data_Traversable.traverse(dictTraversable)(dictApplicative)(Data_Traversable.traverse(dictTraversable1)(dictApplicative)(f))(v));
        };
      };
    });
  };
};

var traversableWithIndexCompose = function traversableWithIndexCompose(dictTraversableWithIndex) {
  return function (dictTraversableWithIndex1) {
    return new Data_TraversableWithIndex.TraversableWithIndex(function () {
      return foldableWithIndexCompose(dictTraversableWithIndex.FoldableWithIndex1())(dictTraversableWithIndex1.FoldableWithIndex1());
    }, function () {
      return functorWithIndexCompose(dictTraversableWithIndex.FunctorWithIndex0())(dictTraversableWithIndex1.FunctorWithIndex0());
    }, function () {
      return traversableCompose(dictTraversableWithIndex.Traversable2())(dictTraversableWithIndex1.Traversable2());
    }, function (dictApplicative) {
      return function (f) {
        return function (v) {
          return Data_Functor.map(dictApplicative.Apply0().Functor0())(Compose)(Data_TraversableWithIndex.traverseWithIndex(dictTraversableWithIndex)(dictApplicative)(function () {
            var $109 = Data_TraversableWithIndex.traverseWithIndex(dictTraversableWithIndex1)(dictApplicative);
            var $110 = Data_Tuple.curry(f);
            return function ($111) {
              return $109($110($111));
            };
          }())(v));
        };
      };
    });
  };
};

var eqCompose = function eqCompose(dictEq1) {
  return function (dictEq11) {
    return function (dictEq) {
      return new Data_Eq.Eq(function (v) {
        return function (v1) {
          return Data_Eq.eq1(dictEq1)(Data_Functor_App.eqApp(dictEq11)(dictEq))(Data_Functor_App.hoistLiftApp(v))(Data_Functor_App.hoistLiftApp(v1));
        };
      });
    };
  };
};

var ordCompose = function ordCompose(dictOrd1) {
  return function (dictOrd11) {
    return function (dictOrd) {
      return new Data_Ord.Ord(function () {
        return eqCompose(dictOrd1.Eq10())(dictOrd11.Eq10())(dictOrd.Eq0());
      }, function (v) {
        return function (v1) {
          return Data_Ord.compare1(dictOrd1)(Data_Functor_App.ordApp(dictOrd11)(dictOrd))(Data_Functor_App.hoistLiftApp(v))(Data_Functor_App.hoistLiftApp(v1));
        };
      });
    };
  };
};

var eq1Compose = function eq1Compose(dictEq1) {
  return function (dictEq11) {
    return new Data_Eq.Eq1(function (dictEq) {
      return Data_Eq.eq(eqCompose(dictEq1)(dictEq11)(dictEq));
    });
  };
};

var ord1Compose = function ord1Compose(dictOrd1) {
  return function (dictOrd11) {
    return new Data_Ord.Ord1(function () {
      return eq1Compose(dictOrd1.Eq10())(dictOrd11.Eq10());
    }, function (dictOrd) {
      return Data_Ord.compare(ordCompose(dictOrd1)(dictOrd11)(dictOrd));
    });
  };
};

var bihoistCompose = function bihoistCompose(dictFunctor) {
  return function (natF) {
    return function (natG) {
      return function (v) {
        return natF(Data_Functor.map(dictFunctor)(natG)(v));
      };
    };
  };
};

var applyCompose = function applyCompose(dictApply) {
  return function (dictApply1) {
    return new Control_Apply.Apply(function () {
      return functorCompose(dictApply.Functor0())(dictApply1.Functor0());
    }, function (v) {
      return function (v1) {
        return Compose(Control_Apply.apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Control_Apply.apply(dictApply1))(v))(v1));
      };
    });
  };
};

var applicativeCompose = function applicativeCompose(dictApplicative) {
  return function (dictApplicative1) {
    return new Control_Applicative.Applicative(function () {
      return applyCompose(dictApplicative.Apply0())(dictApplicative1.Apply0());
    }, function () {
      var $112 = Control_Applicative.pure(dictApplicative);
      var $113 = Control_Applicative.pure(dictApplicative1);
      return function ($114) {
        return Compose($112($113($114)));
      };
    }());
  };
};

var altCompose = function altCompose(dictAlt) {
  return function (dictFunctor) {
    return new Control_Alt.Alt(function () {
      return functorCompose(dictAlt.Functor0())(dictFunctor);
    }, function (v) {
      return function (v1) {
        return Compose(Control_Alt.alt(dictAlt)(v)(v1));
      };
    });
  };
};

var plusCompose = function plusCompose(dictPlus) {
  return function (dictFunctor) {
    return new Control_Plus.Plus(function () {
      return altCompose(dictPlus.Alt0())(dictFunctor);
    }, Control_Plus.empty(dictPlus));
  };
};

var alternativeCompose = function alternativeCompose(dictAlternative) {
  return function (dictApplicative) {
    return new Control_Alternative.Alternative(function () {
      return applicativeCompose(dictAlternative.Applicative0())(dictApplicative);
    }, function () {
      return plusCompose(dictAlternative.Plus1())(dictApplicative.Apply0().Functor0());
    });
  };
};

module.exports = {
  Compose: Compose,
  bihoistCompose: bihoistCompose,
  newtypeCompose: newtypeCompose,
  eqCompose: eqCompose,
  eq1Compose: eq1Compose,
  ordCompose: ordCompose,
  ord1Compose: ord1Compose,
  showCompose: showCompose,
  functorCompose: functorCompose,
  functorWithIndexCompose: functorWithIndexCompose,
  applyCompose: applyCompose,
  applicativeCompose: applicativeCompose,
  foldableCompose: foldableCompose,
  foldableWithIndexCompose: foldableWithIndexCompose,
  traversableCompose: traversableCompose,
  traversableWithIndexCompose: traversableWithIndexCompose,
  altCompose: altCompose,
  plusCompose: plusCompose,
  alternativeCompose: alternativeCompose
};
},{"../Control.Alt/index.js":"../output/Control.Alt/index.js","../Control.Alternative/index.js":"../output/Control.Alternative/index.js","../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Category/index.js":"../output/Control.Category/index.js","../Control.Plus/index.js":"../output/Control.Plus/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Foldable/index.js":"../output/Data.Foldable/index.js","../Data.FoldableWithIndex/index.js":"../output/Data.FoldableWithIndex/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Functor.App/index.js":"../output/Data.Functor.App/index.js","../Data.FunctorWithIndex/index.js":"../output/Data.FunctorWithIndex/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Show/index.js":"../output/Data.Show/index.js","../Data.Traversable/index.js":"../output/Data.Traversable/index.js","../Data.TraversableWithIndex/index.js":"../output/Data.TraversableWithIndex/index.js","../Data.Tuple/index.js":"../output/Data.Tuple/index.js"}],"../output/Control.Parallel.Class/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad_Cont_Trans = require("../Control.Monad.Cont.Trans/index.js");

var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");

var Control_Monad_Maybe_Trans = require("../Control.Monad.Maybe.Trans/index.js");

var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans/index.js");

var Control_Monad_Writer_Trans = require("../Control.Monad.Writer.Trans/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_Compose = require("../Data.Functor.Compose/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Effect_Ref = require("../Effect.Ref/index.js");

var ParCont = function ParCont(x) {
  return x;
};

var Parallel = function Parallel(Applicative1, Monad0, parallel, sequential) {
  this.Applicative1 = Applicative1;
  this.Monad0 = Monad0;
  this.parallel = parallel;
  this.sequential = sequential;
};

var sequential = function sequential(dict) {
  return dict.sequential;
};

var parallel = function parallel(dict) {
  return dict.parallel;
};

var newtypeParCont = new Data_Newtype.Newtype(function (n) {
  return n;
}, ParCont);

var monadParWriterT = function monadParWriterT(dictMonoid) {
  return function (dictParallel) {
    return new Parallel(function () {
      return Control_Monad_Writer_Trans.applicativeWriterT(dictMonoid)(dictParallel.Applicative1());
    }, function () {
      return Control_Monad_Writer_Trans.monadWriterT(dictMonoid)(dictParallel.Monad0());
    }, Control_Monad_Writer_Trans.mapWriterT(parallel(dictParallel)), Control_Monad_Writer_Trans.mapWriterT(sequential(dictParallel)));
  };
};

var monadParReaderT = function monadParReaderT(dictParallel) {
  return new Parallel(function () {
    return Control_Monad_Reader_Trans.applicativeReaderT(dictParallel.Applicative1());
  }, function () {
    return Control_Monad_Reader_Trans.monadReaderT(dictParallel.Monad0());
  }, Control_Monad_Reader_Trans.mapReaderT(parallel(dictParallel)), Control_Monad_Reader_Trans.mapReaderT(sequential(dictParallel)));
};

var monadParMaybeT = function monadParMaybeT(dictParallel) {
  return new Parallel(function () {
    return Data_Functor_Compose.applicativeCompose(dictParallel.Applicative1())(Data_Maybe.applicativeMaybe);
  }, function () {
    return Control_Monad_Maybe_Trans.monadMaybeT(dictParallel.Monad0());
  }, function (v) {
    return parallel(dictParallel)(v);
  }, function (v) {
    return sequential(dictParallel)(v);
  });
};

var monadParExceptT = function monadParExceptT(dictParallel) {
  return new Parallel(function () {
    return Data_Functor_Compose.applicativeCompose(dictParallel.Applicative1())(Data_Either.applicativeEither);
  }, function () {
    return Control_Monad_Except_Trans.monadExceptT(dictParallel.Monad0());
  }, function (v) {
    return parallel(dictParallel)(v);
  }, function (v) {
    return sequential(dictParallel)(v);
  });
};

var monadParParCont = function monadParParCont(dictMonadEffect) {
  return new Parallel(function () {
    return applicativeParCont(dictMonadEffect);
  }, function () {
    return Control_Monad_Cont_Trans.monadContT(dictMonadEffect.Monad0());
  }, ParCont, function (v) {
    return v;
  });
};

var functorParCont = function functorParCont(dictMonadEffect) {
  return new Data_Functor.Functor(function (f) {
    var $40 = parallel(monadParParCont(dictMonadEffect));
    var $41 = Data_Functor.map(Control_Monad_Cont_Trans.functorContT(dictMonadEffect.Monad0().Bind1().Apply0().Functor0()))(f);
    var $42 = sequential(monadParParCont(dictMonadEffect));
    return function ($43) {
      return $40($41($42($43)));
    };
  });
};

var applyParCont = function applyParCont(dictMonadEffect) {
  return new Control_Apply.Apply(function () {
    return functorParCont(dictMonadEffect);
  }, function (v) {
    return function (v1) {
      return ParCont(function (k) {
        return Control_Bind.bind(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref["new"](Data_Maybe.Nothing.value)))(function (ra) {
          return Control_Bind.bind(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref["new"](Data_Maybe.Nothing.value)))(function (rb) {
            return Control_Bind.discard(Control_Bind.discardUnit)(dictMonadEffect.Monad0().Bind1())(Control_Monad_Cont_Trans.runContT(v)(function (a) {
              return Control_Bind.bind(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.read(rb)))(function (mb) {
                if (mb instanceof Data_Maybe.Nothing) {
                  return Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.write(new Data_Maybe.Just(a))(ra));
                }

                ;

                if (mb instanceof Data_Maybe.Just) {
                  return k(a(mb.value0));
                }

                ;
                throw new Error("Failed pattern match at Control.Parallel.Class (line 71, column 7 - line 73, column 26): " + [mb.constructor.name]);
              });
            }))(function () {
              return Control_Monad_Cont_Trans.runContT(v1)(function (b) {
                return Control_Bind.bind(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.read(ra)))(function (ma) {
                  if (ma instanceof Data_Maybe.Nothing) {
                    return Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.write(new Data_Maybe.Just(b))(rb));
                  }

                  ;

                  if (ma instanceof Data_Maybe.Just) {
                    return k(ma.value0(b));
                  }

                  ;
                  throw new Error("Failed pattern match at Control.Parallel.Class (line 77, column 7 - line 79, column 26): " + [ma.constructor.name]);
                });
              });
            });
          });
        });
      });
    };
  });
};

var applicativeParCont = function applicativeParCont(dictMonadEffect) {
  return new Control_Applicative.Applicative(function () {
    return applyParCont(dictMonadEffect);
  }, function () {
    var $44 = parallel(monadParParCont(dictMonadEffect));
    var $45 = Control_Applicative.pure(Control_Monad_Cont_Trans.applicativeContT(dictMonadEffect.Monad0().Applicative0()));
    return function ($46) {
      return $44($45($46));
    };
  }());
};

var altParCont = function altParCont(dictMonadEffect) {
  return new Control_Alt.Alt(function () {
    return functorParCont(dictMonadEffect);
  }, function (v) {
    return function (v1) {
      return ParCont(function (k) {
        return Control_Bind.bind(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref["new"](false)))(function (done) {
          return Control_Bind.discard(Control_Bind.discardUnit)(dictMonadEffect.Monad0().Bind1())(Control_Monad_Cont_Trans.runContT(v)(function (a) {
            return Control_Bind.bind(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.read(done)))(function (b) {
              if (b) {
                return Control_Applicative.pure(dictMonadEffect.Monad0().Applicative0())(Data_Unit.unit);
              }

              ;
              return Control_Bind.discard(Control_Bind.discardUnit)(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.write(true)(done)))(function () {
                return k(a);
              });
            });
          }))(function () {
            return Control_Monad_Cont_Trans.runContT(v1)(function (a) {
              return Control_Bind.bind(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.read(done)))(function (b) {
                if (b) {
                  return Control_Applicative.pure(dictMonadEffect.Monad0().Applicative0())(Data_Unit.unit);
                }

                ;
                return Control_Bind.discard(Control_Bind.discardUnit)(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.write(true)(done)))(function () {
                  return k(a);
                });
              });
            });
          });
        });
      });
    };
  });
};

var plusParCont = function plusParCont(dictMonadEffect) {
  return new Control_Plus.Plus(function () {
    return altParCont(dictMonadEffect);
  }, ParCont(function (v) {
    return Control_Applicative.pure(dictMonadEffect.Monad0().Applicative0())(Data_Unit.unit);
  }));
};

var alternativeParCont = function alternativeParCont(dictMonadEffect) {
  return new Control_Alternative.Alternative(function () {
    return applicativeParCont(dictMonadEffect);
  }, function () {
    return plusParCont(dictMonadEffect);
  });
};

module.exports = {
  parallel: parallel,
  sequential: sequential,
  Parallel: Parallel,
  ParCont: ParCont,
  monadParExceptT: monadParExceptT,
  monadParReaderT: monadParReaderT,
  monadParWriterT: monadParWriterT,
  monadParMaybeT: monadParMaybeT,
  newtypeParCont: newtypeParCont,
  functorParCont: functorParCont,
  applyParCont: applyParCont,
  applicativeParCont: applicativeParCont,
  altParCont: altParCont,
  plusParCont: plusParCont,
  alternativeParCont: alternativeParCont,
  monadParParCont: monadParParCont
};
},{"../Control.Alt/index.js":"../output/Control.Alt/index.js","../Control.Alternative/index.js":"../output/Control.Alternative/index.js","../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Monad.Cont.Trans/index.js":"../output/Control.Monad.Cont.Trans/index.js","../Control.Monad.Except.Trans/index.js":"../output/Control.Monad.Except.Trans/index.js","../Control.Monad.Maybe.Trans/index.js":"../output/Control.Monad.Maybe.Trans/index.js","../Control.Monad.Reader.Trans/index.js":"../output/Control.Monad.Reader.Trans/index.js","../Control.Monad.Writer.Trans/index.js":"../output/Control.Monad.Writer.Trans/index.js","../Control.Plus/index.js":"../output/Control.Plus/index.js","../Data.Either/index.js":"../output/Data.Either/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Functor.Compose/index.js":"../output/Data.Functor.Compose/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js","../Effect.Class/index.js":"../output/Effect.Class/index.js","../Effect.Ref/index.js":"../output/Effect.Ref/index.js"}],"../output/Control.Parallel/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Apply = require("../Control.Apply/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Parallel_Class = require("../Control.Parallel.Class/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var parTraverse_ = function parTraverse_(dictParallel) {
  return function (dictFoldable) {
    return function (f) {
      var $17 = Control_Parallel_Class.sequential(dictParallel);
      var $18 = Data_Foldable.traverse_(dictParallel.Applicative1())(dictFoldable)(function () {
        var $20 = Control_Parallel_Class.parallel(dictParallel);
        return function ($21) {
          return $20(f($21));
        };
      }());
      return function ($19) {
        return $17($18($19));
      };
    };
  };
};

var parTraverse = function parTraverse(dictParallel) {
  return function (dictTraversable) {
    return function (f) {
      var $22 = Control_Parallel_Class.sequential(dictParallel);
      var $23 = Data_Traversable.traverse(dictTraversable)(dictParallel.Applicative1())(function () {
        var $25 = Control_Parallel_Class.parallel(dictParallel);
        return function ($26) {
          return $25(f($26));
        };
      }());
      return function ($24) {
        return $22($23($24));
      };
    };
  };
};

var parSequence_ = function parSequence_(dictParallel) {
  return function (dictFoldable) {
    return parTraverse_(dictParallel)(dictFoldable)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var parSequence = function parSequence(dictParallel) {
  return function (dictTraversable) {
    return parTraverse(dictParallel)(dictTraversable)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var parOneOfMap = function parOneOfMap(dictParallel) {
  return function (dictAlternative) {
    return function (dictFoldable) {
      return function (dictFunctor) {
        return function (f) {
          var $27 = Control_Parallel_Class.sequential(dictParallel);
          var $28 = Data_Foldable.oneOfMap(dictFoldable)(dictAlternative.Plus1())(function () {
            var $30 = Control_Parallel_Class.parallel(dictParallel);
            return function ($31) {
              return $30(f($31));
            };
          }());
          return function ($29) {
            return $27($28($29));
          };
        };
      };
    };
  };
};

var parOneOf = function parOneOf(dictParallel) {
  return function (dictAlternative) {
    return function (dictFoldable) {
      return function (dictFunctor) {
        var $32 = Control_Parallel_Class.sequential(dictParallel);
        var $33 = Data_Foldable.oneOfMap(dictFoldable)(dictAlternative.Plus1())(Control_Parallel_Class.parallel(dictParallel));
        return function ($34) {
          return $32($33($34));
        };
      };
    };
  };
};

var parApply = function parApply(dictParallel) {
  return function (mf) {
    return function (ma) {
      return Control_Parallel_Class.sequential(dictParallel)(Control_Apply.apply(dictParallel.Applicative1().Apply0())(Control_Parallel_Class.parallel(dictParallel)(mf))(Control_Parallel_Class.parallel(dictParallel)(ma)));
    };
  };
};

module.exports = {
  parApply: parApply,
  parTraverse: parTraverse,
  parTraverse_: parTraverse_,
  parSequence: parSequence,
  parSequence_: parSequence_,
  parOneOf: parOneOf,
  parOneOfMap: parOneOfMap
};
},{"../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Category/index.js":"../output/Control.Category/index.js","../Control.Parallel.Class/index.js":"../output/Control.Parallel.Class/index.js","../Data.Foldable/index.js":"../output/Data.Foldable/index.js","../Data.Traversable/index.js":"../output/Data.Traversable/index.js"}],"../output/Effect.Unsafe/foreign.js":[function(require,module,exports) {
"use strict";

exports.unsafePerformEffect = function (f) {
  return f();
};
},{}],"../output/Effect.Unsafe/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

module.exports = {
  unsafePerformEffect: $foreign.unsafePerformEffect
};
},{"./foreign.js":"../output/Effect.Unsafe/foreign.js"}],"../output/Partial.Unsafe/foreign.js":[function(require,module,exports) {
"use strict"; // module Partial.Unsafe

exports.unsafePartial = function (f) {
  return f();
};
},{}],"../output/Partial/foreign.js":[function(require,module,exports) {
"use strict"; // module Partial

exports.crashWith = function () {
  return function (msg) {
    throw new Error(msg);
  };
};
},{}],"../output/Partial/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var crash = function crash(dictPartial) {
  return $foreign.crashWith()("Partial.crash: partial function");
};

module.exports = {
  crash: crash,
  crashWith: $foreign.crashWith
};
},{"./foreign.js":"../output/Partial/foreign.js"}],"../output/Partial.Unsafe/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Partial = require("../Partial/index.js");

var unsafePartialBecause = function unsafePartialBecause(v) {
  return function (x) {
    return $foreign.unsafePartial(function (dictPartial) {
      return x();
    });
  };
};

var unsafeCrashWith = function unsafeCrashWith(msg) {
  return $foreign.unsafePartial(function (dictPartial) {
    return Partial.crashWith()(msg);
  });
};

module.exports = {
  unsafePartialBecause: unsafePartialBecause,
  unsafeCrashWith: unsafeCrashWith,
  unsafePartial: $foreign.unsafePartial
};
},{"./foreign.js":"../output/Partial.Unsafe/foreign.js","../Partial/index.js":"../output/Partial/index.js"}],"../output/Effect.Aff/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Lazy = require("../Control.Lazy/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Parallel = require("../Control.Parallel/index.js");

var Control_Parallel_Class = require("../Control.Parallel.Class/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect = require("../Effect/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Effect_Exception = require("../Effect.Exception/index.js");

var Effect_Unsafe = require("../Effect.Unsafe/index.js");

var Partial_Unsafe = require("../Partial.Unsafe/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Fiber = function Fiber(x) {
  return x;
};

var FFIUtil = function FFIUtil(x) {
  return x;
};

var Canceler = function Canceler(x) {
  return x;
};

var suspendAff = $foreign["_fork"](false);
var newtypeCanceler = new Data_Newtype.Newtype(function (n) {
  return n;
}, Canceler);
var functorParAff = new Data_Functor.Functor($foreign["_parAffMap"]);
var functorAff = new Data_Functor.Functor($foreign["_map"]);
var forkAff = $foreign["_fork"](true);

var ffiUtil = function () {
  var unsafeFromRight = function unsafeFromRight(v) {
    if (v instanceof Data_Either.Right) {
      return v.value0;
    }

    ;

    if (v instanceof Data_Either.Left) {
      return Partial_Unsafe.unsafeCrashWith("unsafeFromRight: Left");
    }

    ;
    throw new Error("Failed pattern match at Effect.Aff (line 400, column 21 - line 402, column 54): " + [v.constructor.name]);
  };

  var unsafeFromLeft = function unsafeFromLeft(v) {
    if (v instanceof Data_Either.Left) {
      return v.value0;
    }

    ;

    if (v instanceof Data_Either.Right) {
      return Partial_Unsafe.unsafeCrashWith("unsafeFromLeft: Right");
    }

    ;
    throw new Error("Failed pattern match at Effect.Aff (line 395, column 20 - line 397, column 54): " + [v.constructor.name]);
  };

  var isLeft = function isLeft(v) {
    if (v instanceof Data_Either.Left) {
      return true;
    }

    ;

    if (v instanceof Data_Either.Right) {
      return false;
    }

    ;
    throw new Error("Failed pattern match at Effect.Aff (line 390, column 12 - line 392, column 20): " + [v.constructor.name]);
  };

  return {
    isLeft: isLeft,
    fromLeft: unsafeFromLeft,
    fromRight: unsafeFromRight,
    left: Data_Either.Left.create,
    right: Data_Either.Right.create
  };
}();

var makeFiber = function makeFiber(aff) {
  return $foreign["_makeFiber"](ffiUtil, aff);
};

var launchAff = function launchAff(aff) {
  return function __do() {
    var fiber = makeFiber(aff)();
    fiber.run();
    return fiber;
  };
};

var launchAff_ = function () {
  var $43 = Data_Functor["void"](Effect.functorEffect);
  return function ($44) {
    return $43(launchAff($44));
  };
}();

var launchSuspendedAff = makeFiber;

var delay = function delay(v) {
  return $foreign["_delay"](Data_Either.Right.create, v);
};

var bracket = function bracket(acquire) {
  return function (completed) {
    return $foreign.generalBracket(acquire)({
      killed: Data_Function["const"](completed),
      failed: Data_Function["const"](completed),
      completed: Data_Function["const"](completed)
    });
  };
};

var applyParAff = new Control_Apply.Apply(function () {
  return functorParAff;
}, $foreign["_parAffApply"]);

var semigroupParAff = function semigroupParAff(dictSemigroup) {
  return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyParAff)(Data_Semigroup.append(dictSemigroup)));
};

var monadAff = new Control_Monad.Monad(function () {
  return applicativeAff;
}, function () {
  return bindAff;
});
var bindAff = new Control_Bind.Bind(function () {
  return applyAff;
}, $foreign["_bind"]);
var applyAff = new Control_Apply.Apply(function () {
  return functorAff;
}, Control_Monad.ap(monadAff));
var applicativeAff = new Control_Applicative.Applicative(function () {
  return applyAff;
}, $foreign["_pure"]);

var cancelWith = function cancelWith(aff) {
  return function (v) {
    return $foreign.generalBracket(Control_Applicative.pure(applicativeAff)(Data_Unit.unit))({
      killed: function killed(e) {
        return function (v1) {
          return v(e);
        };
      },
      failed: Data_Function["const"](Control_Applicative.pure(applicativeAff)),
      completed: Data_Function["const"](Control_Applicative.pure(applicativeAff))
    })(Data_Function["const"](aff));
  };
};

var $$finally = function $$finally(fin) {
  return function (a) {
    return bracket(Control_Applicative.pure(applicativeAff)(Data_Unit.unit))(Data_Function["const"](fin))(Data_Function["const"](a));
  };
};

var invincible = function invincible(a) {
  return bracket(a)(Data_Function["const"](Control_Applicative.pure(applicativeAff)(Data_Unit.unit)))(Control_Applicative.pure(applicativeAff));
};

var lazyAff = new Control_Lazy.Lazy(function (f) {
  return Control_Bind.bind(bindAff)(Control_Applicative.pure(applicativeAff)(Data_Unit.unit))(f);
});

var semigroupAff = function semigroupAff(dictSemigroup) {
  return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyAff)(Data_Semigroup.append(dictSemigroup)));
};

var monadEffectAff = new Effect_Class.MonadEffect(function () {
  return monadAff;
}, $foreign["_liftEffect"]);

var effectCanceler = function () {
  var $45 = Effect_Class.liftEffect(monadEffectAff);
  return function ($46) {
    return Canceler(Data_Function["const"]($45($46)));
  };
}();

var joinFiber = function joinFiber(v) {
  return $foreign.makeAff(function (k) {
    return Data_Functor.map(Effect.functorEffect)(effectCanceler)(v.join(k));
  });
};

var functorFiber = new Data_Functor.Functor(function (f) {
  return function (t) {
    return Effect_Unsafe.unsafePerformEffect(makeFiber(Data_Functor.map(functorAff)(f)(joinFiber(t))));
  };
});
var applyFiber = new Control_Apply.Apply(function () {
  return functorFiber;
}, function (t1) {
  return function (t2) {
    return Effect_Unsafe.unsafePerformEffect(makeFiber(Control_Apply.apply(applyAff)(joinFiber(t1))(joinFiber(t2))));
  };
});
var applicativeFiber = new Control_Applicative.Applicative(function () {
  return applyFiber;
}, function (a) {
  return Effect_Unsafe.unsafePerformEffect(makeFiber(Control_Applicative.pure(applicativeAff)(a)));
});

var killFiber = function killFiber(e) {
  return function (v) {
    return Control_Bind.bind(bindAff)(Effect_Class.liftEffect(monadEffectAff)(v.isSuspended))(function (v1) {
      if (v1) {
        return Effect_Class.liftEffect(monadEffectAff)(Data_Functor["void"](Effect.functorEffect)(v.kill(e, Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit)))));
      }

      ;
      return $foreign.makeAff(function (k) {
        return Data_Functor.map(Effect.functorEffect)(effectCanceler)(v.kill(e, k));
      });
    });
  };
};

var fiberCanceler = function () {
  var $47 = Data_Function.flip(killFiber);
  return function ($48) {
    return Canceler($47($48));
  };
}();

var monadThrowAff = new Control_Monad_Error_Class.MonadThrow(function () {
  return monadAff;
}, $foreign["_throwError"]);
var monadErrorAff = new Control_Monad_Error_Class.MonadError(function () {
  return monadThrowAff;
}, $foreign["_catchError"]);
var attempt = Control_Monad_Error_Class["try"](monadErrorAff);

var runAff = function runAff(k) {
  return function (aff) {
    return launchAff(Control_Bind.bindFlipped(bindAff)(function () {
      var $49 = Effect_Class.liftEffect(monadEffectAff);
      return function ($50) {
        return $49(k($50));
      };
    }())(Control_Monad_Error_Class["try"](monadErrorAff)(aff)));
  };
};

var runAff_ = function runAff_(k) {
  return function (aff) {
    return Data_Functor["void"](Effect.functorEffect)(runAff(k)(aff));
  };
};

var runSuspendedAff = function runSuspendedAff(k) {
  return function (aff) {
    return launchSuspendedAff(Control_Bind.bindFlipped(bindAff)(function () {
      var $51 = Effect_Class.liftEffect(monadEffectAff);
      return function ($52) {
        return $51(k($52));
      };
    }())(Control_Monad_Error_Class["try"](monadErrorAff)(aff)));
  };
};

var parallelAff = new Control_Parallel_Class.Parallel(function () {
  return applicativeParAff;
}, function () {
  return monadAff;
}, Unsafe_Coerce.unsafeCoerce, $foreign["_sequential"]);
var applicativeParAff = new Control_Applicative.Applicative(function () {
  return applyParAff;
}, function () {
  var $53 = Control_Parallel_Class.parallel(parallelAff);
  var $54 = Control_Applicative.pure(applicativeAff);
  return function ($55) {
    return $53($54($55));
  };
}());

var monoidParAff = function monoidParAff(dictMonoid) {
  return new Data_Monoid.Monoid(function () {
    return semigroupParAff(dictMonoid.Semigroup0());
  }, Control_Applicative.pure(applicativeParAff)(Data_Monoid.mempty(dictMonoid)));
};

var semigroupCanceler = new Data_Semigroup.Semigroup(function (v) {
  return function (v1) {
    return function (err) {
      return Control_Parallel.parSequence_(parallelAff)(Data_Foldable.foldableArray)([v(err), v1(err)]);
    };
  };
});

var supervise = function supervise(aff) {
  var killError = Effect_Exception.error("[Aff] Child fiber outlived parent");

  var killAll = function killAll(err) {
    return function (sup) {
      return $foreign.makeAff(function (k) {
        return $foreign["_killAll"](err, sup.supervisor, k(Control_Applicative.pure(Data_Either.applicativeEither)(Data_Unit.unit)));
      });
    };
  };

  var acquire = function __do() {
    var sup = $foreign["_makeSupervisedFiber"](ffiUtil, aff)();
    sup.fiber.run();
    return sup;
  };

  return $foreign.generalBracket(Effect_Class.liftEffect(monadEffectAff)(acquire))({
    killed: function killed(err) {
      return function (sup) {
        return Control_Parallel.parSequence_(parallelAff)(Data_Foldable.foldableArray)([killFiber(err)(sup.fiber), killAll(err)(sup)]);
      };
    },
    failed: Data_Function["const"](killAll(killError)),
    completed: Data_Function["const"](killAll(killError))
  })(function ($56) {
    return joinFiber(function (v) {
      return v.fiber;
    }($56));
  });
};

var monadRecAff = new Control_Monad_Rec_Class.MonadRec(function () {
  return monadAff;
}, function (k) {
  var go = function go(a) {
    return Control_Bind.bind(bindAff)(k(a))(function (res) {
      if (res instanceof Control_Monad_Rec_Class.Done) {
        return Control_Applicative.pure(applicativeAff)(res.value0);
      }

      ;

      if (res instanceof Control_Monad_Rec_Class.Loop) {
        return go(res.value0);
      }

      ;
      throw new Error("Failed pattern match at Effect.Aff (line 100, column 7 - line 102, column 22): " + [res.constructor.name]);
    });
  };

  return go;
});

var monoidAff = function monoidAff(dictMonoid) {
  return new Data_Monoid.Monoid(function () {
    return semigroupAff(dictMonoid.Semigroup0());
  }, Control_Applicative.pure(applicativeAff)(Data_Monoid.mempty(dictMonoid)));
};

var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(Data_Unit.unit));
var monoidCanceler = new Data_Monoid.Monoid(function () {
  return semigroupCanceler;
}, nonCanceler);
var never = $foreign.makeAff(function (v) {
  return Control_Applicative.pure(Effect.applicativeEffect)(Data_Monoid.mempty(monoidCanceler));
});

var apathize = function () {
  var $57 = Data_Functor.map(functorAff)(Data_Function["const"](Data_Unit.unit));
  return function ($58) {
    return $57(attempt($58));
  };
}();

var altParAff = new Control_Alt.Alt(function () {
  return functorParAff;
}, $foreign["_parAffAlt"]);
var altAff = new Control_Alt.Alt(function () {
  return functorAff;
}, function (a1) {
  return function (a2) {
    return Control_Monad_Error_Class.catchError(monadErrorAff)(a1)(Data_Function["const"](a2));
  };
});
var plusAff = new Control_Plus.Plus(function () {
  return altAff;
}, Control_Monad_Error_Class.throwError(monadThrowAff)(Effect_Exception.error("Always fails")));
var plusParAff = new Control_Plus.Plus(function () {
  return altParAff;
}, Control_Parallel_Class.parallel(parallelAff)(Control_Plus.empty(plusAff)));
var alternativeParAff = new Control_Alternative.Alternative(function () {
  return applicativeParAff;
}, function () {
  return plusParAff;
});
module.exports = {
  Canceler: Canceler,
  launchAff: launchAff,
  launchAff_: launchAff_,
  launchSuspendedAff: launchSuspendedAff,
  runAff: runAff,
  runAff_: runAff_,
  runSuspendedAff: runSuspendedAff,
  forkAff: forkAff,
  suspendAff: suspendAff,
  supervise: supervise,
  attempt: attempt,
  apathize: apathize,
  delay: delay,
  never: never,
  "finally": $$finally,
  invincible: invincible,
  killFiber: killFiber,
  joinFiber: joinFiber,
  cancelWith: cancelWith,
  bracket: bracket,
  nonCanceler: nonCanceler,
  effectCanceler: effectCanceler,
  fiberCanceler: fiberCanceler,
  functorAff: functorAff,
  applyAff: applyAff,
  applicativeAff: applicativeAff,
  bindAff: bindAff,
  monadAff: monadAff,
  semigroupAff: semigroupAff,
  monoidAff: monoidAff,
  altAff: altAff,
  plusAff: plusAff,
  monadRecAff: monadRecAff,
  monadThrowAff: monadThrowAff,
  monadErrorAff: monadErrorAff,
  monadEffectAff: monadEffectAff,
  lazyAff: lazyAff,
  functorParAff: functorParAff,
  applyParAff: applyParAff,
  applicativeParAff: applicativeParAff,
  semigroupParAff: semigroupParAff,
  monoidParAff: monoidParAff,
  altParAff: altParAff,
  plusParAff: plusParAff,
  alternativeParAff: alternativeParAff,
  parallelAff: parallelAff,
  functorFiber: functorFiber,
  applyFiber: applyFiber,
  applicativeFiber: applicativeFiber,
  newtypeCanceler: newtypeCanceler,
  semigroupCanceler: semigroupCanceler,
  monoidCanceler: monoidCanceler,
  makeAff: $foreign.makeAff,
  generalBracket: $foreign.generalBracket
};
},{"./foreign.js":"../output/Effect.Aff/foreign.js","../Control.Alt/index.js":"../output/Control.Alt/index.js","../Control.Alternative/index.js":"../output/Control.Alternative/index.js","../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Lazy/index.js":"../output/Control.Lazy/index.js","../Control.Monad/index.js":"../output/Control.Monad/index.js","../Control.Monad.Error.Class/index.js":"../output/Control.Monad.Error.Class/index.js","../Control.Monad.Rec.Class/index.js":"../output/Control.Monad.Rec.Class/index.js","../Control.Parallel/index.js":"../output/Control.Parallel/index.js","../Control.Parallel.Class/index.js":"../output/Control.Parallel.Class/index.js","../Control.Plus/index.js":"../output/Control.Plus/index.js","../Data.Either/index.js":"../output/Data.Either/index.js","../Data.Foldable/index.js":"../output/Data.Foldable/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js","../Effect/index.js":"../output/Effect/index.js","../Effect.Class/index.js":"../output/Effect.Class/index.js","../Effect.Exception/index.js":"../output/Effect.Exception/index.js","../Effect.Unsafe/index.js":"../output/Effect.Unsafe/index.js","../Partial.Unsafe/index.js":"../output/Partial.Unsafe/index.js","../Unsafe.Coerce/index.js":"../output/Unsafe.Coerce/index.js"}],"../output/Data.Lazy/foreign.js":[function(require,module,exports) {
"use strict";

exports.defer = function (thunk) {
  var v = null;
  return function () {
    if (thunk === undefined) return v;
    v = thunk();
    thunk = undefined; // eslint-disable-line no-param-reassign

    return v;
  };
};

exports.force = function (l) {
  return l();
};
},{}],"../output/Data.Lazy/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Comonad = require("../Control.Comonad/index.js");

var Control_Extend = require("../Control.Extend/index.js");

var Control_Lazy = require("../Control.Lazy/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_BooleanAlgebra = require("../Data.BooleanAlgebra/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");

var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var showLazy = function showLazy(dictShow) {
  return new Data_Show.Show(function (x) {
    return "(defer \\_ -> " + (Data_Show.show(dictShow)($foreign.force(x)) + ")");
  });
};

var semiringLazy = function semiringLazy(dictSemiring) {
  return new Data_Semiring.Semiring(function (a) {
    return function (b) {
      return $foreign.defer(function (v) {
        return Data_Semiring.add(dictSemiring)($foreign.force(a))($foreign.force(b));
      });
    };
  }, function (a) {
    return function (b) {
      return $foreign.defer(function (v) {
        return Data_Semiring.mul(dictSemiring)($foreign.force(a))($foreign.force(b));
      });
    };
  }, $foreign.defer(function (v) {
    return Data_Semiring.one(dictSemiring);
  }), $foreign.defer(function (v) {
    return Data_Semiring.zero(dictSemiring);
  }));
};

var semigroupLazy = function semigroupLazy(dictSemigroup) {
  return new Data_Semigroup.Semigroup(function (a) {
    return function (b) {
      return $foreign.defer(function (v) {
        return Data_Semigroup.append(dictSemigroup)($foreign.force(a))($foreign.force(b));
      });
    };
  });
};

var ringLazy = function ringLazy(dictRing) {
  return new Data_Ring.Ring(function () {
    return semiringLazy(dictRing.Semiring0());
  }, function (a) {
    return function (b) {
      return $foreign.defer(function (v) {
        return Data_Ring.sub(dictRing)($foreign.force(a))($foreign.force(b));
      });
    };
  });
};

var monoidLazy = function monoidLazy(dictMonoid) {
  return new Data_Monoid.Monoid(function () {
    return semigroupLazy(dictMonoid.Semigroup0());
  }, $foreign.defer(function (v) {
    return Data_Monoid.mempty(dictMonoid);
  }));
};

var lazyLazy = new Control_Lazy.Lazy(function (f) {
  return $foreign.defer(function (v) {
    return $foreign.force(f(Data_Unit.unit));
  });
});
var functorLazy = new Data_Functor.Functor(function (f) {
  return function (l) {
    return $foreign.defer(function (v) {
      return f($foreign.force(l));
    });
  };
});
var functorWithIndexLazy = new Data_FunctorWithIndex.FunctorWithIndex(function () {
  return functorLazy;
}, function (f) {
  return Data_Functor.map(functorLazy)(f(Data_Unit.unit));
});
var invariantLazy = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorLazy));
var foldableLazy = new Data_Foldable.Foldable(function (dictMonoid) {
  return function (f) {
    return function (l) {
      return f($foreign.force(l));
    };
  };
}, function (f) {
  return function (z) {
    return function (l) {
      return f(z)($foreign.force(l));
    };
  };
}, function (f) {
  return function (z) {
    return function (l) {
      return f($foreign.force(l))(z);
    };
  };
});
var foldableWithIndexLazy = new Data_FoldableWithIndex.FoldableWithIndex(function () {
  return foldableLazy;
}, function (dictMonoid) {
  return function (f) {
    return Data_Foldable.foldMap(foldableLazy)(dictMonoid)(f(Data_Unit.unit));
  };
}, function (f) {
  return Data_Foldable.foldl(foldableLazy)(f(Data_Unit.unit));
}, function (f) {
  return Data_Foldable.foldr(foldableLazy)(f(Data_Unit.unit));
});
var traversableLazy = new Data_Traversable.Traversable(function () {
  return foldableLazy;
}, function () {
  return functorLazy;
}, function (dictApplicative) {
  return function (l) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(function ($42) {
      return $foreign.defer(Data_Function["const"]($42));
    })($foreign.force(l));
  };
}, function (dictApplicative) {
  return function (f) {
    return function (l) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(function ($43) {
        return $foreign.defer(Data_Function["const"]($43));
      })(f($foreign.force(l)));
    };
  };
});
var traversableWithIndexLazy = new Data_TraversableWithIndex.TraversableWithIndex(function () {
  return foldableWithIndexLazy;
}, function () {
  return functorWithIndexLazy;
}, function () {
  return traversableLazy;
}, function (dictApplicative) {
  return function (f) {
    return Data_Traversable.traverse(traversableLazy)(dictApplicative)(f(Data_Unit.unit));
  };
});
var foldable1Lazy = new Data_Semigroup_Foldable.Foldable1(function () {
  return foldableLazy;
}, function (dictSemigroup) {
  return Data_Semigroup_Foldable.fold1Default(foldable1Lazy)(dictSemigroup);
}, function (dictSemigroup) {
  return function (f) {
    return function (l) {
      return f($foreign.force(l));
    };
  };
});
var traversable1Lazy = new Data_Semigroup_Traversable.Traversable1(function () {
  return foldable1Lazy;
}, function () {
  return traversableLazy;
}, function (dictApply) {
  return function (l) {
    return Data_Functor.map(dictApply.Functor0())(function ($44) {
      return $foreign.defer(Data_Function["const"]($44));
    })($foreign.force(l));
  };
}, function (dictApply) {
  return function (f) {
    return function (l) {
      return Data_Functor.map(dictApply.Functor0())(function ($45) {
        return $foreign.defer(Data_Function["const"]($45));
      })(f($foreign.force(l)));
    };
  };
});
var extendLazy = new Control_Extend.Extend(function () {
  return functorLazy;
}, function (f) {
  return function (x) {
    return $foreign.defer(function (v) {
      return f(x);
    });
  };
});

var eqLazy = function eqLazy(dictEq) {
  return new Data_Eq.Eq(function (x) {
    return function (y) {
      return Data_Eq.eq(dictEq)($foreign.force(x))($foreign.force(y));
    };
  });
};

var ordLazy = function ordLazy(dictOrd) {
  return new Data_Ord.Ord(function () {
    return eqLazy(dictOrd.Eq0());
  }, function (x) {
    return function (y) {
      return Data_Ord.compare(dictOrd)($foreign.force(x))($foreign.force(y));
    };
  });
};

var eq1Lazy = new Data_Eq.Eq1(function (dictEq) {
  return Data_Eq.eq(eqLazy(dictEq));
});
var ord1Lazy = new Data_Ord.Ord1(function () {
  return eq1Lazy;
}, function (dictOrd) {
  return Data_Ord.compare(ordLazy(dictOrd));
});
var comonadLazy = new Control_Comonad.Comonad(function () {
  return extendLazy;
}, $foreign.force);

var commutativeRingLazy = function commutativeRingLazy(dictCommutativeRing) {
  return new Data_CommutativeRing.CommutativeRing(function () {
    return ringLazy(dictCommutativeRing.Ring0());
  });
};

var euclideanRingLazy = function euclideanRingLazy(dictEuclideanRing) {
  return new Data_EuclideanRing.EuclideanRing(function () {
    return commutativeRingLazy(dictEuclideanRing.CommutativeRing0());
  }, function () {
    var $46 = Data_EuclideanRing.degree(dictEuclideanRing);
    return function ($47) {
      return $46($foreign.force($47));
    };
  }(), function (a) {
    return function (b) {
      return $foreign.defer(function (v) {
        return Data_EuclideanRing.div(dictEuclideanRing)($foreign.force(a))($foreign.force(b));
      });
    };
  }, function (a) {
    return function (b) {
      return $foreign.defer(function (v) {
        return Data_EuclideanRing.mod(dictEuclideanRing)($foreign.force(a))($foreign.force(b));
      });
    };
  });
};

var boundedLazy = function boundedLazy(dictBounded) {
  return new Data_Bounded.Bounded(function () {
    return ordLazy(dictBounded.Ord0());
  }, $foreign.defer(function (v) {
    return Data_Bounded.bottom(dictBounded);
  }), $foreign.defer(function (v) {
    return Data_Bounded.top(dictBounded);
  }));
};

var applyLazy = new Control_Apply.Apply(function () {
  return functorLazy;
}, function (f) {
  return function (x) {
    return $foreign.defer(function (v) {
      return $foreign.force(f)($foreign.force(x));
    });
  };
});
var bindLazy = new Control_Bind.Bind(function () {
  return applyLazy;
}, function (l) {
  return function (f) {
    return $foreign.defer(function (v) {
      return $foreign.force(f($foreign.force(l)));
    });
  };
});

var heytingAlgebraLazy = function heytingAlgebraLazy(dictHeytingAlgebra) {
  return new Data_HeytingAlgebra.HeytingAlgebra(function (a) {
    return function (b) {
      return Control_Apply.apply(applyLazy)(Data_Functor.map(functorLazy)(Data_HeytingAlgebra.conj(dictHeytingAlgebra))(a))(b);
    };
  }, function (a) {
    return function (b) {
      return Control_Apply.apply(applyLazy)(Data_Functor.map(functorLazy)(Data_HeytingAlgebra.disj(dictHeytingAlgebra))(a))(b);
    };
  }, $foreign.defer(function (v) {
    return Data_HeytingAlgebra.ff(dictHeytingAlgebra);
  }), function (a) {
    return function (b) {
      return Control_Apply.apply(applyLazy)(Data_Functor.map(functorLazy)(Data_HeytingAlgebra.implies(dictHeytingAlgebra))(a))(b);
    };
  }, function (a) {
    return Data_Functor.map(functorLazy)(Data_HeytingAlgebra.not(dictHeytingAlgebra))(a);
  }, $foreign.defer(function (v) {
    return Data_HeytingAlgebra.tt(dictHeytingAlgebra);
  }));
};

var booleanAlgebraLazy = function booleanAlgebraLazy(dictBooleanAlgebra) {
  return new Data_BooleanAlgebra.BooleanAlgebra(function () {
    return heytingAlgebraLazy(dictBooleanAlgebra.HeytingAlgebra0());
  });
};

var applicativeLazy = new Control_Applicative.Applicative(function () {
  return applyLazy;
}, function (a) {
  return $foreign.defer(function (v) {
    return a;
  });
});
var monadLazy = new Control_Monad.Monad(function () {
  return applicativeLazy;
}, function () {
  return bindLazy;
});
module.exports = {
  semiringLazy: semiringLazy,
  ringLazy: ringLazy,
  commutativeRingLazy: commutativeRingLazy,
  euclideanRingLazy: euclideanRingLazy,
  eqLazy: eqLazy,
  eq1Lazy: eq1Lazy,
  ordLazy: ordLazy,
  ord1Lazy: ord1Lazy,
  boundedLazy: boundedLazy,
  semigroupLazy: semigroupLazy,
  monoidLazy: monoidLazy,
  heytingAlgebraLazy: heytingAlgebraLazy,
  booleanAlgebraLazy: booleanAlgebraLazy,
  functorLazy: functorLazy,
  functorWithIndexLazy: functorWithIndexLazy,
  foldableLazy: foldableLazy,
  foldableWithIndexLazy: foldableWithIndexLazy,
  foldable1Lazy: foldable1Lazy,
  traversableLazy: traversableLazy,
  traversableWithIndexLazy: traversableWithIndexLazy,
  traversable1Lazy: traversable1Lazy,
  invariantLazy: invariantLazy,
  applyLazy: applyLazy,
  applicativeLazy: applicativeLazy,
  bindLazy: bindLazy,
  monadLazy: monadLazy,
  extendLazy: extendLazy,
  comonadLazy: comonadLazy,
  showLazy: showLazy,
  lazyLazy: lazyLazy,
  defer: $foreign.defer,
  force: $foreign.force
};
},{"./foreign.js":"../output/Data.Lazy/foreign.js","../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Comonad/index.js":"../output/Control.Comonad/index.js","../Control.Extend/index.js":"../output/Control.Extend/index.js","../Control.Lazy/index.js":"../output/Control.Lazy/index.js","../Control.Monad/index.js":"../output/Control.Monad/index.js","../Data.BooleanAlgebra/index.js":"../output/Data.BooleanAlgebra/index.js","../Data.Bounded/index.js":"../output/Data.Bounded/index.js","../Data.CommutativeRing/index.js":"../output/Data.CommutativeRing/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.EuclideanRing/index.js":"../output/Data.EuclideanRing/index.js","../Data.Foldable/index.js":"../output/Data.Foldable/index.js","../Data.FoldableWithIndex/index.js":"../output/Data.FoldableWithIndex/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Functor.Invariant/index.js":"../output/Data.Functor.Invariant/index.js","../Data.FunctorWithIndex/index.js":"../output/Data.FunctorWithIndex/index.js","../Data.HeytingAlgebra/index.js":"../output/Data.HeytingAlgebra/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Ring/index.js":"../output/Data.Ring/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Semigroup.Foldable/index.js":"../output/Data.Semigroup.Foldable/index.js","../Data.Semigroup.Traversable/index.js":"../output/Data.Semigroup.Traversable/index.js","../Data.Semiring/index.js":"../output/Data.Semiring/index.js","../Data.Show/index.js":"../output/Data.Show/index.js","../Data.Traversable/index.js":"../output/Data.Traversable/index.js","../Data.TraversableWithIndex/index.js":"../output/Data.TraversableWithIndex/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js"}],"../output/Data.Unfoldable/foreign.js":[function(require,module,exports) {
"use strict";

exports.unfoldrArrayImpl = function (isNothing) {
  return function (fromJust) {
    return function (fst) {
      return function (snd) {
        return function (f) {
          return function (b) {
            var result = [];
            var value = b;

            while (true) {
              // eslint-disable-line no-constant-condition
              var maybe = f(value);
              if (isNothing(maybe)) return result;
              var tuple = fromJust(maybe);
              result.push(fst(tuple));
              value = snd(tuple);
            }
          };
        };
      };
    };
  };
};
},{}],"../output/Data.Unfoldable1/foreign.js":[function(require,module,exports) {
"use strict";

exports.unfoldr1ArrayImpl = function (isNothing) {
  return function (fromJust) {
    return function (fst) {
      return function (snd) {
        return function (f) {
          return function (b) {
            var result = [];
            var value = b;

            while (true) {
              // eslint-disable-line no-constant-condition
              var tuple = f(value);
              result.push(fst(tuple));
              var maybe = snd(tuple);
              if (isNothing(maybe)) return result;
              value = fromJust(maybe);
            }
          };
        };
      };
    };
  };
};
},{}],"../output/Data.Unfoldable1/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Unfoldable1 = function Unfoldable1(unfoldr1) {
  this.unfoldr1 = unfoldr1;
};

var unfoldr1 = function unfoldr1(dict) {
  return dict.unfoldr1;
};

var unfoldable1Maybe = new Unfoldable1(function (f) {
  return function (b) {
    return new Data_Maybe.Just(Data_Tuple.fst(f(b)));
  };
});
var unfoldable1Array = new Unfoldable1($foreign.unfoldr1ArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));

var replicate1 = function replicate1(dictUnfoldable1) {
  return function (n) {
    return function (v) {
      var step = function step(i) {
        if (i <= 0) {
          return new Data_Tuple.Tuple(v, Data_Maybe.Nothing.value);
        }

        ;

        if (Data_Boolean.otherwise) {
          return new Data_Tuple.Tuple(v, new Data_Maybe.Just(i - 1 | 0));
        }

        ;
        throw new Error("Failed pattern match at Data.Unfoldable1 (line 67, column 5 - line 67, column 39): " + [i.constructor.name]);
      };

      return unfoldr1(dictUnfoldable1)(step)(n - 1 | 0);
    };
  };
};

var replicate1A = function replicate1A(dictApply) {
  return function (dictUnfoldable1) {
    return function (dictTraversable1) {
      return function (n) {
        return function (m) {
          return Data_Semigroup_Traversable.sequence1(dictTraversable1)(dictApply)(replicate1(dictUnfoldable1)(n)(m));
        };
      };
    };
  };
};

var singleton = function singleton(dictUnfoldable1) {
  return replicate1(dictUnfoldable1)(1);
};

var range = function range(dictUnfoldable1) {
  return function (start) {
    return function (end) {
      var go = function go(delta) {
        return function (i) {
          var i$prime = i + delta | 0;
          return new Data_Tuple.Tuple(i, function () {
            var $8 = i === end;

            if ($8) {
              return Data_Maybe.Nothing.value;
            }

            ;
            return new Data_Maybe.Just(i$prime);
          }());
        };
      };

      var delta = function () {
        var $9 = end >= start;

        if ($9) {
          return 1;
        }

        ;
        return -1 | 0;
      }();

      return unfoldr1(dictUnfoldable1)(go(delta))(start);
    };
  };
};

module.exports = {
  Unfoldable1: Unfoldable1,
  unfoldr1: unfoldr1,
  replicate1: replicate1,
  replicate1A: replicate1A,
  singleton: singleton,
  range: range,
  unfoldable1Array: unfoldable1Array,
  unfoldable1Maybe: unfoldable1Maybe
};
},{"./foreign.js":"../output/Data.Unfoldable1/foreign.js","../Data.Boolean/index.js":"../output/Data.Boolean/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Semigroup.Traversable/index.js":"../output/Data.Semigroup.Traversable/index.js","../Data.Tuple/index.js":"../output/Data.Tuple/index.js"}],"../output/Data.Unfoldable/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Unfoldable = function Unfoldable(Unfoldable10, unfoldr) {
  this.Unfoldable10 = Unfoldable10;
  this.unfoldr = unfoldr;
};

var unfoldr = function unfoldr(dict) {
  return dict.unfoldr;
};

var unfoldableMaybe = new Unfoldable(function () {
  return Data_Unfoldable1.unfoldable1Maybe;
}, function (f) {
  return function (b) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.fst)(f(b));
  };
});
var unfoldableArray = new Unfoldable(function () {
  return Data_Unfoldable1.unfoldable1Array;
}, $foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));

var replicate = function replicate(dictUnfoldable) {
  return function (n) {
    return function (v) {
      var step = function step(i) {
        var $7 = i <= 0;

        if ($7) {
          return Data_Maybe.Nothing.value;
        }

        ;
        return new Data_Maybe.Just(new Data_Tuple.Tuple(v, i - 1 | 0));
      };

      return unfoldr(dictUnfoldable)(step)(n);
    };
  };
};

var replicateA = function replicateA(dictApplicative) {
  return function (dictUnfoldable) {
    return function (dictTraversable) {
      return function (n) {
        return function (m) {
          return Data_Traversable.sequence(dictTraversable)(dictApplicative)(replicate(dictUnfoldable)(n)(m));
        };
      };
    };
  };
};

var none = function none(dictUnfoldable) {
  return unfoldr(dictUnfoldable)(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Unit.unit);
};

var fromMaybe = function fromMaybe(dictUnfoldable) {
  return unfoldr(dictUnfoldable)(function (b) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Maybe.Nothing.value))(b);
  });
};

module.exports = {
  Unfoldable: Unfoldable,
  unfoldr: unfoldr,
  replicate: replicate,
  replicateA: replicateA,
  none: none,
  fromMaybe: fromMaybe,
  unfoldableArray: unfoldableArray,
  unfoldableMaybe: unfoldableMaybe
};
},{"./foreign.js":"../output/Data.Unfoldable/foreign.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Traversable/index.js":"../output/Data.Traversable/index.js","../Data.Tuple/index.js":"../output/Data.Tuple/index.js","../Data.Unfoldable1/index.js":"../output/Data.Unfoldable1/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js"}],"../output/Control.Monad.List.Trans/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Lazy = require("../Data.Lazy/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Yield = function () {
  function Yield(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Yield.create = function (value0) {
    return function (value1) {
      return new Yield(value0, value1);
    };
  };

  return Yield;
}();

var Skip = function () {
  function Skip(value0) {
    this.value0 = value0;
  }

  ;

  Skip.create = function (value0) {
    return new Skip(value0);
  };

  return Skip;
}();

var Done = function () {
  function Done() {}

  ;
  Done.value = new Done();
  return Done;
}();

var ListT = function ListT(x) {
  return x;
};

var wrapLazy = function wrapLazy(dictApplicative) {
  return function (v) {
    return ListT(Control_Applicative.pure(dictApplicative)(new Skip(v)));
  };
};

var wrapEffect = function wrapEffect(dictFunctor) {
  return function (v) {
    return ListT(Data_Functor.map(dictFunctor)(function ($183) {
      return Skip.create(Data_Lazy.defer(Data_Function["const"]($183)));
    })(v));
  };
};

var unfold = function unfold(dictMonad) {
  return function (f) {
    return function (z) {
      var g = function g(v) {
        if (v instanceof Data_Maybe.Just) {
          return new Yield(v.value0.value1, Data_Lazy.defer(function (v1) {
            return unfold(dictMonad)(f)(v.value0.value0);
          }));
        }

        ;

        if (v instanceof Data_Maybe.Nothing) {
          return Done.value;
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.List.Trans (line 130, column 3 - line 130, column 60): " + [v.constructor.name]);
      };

      return ListT(Data_Functor.map(dictMonad.Bind1().Apply0().Functor0())(g)(f(z)));
    };
  };
};

var uncons = function uncons(dictMonad) {
  return function (v) {
    var g = function g(v1) {
      if (v1 instanceof Yield) {
        return Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Just.create(new Data_Tuple.Tuple(v1.value0, Data_Lazy.force(v1.value1))));
      }

      ;

      if (v1 instanceof Skip) {
        return uncons(dictMonad)(Data_Lazy.force(v1.value0));
      }

      ;

      if (v1 instanceof Done) {
        return Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Nothing.value);
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.List.Trans (line 195, column 3 - line 195, column 50): " + [v1.constructor.name]);
    };

    return Control_Bind.bind(dictMonad.Bind1())(v)(g);
  };
};

var tail = function tail(dictMonad) {
  return function (l) {
    return Data_Functor.map(dictMonad.Bind1().Apply0().Functor0())(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.snd))(uncons(dictMonad)(l));
  };
};

var stepMap = function stepMap(dictFunctor) {
  return function (f) {
    return function (v) {
      return ListT(Data_Functor.map(dictFunctor)(f)(v));
    };
  };
};

var takeWhile = function takeWhile(dictApplicative) {
  return function (f) {
    var g = function g(v) {
      if (v instanceof Yield) {
        var $99 = f(v.value0);

        if ($99) {
          return new Yield(v.value0, Data_Functor.map(Data_Lazy.functorLazy)(takeWhile(dictApplicative)(f))(v.value1));
        }

        ;
        return Done.value;
      }

      ;

      if (v instanceof Skip) {
        return Skip.create(Data_Functor.map(Data_Lazy.functorLazy)(takeWhile(dictApplicative)(f))(v.value0));
      }

      ;

      if (v instanceof Done) {
        return Done.value;
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.List.Trans (line 154, column 3 - line 154, column 68): " + [v.constructor.name]);
    };

    return stepMap(dictApplicative.Apply0().Functor0())(g);
  };
};

var scanl = function scanl(dictMonad) {
  return function (f) {
    return function (b) {
      return function (l) {
        var g = function g(v) {
          var h = function h(v1) {
            if (v1 instanceof Yield) {
              var b$prime$prime = f(v.value0)(v1.value0);
              return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(b$prime$prime, Data_Lazy.force(v1.value1)), v.value0));
            }

            ;

            if (v1 instanceof Skip) {
              return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0, Data_Lazy.force(v1.value0)), v.value0));
            }

            ;

            if (v1 instanceof Done) {
              return Data_Maybe.Nothing.value;
            }

            ;
            throw new Error("Failed pattern match at Control.Monad.List.Trans (line 248, column 5 - line 248, column 78): " + [v1.constructor.name]);
          };

          return Data_Functor.map(dictMonad.Bind1().Apply0().Functor0())(h)(v.value1);
        };

        return unfold(dictMonad)(g)(new Data_Tuple.Tuple(b, l));
      };
    };
  };
};

var prepend$prime = function prepend$prime(dictApplicative) {
  return function (h) {
    return function (t) {
      return ListT(Control_Applicative.pure(dictApplicative)(new Yield(h, t)));
    };
  };
};

var prepend = function prepend(dictApplicative) {
  return function (h) {
    return function (t) {
      return prepend$prime(dictApplicative)(h)(Data_Lazy.defer(Data_Function["const"](t)));
    };
  };
};

var nil = function nil(dictApplicative) {
  return ListT(Control_Applicative.pure(dictApplicative)(Done.value));
};

var singleton = function singleton(dictApplicative) {
  return function (a) {
    return prepend(dictApplicative)(a)(nil(dictApplicative));
  };
};

var take = function take(dictApplicative) {
  return function (v) {
    return function (fa) {
      if (v === 0) {
        return nil(dictApplicative);
      }

      ;

      var f = function f(v1) {
        if (v1 instanceof Yield) {
          return new Yield(v1.value0, Data_Functor.map(Data_Lazy.functorLazy)(take(dictApplicative)(v - 1 | 0))(v1.value1));
        }

        ;

        if (v1 instanceof Skip) {
          return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(take(dictApplicative)(v))(v1.value0));
        }

        ;

        if (v1 instanceof Done) {
          return Done.value;
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.List.Trans (line 147, column 3 - line 147, column 47): " + [v1.constructor.name]);
      };

      return stepMap(dictApplicative.Apply0().Functor0())(f)(fa);
    };
  };
};

var zipWith$prime = function zipWith$prime(dictMonad) {
  return function (f) {
    var g = function g(v) {
      return function (v1) {
        if (v1 instanceof Data_Maybe.Nothing) {
          return Control_Applicative.pure(dictMonad.Applicative0())(nil(dictMonad.Applicative0()));
        }

        ;

        if (v instanceof Data_Maybe.Nothing) {
          return Control_Applicative.pure(dictMonad.Applicative0())(nil(dictMonad.Applicative0()));
        }

        ;

        if (v instanceof Data_Maybe.Just && v1 instanceof Data_Maybe.Just) {
          return Data_Functor.map(dictMonad.Bind1().Apply0().Functor0())(Data_Function.flip(prepend$prime(dictMonad.Applicative0()))(Data_Lazy.defer(function (v2) {
            return zipWith$prime(dictMonad)(f)(v.value0.value1)(v1.value0.value1);
          })))(f(v.value0.value0)(v1.value0.value0));
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.List.Trans (line 260, column 3 - line 260, column 25): " + [v.constructor.name, v1.constructor.name]);
      };
    };

    var loop = function loop(fa) {
      return function (fb) {
        return wrapEffect(dictMonad.Bind1().Apply0().Functor0())(Control_Bind.bind(dictMonad.Bind1())(uncons(dictMonad)(fa))(function (ua) {
          return Control_Bind.bind(dictMonad.Bind1())(uncons(dictMonad)(fb))(function (ub) {
            return g(ua)(ub);
          });
        }));
      };
    };

    return loop;
  };
};

var zipWith = function zipWith(dictMonad) {
  return function (f) {
    var g = function g(a) {
      return function (b) {
        return Control_Applicative.pure(dictMonad.Applicative0())(f(a)(b));
      };
    };

    return zipWith$prime(dictMonad)(g);
  };
};

var newtypeListT = new Data_Newtype.Newtype(function (n) {
  return n;
}, ListT);

var mapMaybe = function mapMaybe(dictFunctor) {
  return function (f) {
    var g = function g(v) {
      if (v instanceof Yield) {
        return Data_Maybe.fromMaybe(Skip.create)(Data_Functor.map(Data_Maybe.functorMaybe)(Yield.create)(f(v.value0)))(Data_Functor.map(Data_Lazy.functorLazy)(mapMaybe(dictFunctor)(f))(v.value1));
      }

      ;

      if (v instanceof Skip) {
        return Skip.create(Data_Functor.map(Data_Lazy.functorLazy)(mapMaybe(dictFunctor)(f))(v.value0));
      }

      ;

      if (v instanceof Done) {
        return Done.value;
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.List.Trans (line 183, column 3 - line 183, column 72): " + [v.constructor.name]);
    };

    return stepMap(dictFunctor)(g);
  };
};

var iterate = function iterate(dictMonad) {
  return function (f) {
    return function (a) {
      var g = function g(x) {
        return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Maybe.Just(new Data_Tuple.Tuple(f(x), x)));
      };

      return unfold(dictMonad)(g)(a);
    };
  };
};

var repeat = function repeat(dictMonad) {
  return iterate(dictMonad)(Control_Category.identity(Control_Category.categoryFn));
};

var head = function head(dictMonad) {
  return function (l) {
    return Data_Functor.map(dictMonad.Bind1().Apply0().Functor0())(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.fst))(uncons(dictMonad)(l));
  };
};

var functorListT = function functorListT(dictFunctor) {
  return new Data_Functor.Functor(function (f) {
    var g = function g(v) {
      if (v instanceof Yield) {
        return new Yield(f(v.value0), Data_Functor.map(Data_Lazy.functorLazy)(Data_Functor.map(functorListT(dictFunctor))(f))(v.value1));
      }

      ;

      if (v instanceof Skip) {
        return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(Data_Functor.map(functorListT(dictFunctor))(f))(v.value0));
      }

      ;

      if (v instanceof Done) {
        return Done.value;
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.List.Trans (line 280, column 5 - line 280, column 48): " + [v.constructor.name]);
    };

    return stepMap(dictFunctor)(g);
  });
};

var fromEffect = function fromEffect(dictApplicative) {
  return function (fa) {
    return ListT(Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Function.flip(Yield.create)(Data_Lazy.defer(function (v) {
      return nil(dictApplicative);
    })))(fa));
  };
};

var monadTransListT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
  return fromEffect(dictMonad.Applicative0());
});

var foldlRec$prime = function foldlRec$prime(dictMonadRec) {
  return function (f) {
    var loop = function loop(b) {
      return function (l) {
        var g = function g(v) {
          if (v instanceof Data_Maybe.Nothing) {
            return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Done(b));
          }

          ;

          if (v instanceof Data_Maybe.Just) {
            return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(f(b)(v.value0.value0))(function (b$prime) {
              return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Loop({
                a: b$prime,
                b: v.value0.value1
              }));
            });
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.List.Trans (line 221, column 5 - line 221, column 45): " + [v.constructor.name]);
        };

        return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(uncons(dictMonadRec.Monad0())(l))(g);
      };
    };

    return Control_Monad_Rec_Class.tailRecM2(dictMonadRec)(loop);
  };
};

var runListTRec = function runListTRec(dictMonadRec) {
  return foldlRec$prime(dictMonadRec)(function (v) {
    return function (v1) {
      return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(Data_Unit.unit);
    };
  })(Data_Unit.unit);
};

var foldlRec = function foldlRec(dictMonadRec) {
  return function (f) {
    var loop = function loop(b) {
      return function (l) {
        var g = function g(v) {
          if (v instanceof Data_Maybe.Nothing) {
            return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Done(b));
          }

          ;

          if (v instanceof Data_Maybe.Just) {
            return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Loop({
              a: f(b)(v.value0.value0),
              b: v.value0.value1
            }));
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.List.Trans (line 239, column 7 - line 239, column 47): " + [v.constructor.name]);
        };

        return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(uncons(dictMonadRec.Monad0())(l))(g);
      };
    };

    return Control_Monad_Rec_Class.tailRecM2(dictMonadRec)(loop);
  };
};

var foldl$prime = function foldl$prime(dictMonad) {
  return function (f) {
    var loop = function loop(b) {
      return function (l) {
        var g = function g(v) {
          if (v instanceof Data_Maybe.Nothing) {
            return Control_Applicative.pure(dictMonad.Applicative0())(b);
          }

          ;

          if (v instanceof Data_Maybe.Just) {
            return Control_Bind.bind(dictMonad.Bind1())(f(b)(v.value0.value0))(Data_Function.flip(loop)(v.value0.value1));
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.List.Trans (line 212, column 5 - line 212, column 35): " + [v.constructor.name]);
        };

        return Control_Bind.bind(dictMonad.Bind1())(uncons(dictMonad)(l))(g);
      };
    };

    return loop;
  };
};

var runListT = function runListT(dictMonad) {
  return foldl$prime(dictMonad)(function (v) {
    return function (v1) {
      return Control_Applicative.pure(dictMonad.Applicative0())(Data_Unit.unit);
    };
  })(Data_Unit.unit);
};

var foldl = function foldl(dictMonad) {
  return function (f) {
    var loop = function loop(b) {
      return function (l) {
        var g = function g(v) {
          if (v instanceof Data_Maybe.Nothing) {
            return Control_Applicative.pure(dictMonad.Applicative0())(b);
          }

          ;

          if (v instanceof Data_Maybe.Just) {
            return loop(f(b)(v.value0.value0))(v.value0.value1);
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.List.Trans (line 229, column 5 - line 229, column 35): " + [v.constructor.name]);
        };

        return Control_Bind.bind(dictMonad.Bind1())(uncons(dictMonad)(l))(g);
      };
    };

    return loop;
  };
};

var filter = function filter(dictFunctor) {
  return function (f) {
    var g = function g(v) {
      if (v instanceof Yield) {
        var s$prime = Data_Functor.map(Data_Lazy.functorLazy)(filter(dictFunctor)(f))(v.value1);
        var $150 = f(v.value0);

        if ($150) {
          return new Yield(v.value0, s$prime);
        }

        ;
        return new Skip(s$prime);
      }

      ;

      if (v instanceof Skip) {
        var s$prime = Data_Functor.map(Data_Lazy.functorLazy)(filter(dictFunctor)(f))(v.value0);
        return new Skip(s$prime);
      }

      ;

      if (v instanceof Done) {
        return Done.value;
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.List.Trans (line 176, column 3 - line 176, column 80): " + [v.constructor.name]);
    };

    return stepMap(dictFunctor)(g);
  };
};

var dropWhile = function dropWhile(dictApplicative) {
  return function (f) {
    var g = function g(v) {
      if (v instanceof Yield) {
        var $155 = f(v.value0);

        if ($155) {
          return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(dropWhile(dictApplicative)(f))(v.value1));
        }

        ;
        return new Yield(v.value0, v.value1);
      }

      ;

      if (v instanceof Skip) {
        return Skip.create(Data_Functor.map(Data_Lazy.functorLazy)(dropWhile(dictApplicative)(f))(v.value0));
      }

      ;

      if (v instanceof Done) {
        return Done.value;
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.List.Trans (line 169, column 3 - line 169, column 70): " + [v.constructor.name]);
    };

    return stepMap(dictApplicative.Apply0().Functor0())(g);
  };
};

var drop = function drop(dictApplicative) {
  return function (v) {
    return function (fa) {
      if (v === 0) {
        return fa;
      }

      ;

      var f = function f(v1) {
        if (v1 instanceof Yield) {
          return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(drop(dictApplicative)(v - 1 | 0))(v1.value1));
        }

        ;

        if (v1 instanceof Skip) {
          return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(drop(dictApplicative)(v))(v1.value0));
        }

        ;

        if (v1 instanceof Done) {
          return Done.value;
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.List.Trans (line 162, column 3 - line 162, column 44): " + [v1.constructor.name]);
      };

      return stepMap(dictApplicative.Apply0().Functor0())(f)(fa);
    };
  };
};

var cons = function cons(dictApplicative) {
  return function (lh) {
    return function (t) {
      return ListT(Control_Applicative.pure(dictApplicative)(new Yield(Data_Lazy.force(lh), t)));
    };
  };
};

var unfoldable1ListT = function unfoldable1ListT(dictMonad) {
  return new Data_Unfoldable1.Unfoldable1(function (f) {
    return function (b) {
      var go = function go(v) {
        if (v.value1 instanceof Data_Maybe.Nothing) {
          return singleton(dictMonad.Applicative0())(v.value0);
        }

        ;

        if (v.value1 instanceof Data_Maybe.Just) {
          return cons(dictMonad.Applicative0())(Control_Applicative.pure(Data_Lazy.applicativeLazy)(v.value0))(Data_Lazy.defer(function (v1) {
            return go(f(v.value1.value0));
          }));
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.List.Trans (line 294, column 12 - line 296, column 67): " + [v.constructor.name]);
      };

      return go(f(b));
    };
  });
};

var unfoldableListT = function unfoldableListT(dictMonad) {
  return new Data_Unfoldable.Unfoldable(function () {
    return unfoldable1ListT(dictMonad);
  }, function (f) {
    return function (b) {
      var go = function go(v) {
        if (v instanceof Data_Maybe.Nothing) {
          return nil(dictMonad.Applicative0());
        }

        ;

        if (v instanceof Data_Maybe.Just) {
          return cons(dictMonad.Applicative0())(Control_Applicative.pure(Data_Lazy.applicativeLazy)(v.value0.value0))(Data_Lazy.defer(function (v1) {
            return go(f(v.value0.value1));
          }));
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.List.Trans (line 287, column 12 - line 289, column 67): " + [v.constructor.name]);
      };

      return go(f(b));
    };
  });
};

var semigroupListT = function semigroupListT(dictApplicative) {
  return new Data_Semigroup.Semigroup(concat(dictApplicative));
};

var concat = function concat(dictApplicative) {
  return function (x) {
    return function (y) {
      var f = function f(v) {
        if (v instanceof Yield) {
          return new Yield(v.value0, Data_Functor.map(Data_Lazy.functorLazy)(function (v1) {
            return Data_Semigroup.append(semigroupListT(dictApplicative))(v1)(y);
          })(v.value1));
        }

        ;

        if (v instanceof Skip) {
          return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(function (v1) {
            return Data_Semigroup.append(semigroupListT(dictApplicative))(v1)(y);
          })(v.value0));
        }

        ;

        if (v instanceof Done) {
          return new Skip(Data_Lazy.defer(Data_Function["const"](y)));
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.List.Trans (line 106, column 3 - line 106, column 43): " + [v.constructor.name]);
      };

      return stepMap(dictApplicative.Apply0().Functor0())(f)(x);
    };
  };
};

var monoidListT = function monoidListT(dictApplicative) {
  return new Data_Monoid.Monoid(function () {
    return semigroupListT(dictApplicative);
  }, nil(dictApplicative));
};

var catMaybes = function catMaybes(dictFunctor) {
  return mapMaybe(dictFunctor)(Control_Category.identity(Control_Category.categoryFn));
};

var monadListT = function monadListT(dictMonad) {
  return new Control_Monad.Monad(function () {
    return applicativeListT(dictMonad);
  }, function () {
    return bindListT(dictMonad);
  });
};

var bindListT = function bindListT(dictMonad) {
  return new Control_Bind.Bind(function () {
    return applyListT(dictMonad);
  }, function (fa) {
    return function (f) {
      var g = function g(v) {
        if (v instanceof Yield) {
          var h = function h(s$prime) {
            return Data_Semigroup.append(semigroupListT(dictMonad.Applicative0()))(f(v.value0))(Control_Bind.bind(bindListT(dictMonad))(s$prime)(f));
          };

          return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(h)(v.value1));
        }

        ;

        if (v instanceof Skip) {
          return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(function (v1) {
            return Control_Bind.bind(bindListT(dictMonad))(v1)(f);
          })(v.value0));
        }

        ;

        if (v instanceof Done) {
          return Done.value;
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.List.Trans (line 306, column 5 - line 308, column 31): " + [v.constructor.name]);
      };

      return stepMap(dictMonad.Bind1().Apply0().Functor0())(g)(fa);
    };
  });
};

var applyListT = function applyListT(dictMonad) {
  return new Control_Apply.Apply(function () {
    return functorListT(dictMonad.Bind1().Apply0().Functor0());
  }, Control_Monad.ap(monadListT(dictMonad)));
};

var applicativeListT = function applicativeListT(dictMonad) {
  return new Control_Applicative.Applicative(function () {
    return applyListT(dictMonad);
  }, singleton(dictMonad.Applicative0()));
};

var monadEffectListT = function monadEffectListT(dictMonadEffect) {
  return new Effect_Class.MonadEffect(function () {
    return monadListT(dictMonadEffect.Monad0());
  }, function () {
    var $184 = Control_Monad_Trans_Class.lift(monadTransListT)(dictMonadEffect.Monad0());
    var $185 = Effect_Class.liftEffect(dictMonadEffect);
    return function ($186) {
      return $184($185($186));
    };
  }());
};

var altListT = function altListT(dictApplicative) {
  return new Control_Alt.Alt(function () {
    return functorListT(dictApplicative.Apply0().Functor0());
  }, concat(dictApplicative));
};

var plusListT = function plusListT(dictMonad) {
  return new Control_Plus.Plus(function () {
    return altListT(dictMonad.Applicative0());
  }, nil(dictMonad.Applicative0()));
};

var alternativeListT = function alternativeListT(dictMonad) {
  return new Control_Alternative.Alternative(function () {
    return applicativeListT(dictMonad);
  }, function () {
    return plusListT(dictMonad);
  });
};

var monadZeroListT = function monadZeroListT(dictMonad) {
  return new Control_MonadZero.MonadZero(function () {
    return alternativeListT(dictMonad);
  }, function () {
    return monadListT(dictMonad);
  });
};

var monadPlusListT = function monadPlusListT(dictMonad) {
  return new Control_MonadPlus.MonadPlus(function () {
    return monadZeroListT(dictMonad);
  });
};

module.exports = {
  ListT: ListT,
  Yield: Yield,
  Skip: Skip,
  Done: Done,
  catMaybes: catMaybes,
  cons: cons,
  drop: drop,
  dropWhile: dropWhile,
  filter: filter,
  foldl: foldl,
  foldlRec: foldlRec,
  "foldl'": foldl$prime,
  "foldlRec'": foldlRec$prime,
  fromEffect: fromEffect,
  head: head,
  iterate: iterate,
  mapMaybe: mapMaybe,
  nil: nil,
  prepend: prepend,
  "prepend'": prepend$prime,
  repeat: repeat,
  runListT: runListT,
  runListTRec: runListTRec,
  scanl: scanl,
  singleton: singleton,
  tail: tail,
  take: take,
  takeWhile: takeWhile,
  uncons: uncons,
  unfold: unfold,
  wrapEffect: wrapEffect,
  wrapLazy: wrapLazy,
  zipWith: zipWith,
  "zipWith'": zipWith$prime,
  newtypeListT: newtypeListT,
  semigroupListT: semigroupListT,
  monoidListT: monoidListT,
  functorListT: functorListT,
  unfoldableListT: unfoldableListT,
  unfoldable1ListT: unfoldable1ListT,
  applyListT: applyListT,
  applicativeListT: applicativeListT,
  bindListT: bindListT,
  monadListT: monadListT,
  monadTransListT: monadTransListT,
  altListT: altListT,
  plusListT: plusListT,
  alternativeListT: alternativeListT,
  monadZeroListT: monadZeroListT,
  monadPlusListT: monadPlusListT,
  monadEffectListT: monadEffectListT
};
},{"../Control.Alt/index.js":"../output/Control.Alt/index.js","../Control.Alternative/index.js":"../output/Control.Alternative/index.js","../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Category/index.js":"../output/Control.Category/index.js","../Control.Monad/index.js":"../output/Control.Monad/index.js","../Control.Monad.Rec.Class/index.js":"../output/Control.Monad.Rec.Class/index.js","../Control.Monad.Trans.Class/index.js":"../output/Control.Monad.Trans.Class/index.js","../Control.MonadPlus/index.js":"../output/Control.MonadPlus/index.js","../Control.MonadZero/index.js":"../output/Control.MonadZero/index.js","../Control.Plus/index.js":"../output/Control.Plus/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Lazy/index.js":"../output/Data.Lazy/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Tuple/index.js":"../output/Data.Tuple/index.js","../Data.Unfoldable/index.js":"../output/Data.Unfoldable/index.js","../Data.Unfoldable1/index.js":"../output/Data.Unfoldable1/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js","../Effect.Class/index.js":"../output/Effect.Class/index.js"}],"../output/Control.Monad.RWS.Trans/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Lazy = require("../Control.Lazy/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var RWSResult = function () {
  function RWSResult(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  ;

  RWSResult.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return new RWSResult(value0, value1, value2);
      };
    };
  };

  return RWSResult;
}();

var RWST = function RWST(x) {
  return x;
};

var withRWST = function withRWST(f) {
  return function (m) {
    return function (r) {
      return function (s) {
        return Data_Tuple.uncurry(m)(f(r)(s));
      };
    };
  };
};

var runRWST = function runRWST(v) {
  return v;
};

var newtypeRWST = new Data_Newtype.Newtype(function (n) {
  return n;
}, RWST);

var monadTransRWST = function monadTransRWST(dictMonoid) {
  return new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return function (m) {
      return function (v) {
        return function (s) {
          return Control_Bind.bind(dictMonad.Bind1())(m)(function (a) {
            return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(s, a, Data_Monoid.mempty(dictMonoid)));
          });
        };
      };
    };
  });
};

var mapRWST = function mapRWST(f) {
  return function (v) {
    return function (r) {
      return function (s) {
        return f(v(r)(s));
      };
    };
  };
};

var lazyRWST = new Control_Lazy.Lazy(function (f) {
  return function (r) {
    return function (s) {
      var v = f(Data_Unit.unit);
      return v(r)(s);
    };
  };
});

var functorRWST = function functorRWST(dictFunctor) {
  return new Data_Functor.Functor(function (f) {
    return function (v) {
      return function (r) {
        return function (s) {
          return Data_Functor.map(dictFunctor)(function (v1) {
            return new RWSResult(v1.value0, f(v1.value1), v1.value2);
          })(v(r)(s));
        };
      };
    };
  });
};

var execRWST = function execRWST(dictMonad) {
  return function (v) {
    return function (r) {
      return function (s) {
        return Control_Bind.bind(dictMonad.Bind1())(v(r)(s))(function (v1) {
          return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0, v1.value2));
        });
      };
    };
  };
};

var evalRWST = function evalRWST(dictMonad) {
  return function (v) {
    return function (r) {
      return function (s) {
        return Control_Bind.bind(dictMonad.Bind1())(v(r)(s))(function (v1) {
          return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value1, v1.value2));
        });
      };
    };
  };
};

var applyRWST = function applyRWST(dictBind) {
  return function (dictMonoid) {
    return new Control_Apply.Apply(function () {
      return functorRWST(dictBind.Apply0().Functor0());
    }, function (v) {
      return function (v1) {
        return function (r) {
          return function (s) {
            return Control_Bind.bind(dictBind)(v(r)(s))(function (v2) {
              return Data_Functor.mapFlipped(dictBind.Apply0().Functor0())(v1(r)(v2.value0))(function (v3) {
                return new RWSResult(v3.value0, v2.value1(v3.value1), Data_Semigroup.append(dictMonoid.Semigroup0())(v2.value2)(v3.value2));
              });
            });
          };
        };
      };
    });
  };
};

var bindRWST = function bindRWST(dictBind) {
  return function (dictMonoid) {
    return new Control_Bind.Bind(function () {
      return applyRWST(dictBind)(dictMonoid);
    }, function (v) {
      return function (f) {
        return function (r) {
          return function (s) {
            return Control_Bind.bind(dictBind)(v(r)(s))(function (v1) {
              var v2 = f(v1.value1);
              return Data_Functor.mapFlipped(dictBind.Apply0().Functor0())(v2(r)(v1.value0))(function (v3) {
                return new RWSResult(v3.value0, v3.value1, Data_Semigroup.append(dictMonoid.Semigroup0())(v1.value2)(v3.value2));
              });
            });
          };
        };
      };
    });
  };
};

var applicativeRWST = function applicativeRWST(dictMonad) {
  return function (dictMonoid) {
    return new Control_Applicative.Applicative(function () {
      return applyRWST(dictMonad.Bind1())(dictMonoid);
    }, function (a) {
      return function (v) {
        return function (s) {
          return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(s, a, Data_Monoid.mempty(dictMonoid)));
        };
      };
    });
  };
};

var monadRWST = function monadRWST(dictMonad) {
  return function (dictMonoid) {
    return new Control_Monad.Monad(function () {
      return applicativeRWST(dictMonad)(dictMonoid);
    }, function () {
      return bindRWST(dictMonad.Bind1())(dictMonoid);
    });
  };
};

var monadAskRWST = function monadAskRWST(dictMonad) {
  return function (dictMonoid) {
    return new Control_Monad_Reader_Class.MonadAsk(function () {
      return monadRWST(dictMonad)(dictMonoid);
    }, function (r) {
      return function (s) {
        return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(s, r, Data_Monoid.mempty(dictMonoid)));
      };
    });
  };
};

var monadReaderRWST = function monadReaderRWST(dictMonad) {
  return function (dictMonoid) {
    return new Control_Monad_Reader_Class.MonadReader(function () {
      return monadAskRWST(dictMonad)(dictMonoid);
    }, function (f) {
      return function (m) {
        return function (r) {
          return function (s) {
            return m(f(r))(s);
          };
        };
      };
    });
  };
};

var monadEffectRWS = function monadEffectRWS(dictMonoid) {
  return function (dictMonadEffect) {
    return new Effect_Class.MonadEffect(function () {
      return monadRWST(dictMonadEffect.Monad0())(dictMonoid);
    }, function () {
      var $155 = Control_Monad_Trans_Class.lift(monadTransRWST(dictMonoid))(dictMonadEffect.Monad0());
      var $156 = Effect_Class.liftEffect(dictMonadEffect);
      return function ($157) {
        return $155($156($157));
      };
    }());
  };
};

var monadRecRWST = function monadRecRWST(dictMonadRec) {
  return function (dictMonoid) {
    return new Control_Monad_Rec_Class.MonadRec(function () {
      return monadRWST(dictMonadRec.Monad0())(dictMonoid);
    }, function (k) {
      return function (a) {
        var k$prime = function k$prime(r) {
          return function (v) {
            var v1 = k(v.value1);
            return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(v1(r)(v.value0))(function (v2) {
              return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(function () {
                if (v2.value1 instanceof Control_Monad_Rec_Class.Loop) {
                  return new Control_Monad_Rec_Class.Loop(new RWSResult(v2.value0, v2.value1.value0, Data_Semigroup.append(dictMonoid.Semigroup0())(v.value2)(v2.value2)));
                }

                ;

                if (v2.value1 instanceof Control_Monad_Rec_Class.Done) {
                  return new Control_Monad_Rec_Class.Done(new RWSResult(v2.value0, v2.value1.value0, Data_Semigroup.append(dictMonoid.Semigroup0())(v.value2)(v2.value2)));
                }

                ;
                throw new Error("Failed pattern match at Control.Monad.RWS.Trans (line 127, column 16 - line 129, column 68): " + [v2.value1.constructor.name]);
              }());
            });
          };
        };

        return function (r) {
          return function (s) {
            return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(k$prime(r))(new RWSResult(s, a, Data_Monoid.mempty(dictMonoid)));
          };
        };
      };
    });
  };
};

var monadStateRWST = function monadStateRWST(dictMonad) {
  return function (dictMonoid) {
    return new Control_Monad_State_Class.MonadState(function () {
      return monadRWST(dictMonad)(dictMonoid);
    }, function (f) {
      return function (v) {
        return function (s) {
          var v1 = f(s);
          return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(v1.value1, v1.value0, Data_Monoid.mempty(dictMonoid)));
        };
      };
    });
  };
};

var monadTellRWST = function monadTellRWST(dictMonad) {
  return function (dictMonoid) {
    return new Control_Monad_Writer_Class.MonadTell(function () {
      return monadRWST(dictMonad)(dictMonoid);
    }, function (w) {
      return function (v) {
        return function (s) {
          return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(s, Data_Unit.unit, w));
        };
      };
    });
  };
};

var monadWriterRWST = function monadWriterRWST(dictMonad) {
  return function (dictMonoid) {
    return new Control_Monad_Writer_Class.MonadWriter(function () {
      return monadTellRWST(dictMonad)(dictMonoid);
    }, function (m) {
      return function (r) {
        return function (s) {
          return Control_Bind.bind(dictMonad.Bind1())(m(r)(s))(function (v) {
            return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(v.value0, new Data_Tuple.Tuple(v.value1, v.value2), v.value2));
          });
        };
      };
    }, function (m) {
      return function (r) {
        return function (s) {
          return Control_Bind.bind(dictMonad.Bind1())(m(r)(s))(function (v) {
            return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(v.value0, v.value1.value0, v.value1.value1(v.value2)));
          });
        };
      };
    });
  };
};

var monadThrowRWST = function monadThrowRWST(dictMonadThrow) {
  return function (dictMonoid) {
    return new Control_Monad_Error_Class.MonadThrow(function () {
      return monadRWST(dictMonadThrow.Monad0())(dictMonoid);
    }, function (e) {
      return Control_Monad_Trans_Class.lift(monadTransRWST(dictMonoid))(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)(e));
    });
  };
};

var monadErrorRWST = function monadErrorRWST(dictMonadError) {
  return function (dictMonoid) {
    return new Control_Monad_Error_Class.MonadError(function () {
      return monadThrowRWST(dictMonadError.MonadThrow0())(dictMonoid);
    }, function (m) {
      return function (h) {
        return RWST(function (r) {
          return function (s) {
            return Control_Monad_Error_Class.catchError(dictMonadError)(m(r)(s))(function (e) {
              var v = h(e);
              return v(r)(s);
            });
          };
        });
      };
    });
  };
};

var altRWST = function altRWST(dictAlt) {
  return new Control_Alt.Alt(function () {
    return functorRWST(dictAlt.Functor0());
  }, function (v) {
    return function (v1) {
      return RWST(function (r) {
        return function (s) {
          return Control_Alt.alt(dictAlt)(v(r)(s))(v1(r)(s));
        };
      });
    };
  });
};

var plusRWST = function plusRWST(dictPlus) {
  return new Control_Plus.Plus(function () {
    return altRWST(dictPlus.Alt0());
  }, function (v) {
    return function (v1) {
      return Control_Plus.empty(dictPlus);
    };
  });
};

var alternativeRWST = function alternativeRWST(dictMonoid) {
  return function (dictAlternative) {
    return function (dictMonad) {
      return new Control_Alternative.Alternative(function () {
        return applicativeRWST(dictMonad)(dictMonoid);
      }, function () {
        return plusRWST(dictAlternative.Plus1());
      });
    };
  };
};

module.exports = {
  RWSResult: RWSResult,
  RWST: RWST,
  runRWST: runRWST,
  evalRWST: evalRWST,
  execRWST: execRWST,
  mapRWST: mapRWST,
  withRWST: withRWST,
  newtypeRWST: newtypeRWST,
  functorRWST: functorRWST,
  applyRWST: applyRWST,
  altRWST: altRWST,
  alternativeRWST: alternativeRWST,
  bindRWST: bindRWST,
  applicativeRWST: applicativeRWST,
  monadRWST: monadRWST,
  monadTransRWST: monadTransRWST,
  lazyRWST: lazyRWST,
  monadEffectRWS: monadEffectRWS,
  monadAskRWST: monadAskRWST,
  monadReaderRWST: monadReaderRWST,
  monadStateRWST: monadStateRWST,
  monadTellRWST: monadTellRWST,
  monadWriterRWST: monadWriterRWST,
  monadThrowRWST: monadThrowRWST,
  monadErrorRWST: monadErrorRWST,
  monadRecRWST: monadRecRWST,
  plusRWST: plusRWST
};
},{"../Control.Alt/index.js":"../output/Control.Alt/index.js","../Control.Alternative/index.js":"../output/Control.Alternative/index.js","../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Lazy/index.js":"../output/Control.Lazy/index.js","../Control.Monad/index.js":"../output/Control.Monad/index.js","../Control.Monad.Error.Class/index.js":"../output/Control.Monad.Error.Class/index.js","../Control.Monad.Reader.Class/index.js":"../output/Control.Monad.Reader.Class/index.js","../Control.Monad.Rec.Class/index.js":"../output/Control.Monad.Rec.Class/index.js","../Control.Monad.State.Class/index.js":"../output/Control.Monad.State.Class/index.js","../Control.Monad.Trans.Class/index.js":"../output/Control.Monad.Trans.Class/index.js","../Control.Monad.Writer.Class/index.js":"../output/Control.Monad.Writer.Class/index.js","../Control.Plus/index.js":"../output/Control.Plus/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Tuple/index.js":"../output/Data.Tuple/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js","../Effect.Class/index.js":"../output/Effect.Class/index.js"}],"../output/Control.Monad.State.Trans/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Lazy = require("../Control.Lazy/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var StateT = function StateT(x) {
  return x;
};

var withStateT = function withStateT(f) {
  return function (v) {
    return function ($105) {
      return v(f($105));
    };
  };
};

var runStateT = function runStateT(v) {
  return v;
};

var newtypeStateT = new Data_Newtype.Newtype(function (n) {
  return n;
}, StateT);
var monadTransStateT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
  return function (m) {
    return function (s) {
      return Control_Bind.bind(dictMonad.Bind1())(m)(function (x) {
        return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(x, s));
      });
    };
  };
});

var mapStateT = function mapStateT(f) {
  return function (v) {
    return function ($106) {
      return f(v($106));
    };
  };
};

var lazyStateT = new Control_Lazy.Lazy(function (f) {
  return function (s) {
    var v = f(Data_Unit.unit);
    return v(s);
  };
});

var functorStateT = function functorStateT(dictFunctor) {
  return new Data_Functor.Functor(function (f) {
    return function (v) {
      return function (s) {
        return Data_Functor.map(dictFunctor)(function (v1) {
          return new Data_Tuple.Tuple(f(v1.value0), v1.value1);
        })(v(s));
      };
    };
  });
};

var execStateT = function execStateT(dictFunctor) {
  return function (v) {
    return function (s) {
      return Data_Functor.map(dictFunctor)(Data_Tuple.snd)(v(s));
    };
  };
};

var evalStateT = function evalStateT(dictFunctor) {
  return function (v) {
    return function (s) {
      return Data_Functor.map(dictFunctor)(Data_Tuple.fst)(v(s));
    };
  };
};

var monadStateT = function monadStateT(dictMonad) {
  return new Control_Monad.Monad(function () {
    return applicativeStateT(dictMonad);
  }, function () {
    return bindStateT(dictMonad);
  });
};

var bindStateT = function bindStateT(dictMonad) {
  return new Control_Bind.Bind(function () {
    return applyStateT(dictMonad);
  }, function (v) {
    return function (f) {
      return function (s) {
        return Control_Bind.bind(dictMonad.Bind1())(v(s))(function (v1) {
          var v3 = f(v1.value0);
          return v3(v1.value1);
        });
      };
    };
  });
};

var applyStateT = function applyStateT(dictMonad) {
  return new Control_Apply.Apply(function () {
    return functorStateT(dictMonad.Bind1().Apply0().Functor0());
  }, Control_Monad.ap(monadStateT(dictMonad)));
};

var applicativeStateT = function applicativeStateT(dictMonad) {
  return new Control_Applicative.Applicative(function () {
    return applyStateT(dictMonad);
  }, function (a) {
    return function (s) {
      return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(a, s));
    };
  });
};

var monadAskStateT = function monadAskStateT(dictMonadAsk) {
  return new Control_Monad_Reader_Class.MonadAsk(function () {
    return monadStateT(dictMonadAsk.Monad0());
  }, Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
};

var monadReaderStateT = function monadReaderStateT(dictMonadReader) {
  return new Control_Monad_Reader_Class.MonadReader(function () {
    return monadAskStateT(dictMonadReader.MonadAsk0());
  }, function () {
    var $107 = Control_Monad_Reader_Class.local(dictMonadReader);
    return function ($108) {
      return mapStateT($107($108));
    };
  }());
};

var monadContStateT = function monadContStateT(dictMonadCont) {
  return new Control_Monad_Cont_Class.MonadCont(function () {
    return monadStateT(dictMonadCont.Monad0());
  }, function (f) {
    return function (s) {
      return Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
        var v = f(function (a) {
          return function (s$prime) {
            return c(new Data_Tuple.Tuple(a, s$prime));
          };
        });
        return v(s);
      });
    };
  });
};

var monadEffectState = function monadEffectState(dictMonadEffect) {
  return new Effect_Class.MonadEffect(function () {
    return monadStateT(dictMonadEffect.Monad0());
  }, function () {
    var $109 = Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadEffect.Monad0());
    var $110 = Effect_Class.liftEffect(dictMonadEffect);
    return function ($111) {
      return $109($110($111));
    };
  }());
};

var monadRecStateT = function monadRecStateT(dictMonadRec) {
  return new Control_Monad_Rec_Class.MonadRec(function () {
    return monadStateT(dictMonadRec.Monad0());
  }, function (f) {
    return function (a) {
      var f$prime = function f$prime(v) {
        var v1 = f(v.value0);
        return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(v1(v.value1))(function (v2) {
          return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(function () {
            if (v2.value0 instanceof Control_Monad_Rec_Class.Loop) {
              return new Control_Monad_Rec_Class.Loop(new Data_Tuple.Tuple(v2.value0.value0, v2.value1));
            }

            ;

            if (v2.value0 instanceof Control_Monad_Rec_Class.Done) {
              return new Control_Monad_Rec_Class.Done(new Data_Tuple.Tuple(v2.value0.value0, v2.value1));
            }

            ;
            throw new Error("Failed pattern match at Control.Monad.State.Trans (line 87, column 16 - line 89, column 40): " + [v2.value0.constructor.name]);
          }());
        });
      };

      return function (s) {
        return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(f$prime)(new Data_Tuple.Tuple(a, s));
      };
    };
  });
};

var monadStateStateT = function monadStateStateT(dictMonad) {
  return new Control_Monad_State_Class.MonadState(function () {
    return monadStateT(dictMonad);
  }, function (f) {
    return StateT(function () {
      var $112 = Control_Applicative.pure(dictMonad.Applicative0());
      return function ($113) {
        return $112(f($113));
      };
    }());
  });
};

var monadTellStateT = function monadTellStateT(dictMonadTell) {
  return new Control_Monad_Writer_Class.MonadTell(function () {
    return monadStateT(dictMonadTell.Monad0());
  }, function () {
    var $114 = Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadTell.Monad0());
    var $115 = Control_Monad_Writer_Class.tell(dictMonadTell);
    return function ($116) {
      return $114($115($116));
    };
  }());
};

var monadWriterStateT = function monadWriterStateT(dictMonadWriter) {
  return new Control_Monad_Writer_Class.MonadWriter(function () {
    return monadTellStateT(dictMonadWriter.MonadTell0());
  }, function (m) {
    return function (s) {
      return Control_Bind.bind(dictMonadWriter.MonadTell0().Monad0().Bind1())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m(s)))(function (v) {
        return Control_Applicative.pure(dictMonadWriter.MonadTell0().Monad0().Applicative0())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value0, v.value1), v.value0.value1));
      });
    };
  }, function (m) {
    return function (s) {
      return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind(dictMonadWriter.MonadTell0().Monad0().Bind1())(m(s))(function (v) {
        return Control_Applicative.pure(dictMonadWriter.MonadTell0().Monad0().Applicative0())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value0, v.value1), v.value0.value1));
      }));
    };
  });
};

var monadThrowStateT = function monadThrowStateT(dictMonadThrow) {
  return new Control_Monad_Error_Class.MonadThrow(function () {
    return monadStateT(dictMonadThrow.Monad0());
  }, function (e) {
    return Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)(e));
  });
};

var monadErrorStateT = function monadErrorStateT(dictMonadError) {
  return new Control_Monad_Error_Class.MonadError(function () {
    return monadThrowStateT(dictMonadError.MonadThrow0());
  }, function (v) {
    return function (h) {
      return function (s) {
        return Control_Monad_Error_Class.catchError(dictMonadError)(v(s))(function (e) {
          var v1 = h(e);
          return v1(s);
        });
      };
    };
  });
};

var altStateT = function altStateT(dictMonad) {
  return function (dictAlt) {
    return new Control_Alt.Alt(function () {
      return functorStateT(dictAlt.Functor0());
    }, function (v) {
      return function (v1) {
        return function (s) {
          return Control_Alt.alt(dictAlt)(v(s))(v1(s));
        };
      };
    });
  };
};

var plusStateT = function plusStateT(dictMonad) {
  return function (dictPlus) {
    return new Control_Plus.Plus(function () {
      return altStateT(dictMonad)(dictPlus.Alt0());
    }, function (v) {
      return Control_Plus.empty(dictPlus);
    });
  };
};

var alternativeStateT = function alternativeStateT(dictMonad) {
  return function (dictAlternative) {
    return new Control_Alternative.Alternative(function () {
      return applicativeStateT(dictMonad);
    }, function () {
      return plusStateT(dictMonad)(dictAlternative.Plus1());
    });
  };
};

var monadZeroStateT = function monadZeroStateT(dictMonadZero) {
  return new Control_MonadZero.MonadZero(function () {
    return alternativeStateT(dictMonadZero.Monad0())(dictMonadZero.Alternative1());
  }, function () {
    return monadStateT(dictMonadZero.Monad0());
  });
};

var monadPlusStateT = function monadPlusStateT(dictMonadPlus) {
  return new Control_MonadPlus.MonadPlus(function () {
    return monadZeroStateT(dictMonadPlus.MonadZero0());
  });
};

module.exports = {
  StateT: StateT,
  runStateT: runStateT,
  evalStateT: evalStateT,
  execStateT: execStateT,
  mapStateT: mapStateT,
  withStateT: withStateT,
  newtypeStateT: newtypeStateT,
  functorStateT: functorStateT,
  applyStateT: applyStateT,
  applicativeStateT: applicativeStateT,
  altStateT: altStateT,
  plusStateT: plusStateT,
  alternativeStateT: alternativeStateT,
  bindStateT: bindStateT,
  monadStateT: monadStateT,
  monadRecStateT: monadRecStateT,
  monadZeroStateT: monadZeroStateT,
  monadPlusStateT: monadPlusStateT,
  monadTransStateT: monadTransStateT,
  lazyStateT: lazyStateT,
  monadEffectState: monadEffectState,
  monadContStateT: monadContStateT,
  monadThrowStateT: monadThrowStateT,
  monadErrorStateT: monadErrorStateT,
  monadAskStateT: monadAskStateT,
  monadReaderStateT: monadReaderStateT,
  monadStateStateT: monadStateStateT,
  monadTellStateT: monadTellStateT,
  monadWriterStateT: monadWriterStateT
};
},{"../Control.Alt/index.js":"../output/Control.Alt/index.js","../Control.Alternative/index.js":"../output/Control.Alternative/index.js","../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Lazy/index.js":"../output/Control.Lazy/index.js","../Control.Monad/index.js":"../output/Control.Monad/index.js","../Control.Monad.Cont.Class/index.js":"../output/Control.Monad.Cont.Class/index.js","../Control.Monad.Error.Class/index.js":"../output/Control.Monad.Error.Class/index.js","../Control.Monad.Reader.Class/index.js":"../output/Control.Monad.Reader.Class/index.js","../Control.Monad.Rec.Class/index.js":"../output/Control.Monad.Rec.Class/index.js","../Control.Monad.State.Class/index.js":"../output/Control.Monad.State.Class/index.js","../Control.Monad.Trans.Class/index.js":"../output/Control.Monad.Trans.Class/index.js","../Control.Monad.Writer.Class/index.js":"../output/Control.Monad.Writer.Class/index.js","../Control.MonadPlus/index.js":"../output/Control.MonadPlus/index.js","../Control.MonadZero/index.js":"../output/Control.MonadZero/index.js","../Control.Plus/index.js":"../output/Control.Plus/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Tuple/index.js":"../output/Data.Tuple/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js","../Effect.Class/index.js":"../output/Effect.Class/index.js"}],"../output/Effect.Aff.Class/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Control_Monad_Cont_Trans = require("../Control.Monad.Cont.Trans/index.js");

var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");

var Control_Monad_List_Trans = require("../Control.Monad.List.Trans/index.js");

var Control_Monad_Maybe_Trans = require("../Control.Monad.Maybe.Trans/index.js");

var Control_Monad_RWS_Trans = require("../Control.Monad.RWS.Trans/index.js");

var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans/index.js");

var Control_Monad_State_Trans = require("../Control.Monad.State.Trans/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Monad_Writer_Trans = require("../Control.Monad.Writer.Trans/index.js");

var Effect_Aff = require("../Effect.Aff/index.js");

var MonadAff = function MonadAff(MonadEffect0, liftAff) {
  this.MonadEffect0 = MonadEffect0;
  this.liftAff = liftAff;
};

var monadAffAff = new MonadAff(function () {
  return Effect_Aff.monadEffectAff;
}, Control_Category.identity(Control_Category.categoryFn));

var liftAff = function liftAff(dict) {
  return dict.liftAff;
};

var monadAffContT = function monadAffContT(dictMonadAff) {
  return new MonadAff(function () {
    return Control_Monad_Cont_Trans.monadEffectContT(dictMonadAff.MonadEffect0());
  }, function () {
    var $10 = Control_Monad_Trans_Class.lift(Control_Monad_Cont_Trans.monadTransContT)(dictMonadAff.MonadEffect0().Monad0());
    var $11 = liftAff(dictMonadAff);
    return function ($12) {
      return $10($11($12));
    };
  }());
};

var monadAffExceptT = function monadAffExceptT(dictMonadAff) {
  return new MonadAff(function () {
    return Control_Monad_Except_Trans.monadEffectExceptT(dictMonadAff.MonadEffect0());
  }, function () {
    var $13 = Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(dictMonadAff.MonadEffect0().Monad0());
    var $14 = liftAff(dictMonadAff);
    return function ($15) {
      return $13($14($15));
    };
  }());
};

var monadAffListT = function monadAffListT(dictMonadAff) {
  return new MonadAff(function () {
    return Control_Monad_List_Trans.monadEffectListT(dictMonadAff.MonadEffect0());
  }, function () {
    var $16 = Control_Monad_Trans_Class.lift(Control_Monad_List_Trans.monadTransListT)(dictMonadAff.MonadEffect0().Monad0());
    var $17 = liftAff(dictMonadAff);
    return function ($18) {
      return $16($17($18));
    };
  }());
};

var monadAffMaybe = function monadAffMaybe(dictMonadAff) {
  return new MonadAff(function () {
    return Control_Monad_Maybe_Trans.monadEffectMaybe(dictMonadAff.MonadEffect0());
  }, function () {
    var $19 = Control_Monad_Trans_Class.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(dictMonadAff.MonadEffect0().Monad0());
    var $20 = liftAff(dictMonadAff);
    return function ($21) {
      return $19($20($21));
    };
  }());
};

var monadAffRWS = function monadAffRWS(dictMonadAff) {
  return function (dictMonoid) {
    return new MonadAff(function () {
      return Control_Monad_RWS_Trans.monadEffectRWS(dictMonoid)(dictMonadAff.MonadEffect0());
    }, function () {
      var $22 = Control_Monad_Trans_Class.lift(Control_Monad_RWS_Trans.monadTransRWST(dictMonoid))(dictMonadAff.MonadEffect0().Monad0());
      var $23 = liftAff(dictMonadAff);
      return function ($24) {
        return $22($23($24));
      };
    }());
  };
};

var monadAffReader = function monadAffReader(dictMonadAff) {
  return new MonadAff(function () {
    return Control_Monad_Reader_Trans.monadEffectReader(dictMonadAff.MonadEffect0());
  }, function () {
    var $25 = Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(dictMonadAff.MonadEffect0().Monad0());
    var $26 = liftAff(dictMonadAff);
    return function ($27) {
      return $25($26($27));
    };
  }());
};

var monadAffState = function monadAffState(dictMonadAff) {
  return new MonadAff(function () {
    return Control_Monad_State_Trans.monadEffectState(dictMonadAff.MonadEffect0());
  }, function () {
    var $28 = Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(dictMonadAff.MonadEffect0().Monad0());
    var $29 = liftAff(dictMonadAff);
    return function ($30) {
      return $28($29($30));
    };
  }());
};

var monadAffWriter = function monadAffWriter(dictMonadAff) {
  return function (dictMonoid) {
    return new MonadAff(function () {
      return Control_Monad_Writer_Trans.monadEffectWriter(dictMonoid)(dictMonadAff.MonadEffect0());
    }, function () {
      var $31 = Control_Monad_Trans_Class.lift(Control_Monad_Writer_Trans.monadTransWriterT(dictMonoid))(dictMonadAff.MonadEffect0().Monad0());
      var $32 = liftAff(dictMonadAff);
      return function ($33) {
        return $31($32($33));
      };
    }());
  };
};

module.exports = {
  liftAff: liftAff,
  MonadAff: MonadAff,
  monadAffAff: monadAffAff,
  monadAffContT: monadAffContT,
  monadAffExceptT: monadAffExceptT,
  monadAffListT: monadAffListT,
  monadAffMaybe: monadAffMaybe,
  monadAffReader: monadAffReader,
  monadAffRWS: monadAffRWS,
  monadAffState: monadAffState,
  monadAffWriter: monadAffWriter
};
},{"../Control.Category/index.js":"../output/Control.Category/index.js","../Control.Monad.Cont.Trans/index.js":"../output/Control.Monad.Cont.Trans/index.js","../Control.Monad.Except.Trans/index.js":"../output/Control.Monad.Except.Trans/index.js","../Control.Monad.List.Trans/index.js":"../output/Control.Monad.List.Trans/index.js","../Control.Monad.Maybe.Trans/index.js":"../output/Control.Monad.Maybe.Trans/index.js","../Control.Monad.RWS.Trans/index.js":"../output/Control.Monad.RWS.Trans/index.js","../Control.Monad.Reader.Trans/index.js":"../output/Control.Monad.Reader.Trans/index.js","../Control.Monad.State.Trans/index.js":"../output/Control.Monad.State.Trans/index.js","../Control.Monad.Trans.Class/index.js":"../output/Control.Monad.Trans.Class/index.js","../Control.Monad.Writer.Trans/index.js":"../output/Control.Monad.Writer.Trans/index.js","../Effect.Aff/index.js":"../output/Effect.Aff/index.js"}],"../output/Web.DOM.ParentNode/foreign.js":[function(require,module,exports) {
"use strict";

var getEffProp = function getEffProp(name) {
  return function (node) {
    return function () {
      return node[name];
    };
  };
};

exports.children = getEffProp("children");
exports._firstElementChild = getEffProp("firstElementChild");
exports._lastElementChild = getEffProp("lastElementChild");
exports.childElementCount = getEffProp("childElementCount");

exports._querySelector = function (selector) {
  return function (node) {
    return function () {
      return node.querySelector(selector);
    };
  };
};

exports.querySelectorAll = function (selector) {
  return function (node) {
    return function () {
      return node.querySelectorAll(selector);
    };
  };
};
},{}],"../output/Data.Nullable/foreign.js":[function(require,module,exports) {
"use strict";

exports["null"] = null;

exports.nullable = function (a, r, f) {
  return a == null ? r : f(a);
};

exports.notNull = function (x) {
  return x;
};
},{}],"../output/Data.Nullable/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Show = require("../Data.Show/index.js");

var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);

var toMaybe = function toMaybe(n) {
  return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
};

var showNullable = function showNullable(dictShow) {
  return new Data_Show.Show(function () {
    var $5 = Data_Maybe.maybe("null")(Data_Show.show(dictShow));
    return function ($6) {
      return $5(toMaybe($6));
    };
  }());
};

var eqNullable = function eqNullable(dictEq) {
  return new Data_Eq.Eq(Data_Function.on(Data_Eq.eq(Data_Maybe.eqMaybe(dictEq)))(toMaybe));
};

var ordNullable = function ordNullable(dictOrd) {
  return new Data_Ord.Ord(function () {
    return eqNullable(dictOrd.Eq0());
  }, Data_Function.on(Data_Ord.compare(Data_Maybe.ordMaybe(dictOrd)))(toMaybe));
};

var eq1Nullable = new Data_Eq.Eq1(function (dictEq) {
  return Data_Eq.eq(eqNullable(dictEq));
});
var ord1Nullable = new Data_Ord.Ord1(function () {
  return eq1Nullable;
}, function (dictOrd) {
  return Data_Ord.compare(ordNullable(dictOrd));
});
module.exports = {
  toMaybe: toMaybe,
  toNullable: toNullable,
  showNullable: showNullable,
  eqNullable: eqNullable,
  eq1Nullable: eq1Nullable,
  ordNullable: ordNullable,
  ord1Nullable: ord1Nullable,
  "null": $foreign["null"],
  notNull: $foreign.notNull
};
},{"./foreign.js":"../output/Data.Nullable/foreign.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Show/index.js":"../output/Data.Show/index.js"}],"../output/Web.DOM.ParentNode/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Effect = require("../Effect/index.js");

var QuerySelector = function QuerySelector(x) {
  return x;
};

var querySelector = function querySelector(qs) {
  var $3 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  var $4 = $foreign["_querySelector"](qs);
  return function ($5) {
    return $3($4($5));
  };
};

var ordQuerySelector = Data_Ord.ordString;
var newtypeQuerySelector = new Data_Newtype.Newtype(function (n) {
  return n;
}, QuerySelector);

var lastElementChild = function () {
  var $6 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($7) {
    return $6($foreign["_lastElementChild"]($7));
  };
}();

var firstElementChild = function () {
  var $8 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($9) {
    return $8($foreign["_firstElementChild"]($9));
  };
}();

var eqQuerySelector = Data_Eq.eqString;
module.exports = {
  firstElementChild: firstElementChild,
  lastElementChild: lastElementChild,
  QuerySelector: QuerySelector,
  querySelector: querySelector,
  eqQuerySelector: eqQuerySelector,
  ordQuerySelector: ordQuerySelector,
  newtypeQuerySelector: newtypeQuerySelector,
  children: $foreign.children,
  childElementCount: $foreign.childElementCount,
  querySelectorAll: $foreign.querySelectorAll
};
},{"./foreign.js":"../output/Web.DOM.ParentNode/foreign.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Nullable/index.js":"../output/Data.Nullable/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Effect/index.js":"../output/Effect/index.js"}],"../output/Web.Event.EventTarget/foreign.js":[function(require,module,exports) {
"use strict";

exports.eventListener = function (fn) {
  return function () {
    return function (event) {
      return fn(event)();
    };
  };
};

exports.addEventListener = function (type) {
  return function (listener) {
    return function (useCapture) {
      return function (target) {
        return function () {
          return target.addEventListener(type, listener, useCapture);
        };
      };
    };
  };
};

exports.removeEventListener = function (type) {
  return function (listener) {
    return function (useCapture) {
      return function (target) {
        return function () {
          return target.removeEventListener(type, listener, useCapture);
        };
      };
    };
  };
};

exports.dispatchEvent = function (event) {
  return function (target) {
    return function () {
      return target.dispatchEvent(event);
    };
  };
};
},{}],"../output/Web.Event.EventTarget/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

module.exports = {
  eventListener: $foreign.eventListener,
  addEventListener: $foreign.addEventListener,
  removeEventListener: $foreign.removeEventListener,
  dispatchEvent: $foreign.dispatchEvent
};
},{"./foreign.js":"../output/Web.Event.EventTarget/foreign.js"}],"../output/Web.HTML/foreign.js":[function(require,module,exports) {
/* global window */
"use strict";

exports.window = function () {
  return window;
};
},{}],"../output/Web.HTML/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

module.exports = {
  window: $foreign.window
};
},{"./foreign.js":"../output/Web.HTML/foreign.js"}],"../output/Web.HTML.Event.EventTypes/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var unload = "unload";
var toggle = "toggle";
var submit = "submit";
var storage = "storage";
var select = "select";
var reset = "reset";
var readystatechange = "readystatechange";
var progress = "progress";
var paste = "paste";
var online = "online";
var offline = "offline";
var message = "message";
var loadstart = "loadstart";
var loadend = "loadend";
var load = "load";
var languagechange = "languagechange";
var invalid = "invalid";
var input = "input";
var focus = "focus";
var error = "error";
var domcontentloaded = "DOMContentLoaded";
var cut = "cut";
var copy = "copy";
var close = "close";
var click = "click";
var change = "change";
var cancel = "cancel";
var blur = "blur";
var beforescriptexecute = "beforescriptexecute";
var beforeprint = "beforeprint";
var afterscriptexecute = "afterscriptexecute";
var afterprint = "afterprint";
var abort = "abort";
module.exports = {
  abort: abort,
  afterprint: afterprint,
  afterscriptexecute: afterscriptexecute,
  beforeprint: beforeprint,
  beforescriptexecute: beforescriptexecute,
  blur: blur,
  cancel: cancel,
  change: change,
  click: click,
  close: close,
  copy: copy,
  cut: cut,
  domcontentloaded: domcontentloaded,
  error: error,
  focus: focus,
  input: input,
  invalid: invalid,
  languagechange: languagechange,
  load: load,
  loadend: loadend,
  loadstart: loadstart,
  message: message,
  offline: offline,
  online: online,
  paste: paste,
  progress: progress,
  readystatechange: readystatechange,
  reset: reset,
  select: select,
  storage: storage,
  submit: submit,
  toggle: toggle,
  unload: unload
};
},{}],"../output/Web.HTML.HTMLDocument/foreign.js":[function(require,module,exports) {
"use strict";

exports._head = function (doc) {
  return function () {
    return doc.head;
  };
};

exports._body = function (doc) {
  return function () {
    return doc.body;
  };
};

exports._readyState = function (doc) {
  return function () {
    return doc.readyState;
  };
};

exports._activeElement = function (doc) {
  return function () {
    return doc.activeElement;
  };
};

exports._currentScript = function (doc) {
  return function () {
    return doc.currentScript;
  };
};

exports.referrer = function (doc) {
  return function () {
    return doc.referrer;
  };
};

exports.title = function (doc) {
  return function () {
    return doc.title;
  };
};

exports.setTitle = function (title) {
  return function (doc) {
    return function () {
      doc.title = title;
      return {};
    };
  };
};
},{}],"../output/Web.HTML.HTMLDocument.ReadyState/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Show = require("../Data.Show/index.js");

var Loading = function () {
  function Loading() {}

  ;
  Loading.value = new Loading();
  return Loading;
}();

var Interactive = function () {
  function Interactive() {}

  ;
  Interactive.value = new Interactive();
  return Interactive;
}();

var Complete = function () {
  function Complete() {}

  ;
  Complete.value = new Complete();
  return Complete;
}();

var showReadyState = new Data_Show.Show(function (v) {
  if (v instanceof Loading) {
    return "Loading";
  }

  ;

  if (v instanceof Interactive) {
    return "Interactive";
  }

  ;

  if (v instanceof Complete) {
    return "Complete";
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.HTMLDocument.ReadyState (line 15, column 10 - line 18, column 27): " + [v.constructor.name]);
});

var print = function print(v) {
  if (v instanceof Loading) {
    return "loading";
  }

  ;

  if (v instanceof Interactive) {
    return "interactive";
  }

  ;

  if (v instanceof Complete) {
    return "complete";
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.HTMLDocument.ReadyState (line 21, column 9 - line 24, column 25): " + [v.constructor.name]);
};

var parse = function parse(v) {
  if (v === "loading") {
    return new Data_Maybe.Just(Loading.value);
  }

  ;

  if (v === "interactive") {
    return new Data_Maybe.Just(Interactive.value);
  }

  ;

  if (v === "complete") {
    return new Data_Maybe.Just(Complete.value);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var eqReadyState = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof Loading && y instanceof Loading) {
      return true;
    }

    ;

    if (x instanceof Interactive && y instanceof Interactive) {
      return true;
    }

    ;

    if (x instanceof Complete && y instanceof Complete) {
      return true;
    }

    ;
    return false;
  };
});
var ordReadyState = new Data_Ord.Ord(function () {
  return eqReadyState;
}, function (x) {
  return function (y) {
    if (x instanceof Loading && y instanceof Loading) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Loading) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Loading) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Interactive && y instanceof Interactive) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Interactive) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Interactive) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Complete && y instanceof Complete) {
      return Data_Ordering.EQ.value;
    }

    ;
    throw new Error("Failed pattern match at Web.HTML.HTMLDocument.ReadyState (line 12, column 1 - line 12, column 48): " + [x.constructor.name, y.constructor.name]);
  };
});
module.exports = {
  Loading: Loading,
  Interactive: Interactive,
  Complete: Complete,
  print: print,
  parse: parse,
  eqReadyState: eqReadyState,
  ordReadyState: ordReadyState,
  showReadyState: showReadyState
};
},{"../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Ordering/index.js":"../output/Data.Ordering/index.js","../Data.Show/index.js":"../output/Data.Show/index.js"}],"../output/Web.Internal.FFI/foreign.js":[function(require,module,exports) {
"use strict";

exports._unsafeReadProtoTagged = function (nothing, just, name, value) {
  if (typeof window !== "undefined") {
    var ty = window[name];

    if (ty != null && value instanceof ty) {
      return just(value);
    }

    return nothing;
  }

  var obj = value;

  while (obj != null) {
    var proto = Object.getPrototypeOf(obj);
    var constructorName = proto.constructor.name;

    if (constructorName === name) {
      return just(value);
    } else if (constructorName === "Object") {
      return nothing;
    }

    obj = proto;
  }

  return nothing;
};
},{}],"../output/Web.Internal.FFI/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var unsafeReadProtoTagged = function unsafeReadProtoTagged(name) {
  return function (value) {
    return $foreign["_unsafeReadProtoTagged"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, name, value);
  };
};

module.exports = {
  unsafeReadProtoTagged: unsafeReadProtoTagged
};
},{"./foreign.js":"../output/Web.Internal.FFI/foreign.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js"}],"../output/Web.HTML.HTMLDocument/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_HTML_HTMLDocument_ReadyState = require("../Web.HTML.HTMLDocument.ReadyState/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toDocument = Unsafe_Coerce.unsafeCoerce;

var readyState = function () {
  var $0 = Data_Functor.map(Effect.functorEffect)(function () {
    var $2 = Data_Maybe.fromMaybe(Web_HTML_HTMLDocument_ReadyState.Loading.value);
    return function ($3) {
      return $2(Web_HTML_HTMLDocument_ReadyState.parse($3));
    };
  }());
  return function ($1) {
    return $0($foreign["_readyState"]($1));
  };
}();

var head = function () {
  var $4 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($5) {
    return $4($foreign["_head"]($5));
  };
}();

var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDocument");
var fromNonElementParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDocument");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDocument");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDocument");
var fromDocument = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDocument");

var currentScript = function () {
  var $6 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($7) {
    return $6($foreign["_currentScript"]($7));
  };
}();

var body = function () {
  var $8 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($9) {
    return $8($foreign["_body"]($9));
  };
}();

var activeElement = function () {
  var $10 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($11) {
    return $10($foreign["_activeElement"]($11));
  };
}();

module.exports = {
  fromDocument: fromDocument,
  fromNode: fromNode,
  fromParentNode: fromParentNode,
  fromNonElementParentNode: fromNonElementParentNode,
  fromEventTarget: fromEventTarget,
  toDocument: toDocument,
  toNode: toNode,
  toParentNode: toParentNode,
  toNonElementParentNode: toNonElementParentNode,
  toEventTarget: toEventTarget,
  head: head,
  body: body,
  readyState: readyState,
  activeElement: activeElement,
  currentScript: currentScript,
  referrer: $foreign.referrer,
  title: $foreign.title,
  setTitle: $foreign.setTitle
};
},{"./foreign.js":"../output/Web.HTML.HTMLDocument/foreign.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Nullable/index.js":"../output/Data.Nullable/index.js","../Effect/index.js":"../output/Effect/index.js","../Unsafe.Coerce/index.js":"../output/Unsafe.Coerce/index.js","../Web.HTML.HTMLDocument.ReadyState/index.js":"../output/Web.HTML.HTMLDocument.ReadyState/index.js","../Web.Internal.FFI/index.js":"../output/Web.Internal.FFI/index.js"}],"../output/Web.HTML.HTMLElement/foreign.js":[function(require,module,exports) {
"use strict";

exports._read = function (nothing, just, value) {
  var tag = Object.prototype.toString.call(value);

  if (tag.indexOf("[object HTML") === 0 && tag.indexOf("Element]") === tag.length - 8) {
    return just(value);
  } else {
    return nothing;
  }
}; // ----------------------------------------------------------------------------


exports.title = function (elt) {
  return function () {
    return elt.title;
  };
};

exports.setTitle = function (title) {
  return function (elt) {
    return function () {
      elt.title = title;
      return {};
    };
  };
}; // ----------------------------------------------------------------------------


exports.lang = function (elt) {
  return function () {
    return elt.lang;
  };
};

exports.setLang = function (lang) {
  return function (elt) {
    return function () {
      elt.lang = lang;
      return {};
    };
  };
}; // ----------------------------------------------------------------------------


exports.dir = function (elt) {
  return function () {
    return elt.dir;
  };
};

exports.setDir = function (dir) {
  return function (elt) {
    return function () {
      elt.dir = dir;
      return {};
    };
  };
}; // ----------------------------------------------------------------------------


exports.className = function (elt) {
  return function () {
    return elt.className;
  };
};

exports.setClassName = function (className) {
  return function (elt) {
    return function () {
      elt.className = className;
      return {};
    };
  };
};

exports.classList = function (element) {
  return function () {
    return element.classList;
  };
}; // ----------------------------------------------------------------------------


exports.hidden = function (elt) {
  return function () {
    return elt.hidden;
  };
};

exports.setHidden = function (hidden) {
  return function (elt) {
    return function () {
      elt.hidden = hidden;
      return {};
    };
  };
}; // ----------------------------------------------------------------------------


exports.tabIndex = function (elt) {
  return function () {
    return elt.tabIndex;
  };
};

exports.setTabIndex = function (tabIndex) {
  return function (elt) {
    return function () {
      elt.tabIndex = tabIndex;
      return {};
    };
  };
}; // ----------------------------------------------------------------------------


exports.draggable = function (elt) {
  return function () {
    return elt.draggable;
  };
};

exports.setDraggable = function (draggable) {
  return function (elt) {
    return function () {
      elt.draggable = draggable;
      return {};
    };
  };
}; // ----------------------------------------------------------------------------


exports.contentEditable = function (elt) {
  return function () {
    return elt.contentEditable;
  };
};

exports.setContentEditable = function (contentEditable) {
  return function (elt) {
    return function () {
      elt.contentEditable = contentEditable;
      return {};
    };
  };
};

exports.isContentEditable = function (elt) {
  return function () {
    return elt.isContentEditable;
  };
}; // ----------------------------------------------------------------------------


exports.spellcheck = function (elt) {
  return function () {
    return elt.spellcheck;
  };
};

exports.setSpellcheck = function (spellcheck) {
  return function (elt) {
    return function () {
      elt.spellcheck = spellcheck;
      return {};
    };
  };
}; // ----------------------------------------------------------------------------


exports.click = function (elt) {
  return function () {
    return elt.click();
  };
};

exports.focus = function (elt) {
  return function () {
    return elt.focus();
  };
};

exports.blur = function (elt) {
  return function () {
    return elt.blur();
  };
}; // - CSSOM ---------------------------------------------------------------------


exports.getBoundingClientRect = function (el) {
  return function () {
    var rect = el.getBoundingClientRect();
    return {
      top: rect.top,
      right: rect.right,
      bottom: rect.bottom,
      left: rect.left,
      width: rect.width,
      height: rect.height
    };
  };
};

exports._offsetParent = function (el) {
  return function () {
    return el.offsetParent;
  };
};

exports.offsetTop = function (el) {
  return function () {
    return el.offsetTop;
  };
};

exports.offsetLeft = function (el) {
  return function () {
    return el.offsetLeft;
  };
};

exports.offsetWidth = function (el) {
  return function () {
    return el.offsetWidth;
  };
};

exports.offsetHeight = function (el) {
  return function () {
    return el.offsetHeight;
  };
};
},{}],"../output/Web.HTML.HTMLElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;

var offsetParent = function () {
  var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($1) {
    return $0($foreign["_offsetParent"]($1));
  };
}();

var fromParentNode = function fromParentNode(x) {
  return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};

var fromNonDocumentTypeChildNode = function fromNonDocumentTypeChildNode(x) {
  return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};

var fromNode = function fromNode(x) {
  return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};

var fromEventTarget = function fromEventTarget(x) {
  return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};

var fromElement = function fromElement(x) {
  return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};

var fromChildNode = function fromChildNode(x) {
  return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};

module.exports = {
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  offsetParent: offsetParent,
  title: $foreign.title,
  setTitle: $foreign.setTitle,
  lang: $foreign.lang,
  setLang: $foreign.setLang,
  dir: $foreign.dir,
  setDir: $foreign.setDir,
  className: $foreign.className,
  setClassName: $foreign.setClassName,
  classList: $foreign.classList,
  hidden: $foreign.hidden,
  setHidden: $foreign.setHidden,
  tabIndex: $foreign.tabIndex,
  setTabIndex: $foreign.setTabIndex,
  draggable: $foreign.draggable,
  setDraggable: $foreign.setDraggable,
  contentEditable: $foreign.contentEditable,
  setContentEditable: $foreign.setContentEditable,
  isContentEditable: $foreign.isContentEditable,
  spellcheck: $foreign.spellcheck,
  setSpellcheck: $foreign.setSpellcheck,
  click: $foreign.click,
  focus: $foreign.focus,
  blur: $foreign.blur,
  getBoundingClientRect: $foreign.getBoundingClientRect,
  offsetTop: $foreign.offsetTop,
  offsetLeft: $foreign.offsetLeft,
  offsetWidth: $foreign.offsetWidth,
  offsetHeight: $foreign.offsetHeight
};
},{"./foreign.js":"../output/Web.HTML.HTMLElement/foreign.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Nullable/index.js":"../output/Data.Nullable/index.js","../Effect/index.js":"../output/Effect/index.js","../Unsafe.Coerce/index.js":"../output/Unsafe.Coerce/index.js"}],"../output/Web.HTML.Window/foreign.js":[function(require,module,exports) {
"use strict";

exports.document = function (window) {
  return function () {
    return window.document;
  };
};

exports.navigator = function (window) {
  return function () {
    return window.navigator;
  };
};

exports.location = function (window) {
  return function () {
    return window.location;
  };
};

exports.history = function (window) {
  return function () {
    return window.history;
  };
};

exports.innerWidth = function (window) {
  return function () {
    return window.innerWidth;
  };
};

exports.innerHeight = function (window) {
  return function () {
    return window.innerHeight;
  };
};

exports.alert = function (str) {
  return function (window) {
    return function () {
      window.alert(str);
      return {};
    };
  };
};

exports.confirm = function (str) {
  return function (window) {
    return function () {
      return window.confirm(str);
    };
  };
};

exports.moveBy = function (xDelta) {
  return function (yDelta) {
    return function (window) {
      return function () {
        window.moveBy(xDelta, yDelta);
        return {};
      };
    };
  };
};

exports.moveTo = function (width) {
  return function (height) {
    return function (window) {
      return function () {
        window.moveTo(width, height);
        return {};
      };
    };
  };
};

exports._open = function (url) {
  return function (name) {
    return function (features) {
      return function (window) {
        return function () {
          return window.open(url, name, features);
        };
      };
    };
  };
};

exports.outerHeight = function (window) {
  return function () {
    return window.outerHeight;
  };
};

exports.outerWidth = function (window) {
  return function () {
    return window.outerWidth;
  };
};

exports.print = function (window) {
  return function () {
    window.print();
    return {};
  };
};

exports._prompt = function (str) {
  return function (defaultText) {
    return function (window) {
      return function () {
        return window.prompt(str, defaultText);
      };
    };
  };
};

exports.resizeBy = function (xDelta) {
  return function (yDelta) {
    return function (window) {
      return function () {
        window.resizeBy(xDelta, yDelta);
        return {};
      };
    };
  };
};

exports.resizeTo = function (width) {
  return function (height) {
    return function (window) {
      return function () {
        window.resizeTo(width, height);
        return {};
      };
    };
  };
};

exports.screenX = function (window) {
  return function () {
    return window.screenX;
  };
};

exports.screenY = function (window) {
  return function () {
    return window.screenY;
  };
};

exports.scroll = function (xCoord) {
  return function (yCoord) {
    return function (window) {
      return function () {
        window.scroll(xCoord, yCoord);
        return {};
      };
    };
  };
};

exports.scrollBy = function (xCoord) {
  return function (yCoord) {
    return function (window) {
      return function () {
        window.scrollBy(xCoord, yCoord);
        return {};
      };
    };
  };
};

exports.scrollX = function (window) {
  return function () {
    return window.scrollX;
  };
};

exports.scrollY = function (window) {
  return function () {
    return window.scrollY;
  };
};

exports.localStorage = function (window) {
  return function () {
    return window.localStorage;
  };
};

exports.sessionStorage = function (window) {
  return function () {
    return window.sessionStorage;
  };
};

exports._requestAnimationFrame = function (fn) {
  return function (window) {
    return function () {
      return window.requestAnimationFrame(fn);
    };
  };
};

exports._cancelAnimationFrame = function (id) {
  return function (window) {
    return function () {
      return window.cancelAnimationFrame(id);
    };
  };
};

exports._requestIdleCallback = function (opts) {
  return function (fn) {
    return function (window) {
      return function () {
        return window.requestIdleCallback(fn, opts);
      };
    };
  };
};

exports._cancelIdleCallback = function (id) {
  return function (window) {
    return function () {
      return window.cancelIdleCallback(id);
    };
  };
};

exports.parent = function (window) {
  return function () {
    return window.parent;
  };
};

exports._opener = function (window) {
  return function () {
    return window.opener;
  };
};
},{}],"../output/Web.HTML.Window/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var RequestIdleCallbackId = function RequestIdleCallbackId(x) {
  return x;
};

var RequestAnimationFrameId = function RequestAnimationFrameId(x) {
  return x;
};

var toEventTarget = Unsafe_Coerce.unsafeCoerce;

var requestIdleCallback = function requestIdleCallback(opts) {
  return function (fn) {
    var $30 = Data_Functor.map(Effect.functorEffect)(RequestIdleCallbackId);
    var $31 = $foreign["_requestIdleCallback"](opts)(fn);
    return function ($32) {
      return $30($31($32));
    };
  };
};

var requestAnimationFrame = function requestAnimationFrame(fn) {
  var $33 = Data_Functor.map(Effect.functorEffect)(RequestAnimationFrameId);
  var $34 = $foreign["_requestAnimationFrame"](fn);
  return function ($35) {
    return $33($34($35));
  };
};

var promptDefault = function promptDefault(msg) {
  return function (defaultText) {
    return function (window) {
      return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_prompt"](msg)(defaultText)(window));
    };
  };
};

var prompt = function prompt(msg) {
  return function (window) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_prompt"](msg)("")(window));
  };
};

var opener = function opener(window) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_opener"](window));
};

var open = function open(url$prime) {
  return function (name) {
    return function (features) {
      return function (window) {
        return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_open"](url$prime)(name)(features)(window));
      };
    };
  };
};

var newtypeRequestIdleCallbackId = new Data_Newtype.Newtype(function (n) {
  return n;
}, RequestIdleCallbackId);
var newtypeRequestAnimationFrameId = new Data_Newtype.Newtype(function (n) {
  return n;
}, RequestAnimationFrameId);
var eqRequestIdleCallbackId = new Data_Eq.Eq(function (x) {
  return function (y) {
    return x === y;
  };
});
var ordRequestIdleCallbackId = new Data_Ord.Ord(function () {
  return eqRequestIdleCallbackId;
}, function (x) {
  return function (y) {
    return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
  };
});
var eqRequestAnimationFrameId = new Data_Eq.Eq(function (x) {
  return function (y) {
    return x === y;
  };
});
var ordRequestAnimationFrameId = new Data_Ord.Ord(function () {
  return eqRequestAnimationFrameId;
}, function (x) {
  return function (y) {
    return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
  };
});

var cancelIdleCallback = function cancelIdleCallback(idAF) {
  return $foreign["_cancelIdleCallback"](Data_Newtype.unwrap(newtypeRequestIdleCallbackId)(idAF));
};

var cancelAnimationFrame = function cancelAnimationFrame(idAF) {
  return $foreign["_cancelAnimationFrame"](Data_Newtype.unwrap(newtypeRequestAnimationFrameId)(idAF));
};

module.exports = {
  toEventTarget: toEventTarget,
  open: open,
  prompt: prompt,
  promptDefault: promptDefault,
  requestAnimationFrame: requestAnimationFrame,
  cancelAnimationFrame: cancelAnimationFrame,
  requestIdleCallback: requestIdleCallback,
  cancelIdleCallback: cancelIdleCallback,
  opener: opener,
  newtypeRequestAnimationFrameId: newtypeRequestAnimationFrameId,
  eqRequestAnimationFrameId: eqRequestAnimationFrameId,
  ordRequestAnimationFrameId: ordRequestAnimationFrameId,
  newtypeRequestIdleCallbackId: newtypeRequestIdleCallbackId,
  eqRequestIdleCallbackId: eqRequestIdleCallbackId,
  ordRequestIdleCallbackId: ordRequestIdleCallbackId,
  document: $foreign.document,
  navigator: $foreign.navigator,
  location: $foreign.location,
  history: $foreign.history,
  innerWidth: $foreign.innerWidth,
  innerHeight: $foreign.innerHeight,
  alert: $foreign.alert,
  confirm: $foreign.confirm,
  moveBy: $foreign.moveBy,
  moveTo: $foreign.moveTo,
  outerHeight: $foreign.outerHeight,
  outerWidth: $foreign.outerWidth,
  print: $foreign.print,
  resizeBy: $foreign.resizeBy,
  resizeTo: $foreign.resizeTo,
  screenX: $foreign.screenX,
  screenY: $foreign.screenY,
  scroll: $foreign.scroll,
  scrollBy: $foreign.scrollBy,
  scrollX: $foreign.scrollX,
  scrollY: $foreign.scrollY,
  localStorage: $foreign.localStorage,
  sessionStorage: $foreign.sessionStorage,
  parent: $foreign.parent
};
},{"./foreign.js":"../output/Web.HTML.Window/foreign.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Nullable/index.js":"../output/Data.Nullable/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Effect/index.js":"../output/Effect/index.js","../Unsafe.Coerce/index.js":"../output/Unsafe.Coerce/index.js"}],"../output/Halogen.Aff.Util/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect = require("../Effect/index.js");

var Effect_Aff = require("../Effect.Aff/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Effect_Exception = require("../Effect.Exception/index.js");

var Web_DOM_ParentNode = require("../Web.DOM.ParentNode/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Web_HTML = require("../Web.HTML/index.js");

var Web_HTML_Event_EventTypes = require("../Web.HTML.Event.EventTypes/index.js");

var Web_HTML_HTMLDocument = require("../Web.HTML.HTMLDocument/index.js");

var Web_HTML_HTMLDocument_ReadyState = require("../Web.HTML.HTMLDocument.ReadyState/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_HTML_Window = require("../Web.HTML.Window/index.js");

var selectElement = function selectElement(query) {
  return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Control_Bind.bindFlipped(Effect.bindEffect)(Control_Bind.composeKleisliFlipped(Effect.bindEffect)(function () {
    var $2 = Web_DOM_ParentNode.querySelector(query);
    return function ($3) {
      return $2(Web_HTML_HTMLDocument.toParentNode($3));
    };
  }())(Web_HTML_Window.document))(Web_HTML.window)))(function (mel) {
    return Control_Applicative.pure(Effect_Aff.applicativeAff)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Web_HTML_HTMLElement.fromElement)(mel));
  });
};

var runHalogenAff = Effect_Aff.runAff_(Data_Either.either(Effect_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))));
var awaitLoad = Effect_Aff.makeAff(function (callback) {
  return function __do() {
    var rs = Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_HTMLDocument.readyState)(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.document)(Web_HTML.window))();

    if (rs instanceof Web_HTML_HTMLDocument_ReadyState.Loading) {
      var et = Data_Functor.map(Effect.functorEffect)(Web_HTML_Window.toEventTarget)(Web_HTML.window)();
      var listener = Web_Event_EventTarget.eventListener(function (v) {
        return callback(new Data_Either.Right(Data_Unit.unit));
      })();
      Web_Event_EventTarget.addEventListener(Web_HTML_Event_EventTypes.domcontentloaded)(listener)(false)(et)();
      return Effect_Aff.effectCanceler(Web_Event_EventTarget.removeEventListener(Web_HTML_Event_EventTypes.domcontentloaded)(listener)(false)(et));
    }

    ;
    callback(new Data_Either.Right(Data_Unit.unit))();
    return Effect_Aff.nonCanceler;
  };
});
var awaitBody = Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(awaitLoad)(function () {
  return Control_Bind.bind(Effect_Aff.bindAff)(selectElement("body"))(function (body) {
    return Data_Maybe.maybe(Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error("Could not find body")))(Control_Applicative.pure(Effect_Aff.applicativeAff))(body);
  });
});
module.exports = {
  awaitLoad: awaitLoad,
  awaitBody: awaitBody,
  selectElement: selectElement,
  runHalogenAff: runHalogenAff
};
},{"../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Monad.Error.Class/index.js":"../output/Control.Monad.Error.Class/index.js","../Data.Either/index.js":"../output/Data.Either/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js","../Effect/index.js":"../output/Effect/index.js","../Effect.Aff/index.js":"../output/Effect.Aff/index.js","../Effect.Class/index.js":"../output/Effect.Class/index.js","../Effect.Exception/index.js":"../output/Effect.Exception/index.js","../Web.DOM.ParentNode/index.js":"../output/Web.DOM.ParentNode/index.js","../Web.Event.EventTarget/index.js":"../output/Web.Event.EventTarget/index.js","../Web.HTML/index.js":"../output/Web.HTML/index.js","../Web.HTML.Event.EventTypes/index.js":"../output/Web.HTML.Event.EventTypes/index.js","../Web.HTML.HTMLDocument/index.js":"../output/Web.HTML.HTMLDocument/index.js","../Web.HTML.HTMLDocument.ReadyState/index.js":"../output/Web.HTML.HTMLDocument.ReadyState/index.js","../Web.HTML.HTMLElement/index.js":"../output/Web.HTML.HTMLElement/index.js","../Web.HTML.Window/index.js":"../output/Web.HTML.Window/index.js"}],"../output/Data.Exists/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var runExists = Unsafe_Coerce.unsafeCoerce;
var mkExists = Unsafe_Coerce.unsafeCoerce;
module.exports = {
  mkExists: mkExists,
  runExists: runExists
};
},{"../Unsafe.Coerce/index.js":"../output/Unsafe.Coerce/index.js"}],"../output/Data.Coyoneda/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Comonad = require("../Control.Comonad/index.js");

var Control_Extend = require("../Control.Extend/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Distributive = require("../Data.Distributive/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Exists = require("../Data.Exists/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");

var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var CoyonedaF = function () {
  function CoyonedaF(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  CoyonedaF.create = function (value0) {
    return function (value1) {
      return new CoyonedaF(value0, value1);
    };
  };

  return CoyonedaF;
}();

var Coyoneda = function Coyoneda(x) {
  return x;
};

var unCoyoneda = function unCoyoneda(f) {
  return function (v) {
    return Data_Exists.runExists(function (v1) {
      return f(v1.value0)(v1.value1);
    })(v);
  };
};

var lowerCoyoneda = function lowerCoyoneda(dictFunctor) {
  return unCoyoneda(Data_Functor.map(dictFunctor));
};

var foldableCoyoneda = function foldableCoyoneda(dictFoldable) {
  return new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
      return unCoyoneda(function (k) {
        return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(function ($80) {
          return f(k($80));
        });
      });
    };
  }, function (f) {
    return function (z) {
      return unCoyoneda(function (k) {
        return Data_Foldable.foldl(dictFoldable)(function (x) {
          var $81 = f(x);
          return function ($82) {
            return $81(k($82));
          };
        })(z);
      });
    };
  }, function (f) {
    return function (z) {
      return unCoyoneda(function (k) {
        return Data_Foldable.foldr(dictFoldable)(function ($83) {
          return f(k($83));
        })(z);
      });
    };
  });
};

var foldable1Coyoneda = function foldable1Coyoneda(dictFoldable1) {
  return new Data_Semigroup_Foldable.Foldable1(function () {
    return foldableCoyoneda(dictFoldable1.Foldable0());
  }, function (dictSemigroup) {
    return unCoyoneda(function (k) {
      return Data_Semigroup_Foldable.foldMap1(dictFoldable1)(dictSemigroup)(k);
    });
  }, function (dictSemigroup) {
    return function (f) {
      return unCoyoneda(function (k) {
        return Data_Semigroup_Foldable.foldMap1(dictFoldable1)(dictSemigroup)(function ($84) {
          return f(k($84));
        });
      });
    };
  });
};

var eqCoyoneda = function eqCoyoneda(dictFunctor) {
  return function (dictEq1) {
    return function (dictEq) {
      return new Data_Eq.Eq(function (x) {
        return function (y) {
          return Data_Eq.eq1(dictEq1)(dictEq)(lowerCoyoneda(dictFunctor)(x))(lowerCoyoneda(dictFunctor)(y));
        };
      });
    };
  };
};

var ordCoyoneda = function ordCoyoneda(dictFunctor) {
  return function (dictOrd1) {
    return function (dictOrd) {
      return new Data_Ord.Ord(function () {
        return eqCoyoneda(dictFunctor)(dictOrd1.Eq10())(dictOrd.Eq0());
      }, function (x) {
        return function (y) {
          return Data_Ord.compare1(dictOrd1)(dictOrd)(lowerCoyoneda(dictFunctor)(x))(lowerCoyoneda(dictFunctor)(y));
        };
      });
    };
  };
};

var eq1Coyoneda = function eq1Coyoneda(dictFunctor) {
  return function (dictEq1) {
    return new Data_Eq.Eq1(function (dictEq) {
      return Data_Eq.eq(eqCoyoneda(dictFunctor)(dictEq1)(dictEq));
    });
  };
};

var ord1Coyoneda = function ord1Coyoneda(dictFunctor) {
  return function (dictOrd1) {
    return new Data_Ord.Ord1(function () {
      return eq1Coyoneda(dictFunctor)(dictOrd1.Eq10());
    }, function (dictOrd) {
      return Data_Ord.compare(ordCoyoneda(dictFunctor)(dictOrd1)(dictOrd));
    });
  };
};

var coyoneda = function coyoneda(k) {
  return function (fi) {
    return Coyoneda(Data_Exists.mkExists(new CoyonedaF(k, fi)));
  };
};

var functorCoyoneda = new Data_Functor.Functor(function (f) {
  return function (v) {
    return Data_Exists.runExists(function (v1) {
      return coyoneda(function ($85) {
        return f(v1.value0($85));
      })(v1.value1);
    })(v);
  };
});
var invatiantCoyoneda = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorCoyoneda));

var hoistCoyoneda = function hoistCoyoneda(nat) {
  return function (v) {
    return Data_Exists.runExists(function (v1) {
      return coyoneda(v1.value0)(nat(v1.value1));
    })(v);
  };
};

var liftCoyoneda = coyoneda(Control_Category.identity(Control_Category.categoryFn));

var distributiveCoyoneda = function distributiveCoyoneda(dictDistributive) {
  return new Data_Distributive.Distributive(function () {
    return functorCoyoneda;
  }, function (dictFunctor) {
    return function (f) {
      var $86 = Data_Distributive.collect(dictDistributive)(dictFunctor)(function () {
        var $88 = lowerCoyoneda(dictDistributive.Functor0());
        return function ($89) {
          return $88(f($89));
        };
      }());
      return function ($87) {
        return liftCoyoneda($86($87));
      };
    };
  }, function (dictFunctor) {
    var $90 = Data_Distributive.collect(dictDistributive)(dictFunctor)(lowerCoyoneda(dictDistributive.Functor0()));
    return function ($91) {
      return liftCoyoneda($90($91));
    };
  });
};

var extendCoyoneda = function extendCoyoneda(dictExtend) {
  return new Control_Extend.Extend(function () {
    return functorCoyoneda;
  }, function (f) {
    return function (v) {
      return Data_Exists.runExists(function (v1) {
        return liftCoyoneda(Control_Extend.extend(dictExtend)(function () {
          var $92 = coyoneda(v1.value0);
          return function ($93) {
            return f($92($93));
          };
        }())(v1.value1));
      })(v);
    };
  });
};

var monadTransCoyoneda = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
  return liftCoyoneda;
});

var traversableCoyoneda = function traversableCoyoneda(dictTraversable) {
  return new Data_Traversable.Traversable(function () {
    return foldableCoyoneda(dictTraversable.Foldable1());
  }, function () {
    return functorCoyoneda;
  }, function (dictApplicative) {
    return unCoyoneda(function (k) {
      var $94 = Data_Functor.map(dictApplicative.Apply0().Functor0())(liftCoyoneda);
      var $95 = Data_Traversable.traverse(dictTraversable)(dictApplicative)(k);
      return function ($96) {
        return $94($95($96));
      };
    });
  }, function (dictApplicative) {
    return function (f) {
      return unCoyoneda(function (k) {
        var $97 = Data_Functor.map(dictApplicative.Apply0().Functor0())(liftCoyoneda);
        var $98 = Data_Traversable.traverse(dictTraversable)(dictApplicative)(function ($100) {
          return f(k($100));
        });
        return function ($99) {
          return $97($98($99));
        };
      });
    };
  });
};

var traversable1Coyoneda = function traversable1Coyoneda(dictTraversable1) {
  return new Data_Semigroup_Traversable.Traversable1(function () {
    return foldable1Coyoneda(dictTraversable1.Foldable10());
  }, function () {
    return traversableCoyoneda(dictTraversable1.Traversable1());
  }, function (dictApply) {
    return unCoyoneda(function (k) {
      var $101 = Data_Functor.map(dictApply.Functor0())(liftCoyoneda);
      var $102 = Data_Semigroup_Traversable.sequence1(dictTraversable1)(dictApply);
      var $103 = Data_Functor.map(dictTraversable1.Traversable1().Functor0())(k);
      return function ($104) {
        return $101($102($103($104)));
      };
    });
  }, function (dictApply) {
    return function (f) {
      return unCoyoneda(function (k) {
        var $105 = Data_Functor.map(dictApply.Functor0())(liftCoyoneda);
        var $106 = Data_Semigroup_Traversable.traverse1(dictTraversable1)(dictApply)(function ($108) {
          return f(k($108));
        });
        return function ($107) {
          return $105($106($107));
        };
      });
    };
  });
};

var comonadCoyoneda = function comonadCoyoneda(dictComonad) {
  return new Control_Comonad.Comonad(function () {
    return extendCoyoneda(dictComonad.Extend0());
  }, function (v) {
    return Data_Exists.runExists(function (v1) {
      return v1.value0(Control_Comonad.extract(dictComonad)(v1.value1));
    })(v);
  });
};

var applyCoyoneda = function applyCoyoneda(dictApply) {
  return new Control_Apply.Apply(function () {
    return functorCoyoneda;
  }, function (f) {
    return function (g) {
      return liftCoyoneda(Control_Apply.apply(dictApply)(lowerCoyoneda(dictApply.Functor0())(f))(lowerCoyoneda(dictApply.Functor0())(g)));
    };
  });
};

var bindCoyoneda = function bindCoyoneda(dictBind) {
  return new Control_Bind.Bind(function () {
    return applyCoyoneda(dictBind.Apply0());
  }, function (v) {
    return function (f) {
      return liftCoyoneda(Data_Exists.runExists(function (v1) {
        return Control_Bind.bindFlipped(dictBind)(function () {
          var $109 = lowerCoyoneda(dictBind.Apply0().Functor0());
          return function ($110) {
            return $109(f(v1.value0($110)));
          };
        }())(v1.value1);
      })(v));
    };
  });
};

var applicativeCoyoneda = function applicativeCoyoneda(dictApplicative) {
  return new Control_Applicative.Applicative(function () {
    return applyCoyoneda(dictApplicative.Apply0());
  }, function () {
    var $111 = Control_Applicative.pure(dictApplicative);
    return function ($112) {
      return liftCoyoneda($111($112));
    };
  }());
};

var monadCoyoneda = function monadCoyoneda(dictMonad) {
  return new Control_Monad.Monad(function () {
    return applicativeCoyoneda(dictMonad.Applicative0());
  }, function () {
    return bindCoyoneda(dictMonad.Bind1());
  });
};

var altCoyoneda = function altCoyoneda(dictAlt) {
  return new Control_Alt.Alt(function () {
    return functorCoyoneda;
  }, function (x) {
    return function (y) {
      return liftCoyoneda(Control_Alt.alt(dictAlt)(lowerCoyoneda(dictAlt.Functor0())(x))(lowerCoyoneda(dictAlt.Functor0())(y)));
    };
  });
};

var plusCoyoneda = function plusCoyoneda(dictPlus) {
  return new Control_Plus.Plus(function () {
    return altCoyoneda(dictPlus.Alt0());
  }, liftCoyoneda(Control_Plus.empty(dictPlus)));
};

var alternativeCoyoneda = function alternativeCoyoneda(dictAlternative) {
  return new Control_Alternative.Alternative(function () {
    return applicativeCoyoneda(dictAlternative.Applicative0());
  }, function () {
    return plusCoyoneda(dictAlternative.Plus1());
  });
};

var monadZeroCoyoneda = function monadZeroCoyoneda(dictMonadZero) {
  return new Control_MonadZero.MonadZero(function () {
    return alternativeCoyoneda(dictMonadZero.Alternative1());
  }, function () {
    return monadCoyoneda(dictMonadZero.Monad0());
  });
};

var monadPlusCoyoneda = function monadPlusCoyoneda(dictMonadPlus) {
  return new Control_MonadPlus.MonadPlus(function () {
    return monadZeroCoyoneda(dictMonadPlus.MonadZero0());
  });
};

module.exports = {
  Coyoneda: Coyoneda,
  coyoneda: coyoneda,
  unCoyoneda: unCoyoneda,
  liftCoyoneda: liftCoyoneda,
  lowerCoyoneda: lowerCoyoneda,
  hoistCoyoneda: hoistCoyoneda,
  eqCoyoneda: eqCoyoneda,
  eq1Coyoneda: eq1Coyoneda,
  ordCoyoneda: ordCoyoneda,
  ord1Coyoneda: ord1Coyoneda,
  functorCoyoneda: functorCoyoneda,
  invatiantCoyoneda: invatiantCoyoneda,
  applyCoyoneda: applyCoyoneda,
  applicativeCoyoneda: applicativeCoyoneda,
  altCoyoneda: altCoyoneda,
  plusCoyoneda: plusCoyoneda,
  alternativeCoyoneda: alternativeCoyoneda,
  bindCoyoneda: bindCoyoneda,
  monadCoyoneda: monadCoyoneda,
  monadTransCoyoneda: monadTransCoyoneda,
  monadZeroCoyoneda: monadZeroCoyoneda,
  monadPlusCoyoneda: monadPlusCoyoneda,
  extendCoyoneda: extendCoyoneda,
  comonadCoyoneda: comonadCoyoneda,
  foldableCoyoneda: foldableCoyoneda,
  traversableCoyoneda: traversableCoyoneda,
  foldable1Coyoneda: foldable1Coyoneda,
  traversable1Coyoneda: traversable1Coyoneda,
  distributiveCoyoneda: distributiveCoyoneda
};
},{"../Control.Alt/index.js":"../output/Control.Alt/index.js","../Control.Alternative/index.js":"../output/Control.Alternative/index.js","../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Category/index.js":"../output/Control.Category/index.js","../Control.Comonad/index.js":"../output/Control.Comonad/index.js","../Control.Extend/index.js":"../output/Control.Extend/index.js","../Control.Monad/index.js":"../output/Control.Monad/index.js","../Control.Monad.Trans.Class/index.js":"../output/Control.Monad.Trans.Class/index.js","../Control.MonadPlus/index.js":"../output/Control.MonadPlus/index.js","../Control.MonadZero/index.js":"../output/Control.MonadZero/index.js","../Control.Plus/index.js":"../output/Control.Plus/index.js","../Data.Distributive/index.js":"../output/Data.Distributive/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Exists/index.js":"../output/Data.Exists/index.js","../Data.Foldable/index.js":"../output/Data.Foldable/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Functor.Invariant/index.js":"../output/Data.Functor.Invariant/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Semigroup.Foldable/index.js":"../output/Data.Semigroup.Foldable/index.js","../Data.Semigroup.Traversable/index.js":"../output/Data.Semigroup.Traversable/index.js","../Data.Traversable/index.js":"../output/Data.Traversable/index.js"}],"../output/Data.NonEmpty/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");

var NonEmpty = function () {
  function NonEmpty(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  NonEmpty.create = function (value0) {
    return function (value1) {
      return new NonEmpty(value0, value1);
    };
  };

  return NonEmpty;
}();

var unfoldable1NonEmpty = function unfoldable1NonEmpty(dictUnfoldable) {
  return new Data_Unfoldable1.Unfoldable1(function (f) {
    return function (b) {
      return Data_Tuple.uncurry(NonEmpty.create)(Data_Functor.map(Data_Tuple.functorTuple)(Data_Unfoldable.unfoldr(dictUnfoldable)(Data_Functor.map(Data_Maybe.functorMaybe)(f)))(f(b)));
    };
  });
};

var tail = function tail(v) {
  return v.value1;
};

var singleton = function singleton(dictPlus) {
  return function (a) {
    return new NonEmpty(a, Control_Plus.empty(dictPlus));
  };
};

var showNonEmpty = function showNonEmpty(dictShow) {
  return function (dictShow1) {
    return new Data_Show.Show(function (v) {
      return "(NonEmpty " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
    });
  };
};

var oneOf = function oneOf(dictAlternative) {
  return function (v) {
    return Control_Alt.alt(dictAlternative.Plus1().Alt0())(Control_Applicative.pure(dictAlternative.Applicative0())(v.value0))(v.value1);
  };
};

var head = function head(v) {
  return v.value0;
};

var functorNonEmpty = function functorNonEmpty(dictFunctor) {
  return new Data_Functor.Functor(function (f) {
    return function (m) {
      return new NonEmpty(f(m.value0), Data_Functor.map(dictFunctor)(f)(m.value1));
    };
  });
};

var functorWithIndex = function functorWithIndex(dictFunctorWithIndex) {
  return new Data_FunctorWithIndex.FunctorWithIndex(function () {
    return functorNonEmpty(dictFunctorWithIndex.Functor0());
  }, function (f) {
    return function (v) {
      return new NonEmpty(f(Data_Maybe.Nothing.value)(v.value0), Data_FunctorWithIndex.mapWithIndex(dictFunctorWithIndex)(function ($146) {
        return f(Data_Maybe.Just.create($146));
      })(v.value1));
    };
  });
};

var fromNonEmpty = function fromNonEmpty(f) {
  return function (v) {
    return f(v.value0)(v.value1);
  };
};

var foldl1 = function foldl1(dictFoldable) {
  return function (f) {
    return function (v) {
      return Data_Foldable.foldl(dictFoldable)(f)(v.value0)(v.value1);
    };
  };
};

var foldableNonEmpty = function foldableNonEmpty(dictFoldable) {
  return new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
      return function (v) {
        return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(Data_Foldable.foldMap(dictFoldable)(dictMonoid)(f)(v.value1));
      };
    };
  }, function (f) {
    return function (b) {
      return function (v) {
        return Data_Foldable.foldl(dictFoldable)(f)(f(b)(v.value0))(v.value1);
      };
    };
  }, function (f) {
    return function (b) {
      return function (v) {
        return f(v.value0)(Data_Foldable.foldr(dictFoldable)(f)(b)(v.value1));
      };
    };
  });
};

var foldableWithIndexNonEmpty = function foldableWithIndexNonEmpty(dictFoldableWithIndex) {
  return new Data_FoldableWithIndex.FoldableWithIndex(function () {
    return foldableNonEmpty(dictFoldableWithIndex.Foldable0());
  }, function (dictMonoid) {
    return function (f) {
      return function (v) {
        return Data_Semigroup.append(dictMonoid.Semigroup0())(f(Data_Maybe.Nothing.value)(v.value0))(Data_FoldableWithIndex.foldMapWithIndex(dictFoldableWithIndex)(dictMonoid)(function ($147) {
          return f(Data_Maybe.Just.create($147));
        })(v.value1));
      };
    };
  }, function (f) {
    return function (b) {
      return function (v) {
        return Data_FoldableWithIndex.foldlWithIndex(dictFoldableWithIndex)(function ($148) {
          return f(Data_Maybe.Just.create($148));
        })(f(Data_Maybe.Nothing.value)(b)(v.value0))(v.value1);
      };
    };
  }, function (f) {
    return function (b) {
      return function (v) {
        return f(Data_Maybe.Nothing.value)(v.value0)(Data_FoldableWithIndex.foldrWithIndex(dictFoldableWithIndex)(function ($149) {
          return f(Data_Maybe.Just.create($149));
        })(b)(v.value1));
      };
    };
  });
};

var traversableNonEmpty = function traversableNonEmpty(dictTraversable) {
  return new Data_Traversable.Traversable(function () {
    return foldableNonEmpty(dictTraversable.Foldable1());
  }, function () {
    return functorNonEmpty(dictTraversable.Functor0());
  }, function (dictApplicative) {
    return function (v) {
      return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(NonEmpty.create)(v.value0))(Data_Traversable.sequence(dictTraversable)(dictApplicative)(v.value1));
    };
  }, function (dictApplicative) {
    return function (f) {
      return function (v) {
        return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(NonEmpty.create)(f(v.value0)))(Data_Traversable.traverse(dictTraversable)(dictApplicative)(f)(v.value1));
      };
    };
  });
};

var traversableWithIndexNonEmpty = function traversableWithIndexNonEmpty(dictTraversableWithIndex) {
  return new Data_TraversableWithIndex.TraversableWithIndex(function () {
    return foldableWithIndexNonEmpty(dictTraversableWithIndex.FoldableWithIndex1());
  }, function () {
    return functorWithIndex(dictTraversableWithIndex.FunctorWithIndex0());
  }, function () {
    return traversableNonEmpty(dictTraversableWithIndex.Traversable2());
  }, function (dictApplicative) {
    return function (f) {
      return function (v) {
        return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(NonEmpty.create)(f(Data_Maybe.Nothing.value)(v.value0)))(Data_TraversableWithIndex.traverseWithIndex(dictTraversableWithIndex)(dictApplicative)(function ($150) {
          return f(Data_Maybe.Just.create($150));
        })(v.value1));
      };
    };
  });
};

var foldable1NonEmpty = function foldable1NonEmpty(dictFoldable) {
  return new Data_Semigroup_Foldable.Foldable1(function () {
    return foldableNonEmpty(dictFoldable);
  }, function (dictSemigroup) {
    return Data_Semigroup_Foldable.foldMap1(foldable1NonEmpty(dictFoldable))(dictSemigroup)(Control_Category.identity(Control_Category.categoryFn));
  }, function (dictSemigroup) {
    return function (f) {
      return function (v) {
        return Data_Foldable.foldl(dictFoldable)(function (s) {
          return function (a1) {
            return Data_Semigroup.append(dictSemigroup)(s)(f(a1));
          };
        })(f(v.value0))(v.value1);
      };
    };
  });
};

var eqNonEmpty = function eqNonEmpty(dictEq1) {
  return function (dictEq) {
    return new Data_Eq.Eq(function (x) {
      return function (y) {
        return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq1(dictEq1)(dictEq)(x.value1)(y.value1);
      };
    });
  };
};

var ordNonEmpty = function ordNonEmpty(dictOrd1) {
  return function (dictOrd) {
    return new Data_Ord.Ord(function () {
      return eqNonEmpty(dictOrd1.Eq10())(dictOrd.Eq0());
    }, function (x) {
      return function (y) {
        var v = Data_Ord.compare(dictOrd)(x.value0)(y.value0);

        if (v instanceof Data_Ordering.LT) {
          return Data_Ordering.LT.value;
        }

        ;

        if (v instanceof Data_Ordering.GT) {
          return Data_Ordering.GT.value;
        }

        ;
        return Data_Ord.compare1(dictOrd1)(dictOrd)(x.value1)(y.value1);
      };
    });
  };
};

var eq1NonEmpty = function eq1NonEmpty(dictEq1) {
  return new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqNonEmpty(dictEq1)(dictEq));
  });
};

var ord1NonEmpty = function ord1NonEmpty(dictOrd1) {
  return new Data_Ord.Ord1(function () {
    return eq1NonEmpty(dictOrd1.Eq10());
  }, function (dictOrd) {
    return Data_Ord.compare(ordNonEmpty(dictOrd1)(dictOrd));
  });
};

module.exports = {
  NonEmpty: NonEmpty,
  singleton: singleton,
  foldl1: foldl1,
  fromNonEmpty: fromNonEmpty,
  oneOf: oneOf,
  head: head,
  tail: tail,
  showNonEmpty: showNonEmpty,
  eqNonEmpty: eqNonEmpty,
  eq1NonEmpty: eq1NonEmpty,
  ordNonEmpty: ordNonEmpty,
  ord1NonEmpty: ord1NonEmpty,
  functorNonEmpty: functorNonEmpty,
  functorWithIndex: functorWithIndex,
  foldableNonEmpty: foldableNonEmpty,
  foldableWithIndexNonEmpty: foldableWithIndexNonEmpty,
  traversableNonEmpty: traversableNonEmpty,
  traversableWithIndexNonEmpty: traversableWithIndexNonEmpty,
  foldable1NonEmpty: foldable1NonEmpty,
  unfoldable1NonEmpty: unfoldable1NonEmpty
};
},{"../Control.Alt/index.js":"../output/Control.Alt/index.js","../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Category/index.js":"../output/Control.Category/index.js","../Control.Plus/index.js":"../output/Control.Plus/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Foldable/index.js":"../output/Data.Foldable/index.js","../Data.FoldableWithIndex/index.js":"../output/Data.FoldableWithIndex/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.FunctorWithIndex/index.js":"../output/Data.FunctorWithIndex/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Ordering/index.js":"../output/Data.Ordering/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Semigroup.Foldable/index.js":"../output/Data.Semigroup.Foldable/index.js","../Data.Show/index.js":"../output/Data.Show/index.js","../Data.Traversable/index.js":"../output/Data.Traversable/index.js","../Data.TraversableWithIndex/index.js":"../output/Data.TraversableWithIndex/index.js","../Data.Tuple/index.js":"../output/Data.Tuple/index.js","../Data.Unfoldable/index.js":"../output/Data.Unfoldable/index.js","../Data.Unfoldable1/index.js":"../output/Data.Unfoldable1/index.js"}],"../output/Data.List.Types/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Comonad = require("../Control.Comonad/index.js");

var Control_Extend = require("../Control.Extend/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_NonEmpty = require("../Data.NonEmpty/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");

var Nil = function () {
  function Nil() {}

  ;
  Nil.value = new Nil();
  return Nil;
}();

var Cons = function () {
  function Cons(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Cons.create = function (value0) {
    return function (value1) {
      return new Cons(value0, value1);
    };
  };

  return Cons;
}();

var NonEmptyList = function NonEmptyList(x) {
  return x;
};

var toList = function toList(v) {
  return new Cons(v.value0, v.value1);
};

var newtypeNonEmptyList = new Data_Newtype.Newtype(function (n) {
  return n;
}, NonEmptyList);

var nelCons = function nelCons(a) {
  return function (v) {
    return new Data_NonEmpty.NonEmpty(a, new Cons(v.value0, v.value1));
  };
};

var listMap = function listMap(f) {
  var chunkedRevMap = function chunkedRevMap($copy_chunksAcc) {
    return function ($copy_v) {
      var $tco_var_chunksAcc = $copy_chunksAcc;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(chunksAcc, v) {
        if (v instanceof Cons && v.value1 instanceof Cons && v.value1.value1 instanceof Cons) {
          $tco_var_chunksAcc = new Cons(v, chunksAcc);
          $copy_v = v.value1.value1.value1;
          return;
        }

        ;

        var unrolledMap = function unrolledMap(v1) {
          if (v1 instanceof Cons && v1.value1 instanceof Cons && v1.value1.value1 instanceof Nil) {
            return new Cons(f(v1.value0), new Cons(f(v1.value1.value0), Nil.value));
          }

          ;

          if (v1 instanceof Cons && v1.value1 instanceof Nil) {
            return new Cons(f(v1.value0), Nil.value);
          }

          ;
          return Nil.value;
        };

        var reverseUnrolledMap = function reverseUnrolledMap($copy_v1) {
          return function ($copy_acc) {
            var $tco_var_v1 = $copy_v1;
            var $tco_done = false;
            var $tco_result;

            function $tco_loop(v1, acc) {
              if (v1 instanceof Cons && v1.value0 instanceof Cons && v1.value0.value1 instanceof Cons && v1.value0.value1.value1 instanceof Cons) {
                $tco_var_v1 = v1.value1;
                $copy_acc = new Cons(f(v1.value0.value0), new Cons(f(v1.value0.value1.value0), new Cons(f(v1.value0.value1.value1.value0), acc)));
                return;
              }

              ;
              $tco_done = true;
              return acc;
            }

            ;

            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_v1, $copy_acc);
            }

            ;
            return $tco_result;
          };
        };

        $tco_done = true;
        return reverseUnrolledMap(chunksAcc)(unrolledMap(v));
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_chunksAcc, $copy_v);
      }

      ;
      return $tco_result;
    };
  };

  return chunkedRevMap(Nil.value);
};

var functorList = new Data_Functor.Functor(listMap);
var functorNonEmptyList = Data_NonEmpty.functorNonEmpty(functorList);
var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
  return function (f) {
    return Data_Foldable.foldl(foldableList)(function (acc) {
      var $202 = Data_Semigroup.append(dictMonoid.Semigroup0())(acc);
      return function ($203) {
        return $202(f($203));
      };
    })(Data_Monoid.mempty(dictMonoid));
  };
}, function (f) {
  var go = function go($copy_b) {
    return function ($copy_v) {
      var $tco_var_b = $copy_b;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(b, v) {
        if (v instanceof Nil) {
          $tco_done = true;
          return b;
        }

        ;

        if (v instanceof Cons) {
          $tco_var_b = f(b)(v.value0);
          $copy_v = v.value1;
          return;
        }

        ;
        throw new Error("Failed pattern match at Data.List.Types (line 109, column 12 - line 111, column 30): " + [v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_b, $copy_v);
      }

      ;
      return $tco_result;
    };
  };

  return go;
}, function (f) {
  return function (b) {
    var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
    var $204 = Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b);
    return function ($205) {
      return $204(rev($205));
    };
  };
});
var foldableNonEmptyList = Data_NonEmpty.foldableNonEmpty(foldableList);
var foldableWithIndexList = new Data_FoldableWithIndex.FoldableWithIndex(function () {
  return foldableList;
}, function (dictMonoid) {
  return function (f) {
    return Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexList)(function (i) {
      return function (acc) {
        var $206 = Data_Semigroup.append(dictMonoid.Semigroup0())(acc);
        var $207 = f(i);
        return function ($208) {
          return $206($207($208));
        };
      };
    })(Data_Monoid.mempty(dictMonoid));
  };
}, function (f) {
  return function (acc) {
    var $209 = Data_Foldable.foldl(foldableList)(function (v) {
      return function (a) {
        return new Data_Tuple.Tuple(v.value0 + 1 | 0, f(v.value0)(v.value1)(a));
      };
    })(new Data_Tuple.Tuple(0, acc));
    return function ($210) {
      return Data_Tuple.snd($209($210));
    };
  };
}, function (f) {
  return function (b) {
    return function (xs) {
      var v = function () {
        var rev = Data_Foldable.foldl(foldableList)(function (v1) {
          return function (a) {
            return new Data_Tuple.Tuple(v1.value0 + 1 | 0, new Cons(a, v1.value1));
          };
        });
        return rev(new Data_Tuple.Tuple(0, Nil.value))(xs);
      }();

      return Data_Tuple.snd(Data_Foldable.foldl(foldableList)(function (v1) {
        return function (a) {
          return new Data_Tuple.Tuple(v1.value0 - 1 | 0, f(v1.value0 - 1 | 0)(a)(v1.value1));
        };
      })(new Data_Tuple.Tuple(v.value0, b))(v.value1));
    };
  };
});
var foldableWithIndexNonEmptyList = new Data_FoldableWithIndex.FoldableWithIndex(function () {
  return foldableNonEmptyList;
}, function (dictMonoid) {
  return function (f) {
    return function (v) {
      return Data_FoldableWithIndex.foldMapWithIndex(Data_NonEmpty.foldableWithIndexNonEmpty(foldableWithIndexList))(dictMonoid)(function () {
        var $211 = Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1));
        return function ($212) {
          return f($211($212));
        };
      }())(v);
    };
  };
}, function (f) {
  return function (b) {
    return function (v) {
      return Data_FoldableWithIndex.foldlWithIndex(Data_NonEmpty.foldableWithIndexNonEmpty(foldableWithIndexList))(function () {
        var $213 = Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1));
        return function ($214) {
          return f($213($214));
        };
      }())(b)(v);
    };
  };
}, function (f) {
  return function (b) {
    return function (v) {
      return Data_FoldableWithIndex.foldrWithIndex(Data_NonEmpty.foldableWithIndexNonEmpty(foldableWithIndexList))(function () {
        var $215 = Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1));
        return function ($216) {
          return f($215($216));
        };
      }())(b)(v);
    };
  };
});
var functorWithIndexList = new Data_FunctorWithIndex.FunctorWithIndex(function () {
  return functorList;
}, function (f) {
  return Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexList)(function (i) {
    return function (x) {
      return function (acc) {
        return new Cons(f(i)(x), acc);
      };
    };
  })(Nil.value);
});
var functorWithIndexNonEmptyList = new Data_FunctorWithIndex.FunctorWithIndex(function () {
  return functorNonEmptyList;
}, function (fn) {
  return function (v) {
    return NonEmptyList(Data_FunctorWithIndex.mapWithIndex(Data_NonEmpty.functorWithIndex(functorWithIndexList))(function () {
      var $217 = Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1));
      return function ($218) {
        return fn($217($218));
      };
    }())(v));
  };
});
var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
  return function (ys) {
    return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
  };
});
var monoidList = new Data_Monoid.Monoid(function () {
  return semigroupList;
}, Nil.value);
var semigroupNonEmptyList = new Data_Semigroup.Semigroup(function (v) {
  return function (as$prime) {
    return new Data_NonEmpty.NonEmpty(v.value0, Data_Semigroup.append(semigroupList)(v.value1)(toList(as$prime)));
  };
});

var showList = function showList(dictShow) {
  return new Data_Show.Show(function (v) {
    if (v instanceof Nil) {
      return "Nil";
    }

    ;
    return "(" + (Data_Foldable.intercalate(foldableList)(Data_Monoid.monoidString)(" : ")(Data_Functor.map(functorList)(Data_Show.show(dictShow))(v)) + " : Nil)");
  });
};

var showNonEmptyList = function showNonEmptyList(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(NonEmptyList " + (Data_Show.show(Data_NonEmpty.showNonEmpty(dictShow)(showList(dictShow)))(v) + ")");
  });
};

var traversableList = new Data_Traversable.Traversable(function () {
  return foldableList;
}, function () {
  return functorList;
}, function (dictApplicative) {
  return Data_Traversable.traverse(traversableList)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
}, function (dictApplicative) {
  return function (f) {
    var $219 = Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value));
    var $220 = Data_Foldable.foldl(foldableList)(function (acc) {
      var $222 = Control_Apply.lift2(dictApplicative.Apply0())(Data_Function.flip(Cons.create))(acc);
      return function ($223) {
        return $222(f($223));
      };
    })(Control_Applicative.pure(dictApplicative)(Nil.value));
    return function ($221) {
      return $219($220($221));
    };
  };
});
var traversableNonEmptyList = Data_NonEmpty.traversableNonEmpty(traversableList);
var traversableWithIndexList = new Data_TraversableWithIndex.TraversableWithIndex(function () {
  return foldableWithIndexList;
}, function () {
  return functorWithIndexList;
}, function () {
  return traversableList;
}, function (dictApplicative) {
  return function (f) {
    var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
    var $224 = Data_Functor.map(dictApplicative.Apply0().Functor0())(rev);
    var $225 = Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexList)(function (i) {
      return function (acc) {
        var $227 = Control_Apply.lift2(dictApplicative.Apply0())(Data_Function.flip(Cons.create))(acc);
        var $228 = f(i);
        return function ($229) {
          return $227($228($229));
        };
      };
    })(Control_Applicative.pure(dictApplicative)(Nil.value));
    return function ($226) {
      return $224($225($226));
    };
  };
});
var traversableWithIndexNonEmptyList = new Data_TraversableWithIndex.TraversableWithIndex(function () {
  return foldableWithIndexNonEmptyList;
}, function () {
  return functorWithIndexNonEmptyList;
}, function () {
  return traversableNonEmptyList;
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(NonEmptyList)(Data_TraversableWithIndex.traverseWithIndex(Data_NonEmpty.traversableWithIndexNonEmpty(traversableWithIndexList))(dictApplicative)(function () {
        var $230 = Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1));
        return function ($231) {
          return f($230($231));
        };
      }())(v));
    };
  };
});
var unfoldable1List = new Data_Unfoldable1.Unfoldable1(function (f) {
  return function (b) {
    var go = function go($copy_source) {
      return function ($copy_memo) {
        var $tco_var_source = $copy_source;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(source, memo) {
          var v = f(source);

          if (v.value1 instanceof Data_Maybe.Just) {
            $tco_var_source = v.value1.value0;
            $copy_memo = new Cons(v.value0, memo);
            return;
          }

          ;

          if (v.value1 instanceof Data_Maybe.Nothing) {
            $tco_done = true;
            return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(new Cons(v.value0, memo));
          }

          ;
          throw new Error("Failed pattern match at Data.List.Types (line 133, column 22 - line 135, column 61): " + [v.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_source, $copy_memo);
        }

        ;
        return $tco_result;
      };
    };

    return go(b)(Nil.value);
  };
});
var unfoldableList = new Data_Unfoldable.Unfoldable(function () {
  return unfoldable1List;
}, function (f) {
  return function (b) {
    var go = function go($copy_source) {
      return function ($copy_memo) {
        var $tco_var_source = $copy_source;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(source, memo) {
          var v = f(source);

          if (v instanceof Data_Maybe.Nothing) {
            $tco_done = true;
            return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(memo);
          }

          ;

          if (v instanceof Data_Maybe.Just) {
            $tco_var_source = v.value0.value1;
            $copy_memo = new Cons(v.value0.value0, memo);
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.List.Types (line 140, column 22 - line 142, column 52): " + [v.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_source, $copy_memo);
        }

        ;
        return $tco_result;
      };
    };

    return go(b)(Nil.value);
  };
});
var unfoldable1NonEmptyList = Data_NonEmpty.unfoldable1NonEmpty(unfoldableList);
var foldable1NonEmptyList = Data_NonEmpty.foldable1NonEmpty(foldableList);
var extendNonEmptyList = new Control_Extend.Extend(function () {
  return functorNonEmptyList;
}, function (f) {
  return function (v) {
    var go = function go(a) {
      return function (v1) {
        return {
          val: new Cons(f(new Data_NonEmpty.NonEmpty(a, v1.acc)), v1.val),
          acc: new Cons(a, v1.acc)
        };
      };
    };

    return new Data_NonEmpty.NonEmpty(f(v), Data_Foldable.foldr(foldableList)(go)({
      val: Nil.value,
      acc: Nil.value
    })(v.value1).val);
  };
});
var extendList = new Control_Extend.Extend(function () {
  return functorList;
}, function (f) {
  return function (v) {
    if (v instanceof Nil) {
      return Nil.value;
    }

    ;

    if (v instanceof Cons) {
      var go = function go(a$prime) {
        return function (v1) {
          var acc$prime = new Cons(a$prime, v1.acc);
          return {
            val: new Cons(f(acc$prime), v1.val),
            acc: acc$prime
          };
        };
      };

      return new Cons(f(v), Data_Foldable.foldr(foldableList)(go)({
        val: Nil.value,
        acc: Nil.value
      })(v.value1).val);
    }

    ;
    throw new Error("Failed pattern match at Data.List.Types (line 180, column 1 - line 187, column 42): " + [f.constructor.name, v.constructor.name]);
  };
});
var eq1List = new Data_Eq.Eq1(function (dictEq) {
  return function (xs) {
    return function (ys) {
      var go = function go($copy_v) {
        return function ($copy_v1) {
          return function ($copy_v2) {
            var $tco_var_v = $copy_v;
            var $tco_var_v1 = $copy_v1;
            var $tco_done = false;
            var $tco_result;

            function $tco_loop(v, v1, v2) {
              if (!v2) {
                $tco_done = true;
                return false;
              }

              ;

              if (v instanceof Nil && v1 instanceof Nil) {
                $tco_done = true;
                return v2;
              }

              ;

              if (v instanceof Cons && v1 instanceof Cons) {
                $tco_var_v = v.value1;
                $tco_var_v1 = v1.value1;
                $copy_v2 = v2 && Data_Eq.eq(dictEq)(v1.value0)(v.value0);
                return;
              }

              ;
              $tco_done = true;
              return false;
            }

            ;

            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
            }

            ;
            return $tco_result;
          };
        };
      };

      return go(xs)(ys)(true);
    };
  };
});

var eqList = function eqList(dictEq) {
  return new Data_Eq.Eq(Data_Eq.eq1(eq1List)(dictEq));
};

var eqNonEmptyList = function eqNonEmptyList(dictEq) {
  return Data_NonEmpty.eqNonEmpty(eq1List)(dictEq);
};

var ord1List = new Data_Ord.Ord1(function () {
  return eq1List;
}, function (dictOrd) {
  return function (xs) {
    return function (ys) {
      var go = function go($copy_v) {
        return function ($copy_v1) {
          var $tco_var_v = $copy_v;
          var $tco_done = false;
          var $tco_result;

          function $tco_loop(v, v1) {
            if (v instanceof Nil && v1 instanceof Nil) {
              $tco_done = true;
              return Data_Ordering.EQ.value;
            }

            ;

            if (v instanceof Nil) {
              $tco_done = true;
              return Data_Ordering.LT.value;
            }

            ;

            if (v1 instanceof Nil) {
              $tco_done = true;
              return Data_Ordering.GT.value;
            }

            ;

            if (v instanceof Cons && v1 instanceof Cons) {
              var v2 = Data_Ord.compare(dictOrd)(v.value0)(v1.value0);

              if (v2 instanceof Data_Ordering.EQ) {
                $tco_var_v = v.value1;
                $copy_v1 = v1.value1;
                return;
              }

              ;
              $tco_done = true;
              return v2;
            }

            ;
            throw new Error("Failed pattern match at Data.List.Types (line 61, column 5 - line 61, column 20): " + [v.constructor.name, v1.constructor.name]);
          }

          ;

          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_v, $copy_v1);
          }

          ;
          return $tco_result;
        };
      };

      return go(xs)(ys);
    };
  };
});

var ordList = function ordList(dictOrd) {
  return new Data_Ord.Ord(function () {
    return eqList(dictOrd.Eq0());
  }, Data_Ord.compare1(ord1List)(dictOrd));
};

var ordNonEmptyList = function ordNonEmptyList(dictOrd) {
  return Data_NonEmpty.ordNonEmpty(ord1List)(dictOrd);
};

var comonadNonEmptyList = new Control_Comonad.Comonad(function () {
  return extendNonEmptyList;
}, function (v) {
  return v.value0;
});
var applyList = new Control_Apply.Apply(function () {
  return functorList;
}, function (v) {
  return function (v1) {
    if (v instanceof Nil) {
      return Nil.value;
    }

    ;

    if (v instanceof Cons) {
      return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
    }

    ;
    throw new Error("Failed pattern match at Data.List.Types (line 155, column 1 - line 157, column 48): " + [v.constructor.name, v1.constructor.name]);
  };
});
var applyNonEmptyList = new Control_Apply.Apply(function () {
  return functorNonEmptyList;
}, function (v) {
  return function (v1) {
    return new Data_NonEmpty.NonEmpty(v.value0(v1.value0), Data_Semigroup.append(semigroupList)(Control_Apply.apply(applyList)(v.value1)(new Cons(v1.value0, Nil.value)))(Control_Apply.apply(applyList)(new Cons(v.value0, v.value1))(v1.value1)));
  };
});
var bindList = new Control_Bind.Bind(function () {
  return applyList;
}, function (v) {
  return function (v1) {
    if (v instanceof Nil) {
      return Nil.value;
    }

    ;

    if (v instanceof Cons) {
      return Data_Semigroup.append(semigroupList)(v1(v.value0))(Control_Bind.bind(bindList)(v.value1)(v1));
    }

    ;
    throw new Error("Failed pattern match at Data.List.Types (line 162, column 1 - line 164, column 37): " + [v.constructor.name, v1.constructor.name]);
  };
});
var bindNonEmptyList = new Control_Bind.Bind(function () {
  return applyNonEmptyList;
}, function (v) {
  return function (f) {
    var v1 = f(v.value0);
    return new Data_NonEmpty.NonEmpty(v1.value0, Data_Semigroup.append(semigroupList)(v1.value1)(Control_Bind.bind(bindList)(v.value1)(function ($232) {
      return toList(f($232));
    })));
  };
});
var applicativeList = new Control_Applicative.Applicative(function () {
  return applyList;
}, function (a) {
  return new Cons(a, Nil.value);
});
var monadList = new Control_Monad.Monad(function () {
  return applicativeList;
}, function () {
  return bindList;
});
var altNonEmptyList = new Control_Alt.Alt(function () {
  return functorNonEmptyList;
}, Data_Semigroup.append(semigroupNonEmptyList));
var altList = new Control_Alt.Alt(function () {
  return functorList;
}, Data_Semigroup.append(semigroupList));
var plusList = new Control_Plus.Plus(function () {
  return altList;
}, Nil.value);
var alternativeList = new Control_Alternative.Alternative(function () {
  return applicativeList;
}, function () {
  return plusList;
});
var monadZeroList = new Control_MonadZero.MonadZero(function () {
  return alternativeList;
}, function () {
  return monadList;
});
var monadPlusList = new Control_MonadPlus.MonadPlus(function () {
  return monadZeroList;
});
var applicativeNonEmptyList = new Control_Applicative.Applicative(function () {
  return applyNonEmptyList;
}, function () {
  var $233 = Data_NonEmpty.singleton(plusList);
  return function ($234) {
    return NonEmptyList($233($234));
  };
}());
var monadNonEmptyList = new Control_Monad.Monad(function () {
  return applicativeNonEmptyList;
}, function () {
  return bindNonEmptyList;
});
var traversable1NonEmptyList = new Data_Semigroup_Traversable.Traversable1(function () {
  return foldable1NonEmptyList;
}, function () {
  return traversableNonEmptyList;
}, function (dictApply) {
  return Data_Semigroup_Traversable.traverse1(traversable1NonEmptyList)(dictApply)(Control_Category.identity(Control_Category.categoryFn));
}, function (dictApply) {
  return function (f) {
    return function (v) {
      return Data_Functor.mapFlipped(dictApply.Functor0())(Data_Foldable.foldl(foldableList)(function (acc) {
        var $235 = Control_Apply.lift2(dictApply)(Data_Function.flip(nelCons))(acc);
        return function ($236) {
          return $235(f($236));
        };
      })(Data_Functor.map(dictApply.Functor0())(Control_Applicative.pure(applicativeNonEmptyList))(f(v.value0)))(v.value1))(function (v1) {
        return Data_Foldable.foldl(foldableList)(Data_Function.flip(nelCons))(Control_Applicative.pure(applicativeNonEmptyList)(v1.value0))(v1.value1);
      });
    };
  };
});
module.exports = {
  Nil: Nil,
  Cons: Cons,
  NonEmptyList: NonEmptyList,
  toList: toList,
  nelCons: nelCons,
  showList: showList,
  eqList: eqList,
  eq1List: eq1List,
  ordList: ordList,
  ord1List: ord1List,
  semigroupList: semigroupList,
  monoidList: monoidList,
  functorList: functorList,
  functorWithIndexList: functorWithIndexList,
  foldableList: foldableList,
  foldableWithIndexList: foldableWithIndexList,
  unfoldable1List: unfoldable1List,
  unfoldableList: unfoldableList,
  traversableList: traversableList,
  traversableWithIndexList: traversableWithIndexList,
  applyList: applyList,
  applicativeList: applicativeList,
  bindList: bindList,
  monadList: monadList,
  altList: altList,
  plusList: plusList,
  alternativeList: alternativeList,
  monadZeroList: monadZeroList,
  monadPlusList: monadPlusList,
  extendList: extendList,
  newtypeNonEmptyList: newtypeNonEmptyList,
  eqNonEmptyList: eqNonEmptyList,
  ordNonEmptyList: ordNonEmptyList,
  showNonEmptyList: showNonEmptyList,
  functorNonEmptyList: functorNonEmptyList,
  applyNonEmptyList: applyNonEmptyList,
  applicativeNonEmptyList: applicativeNonEmptyList,
  bindNonEmptyList: bindNonEmptyList,
  monadNonEmptyList: monadNonEmptyList,
  altNonEmptyList: altNonEmptyList,
  extendNonEmptyList: extendNonEmptyList,
  comonadNonEmptyList: comonadNonEmptyList,
  semigroupNonEmptyList: semigroupNonEmptyList,
  foldableNonEmptyList: foldableNonEmptyList,
  traversableNonEmptyList: traversableNonEmptyList,
  foldable1NonEmptyList: foldable1NonEmptyList,
  unfoldable1NonEmptyList: unfoldable1NonEmptyList,
  functorWithIndexNonEmptyList: functorWithIndexNonEmptyList,
  foldableWithIndexNonEmptyList: foldableWithIndexNonEmptyList,
  traversableWithIndexNonEmptyList: traversableWithIndexNonEmptyList,
  traversable1NonEmptyList: traversable1NonEmptyList
};
},{"../Control.Alt/index.js":"../output/Control.Alt/index.js","../Control.Alternative/index.js":"../output/Control.Alternative/index.js","../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Category/index.js":"../output/Control.Category/index.js","../Control.Comonad/index.js":"../output/Control.Comonad/index.js","../Control.Extend/index.js":"../output/Control.Extend/index.js","../Control.Monad/index.js":"../output/Control.Monad/index.js","../Control.MonadPlus/index.js":"../output/Control.MonadPlus/index.js","../Control.MonadZero/index.js":"../output/Control.MonadZero/index.js","../Control.Plus/index.js":"../output/Control.Plus/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Foldable/index.js":"../output/Data.Foldable/index.js","../Data.FoldableWithIndex/index.js":"../output/Data.FoldableWithIndex/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.FunctorWithIndex/index.js":"../output/Data.FunctorWithIndex/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.NonEmpty/index.js":"../output/Data.NonEmpty/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Ordering/index.js":"../output/Data.Ordering/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Semigroup.Traversable/index.js":"../output/Data.Semigroup.Traversable/index.js","../Data.Semiring/index.js":"../output/Data.Semiring/index.js","../Data.Show/index.js":"../output/Data.Show/index.js","../Data.Traversable/index.js":"../output/Data.Traversable/index.js","../Data.TraversableWithIndex/index.js":"../output/Data.TraversableWithIndex/index.js","../Data.Tuple/index.js":"../output/Data.Tuple/index.js","../Data.Unfoldable/index.js":"../output/Data.Unfoldable/index.js","../Data.Unfoldable1/index.js":"../output/Data.Unfoldable1/index.js"}],"../output/Data.List/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Lazy = require("../Control.Lazy/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_NonEmpty = require("../Data.NonEmpty/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Pattern = function Pattern(x) {
  return x;
};

var updateAt = function updateAt(v) {
  return function (v1) {
    return function (v2) {
      if (v === 0 && v2 instanceof Data_List_Types.Cons) {
        return new Data_Maybe.Just(new Data_List_Types.Cons(v1, v2.value1));
      }

      ;

      if (v2 instanceof Data_List_Types.Cons) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
          return new Data_List_Types.Cons(v2.value0, v3);
        })(updateAt(v - 1 | 0)(v1)(v2.value1));
      }

      ;
      return Data_Maybe.Nothing.value;
    };
  };
};

var unzip = Data_Foldable.foldr(Data_List_Types.foldableList)(function (v) {
  return function (v1) {
    return new Data_Tuple.Tuple(new Data_List_Types.Cons(v.value0, v1.value0), new Data_List_Types.Cons(v.value1, v1.value1));
  };
})(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_List_Types.Nil.value));

var uncons = function uncons(v) {
  if (v instanceof Data_List_Types.Nil) {
    return Data_Maybe.Nothing.value;
  }

  ;

  if (v instanceof Data_List_Types.Cons) {
    return new Data_Maybe.Just({
      head: v.value0,
      tail: v.value1
    });
  }

  ;
  throw new Error("Failed pattern match at Data.List (line 259, column 1 - line 259, column 66): " + [v.constructor.name]);
};

var toUnfoldable = function toUnfoldable(dictUnfoldable) {
  return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
      return new Data_Tuple.Tuple(rec.head, rec.tail);
    })(uncons(xs));
  });
};

var tail = function tail(v) {
  if (v instanceof Data_List_Types.Nil) {
    return Data_Maybe.Nothing.value;
  }

  ;

  if (v instanceof Data_List_Types.Cons) {
    return new Data_Maybe.Just(v.value1);
  }

  ;
  throw new Error("Failed pattern match at Data.List (line 245, column 1 - line 245, column 43): " + [v.constructor.name]);
};

var stripPrefix = function stripPrefix(dictEq) {
  return function (v) {
    return function (s) {
      var go = function go(prefix) {
        return function (input) {
          if (prefix instanceof Data_List_Types.Cons && input instanceof Data_List_Types.Cons && Data_Eq.eq(dictEq)(prefix.value0)(input.value0)) {
            return Data_Maybe.Just.create(new Control_Monad_Rec_Class.Loop({
              a: prefix.value1,
              b: input.value1
            }));
          }

          ;

          if (prefix instanceof Data_List_Types.Nil) {
            return Data_Maybe.Just.create(new Control_Monad_Rec_Class.Done(input));
          }

          ;
          return Data_Maybe.Nothing.value;
        };
      };

      return Control_Monad_Rec_Class.tailRecM2(Control_Monad_Rec_Class.monadRecMaybe)(go)(v)(s);
    };
  };
};

var span = function span(v) {
  return function (v1) {
    if (v1 instanceof Data_List_Types.Cons && v(v1.value0)) {
      var v2 = span(v)(v1.value1);
      return {
        init: new Data_List_Types.Cons(v1.value0, v2.init),
        rest: v2.rest
      };
    }

    ;
    return {
      init: Data_List_Types.Nil.value,
      rest: v1
    };
  };
};

var snoc = function snoc(xs) {
  return function (x) {
    return Data_Foldable.foldr(Data_List_Types.foldableList)(Data_List_Types.Cons.create)(new Data_List_Types.Cons(x, Data_List_Types.Nil.value))(xs);
  };
};

var singleton = function singleton(a) {
  return new Data_List_Types.Cons(a, Data_List_Types.Nil.value);
};

var sortBy = function sortBy(cmp) {
  var merge = function merge(v) {
    return function (v1) {
      if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
        if (Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1.value0))(Data_Ordering.GT.value)) {
          return new Data_List_Types.Cons(v1.value0, merge(v)(v1.value1));
        }

        ;

        if (Data_Boolean.otherwise) {
          return new Data_List_Types.Cons(v.value0, merge(v.value1)(v1));
        }

        ;
      }

      ;

      if (v instanceof Data_List_Types.Nil) {
        return v1;
      }

      ;

      if (v1 instanceof Data_List_Types.Nil) {
        return v;
      }

      ;
      throw new Error("Failed pattern match at Data.List (line 473, column 3 - line 473, column 38): " + [v.constructor.name, v1.constructor.name]);
    };
  };

  var mergePairs = function mergePairs(v) {
    if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {
      return new Data_List_Types.Cons(merge(v.value0)(v.value1.value0), mergePairs(v.value1.value1));
    }

    ;
    return v;
  };

  var mergeAll = function mergeAll($copy_v) {
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(v) {
      if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
        $tco_done = true;
        return v.value0;
      }

      ;
      $copy_v = mergePairs(v);
      return;
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }

    ;
    return $tco_result;
  };

  var sequences = function sequences(v) {
    if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {
      if (Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v.value1.value0))(Data_Ordering.GT.value)) {
        return descending(v.value1.value0)(singleton(v.value0))(v.value1.value1);
      }

      ;

      if (Data_Boolean.otherwise) {
        return ascending(v.value1.value0)(function (v1) {
          return new Data_List_Types.Cons(v.value0, v1);
        })(v.value1.value1);
      }

      ;
    }

    ;
    return singleton(v);
  };

  var descending = function descending($copy_a) {
    return function ($copy_as) {
      return function ($copy_v) {
        var $tco_var_a = $copy_a;
        var $tco_var_as = $copy_as;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(a, as, v) {
          if (v instanceof Data_List_Types.Cons && Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(Data_Ordering.GT.value)) {
            $tco_var_a = v.value0;
            $tco_var_as = new Data_List_Types.Cons(a, as);
            $copy_v = v.value1;
            return;
          }

          ;
          $tco_done = true;
          return new Data_List_Types.Cons(new Data_List_Types.Cons(a, as), sequences(v));
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_a, $tco_var_as, $copy_v);
        }

        ;
        return $tco_result;
      };
    };
  };

  var ascending = function ascending($copy_a) {
    return function ($copy_as) {
      return function ($copy_v) {
        var $tco_var_a = $copy_a;
        var $tco_var_as = $copy_as;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(a, as, v) {
          if (v instanceof Data_List_Types.Cons && Data_Eq.notEq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(Data_Ordering.GT.value)) {
            $tco_var_a = v.value0;

            $tco_var_as = function $tco_var_as(ys) {
              return as(new Data_List_Types.Cons(a, ys));
            };

            $copy_v = v.value1;
            return;
          }

          ;
          $tco_done = true;
          return new Data_List_Types.Cons(as(singleton(a)), sequences(v));
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_a, $tco_var_as, $copy_v);
        }

        ;
        return $tco_result;
      };
    };
  };

  return function ($331) {
    return mergeAll(sequences($331));
  };
};

var sort = function sort(dictOrd) {
  return function (xs) {
    return sortBy(Data_Ord.compare(dictOrd))(xs);
  };
};

var tails = function tails(v) {
  if (v instanceof Data_List_Types.Nil) {
    return singleton(Data_List_Types.Nil.value);
  }

  ;

  if (v instanceof Data_List_Types.Cons) {
    return new Data_List_Types.Cons(v, tails(v.value1));
  }

  ;
  throw new Error("Failed pattern match at Data.List (line 626, column 1 - line 626, column 43): " + [v.constructor.name]);
};

var showPattern = function showPattern(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Pattern " + (Data_Show.show(Data_List_Types.showList(dictShow))(v) + ")");
  });
};

var reverse = function () {
  var go = function go($copy_acc) {
    return function ($copy_v) {
      var $tco_var_acc = $copy_acc;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(acc, v) {
        if (v instanceof Data_List_Types.Nil) {
          $tco_done = true;
          return acc;
        }

        ;

        if (v instanceof Data_List_Types.Cons) {
          $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
          $copy_v = v.value1;
          return;
        }

        ;
        throw new Error("Failed pattern match at Data.List (line 368, column 3 - line 368, column 19): " + [acc.constructor.name, v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_acc, $copy_v);
      }

      ;
      return $tco_result;
    };
  };

  return go(Data_List_Types.Nil.value);
}();

var take = function () {
  var go = function go($copy_acc) {
    return function ($copy_v) {
      return function ($copy_v1) {
        var $tco_var_acc = $copy_acc;
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(acc, v, v1) {
          if (v < 1) {
            $tco_done = true;
            return reverse(acc);
          }

          ;

          if (v1 instanceof Data_List_Types.Nil) {
            $tco_done = true;
            return reverse(acc);
          }

          ;

          if (v1 instanceof Data_List_Types.Cons) {
            $tco_var_acc = new Data_List_Types.Cons(v1.value0, acc);
            $tco_var_v = v - 1 | 0;
            $copy_v1 = v1.value1;
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.List (line 520, column 3 - line 520, column 35): " + [acc.constructor.name, v.constructor.name, v1.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_acc, $tco_var_v, $copy_v1);
        }

        ;
        return $tco_result;
      };
    };
  };

  return go(Data_List_Types.Nil.value);
}();

var takeWhile = function takeWhile(p) {
  var go = function go($copy_acc) {
    return function ($copy_v) {
      var $tco_var_acc = $copy_acc;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(acc, v) {
        if (v instanceof Data_List_Types.Cons && p(v.value0)) {
          $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
          $copy_v = v.value1;
          return;
        }

        ;
        $tco_done = true;
        return reverse(acc);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_acc, $copy_v);
      }

      ;
      return $tco_result;
    };
  };

  return go(Data_List_Types.Nil.value);
};

var unsnoc = function unsnoc(lst) {
  var go = function go($copy_v) {
    return function ($copy_acc) {
      var $tco_var_v = $copy_v;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(v, acc) {
        if (v instanceof Data_List_Types.Nil) {
          $tco_done = true;
          return Data_Maybe.Nothing.value;
        }

        ;

        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
          $tco_done = true;
          return new Data_Maybe.Just({
            revInit: acc,
            last: v.value0
          });
        }

        ;

        if (v instanceof Data_List_Types.Cons) {
          $tco_var_v = v.value1;
          $copy_acc = new Data_List_Types.Cons(v.value0, acc);
          return;
        }

        ;
        throw new Error("Failed pattern match at Data.List (line 270, column 3 - line 270, column 23): " + [v.constructor.name, acc.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_v, $copy_acc);
      }

      ;
      return $tco_result;
    };
  };

  return Data_Functor.map(Data_Maybe.functorMaybe)(function (h) {
    return {
      init: reverse(h.revInit),
      last: h.last
    };
  })(go(lst)(Data_List_Types.Nil.value));
};

var zipWith = function zipWith(f) {
  return function (xs) {
    return function (ys) {
      var go = function go($copy_v) {
        return function ($copy_v1) {
          return function ($copy_acc) {
            var $tco_var_v = $copy_v;
            var $tco_var_v1 = $copy_v1;
            var $tco_done = false;
            var $tco_result;

            function $tco_loop(v, v1, acc) {
              if (v instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return acc;
              }

              ;

              if (v1 instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return acc;
              }

              ;

              if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
                $tco_var_v = v.value1;
                $tco_var_v1 = v1.value1;
                $copy_acc = new Data_List_Types.Cons(f(v.value0)(v1.value0), acc);
                return;
              }

              ;
              throw new Error("Failed pattern match at Data.List (line 718, column 3 - line 718, column 21): " + [v.constructor.name, v1.constructor.name, acc.constructor.name]);
            }

            ;

            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_acc);
            }

            ;
            return $tco_result;
          };
        };
      };

      return reverse(go(xs)(ys)(Data_List_Types.Nil.value));
    };
  };
};

var zip = zipWith(Data_Tuple.Tuple.create);

var zipWithA = function zipWithA(dictApplicative) {
  return function (f) {
    return function (xs) {
      return function (ys) {
        return Data_Traversable.sequence(Data_List_Types.traversableList)(dictApplicative)(zipWith(f)(xs)(ys));
      };
    };
  };
};

var range = function range(start) {
  return function (end) {
    if (start === end) {
      return singleton(start);
    }

    ;

    if (Data_Boolean.otherwise) {
      var go = function go($copy_s) {
        return function ($copy_e) {
          return function ($copy_step) {
            return function ($copy_rest) {
              var $tco_var_s = $copy_s;
              var $tco_var_e = $copy_e;
              var $tco_var_step = $copy_step;
              var $tco_done = false;
              var $tco_result;

              function $tco_loop(s, e, step, rest) {
                if (s === e) {
                  $tco_done = true;
                  return new Data_List_Types.Cons(s, rest);
                }

                ;

                if (Data_Boolean.otherwise) {
                  $tco_var_s = s + step | 0;
                  $tco_var_e = e;
                  $tco_var_step = step;
                  $copy_rest = new Data_List_Types.Cons(s, rest);
                  return;
                }

                ;
                throw new Error("Failed pattern match at Data.List (line 148, column 3 - line 149, column 65): " + [s.constructor.name, e.constructor.name, step.constructor.name, rest.constructor.name]);
              }

              ;

              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_s, $tco_var_e, $tco_var_step, $copy_rest);
              }

              ;
              return $tco_result;
            };
          };
        };
      };

      return go(end)(start)(function () {
        var $220 = start > end;

        if ($220) {
          return 1;
        }

        ;
        return -1 | 0;
      }())(Data_List_Types.Nil.value);
    }

    ;
    throw new Error("Failed pattern match at Data.List (line 144, column 1 - line 144, column 32): " + [start.constructor.name, end.constructor.name]);
  };
};

var partition = function partition(p) {
  return function (xs) {
    var select = function select(x) {
      return function (v) {
        var $223 = p(x);

        if ($223) {
          return {
            no: v.no,
            yes: new Data_List_Types.Cons(x, v.yes)
          };
        }

        ;
        return {
          no: new Data_List_Types.Cons(x, v.no),
          yes: v.yes
        };
      };
    };

    return Data_Foldable.foldr(Data_List_Types.foldableList)(select)({
      no: Data_List_Types.Nil.value,
      yes: Data_List_Types.Nil.value
    })(xs);
  };
};

var $$null = function $$null(v) {
  if (v instanceof Data_List_Types.Nil) {
    return true;
  }

  ;
  return false;
};

var newtypePattern = new Data_Newtype.Newtype(function (n) {
  return n;
}, Pattern);
var mapWithIndex = Data_FunctorWithIndex.mapWithIndex(Data_List_Types.functorWithIndexList);

var mapMaybe = function mapMaybe(f) {
  var go = function go($copy_acc) {
    return function ($copy_v) {
      var $tco_var_acc = $copy_acc;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(acc, v) {
        if (v instanceof Data_List_Types.Nil) {
          $tco_done = true;
          return reverse(acc);
        }

        ;

        if (v instanceof Data_List_Types.Cons) {
          var v1 = f(v.value0);

          if (v1 instanceof Data_Maybe.Nothing) {
            $tco_var_acc = acc;
            $copy_v = v.value1;
            return;
          }

          ;

          if (v1 instanceof Data_Maybe.Just) {
            $tco_var_acc = new Data_List_Types.Cons(v1.value0, acc);
            $copy_v = v.value1;
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.List (line 419, column 5 - line 421, column 32): " + [v1.constructor.name]);
        }

        ;
        throw new Error("Failed pattern match at Data.List (line 417, column 3 - line 417, column 27): " + [acc.constructor.name, v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_acc, $copy_v);
      }

      ;
      return $tco_result;
    };
  };

  return go(Data_List_Types.Nil.value);
};

var manyRec = function manyRec(dictMonadRec) {
  return function (dictAlternative) {
    return function (p) {
      var go = function go(acc) {
        return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(Control_Alt.alt(dictAlternative.Plus1().Alt0())(Data_Functor.map(dictAlternative.Plus1().Alt0().Functor0())(Control_Monad_Rec_Class.Loop.create)(p))(Control_Applicative.pure(dictAlternative.Applicative0())(new Control_Monad_Rec_Class.Done(Data_Unit.unit))))(function (aa) {
          return Control_Applicative.pure(dictAlternative.Applicative0())(Data_Bifunctor.bimap(Control_Monad_Rec_Class.bifunctorStep)(function (v) {
            return new Data_List_Types.Cons(v, acc);
          })(function (v) {
            return reverse(acc);
          })(aa));
        });
      };

      return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go)(Data_List_Types.Nil.value);
    };
  };
};

var someRec = function someRec(dictMonadRec) {
  return function (dictAlternative) {
    return function (v) {
      return Control_Apply.apply(dictAlternative.Applicative0().Apply0())(Data_Functor.map(dictAlternative.Plus1().Alt0().Functor0())(Data_List_Types.Cons.create)(v))(manyRec(dictMonadRec)(dictAlternative)(v));
    };
  };
};

var some = function some(dictAlternative) {
  return function (dictLazy) {
    return function (v) {
      return Control_Apply.apply(dictAlternative.Applicative0().Apply0())(Data_Functor.map(dictAlternative.Plus1().Alt0().Functor0())(Data_List_Types.Cons.create)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
        return many(dictAlternative)(dictLazy)(v);
      }));
    };
  };
};

var many = function many(dictAlternative) {
  return function (dictLazy) {
    return function (v) {
      return Control_Alt.alt(dictAlternative.Plus1().Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Types.Nil.value));
    };
  };
};

var length = Data_Foldable.foldl(Data_List_Types.foldableList)(function (acc) {
  return function (v) {
    return acc + 1 | 0;
  };
})(0);

var last = function last($copy_v) {
  var $tco_done = false;
  var $tco_result;

  function $tco_loop(v) {
    if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
      $tco_done = true;
      return new Data_Maybe.Just(v.value0);
    }

    ;

    if (v instanceof Data_List_Types.Cons) {
      $copy_v = v.value1;
      return;
    }

    ;
    $tco_done = true;
    return Data_Maybe.Nothing.value;
  }

  ;

  while (!$tco_done) {
    $tco_result = $tco_loop($copy_v);
  }

  ;
  return $tco_result;
};

var insertBy = function insertBy(v) {
  return function (x) {
    return function (v1) {
      if (v1 instanceof Data_List_Types.Nil) {
        return singleton(x);
      }

      ;

      if (v1 instanceof Data_List_Types.Cons) {
        var v2 = v(x)(v1.value0);

        if (v2 instanceof Data_Ordering.GT) {
          return new Data_List_Types.Cons(v1.value0, insertBy(v)(x)(v1.value1));
        }

        ;
        return new Data_List_Types.Cons(x, v1);
      }

      ;
      throw new Error("Failed pattern match at Data.List (line 216, column 1 - line 216, column 68): " + [v.constructor.name, x.constructor.name, v1.constructor.name]);
    };
  };
};

var insertAt = function insertAt(v) {
  return function (v1) {
    return function (v2) {
      if (v === 0) {
        return new Data_Maybe.Just(new Data_List_Types.Cons(v1, v2));
      }

      ;

      if (v2 instanceof Data_List_Types.Cons) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
          return new Data_List_Types.Cons(v2.value0, v3);
        })(insertAt(v - 1 | 0)(v1)(v2.value1));
      }

      ;
      return Data_Maybe.Nothing.value;
    };
  };
};

var insert = function insert(dictOrd) {
  return insertBy(Data_Ord.compare(dictOrd));
};

var init = function init(lst) {
  return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
    return v.init;
  })(unsnoc(lst));
};

var index = function index($copy_v) {
  return function ($copy_v1) {
    var $tco_var_v = $copy_v;
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(v, v1) {
      if (v instanceof Data_List_Types.Nil) {
        $tco_done = true;
        return Data_Maybe.Nothing.value;
      }

      ;

      if (v instanceof Data_List_Types.Cons && v1 === 0) {
        $tco_done = true;
        return new Data_Maybe.Just(v.value0);
      }

      ;

      if (v instanceof Data_List_Types.Cons) {
        $tco_var_v = v.value1;
        $copy_v1 = v1 - 1 | 0;
        return;
      }

      ;
      throw new Error("Failed pattern match at Data.List (line 281, column 1 - line 281, column 44): " + [v.constructor.name, v1.constructor.name]);
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($tco_var_v, $copy_v1);
    }

    ;
    return $tco_result;
  };
};

var head = function head(v) {
  if (v instanceof Data_List_Types.Nil) {
    return Data_Maybe.Nothing.value;
  }

  ;

  if (v instanceof Data_List_Types.Cons) {
    return new Data_Maybe.Just(v.value0);
  }

  ;
  throw new Error("Failed pattern match at Data.List (line 230, column 1 - line 230, column 22): " + [v.constructor.name]);
};

var transpose = function transpose(v) {
  if (v instanceof Data_List_Types.Nil) {
    return Data_List_Types.Nil.value;
  }

  ;

  if (v instanceof Data_List_Types.Cons && v.value0 instanceof Data_List_Types.Nil) {
    return transpose(v.value1);
  }

  ;

  if (v instanceof Data_List_Types.Cons && v.value0 instanceof Data_List_Types.Cons) {
    return new Data_List_Types.Cons(new Data_List_Types.Cons(v.value0.value0, mapMaybe(head)(v.value1)), transpose(new Data_List_Types.Cons(v.value0.value1, mapMaybe(tail)(v.value1))));
  }

  ;
  throw new Error("Failed pattern match at Data.List (line 752, column 1 - line 752, column 54): " + [v.constructor.name]);
};

var groupBy = function groupBy(v) {
  return function (v1) {
    if (v1 instanceof Data_List_Types.Nil) {
      return Data_List_Types.Nil.value;
    }

    ;

    if (v1 instanceof Data_List_Types.Cons) {
      var v2 = span(v(v1.value0))(v1.value1);
      return new Data_List_Types.Cons(new Data_NonEmpty.NonEmpty(v1.value0, v2.init), groupBy(v)(v2.rest));
    }

    ;
    throw new Error("Failed pattern match at Data.List (line 605, column 1 - line 605, column 80): " + [v.constructor.name, v1.constructor.name]);
  };
};

var group = function group(dictEq) {
  return groupBy(Data_Eq.eq(dictEq));
};

var group$prime = function group$prime(dictOrd) {
  var $332 = group(dictOrd.Eq0());
  var $333 = sort(dictOrd);
  return function ($334) {
    return $332($333($334));
  };
};

var fromFoldable = function fromFoldable(dictFoldable) {
  return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
};

var foldM = function foldM(dictMonad) {
  return function (v) {
    return function (a) {
      return function (v1) {
        if (v1 instanceof Data_List_Types.Nil) {
          return Control_Applicative.pure(dictMonad.Applicative0())(a);
        }

        ;

        if (v1 instanceof Data_List_Types.Cons) {
          return Control_Bind.bind(dictMonad.Bind1())(v(a)(v1.value0))(function (a$prime) {
            return foldM(dictMonad)(v)(a$prime)(v1.value1);
          });
        }

        ;
        throw new Error("Failed pattern match at Data.List (line 763, column 1 - line 763, column 72): " + [v.constructor.name, a.constructor.name, v1.constructor.name]);
      };
    };
  };
};

var findIndex = function findIndex(fn) {
  var go = function go($copy_v) {
    return function ($copy_v1) {
      var $tco_var_v = $copy_v;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(v, v1) {
        if (v1 instanceof Data_List_Types.Cons) {
          if (fn(v1.value0)) {
            $tco_done = true;
            return new Data_Maybe.Just(v);
          }

          ;

          if (Data_Boolean.otherwise) {
            $tco_var_v = v + 1 | 0;
            $copy_v1 = v1.value1;
            return;
          }

          ;
        }

        ;

        if (v1 instanceof Data_List_Types.Nil) {
          $tco_done = true;
          return Data_Maybe.Nothing.value;
        }

        ;
        throw new Error("Failed pattern match at Data.List (line 301, column 3 - line 301, column 35): " + [v.constructor.name, v1.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_v, $copy_v1);
      }

      ;
      return $tco_result;
    };
  };

  return go(0);
};

var findLastIndex = function findLastIndex(fn) {
  return function (xs) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
      return (length(xs) - 1 | 0) - v | 0;
    })(findIndex(fn)(reverse(xs)));
  };
};

var filterM = function filterM(dictMonad) {
  return function (v) {
    return function (v1) {
      if (v1 instanceof Data_List_Types.Nil) {
        return Control_Applicative.pure(dictMonad.Applicative0())(Data_List_Types.Nil.value);
      }

      ;

      if (v1 instanceof Data_List_Types.Cons) {
        return Control_Bind.bind(dictMonad.Bind1())(v(v1.value0))(function (b) {
          return Control_Bind.bind(dictMonad.Bind1())(filterM(dictMonad)(v)(v1.value1))(function (xs$prime) {
            return Control_Applicative.pure(dictMonad.Applicative0())(function () {
              if (b) {
                return new Data_List_Types.Cons(v1.value0, xs$prime);
              }

              ;
              return xs$prime;
            }());
          });
        });
      }

      ;
      throw new Error("Failed pattern match at Data.List (line 403, column 1 - line 403, column 75): " + [v.constructor.name, v1.constructor.name]);
    };
  };
};

var filter = function filter(p) {
  var go = function go($copy_acc) {
    return function ($copy_v) {
      var $tco_var_acc = $copy_acc;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(acc, v) {
        if (v instanceof Data_List_Types.Nil) {
          $tco_done = true;
          return reverse(acc);
        }

        ;

        if (v instanceof Data_List_Types.Cons) {
          if (p(v.value0)) {
            $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
            $copy_v = v.value1;
            return;
          }

          ;

          if (Data_Boolean.otherwise) {
            $tco_var_acc = acc;
            $copy_v = v.value1;
            return;
          }

          ;
        }

        ;
        throw new Error("Failed pattern match at Data.List (line 390, column 3 - line 390, column 27): " + [acc.constructor.name, v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_acc, $copy_v);
      }

      ;
      return $tco_result;
    };
  };

  return go(Data_List_Types.Nil.value);
};

var intersectBy = function intersectBy(v) {
  return function (v1) {
    return function (v2) {
      if (v1 instanceof Data_List_Types.Nil) {
        return Data_List_Types.Nil.value;
      }

      ;

      if (v2 instanceof Data_List_Types.Nil) {
        return Data_List_Types.Nil.value;
      }

      ;
      return filter(function (x) {
        return Data_Foldable.any(Data_List_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean)(v(x))(v2);
      })(v1);
    };
  };
};

var intersect = function intersect(dictEq) {
  return intersectBy(Data_Eq.eq(dictEq));
};

var nubBy = function nubBy(v) {
  return function (v1) {
    if (v1 instanceof Data_List_Types.Nil) {
      return Data_List_Types.Nil.value;
    }

    ;

    if (v1 instanceof Data_List_Types.Cons) {
      return new Data_List_Types.Cons(v1.value0, nubBy(v)(filter(function (y) {
        return !v(v1.value0)(y);
      })(v1.value1)));
    }

    ;
    throw new Error("Failed pattern match at Data.List (line 644, column 1 - line 644, column 59): " + [v.constructor.name, v1.constructor.name]);
  };
};

var nub = function nub(dictEq) {
  return nubBy(Data_Eq.eq(dictEq));
};

var eqPattern = function eqPattern(dictEq) {
  return new Data_Eq.Eq(function (x) {
    return function (y) {
      return Data_Eq.eq(Data_List_Types.eqList(dictEq))(x)(y);
    };
  });
};

var ordPattern = function ordPattern(dictOrd) {
  return new Data_Ord.Ord(function () {
    return eqPattern(dictOrd.Eq0());
  }, function (x) {
    return function (y) {
      return Data_Ord.compare(Data_List_Types.ordList(dictOrd))(x)(y);
    };
  });
};

var elemLastIndex = function elemLastIndex(dictEq) {
  return function (x) {
    return findLastIndex(function (v) {
      return Data_Eq.eq(dictEq)(v)(x);
    });
  };
};

var elemIndex = function elemIndex(dictEq) {
  return function (x) {
    return findIndex(function (v) {
      return Data_Eq.eq(dictEq)(v)(x);
    });
  };
};

var dropWhile = function dropWhile(p) {
  var go = function go($copy_v) {
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(v) {
      if (v instanceof Data_List_Types.Cons && p(v.value0)) {
        $copy_v = v.value1;
        return;
      }

      ;
      $tco_done = true;
      return v;
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }

    ;
    return $tco_result;
  };

  return go;
};

var dropEnd = function dropEnd(n) {
  return function (xs) {
    return take(length(xs) - n | 0)(xs);
  };
};

var drop = function drop($copy_v) {
  return function ($copy_v1) {
    var $tco_var_v = $copy_v;
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(v, v1) {
      if (v < 1) {
        $tco_done = true;
        return v1;
      }

      ;

      if (v1 instanceof Data_List_Types.Nil) {
        $tco_done = true;
        return Data_List_Types.Nil.value;
      }

      ;

      if (v1 instanceof Data_List_Types.Cons) {
        $tco_var_v = v - 1 | 0;
        $copy_v1 = v1.value1;
        return;
      }

      ;
      throw new Error("Failed pattern match at Data.List (line 543, column 1 - line 543, column 42): " + [v.constructor.name, v1.constructor.name]);
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($tco_var_v, $copy_v1);
    }

    ;
    return $tco_result;
  };
};

var slice = function slice(start) {
  return function (end) {
    return function (xs) {
      return take(end - start | 0)(drop(start)(xs));
    };
  };
};

var takeEnd = function takeEnd(n) {
  return function (xs) {
    return drop(length(xs) - n | 0)(xs);
  };
};

var deleteBy = function deleteBy(v) {
  return function (v1) {
    return function (v2) {
      if (v2 instanceof Data_List_Types.Nil) {
        return Data_List_Types.Nil.value;
      }

      ;

      if (v2 instanceof Data_List_Types.Cons && v(v1)(v2.value0)) {
        return v2.value1;
      }

      ;

      if (v2 instanceof Data_List_Types.Cons) {
        return new Data_List_Types.Cons(v2.value0, deleteBy(v)(v1)(v2.value1));
      }

      ;
      throw new Error("Failed pattern match at Data.List (line 671, column 1 - line 671, column 67): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
    };
  };
};

var unionBy = function unionBy(eq) {
  return function (xs) {
    return function (ys) {
      return Data_Semigroup.append(Data_List_Types.semigroupList)(xs)(Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
    };
  };
};

var union = function union(dictEq) {
  return unionBy(Data_Eq.eq(dictEq));
};

var deleteAt = function deleteAt(v) {
  return function (v1) {
    if (v === 0 && v1 instanceof Data_List_Types.Cons) {
      return new Data_Maybe.Just(v1.value1);
    }

    ;

    if (v1 instanceof Data_List_Types.Cons) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (v2) {
        return new Data_List_Types.Cons(v1.value0, v2);
      })(deleteAt(v - 1 | 0)(v1.value1));
    }

    ;
    return Data_Maybe.Nothing.value;
  };
};

var $$delete = function $$delete(dictEq) {
  return deleteBy(Data_Eq.eq(dictEq));
};

var difference = function difference(dictEq) {
  return Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip($$delete(dictEq)));
};

var concatMap = Data_Function.flip(Control_Bind.bind(Data_List_Types.bindList));

var concat = function concat(v) {
  return Control_Bind.bind(Data_List_Types.bindList)(v)(Control_Category.identity(Control_Category.categoryFn));
};

var catMaybes = mapMaybe(Control_Category.identity(Control_Category.categoryFn));

var alterAt = function alterAt(v) {
  return function (v1) {
    return function (v2) {
      if (v === 0 && v2 instanceof Data_List_Types.Cons) {
        return Data_Maybe.Just.create(function () {
          var v3 = v1(v2.value0);

          if (v3 instanceof Data_Maybe.Nothing) {
            return v2.value1;
          }

          ;

          if (v3 instanceof Data_Maybe.Just) {
            return new Data_List_Types.Cons(v3.value0, v2.value1);
          }

          ;
          throw new Error("Failed pattern match at Data.List (line 352, column 3 - line 354, column 23): " + [v3.constructor.name]);
        }());
      }

      ;

      if (v2 instanceof Data_List_Types.Cons) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
          return new Data_List_Types.Cons(v2.value0, v3);
        })(alterAt(v - 1 | 0)(v1)(v2.value1));
      }

      ;
      return Data_Maybe.Nothing.value;
    };
  };
};

var modifyAt = function modifyAt(n) {
  return function (f) {
    return alterAt(n)(function ($335) {
      return Data_Maybe.Just.create(f($335));
    });
  };
};

module.exports = {
  toUnfoldable: toUnfoldable,
  fromFoldable: fromFoldable,
  singleton: singleton,
  range: range,
  some: some,
  someRec: someRec,
  many: many,
  manyRec: manyRec,
  "null": $$null,
  length: length,
  snoc: snoc,
  insert: insert,
  insertBy: insertBy,
  head: head,
  last: last,
  tail: tail,
  init: init,
  uncons: uncons,
  unsnoc: unsnoc,
  index: index,
  elemIndex: elemIndex,
  elemLastIndex: elemLastIndex,
  findIndex: findIndex,
  findLastIndex: findLastIndex,
  insertAt: insertAt,
  deleteAt: deleteAt,
  updateAt: updateAt,
  modifyAt: modifyAt,
  alterAt: alterAt,
  reverse: reverse,
  concat: concat,
  concatMap: concatMap,
  filter: filter,
  filterM: filterM,
  mapMaybe: mapMaybe,
  catMaybes: catMaybes,
  mapWithIndex: mapWithIndex,
  sort: sort,
  sortBy: sortBy,
  Pattern: Pattern,
  stripPrefix: stripPrefix,
  slice: slice,
  take: take,
  takeEnd: takeEnd,
  takeWhile: takeWhile,
  drop: drop,
  dropEnd: dropEnd,
  dropWhile: dropWhile,
  span: span,
  group: group,
  "group'": group$prime,
  groupBy: groupBy,
  partition: partition,
  nub: nub,
  nubBy: nubBy,
  union: union,
  unionBy: unionBy,
  "delete": $$delete,
  deleteBy: deleteBy,
  difference: difference,
  intersect: intersect,
  intersectBy: intersectBy,
  zipWith: zipWith,
  zipWithA: zipWithA,
  zip: zip,
  unzip: unzip,
  transpose: transpose,
  foldM: foldM,
  eqPattern: eqPattern,
  ordPattern: ordPattern,
  newtypePattern: newtypePattern,
  showPattern: showPattern
};
},{"../Control.Alt/index.js":"../output/Control.Alt/index.js","../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Category/index.js":"../output/Control.Category/index.js","../Control.Lazy/index.js":"../output/Control.Lazy/index.js","../Control.Monad.Rec.Class/index.js":"../output/Control.Monad.Rec.Class/index.js","../Data.Bifunctor/index.js":"../output/Data.Bifunctor/index.js","../Data.Boolean/index.js":"../output/Data.Boolean/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Foldable/index.js":"../output/Data.Foldable/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.FunctorWithIndex/index.js":"../output/Data.FunctorWithIndex/index.js","../Data.HeytingAlgebra/index.js":"../output/Data.HeytingAlgebra/index.js","../Data.List.Types/index.js":"../output/Data.List.Types/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.NonEmpty/index.js":"../output/Data.NonEmpty/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Ordering/index.js":"../output/Data.Ordering/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Show/index.js":"../output/Data.Show/index.js","../Data.Traversable/index.js":"../output/Data.Traversable/index.js","../Data.Tuple/index.js":"../output/Data.Tuple/index.js","../Data.Unfoldable/index.js":"../output/Data.Unfoldable/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js"}],"../output/Data.List.Lazy.Types/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Comonad = require("../Control.Comonad/index.js");

var Control_Extend = require("../Control.Extend/index.js");

var Control_Lazy = require("../Control.Lazy/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_Lazy = require("../Data.Lazy/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_NonEmpty = require("../Data.NonEmpty/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");

var List = function List(x) {
  return x;
};

var Nil = function () {
  function Nil() {}

  ;
  Nil.value = new Nil();
  return Nil;
}();

var Cons = function () {
  function Cons(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Cons.create = function (value0) {
    return function (value1) {
      return new Cons(value0, value1);
    };
  };

  return Cons;
}();

var NonEmptyList = function NonEmptyList(x) {
  return x;
};

var nil = List(Data_Lazy.defer(function (v) {
  return Nil.value;
}));
var newtypeNonEmptyList = new Data_Newtype.Newtype(function (n) {
  return n;
}, NonEmptyList);
var newtypeList = new Data_Newtype.Newtype(function (n) {
  return n;
}, List);

var step = function () {
  var $215 = Data_Newtype.unwrap(newtypeList);
  return function ($216) {
    return Data_Lazy.force($215($216));
  };
}();

var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
  return function (ys) {
    var go = function go(v) {
      if (v instanceof Nil) {
        return step(ys);
      }

      ;

      if (v instanceof Cons) {
        return new Cons(v.value0, Data_Semigroup.append(semigroupList)(v.value1)(ys));
      }

      ;
      throw new Error("Failed pattern match at Data.List.Lazy.Types (line 98, column 5 - line 98, column 21): " + [v.constructor.name]);
    };

    return Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(newtypeList)(xs));
  };
});

var showList = function showList(dictShow) {
  return new Data_Show.Show(function (xs) {
    var go = function go(v) {
      if (v instanceof Nil) {
        return "Nil";
      }

      ;

      if (v instanceof Cons) {
        return "(Cons " + (Data_Show.show(dictShow)(v.value0) + (" " + (go(step(v.value1)) + ")")));
      }

      ;
      throw new Error("Failed pattern match at Data.List.Lazy.Types (line 64, column 5 - line 64, column 19): " + [v.constructor.name]);
    };

    return "fromStrict (" + (go(step(xs)) + ")");
  });
};

var showNonEmptyList = function showNonEmptyList(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(NonEmptyList " + (Data_Show.show(Data_Lazy.showLazy(Data_NonEmpty.showNonEmpty(dictShow)(showList(dictShow))))(v) + ")");
  });
};

var monoidList = new Data_Monoid.Monoid(function () {
  return semigroupList;
}, nil);
var lazyList = new Control_Lazy.Lazy(function (f) {
  return List(Data_Lazy.defer(function ($217) {
    return step(f($217));
  }));
});
var functorList = new Data_Functor.Functor(function (f) {
  return function (xs) {
    var go = function go(v) {
      if (v instanceof Nil) {
        return Nil.value;
      }

      ;

      if (v instanceof Cons) {
        return new Cons(f(v.value0), Data_Functor.map(functorList)(f)(v.value1));
      }

      ;
      throw new Error("Failed pattern match at Data.List.Lazy.Types (line 107, column 5 - line 107, column 17): " + [v.constructor.name]);
    };

    return Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(newtypeList)(xs));
  };
});
var functorNonEmptyList = new Data_Functor.Functor(function (f) {
  return function (v) {
    return Data_Functor.map(Data_Lazy.functorLazy)(Data_Functor.map(Data_NonEmpty.functorNonEmpty(functorList))(f))(v);
  };
});
var eq1List = new Data_Eq.Eq1(function (dictEq) {
  return function (xs) {
    return function (ys) {
      var go = function go($copy_v) {
        return function ($copy_v1) {
          var $tco_var_v = $copy_v;
          var $tco_done = false;
          var $tco_result;

          function $tco_loop(v, v1) {
            if (v instanceof Nil && v1 instanceof Nil) {
              $tco_done = true;
              return true;
            }

            ;

            if (v instanceof Cons && v1 instanceof Cons && Data_Eq.eq(dictEq)(v.value0)(v1.value0)) {
              $tco_var_v = step(v.value1);
              $copy_v1 = step(v1.value1);
              return;
            }

            ;
            $tco_done = true;
            return false;
          }

          ;

          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_v, $copy_v1);
          }

          ;
          return $tco_result;
        };
      };

      return go(step(xs))(step(ys));
    };
  };
});

var eqList = function eqList(dictEq) {
  return new Data_Eq.Eq(Data_Eq.eq1(eq1List)(dictEq));
};

var eqNonEmptyList = function eqNonEmptyList(dictEq) {
  return Data_Lazy.eqLazy(Data_NonEmpty.eqNonEmpty(eq1List)(dictEq));
};

var ord1List = new Data_Ord.Ord1(function () {
  return eq1List;
}, function (dictOrd) {
  return function (xs) {
    return function (ys) {
      var go = function go($copy_v) {
        return function ($copy_v1) {
          var $tco_var_v = $copy_v;
          var $tco_done = false;
          var $tco_result;

          function $tco_loop(v, v1) {
            if (v instanceof Nil && v1 instanceof Nil) {
              $tco_done = true;
              return Data_Ordering.EQ.value;
            }

            ;

            if (v instanceof Nil) {
              $tco_done = true;
              return Data_Ordering.LT.value;
            }

            ;

            if (v1 instanceof Nil) {
              $tco_done = true;
              return Data_Ordering.GT.value;
            }

            ;

            if (v instanceof Cons && v1 instanceof Cons) {
              var v2 = Data_Ord.compare(dictOrd)(v.value0)(v1.value0);

              if (v2 instanceof Data_Ordering.EQ) {
                $tco_var_v = step(v.value1);
                $copy_v1 = step(v1.value1);
                return;
              }

              ;
              $tco_done = true;
              return v2;
            }

            ;
            throw new Error("Failed pattern match at Data.List.Lazy.Types (line 84, column 5 - line 84, column 20): " + [v.constructor.name, v1.constructor.name]);
          }

          ;

          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_v, $copy_v1);
          }

          ;
          return $tco_result;
        };
      };

      return go(step(xs))(step(ys));
    };
  };
});

var ordList = function ordList(dictOrd) {
  return new Data_Ord.Ord(function () {
    return eqList(dictOrd.Eq0());
  }, Data_Ord.compare1(ord1List)(dictOrd));
};

var ordNonEmptyList = function ordNonEmptyList(dictOrd) {
  return Data_Lazy.ordLazy(Data_NonEmpty.ordNonEmpty(ord1List)(dictOrd));
};

var cons = function cons(x) {
  return function (xs) {
    return List(Data_Lazy.defer(function (v) {
      return new Cons(x, xs);
    }));
  };
};

var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
  return function (f) {
    return Data_Foldable.foldl(foldableList)(function (b) {
      return function (a) {
        return Data_Semigroup.append(dictMonoid.Semigroup0())(b)(f(a));
      };
    })(Data_Monoid.mempty(dictMonoid));
  };
}, function (op) {
  var go = function go($copy_b) {
    return function ($copy_xs) {
      var $tco_var_b = $copy_b;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(b, xs) {
        var v = step(xs);

        if (v instanceof Nil) {
          $tco_done = true;
          return b;
        }

        ;

        if (v instanceof Cons) {
          $tco_var_b = op(b)(v.value0);
          $copy_xs = v.value1;
          return;
        }

        ;
        throw new Error("Failed pattern match at Data.List.Lazy.Types (line 122, column 7 - line 124, column 40): " + [v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_b, $copy_xs);
      }

      ;
      return $tco_result;
    };
  };

  return go;
}, function (op) {
  return function (z) {
    return function (xs) {
      var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(cons))(nil);
      return Data_Foldable.foldl(foldableList)(Data_Function.flip(op))(z)(rev(xs));
    };
  };
});
var extendList = new Control_Extend.Extend(function () {
  return functorList;
}, function (f) {
  return function (l) {
    var go = function go(a) {
      return function (v) {
        var acc$prime = cons(a)(v.acc);
        return {
          val: cons(f(acc$prime))(v.val),
          acc: acc$prime
        };
      };
    };

    var v = step(l);

    if (v instanceof Nil) {
      return nil;
    }

    ;

    if (v instanceof Cons) {
      return cons(f(l))(Data_Foldable.foldr(foldableList)(go)({
        val: nil,
        acc: nil
      })(v.value1).val);
    }

    ;
    throw new Error("Failed pattern match at Data.List.Lazy.Types (line 194, column 5 - line 197, column 55): " + [v.constructor.name]);
  };
});
var extendNonEmptyList = new Control_Extend.Extend(function () {
  return functorNonEmptyList;
}, function (f) {
  return function (v) {
    var go = function go(a) {
      return function (v1) {
        return {
          val: cons(f(Data_Lazy.defer(function (v2) {
            return new Data_NonEmpty.NonEmpty(a, v1.acc);
          })))(v1.val),
          acc: cons(a)(v1.acc)
        };
      };
    };

    var v1 = Data_Lazy.force(v);
    return NonEmptyList(Data_Lazy.defer(function (v2) {
      return new Data_NonEmpty.NonEmpty(f(v), Data_Foldable.foldr(foldableList)(go)({
        val: nil,
        acc: nil
      })(v1.value1).val);
    }));
  };
});
var foldableNonEmptyList = new Data_Foldable.Foldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      return Data_Foldable.foldMap(Data_NonEmpty.foldableNonEmpty(foldableList))(dictMonoid)(f)(Data_Lazy.force(v));
    };
  };
}, function (f) {
  return function (b) {
    return function (v) {
      return Data_Foldable.foldl(Data_NonEmpty.foldableNonEmpty(foldableList))(f)(b)(Data_Lazy.force(v));
    };
  };
}, function (f) {
  return function (b) {
    return function (v) {
      return Data_Foldable.foldr(Data_NonEmpty.foldableNonEmpty(foldableList))(f)(b)(Data_Lazy.force(v));
    };
  };
});
var foldableWithIndexList = new Data_FoldableWithIndex.FoldableWithIndex(function () {
  return foldableList;
}, function (dictMonoid) {
  return function (f) {
    return Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexList)(function (i) {
      return function (acc) {
        var $218 = Data_Semigroup.append(dictMonoid.Semigroup0())(acc);
        var $219 = f(i);
        return function ($220) {
          return $218($219($220));
        };
      };
    })(Data_Monoid.mempty(dictMonoid));
  };
}, function (f) {
  return function (acc) {
    var $221 = Data_Foldable.foldl(foldableList)(function (v) {
      return function (a) {
        return new Data_Tuple.Tuple(v.value0 + 1 | 0, f(v.value0)(v.value1)(a));
      };
    })(new Data_Tuple.Tuple(0, acc));
    return function ($222) {
      return Data_Tuple.snd($221($222));
    };
  };
}, function (f) {
  return function (b) {
    return function (xs) {
      var v = function () {
        var rev = Data_Foldable.foldl(foldableList)(function (v1) {
          return function (a) {
            return new Data_Tuple.Tuple(v1.value0 + 1 | 0, cons(a)(v1.value1));
          };
        });
        return rev(new Data_Tuple.Tuple(0, nil))(xs);
      }();

      return Data_Tuple.snd(Data_Foldable.foldl(foldableList)(function (v1) {
        return function (a) {
          return new Data_Tuple.Tuple(v1.value0 - 1 | 0, f(v1.value0 - 1 | 0)(a)(v1.value1));
        };
      })(new Data_Tuple.Tuple(v.value0, b))(v.value1));
    };
  };
});
var foldableWithIndexNonEmptyList = new Data_FoldableWithIndex.FoldableWithIndex(function () {
  return foldableNonEmptyList;
}, function (dictMonoid) {
  return function (f) {
    return function (v) {
      return Data_FoldableWithIndex.foldMapWithIndex(Data_NonEmpty.foldableWithIndexNonEmpty(foldableWithIndexList))(dictMonoid)(function () {
        var $223 = Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1));
        return function ($224) {
          return f($223($224));
        };
      }())(Data_Lazy.force(v));
    };
  };
}, function (f) {
  return function (b) {
    return function (v) {
      return Data_FoldableWithIndex.foldlWithIndex(Data_NonEmpty.foldableWithIndexNonEmpty(foldableWithIndexList))(function () {
        var $225 = Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1));
        return function ($226) {
          return f($225($226));
        };
      }())(b)(Data_Lazy.force(v));
    };
  };
}, function (f) {
  return function (b) {
    return function (v) {
      return Data_FoldableWithIndex.foldrWithIndex(Data_NonEmpty.foldableWithIndexNonEmpty(foldableWithIndexList))(function () {
        var $227 = Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1));
        return function ($228) {
          return f($227($228));
        };
      }())(b)(Data_Lazy.force(v));
    };
  };
});
var functorWithIndexList = new Data_FunctorWithIndex.FunctorWithIndex(function () {
  return functorList;
}, function (f) {
  return Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexList)(function (i) {
    return function (x) {
      return function (acc) {
        return cons(f(i)(x))(acc);
      };
    };
  })(nil);
});
var functorWithIndexNonEmptyList = new Data_FunctorWithIndex.FunctorWithIndex(function () {
  return functorNonEmptyList;
}, function (f) {
  return function (v) {
    return NonEmptyList(Data_Lazy.defer(function (v1) {
      return Data_FunctorWithIndex.mapWithIndex(Data_NonEmpty.functorWithIndex(functorWithIndexList))(function () {
        var $229 = Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1));
        return function ($230) {
          return f($229($230));
        };
      }())(Data_Lazy.force(v));
    }));
  };
});

var toList = function toList(v) {
  return Control_Lazy.defer(lazyList)(function (v1) {
    var v2 = Data_Lazy.force(v);
    return cons(v2.value0)(v2.value1);
  });
};

var semigroupNonEmptyList = new Data_Semigroup.Semigroup(function (v) {
  return function (as$prime) {
    var v1 = Data_Lazy.force(v);
    return Data_Lazy.defer(function (v2) {
      return new Data_NonEmpty.NonEmpty(v1.value0, Data_Semigroup.append(semigroupList)(v1.value1)(toList(as$prime)));
    });
  };
});
var traversableList = new Data_Traversable.Traversable(function () {
  return foldableList;
}, function () {
  return functorList;
}, function (dictApplicative) {
  return Data_Traversable.traverse(traversableList)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
}, function (dictApplicative) {
  return function (f) {
    return Data_Foldable.foldr(foldableList)(function (a) {
      return function (b) {
        return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(cons)(f(a)))(b);
      };
    })(Control_Applicative.pure(dictApplicative)(nil));
  };
});
var traversableNonEmptyList = new Data_Traversable.Traversable(function () {
  return foldableNonEmptyList;
}, function () {
  return functorNonEmptyList;
}, function (dictApplicative) {
  return function (v) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(function (xxs) {
      return NonEmptyList(Data_Lazy.defer(function (v1) {
        return xxs;
      }));
    })(Data_Traversable.sequence(Data_NonEmpty.traversableNonEmpty(traversableList))(dictApplicative)(Data_Lazy.force(v)));
  };
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(function (xxs) {
        return NonEmptyList(Data_Lazy.defer(function (v1) {
          return xxs;
        }));
      })(Data_Traversable.traverse(Data_NonEmpty.traversableNonEmpty(traversableList))(dictApplicative)(f)(Data_Lazy.force(v)));
    };
  };
});
var traversableWithIndexList = new Data_TraversableWithIndex.TraversableWithIndex(function () {
  return foldableWithIndexList;
}, function () {
  return functorWithIndexList;
}, function () {
  return traversableList;
}, function (dictApplicative) {
  return function (f) {
    return Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexList)(function (i) {
      return function (a) {
        return function (b) {
          return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(cons)(f(i)(a)))(b);
        };
      };
    })(Control_Applicative.pure(dictApplicative)(nil));
  };
});
var traversableWithIndexNonEmptyList = new Data_TraversableWithIndex.TraversableWithIndex(function () {
  return foldableWithIndexNonEmptyList;
}, function () {
  return functorWithIndexNonEmptyList;
}, function () {
  return traversableNonEmptyList;
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(function (xxs) {
        return NonEmptyList(Data_Lazy.defer(function (v1) {
          return xxs;
        }));
      })(Data_TraversableWithIndex.traverseWithIndex(Data_NonEmpty.traversableWithIndexNonEmpty(traversableWithIndexList))(dictApplicative)(function () {
        var $231 = Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1));
        return function ($232) {
          return f($231($232));
        };
      }())(Data_Lazy.force(v)));
    };
  };
});
var unfoldable1List = new Data_Unfoldable1.Unfoldable1(function () {
  var go = function go(f) {
    return function (b) {
      return Control_Lazy.defer(lazyList)(function (v) {
        var v1 = f(b);

        if (v1.value1 instanceof Data_Maybe.Just) {
          return cons(v1.value0)(go(f)(v1.value1.value0));
        }

        ;

        if (v1.value1 instanceof Data_Maybe.Nothing) {
          return cons(v1.value0)(nil);
        }

        ;
        throw new Error("Failed pattern match at Data.List.Lazy.Types (line 146, column 28 - line 148, column 33): " + [v1.constructor.name]);
      });
    };
  };

  return go;
}());
var unfoldableList = new Data_Unfoldable.Unfoldable(function () {
  return unfoldable1List;
}, function () {
  var go = function go(f) {
    return function (b) {
      return Control_Lazy.defer(lazyList)(function (v) {
        var v1 = f(b);

        if (v1 instanceof Data_Maybe.Nothing) {
          return nil;
        }

        ;

        if (v1 instanceof Data_Maybe.Just) {
          return cons(v1.value0.value0)(go(f)(v1.value0.value1));
        }

        ;
        throw new Error("Failed pattern match at Data.List.Lazy.Types (line 152, column 28 - line 154, column 39): " + [v1.constructor.name]);
      });
    };
  };

  return go;
}());
var unfoldable1NonEmptyList = new Data_Unfoldable1.Unfoldable1(function (f) {
  return function (b) {
    return NonEmptyList(Data_Lazy.defer(function (v) {
      return Data_Unfoldable1.unfoldr1(Data_NonEmpty.unfoldable1NonEmpty(unfoldableList))(f)(b);
    }));
  };
});
var comonadNonEmptyList = new Control_Comonad.Comonad(function () {
  return extendNonEmptyList;
}, function (v) {
  return Data_NonEmpty.head(Data_Lazy.force(v));
});
var monadList = new Control_Monad.Monad(function () {
  return applicativeList;
}, function () {
  return bindList;
});
var bindList = new Control_Bind.Bind(function () {
  return applyList;
}, function (xs) {
  return function (f) {
    var go = function go(v) {
      if (v instanceof Nil) {
        return Nil.value;
      }

      ;

      if (v instanceof Cons) {
        return step(Data_Semigroup.append(semigroupList)(f(v.value0))(Control_Bind.bind(bindList)(v.value1)(f)));
      }

      ;
      throw new Error("Failed pattern match at Data.List.Lazy.Types (line 175, column 5 - line 175, column 17): " + [v.constructor.name]);
    };

    return Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(newtypeList)(xs));
  };
});
var applyList = new Control_Apply.Apply(function () {
  return functorList;
}, Control_Monad.ap(monadList));
var applicativeList = new Control_Applicative.Applicative(function () {
  return applyList;
}, function (a) {
  return cons(a)(nil);
});
var applyNonEmptyList = new Control_Apply.Apply(function () {
  return functorNonEmptyList;
}, function (v) {
  return function (v1) {
    var v2 = Data_Lazy.force(v1);
    var v3 = Data_Lazy.force(v);
    return Data_Lazy.defer(function (v4) {
      return new Data_NonEmpty.NonEmpty(v3.value0(v2.value0), Data_Semigroup.append(semigroupList)(Control_Apply.apply(applyList)(v3.value1)(cons(v2.value0)(nil)))(Control_Apply.apply(applyList)(cons(v3.value0)(v3.value1))(v2.value1)));
    });
  };
});
var bindNonEmptyList = new Control_Bind.Bind(function () {
  return applyNonEmptyList;
}, function (v) {
  return function (f) {
    var v1 = Data_Lazy.force(v);
    var v2 = Data_Lazy.force(Data_Newtype.unwrap(newtypeNonEmptyList)(f(v1.value0)));
    return Data_Lazy.defer(function (v3) {
      return new Data_NonEmpty.NonEmpty(v2.value0, Data_Semigroup.append(semigroupList)(v2.value1)(Control_Bind.bind(bindList)(v1.value1)(function ($233) {
        return toList(f($233));
      })));
    });
  };
});
var altNonEmptyList = new Control_Alt.Alt(function () {
  return functorNonEmptyList;
}, Data_Semigroup.append(semigroupNonEmptyList));
var altList = new Control_Alt.Alt(function () {
  return functorList;
}, Data_Semigroup.append(semigroupList));
var plusList = new Control_Plus.Plus(function () {
  return altList;
}, nil);
var alternativeList = new Control_Alternative.Alternative(function () {
  return applicativeList;
}, function () {
  return plusList;
});
var monadZeroList = new Control_MonadZero.MonadZero(function () {
  return alternativeList;
}, function () {
  return monadList;
});
var monadPlusList = new Control_MonadPlus.MonadPlus(function () {
  return monadZeroList;
});
var applicativeNonEmptyList = new Control_Applicative.Applicative(function () {
  return applyNonEmptyList;
}, function (a) {
  return Data_Lazy.defer(function (v) {
    return Data_NonEmpty.singleton(plusList)(a);
  });
});
var monadNonEmptyList = new Control_Monad.Monad(function () {
  return applicativeNonEmptyList;
}, function () {
  return bindNonEmptyList;
});
module.exports = {
  List: List,
  Nil: Nil,
  Cons: Cons,
  step: step,
  nil: nil,
  cons: cons,
  NonEmptyList: NonEmptyList,
  toList: toList,
  newtypeList: newtypeList,
  showList: showList,
  eqList: eqList,
  eq1List: eq1List,
  ordList: ordList,
  ord1List: ord1List,
  lazyList: lazyList,
  semigroupList: semigroupList,
  monoidList: monoidList,
  functorList: functorList,
  functorWithIndexList: functorWithIndexList,
  foldableList: foldableList,
  foldableWithIndexList: foldableWithIndexList,
  unfoldable1List: unfoldable1List,
  unfoldableList: unfoldableList,
  traversableList: traversableList,
  traversableWithIndexList: traversableWithIndexList,
  applyList: applyList,
  applicativeList: applicativeList,
  bindList: bindList,
  monadList: monadList,
  altList: altList,
  plusList: plusList,
  alternativeList: alternativeList,
  monadZeroList: monadZeroList,
  monadPlusList: monadPlusList,
  extendList: extendList,
  newtypeNonEmptyList: newtypeNonEmptyList,
  eqNonEmptyList: eqNonEmptyList,
  ordNonEmptyList: ordNonEmptyList,
  showNonEmptyList: showNonEmptyList,
  functorNonEmptyList: functorNonEmptyList,
  applyNonEmptyList: applyNonEmptyList,
  applicativeNonEmptyList: applicativeNonEmptyList,
  bindNonEmptyList: bindNonEmptyList,
  monadNonEmptyList: monadNonEmptyList,
  altNonEmptyList: altNonEmptyList,
  extendNonEmptyList: extendNonEmptyList,
  comonadNonEmptyList: comonadNonEmptyList,
  semigroupNonEmptyList: semigroupNonEmptyList,
  foldableNonEmptyList: foldableNonEmptyList,
  traversableNonEmptyList: traversableNonEmptyList,
  unfoldable1NonEmptyList: unfoldable1NonEmptyList,
  functorWithIndexNonEmptyList: functorWithIndexNonEmptyList,
  foldableWithIndexNonEmptyList: foldableWithIndexNonEmptyList,
  traversableWithIndexNonEmptyList: traversableWithIndexNonEmptyList
};
},{"../Control.Alt/index.js":"../output/Control.Alt/index.js","../Control.Alternative/index.js":"../output/Control.Alternative/index.js","../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Category/index.js":"../output/Control.Category/index.js","../Control.Comonad/index.js":"../output/Control.Comonad/index.js","../Control.Extend/index.js":"../output/Control.Extend/index.js","../Control.Lazy/index.js":"../output/Control.Lazy/index.js","../Control.Monad/index.js":"../output/Control.Monad/index.js","../Control.MonadPlus/index.js":"../output/Control.MonadPlus/index.js","../Control.MonadZero/index.js":"../output/Control.MonadZero/index.js","../Control.Plus/index.js":"../output/Control.Plus/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Foldable/index.js":"../output/Data.Foldable/index.js","../Data.FoldableWithIndex/index.js":"../output/Data.FoldableWithIndex/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.FunctorWithIndex/index.js":"../output/Data.FunctorWithIndex/index.js","../Data.Lazy/index.js":"../output/Data.Lazy/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.NonEmpty/index.js":"../output/Data.NonEmpty/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Ordering/index.js":"../output/Data.Ordering/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Semiring/index.js":"../output/Data.Semiring/index.js","../Data.Show/index.js":"../output/Data.Show/index.js","../Data.Traversable/index.js":"../output/Data.Traversable/index.js","../Data.TraversableWithIndex/index.js":"../output/Data.TraversableWithIndex/index.js","../Data.Tuple/index.js":"../output/Data.Tuple/index.js","../Data.Unfoldable/index.js":"../output/Data.Unfoldable/index.js","../Data.Unfoldable1/index.js":"../output/Data.Unfoldable1/index.js"}],"../output/Data.List.Lazy/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Lazy = require("../Control.Lazy/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Lazy = require("../Data.Lazy/index.js");

var Data_List_Lazy_Types = require("../Data.List.Lazy.Types/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_NonEmpty = require("../Data.NonEmpty/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Pattern = function Pattern(x) {
  return x;
};

var zipWith = function zipWith(f) {
  return function (xs) {
    return function (ys) {
      var go = function go(v) {
        return function (v1) {
          if (v instanceof Data_List_Lazy_Types.Nil) {
            return Data_List_Lazy_Types.Nil.value;
          }

          ;

          if (v1 instanceof Data_List_Lazy_Types.Nil) {
            return Data_List_Lazy_Types.Nil.value;
          }

          ;

          if (v instanceof Data_List_Lazy_Types.Cons && v1 instanceof Data_List_Lazy_Types.Cons) {
            return new Data_List_Lazy_Types.Cons(f(v.value0)(v1.value0), zipWith(f)(v.value1)(v1.value1));
          }

          ;
          throw new Error("Failed pattern match at Data.List.Lazy (line 693, column 3 - line 693, column 35): " + [v.constructor.name, v1.constructor.name]);
        };
      };

      return Control_Apply.apply(Data_Lazy.applyLazy)(Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(xs)))(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(ys));
    };
  };
};

var zipWithA = function zipWithA(dictApplicative) {
  return function (f) {
    return function (xs) {
      return function (ys) {
        return Data_Traversable.sequence(Data_List_Lazy_Types.traversableList)(dictApplicative)(zipWith(f)(xs)(ys));
      };
    };
  };
};

var zip = zipWith(Data_Tuple.Tuple.create);

var updateAt = function updateAt(n) {
  return function (x) {
    return function (xs) {
      var go = function go(v) {
        return function (v1) {
          if (v1 instanceof Data_List_Lazy_Types.Nil) {
            return Data_List_Lazy_Types.Nil.value;
          }

          ;

          if (v === 0 && v1 instanceof Data_List_Lazy_Types.Cons) {
            return new Data_List_Lazy_Types.Cons(x, v1.value1);
          }

          ;

          if (v1 instanceof Data_List_Lazy_Types.Cons) {
            return new Data_List_Lazy_Types.Cons(v1.value0, updateAt(v - 1 | 0)(x)(v1.value1));
          }

          ;
          throw new Error("Failed pattern match at Data.List.Lazy (line 367, column 3 - line 367, column 17): " + [v.constructor.name, v1.constructor.name]);
        };
      };

      return Data_Functor.map(Data_Lazy.functorLazy)(go(n))(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(xs));
    };
  };
};

var unzip = Data_Foldable.foldr(Data_List_Lazy_Types.foldableList)(function (v) {
  return function (v1) {
    return new Data_Tuple.Tuple(Data_List_Lazy_Types.cons(v.value0)(v1.value0), Data_List_Lazy_Types.cons(v.value1)(v1.value1));
  };
})(new Data_Tuple.Tuple(Data_List_Lazy_Types.nil, Data_List_Lazy_Types.nil));

var uncons = function uncons(xs) {
  var v = Data_List_Lazy_Types.step(xs);

  if (v instanceof Data_List_Lazy_Types.Nil) {
    return Data_Maybe.Nothing.value;
  }

  ;

  if (v instanceof Data_List_Lazy_Types.Cons) {
    return new Data_Maybe.Just({
      head: v.value0,
      tail: v.value1
    });
  }

  ;
  throw new Error("Failed pattern match at Data.List.Lazy (line 285, column 13 - line 287, column 44): " + [v.constructor.name]);
};

var toUnfoldable = function toUnfoldable(dictUnfoldable) {
  return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
      return new Data_Tuple.Tuple(rec.head, rec.tail);
    })(uncons(xs));
  });
};

var takeWhile = function takeWhile(p) {
  var go = function go(v) {
    if (v instanceof Data_List_Lazy_Types.Cons && p(v.value0)) {
      return new Data_List_Lazy_Types.Cons(v.value0, takeWhile(p)(v.value1));
    }

    ;
    return Data_List_Lazy_Types.Nil.value;
  };

  var $239 = Data_Functor.map(Data_Lazy.functorLazy)(go);
  var $240 = Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList);
  return function ($241) {
    return Data_List_Lazy_Types.List($239($240($241)));
  };
};

var take = function take(n) {
  var go = function go(v) {
    return function (v1) {
      if (v1 instanceof Data_List_Lazy_Types.Nil) {
        return Data_List_Lazy_Types.Nil.value;
      }

      ;

      if (v1 instanceof Data_List_Lazy_Types.Cons) {
        return new Data_List_Lazy_Types.Cons(v1.value0, take(v - 1 | 0)(v1.value1));
      }

      ;
      throw new Error("Failed pattern match at Data.List.Lazy (line 517, column 3 - line 517, column 32): " + [v.constructor.name, v1.constructor.name]);
    };
  };

  var $119 = n <= 0;

  if ($119) {
    return Data_Function["const"](Data_List_Lazy_Types.nil);
  }

  ;
  var $242 = Data_Functor.map(Data_Lazy.functorLazy)(go(n));
  var $243 = Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList);
  return function ($244) {
    return Data_List_Lazy_Types.List($242($243($244)));
  };
};

var tail = function tail(xs) {
  return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
    return v.tail;
  })(uncons(xs));
};

var stripPrefix = function stripPrefix(dictEq) {
  return function (v) {
    return function (s) {
      var go = function go(prefix) {
        return function (input) {
          var v1 = Data_List_Lazy_Types.step(prefix);

          if (v1 instanceof Data_List_Lazy_Types.Nil) {
            return Data_Maybe.Just.create(new Control_Monad_Rec_Class.Done(input));
          }

          ;

          if (v1 instanceof Data_List_Lazy_Types.Cons) {
            var v2 = Data_List_Lazy_Types.step(input);

            if (v2 instanceof Data_List_Lazy_Types.Cons && Data_Eq.eq(dictEq)(v1.value0)(v2.value0)) {
              return Data_Maybe.Just.create(new Control_Monad_Rec_Class.Loop({
                a: v1.value1,
                b: v2.value1
              }));
            }

            ;
            return Data_Maybe.Nothing.value;
          }

          ;
          throw new Error("Failed pattern match at Data.List.Lazy (line 499, column 21 - line 503, column 19): " + [v1.constructor.name]);
        };
      };

      return Control_Monad_Rec_Class.tailRecM2(Control_Monad_Rec_Class.monadRecMaybe)(go)(v)(s);
    };
  };
};

var span = function span(p) {
  return function (xs) {
    var v = uncons(xs);

    if (v instanceof Data_Maybe.Just && p(v.value0.head)) {
      var v1 = span(p)(v.value0.tail);
      return {
        init: Data_List_Lazy_Types.cons(v.value0.head)(v1.init),
        rest: v1.rest
      };
    }

    ;
    return {
      init: Data_List_Lazy_Types.nil,
      rest: xs
    };
  };
};

var snoc = function snoc(xs) {
  return function (x) {
    return Data_Foldable.foldr(Data_List_Lazy_Types.foldableList)(Data_List_Lazy_Types.cons)(Data_List_Lazy_Types.cons(x)(Data_List_Lazy_Types.nil))(xs);
  };
};

var singleton = function singleton(a) {
  return Data_List_Lazy_Types.cons(a)(Data_List_Lazy_Types.nil);
};

var showPattern = function showPattern(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Pattern " + (Data_Show.show(Data_List_Lazy_Types.showList(dictShow))(v) + ")");
  });
};

var scanrLazy = function scanrLazy(f) {
  return function (acc) {
    return function (xs) {
      var go = function go(v) {
        if (v instanceof Data_List_Lazy_Types.Nil) {
          return Data_List_Lazy_Types.Nil.value;
        }

        ;

        if (v instanceof Data_List_Lazy_Types.Cons) {
          var acc$prime = f(v.value0)(acc);
          return Data_List_Lazy_Types.Cons.create(acc$prime)(scanrLazy(f)(acc$prime)(v.value1));
        }

        ;
        throw new Error("Failed pattern match at Data.List.Lazy (line 764, column 5 - line 764, column 27): " + [v.constructor.name]);
      };

      return Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(xs));
    };
  };
};

var reverse = function reverse(xs) {
  return Control_Lazy.defer(Data_List_Lazy_Types.lazyList)(function (v) {
    return Data_Foldable.foldl(Data_List_Lazy_Types.foldableList)(Data_Function.flip(Data_List_Lazy_Types.cons))(Data_List_Lazy_Types.nil)(xs);
  });
};

var replicateM = function replicateM(dictMonad) {
  return function (n) {
    return function (m) {
      if (n < 1) {
        return Control_Applicative.pure(dictMonad.Applicative0())(Data_List_Lazy_Types.nil);
      }

      ;

      if (Data_Boolean.otherwise) {
        return Control_Bind.bind(dictMonad.Bind1())(m)(function (a) {
          return Control_Bind.bind(dictMonad.Bind1())(replicateM(dictMonad)(n - 1 | 0)(m))(function (as) {
            return Control_Applicative.pure(dictMonad.Applicative0())(Data_List_Lazy_Types.cons(a)(as));
          });
        });
      }

      ;
      throw new Error("Failed pattern match at Data.List.Lazy (line 161, column 1 - line 161, column 62): " + [n.constructor.name, m.constructor.name]);
    };
  };
};

var repeat = function repeat(x) {
  return Control_Lazy.fix(Data_List_Lazy_Types.lazyList)(function (xs) {
    return Data_List_Lazy_Types.cons(x)(xs);
  });
};

var replicate = function replicate(i) {
  return function (xs) {
    return take(i)(repeat(xs));
  };
};

var range = function range(start) {
  return function (end) {
    if (start > end) {
      var g = function g(x) {
        if (x >= end) {
          return new Data_Maybe.Just(new Data_Tuple.Tuple(x, x - 1 | 0));
        }

        ;

        if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
        }

        ;
        throw new Error("Failed pattern match at Data.List.Lazy (line 148, column 13 - line 149, column 38): " + [x.constructor.name]);
      };

      return Data_Unfoldable.unfoldr(Data_List_Lazy_Types.unfoldableList)(g)(start);
    }

    ;

    if (Data_Boolean.otherwise) {
      var f = function f(x) {
        if (x <= end) {
          return new Data_Maybe.Just(new Data_Tuple.Tuple(x, x + 1 | 0));
        }

        ;

        if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
        }

        ;
        throw new Error("Failed pattern match at Data.List.Lazy (line 153, column 5 - line 154, column 30): " + [x.constructor.name]);
      };

      return Data_Unfoldable.unfoldr(Data_List_Lazy_Types.unfoldableList)(f)(start);
    }

    ;
    throw new Error("Failed pattern match at Data.List.Lazy (line 145, column 1 - line 145, column 32): " + [start.constructor.name, end.constructor.name]);
  };
};

var partition = function partition(f) {
  var go = function go(x) {
    return function (v) {
      var $147 = f(x);

      if ($147) {
        return {
          yes: Data_List_Lazy_Types.cons(x)(v.yes),
          no: v.no
        };
      }

      ;
      return {
        yes: v.yes,
        no: Data_List_Lazy_Types.cons(x)(v.no)
      };
    };
  };

  return Data_Foldable.foldr(Data_List_Lazy_Types.foldableList)(go)({
    yes: Data_List_Lazy_Types.nil,
    no: Data_List_Lazy_Types.nil
  });
};

var $$null = function $$null($245) {
  return Data_Maybe.isNothing(uncons($245));
};

var newtypePattern = new Data_Newtype.Newtype(function (n) {
  return n;
}, Pattern);

var mapMaybe = function mapMaybe(f) {
  var go = function go($copy_v) {
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(v) {
      if (v instanceof Data_List_Lazy_Types.Nil) {
        $tco_done = true;
        return Data_List_Lazy_Types.Nil.value;
      }

      ;

      if (v instanceof Data_List_Lazy_Types.Cons) {
        var v1 = f(v.value0);

        if (v1 instanceof Data_Maybe.Nothing) {
          $copy_v = Data_List_Lazy_Types.step(v.value1);
          return;
        }

        ;

        if (v1 instanceof Data_Maybe.Just) {
          $tco_done = true;
          return new Data_List_Lazy_Types.Cons(v1.value0, mapMaybe(f)(v.value1));
        }

        ;
        throw new Error("Failed pattern match at Data.List.Lazy (line 460, column 5 - line 462, column 39): " + [v1.constructor.name]);
      }

      ;
      throw new Error("Failed pattern match at Data.List.Lazy (line 458, column 3 - line 458, column 15): " + [v.constructor.name]);
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }

    ;
    return $tco_result;
  };

  var $246 = Data_Functor.map(Data_Lazy.functorLazy)(go);
  var $247 = Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList);
  return function ($248) {
    return Data_List_Lazy_Types.List($246($247($248)));
  };
};

var some = function some(dictAlternative) {
  return function (dictLazy) {
    return function (v) {
      return Control_Apply.apply(dictAlternative.Applicative0().Apply0())(Data_Functor.map(dictAlternative.Plus1().Alt0().Functor0())(Data_List_Lazy_Types.cons)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
        return many(dictAlternative)(dictLazy)(v);
      }));
    };
  };
};

var many = function many(dictAlternative) {
  return function (dictLazy) {
    return function (v) {
      return Control_Alt.alt(dictAlternative.Plus1().Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Lazy_Types.nil));
    };
  };
};

var length = Data_Foldable.foldl(Data_List_Lazy_Types.foldableList)(function (l) {
  return function (v) {
    return l + 1 | 0;
  };
})(0);

var last = function () {
  var go = function go($copy_v) {
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(v) {
      if (v instanceof Data_List_Lazy_Types.Cons) {
        if ($$null(v.value1)) {
          $tco_done = true;
          return new Data_Maybe.Just(v.value0);
        }

        ;

        if (Data_Boolean.otherwise) {
          $copy_v = Data_List_Lazy_Types.step(v.value1);
          return;
        }

        ;
      }

      ;
      $tco_done = true;
      return Data_Maybe.Nothing.value;
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }

    ;
    return $tco_result;
  };

  return function ($249) {
    return go(Data_List_Lazy_Types.step($249));
  };
}();

var iterate = function iterate(f) {
  return function (x) {
    return Control_Lazy.fix(Data_List_Lazy_Types.lazyList)(function (xs) {
      return Data_List_Lazy_Types.cons(x)(Data_Functor.map(Data_List_Lazy_Types.functorList)(f)(xs));
    });
  };
};

var insertAt = function insertAt(v) {
  return function (x) {
    return function (xs) {
      if (v === 0) {
        return Data_List_Lazy_Types.cons(x)(xs);
      }

      ;

      var go = function go(v1) {
        if (v1 instanceof Data_List_Lazy_Types.Nil) {
          return new Data_List_Lazy_Types.Cons(x, Data_List_Lazy_Types.nil);
        }

        ;

        if (v1 instanceof Data_List_Lazy_Types.Cons) {
          return new Data_List_Lazy_Types.Cons(v1.value0, insertAt(v - 1 | 0)(x)(v1.value1));
        }

        ;
        throw new Error("Failed pattern match at Data.List.Lazy (line 340, column 3 - line 340, column 22): " + [v1.constructor.name]);
      };

      return Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(xs));
    };
  };
};

var init = function () {
  var go = function go(v) {
    if (v instanceof Data_List_Lazy_Types.Cons) {
      if ($$null(v.value1)) {
        return new Data_Maybe.Just(Data_List_Lazy_Types.nil);
      }

      ;

      if (Data_Boolean.otherwise) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(Data_List_Lazy_Types.cons(v.value0))(go(Data_List_Lazy_Types.step(v.value1)));
      }

      ;
    }

    ;
    return Data_Maybe.Nothing.value;
  };

  return function ($250) {
    return go(Data_List_Lazy_Types.step($250));
  };
}();

var index = function index(xs) {
  var go = function go($copy_v) {
    return function ($copy_v1) {
      var $tco_var_v = $copy_v;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(v, v1) {
        if (v instanceof Data_List_Lazy_Types.Nil) {
          $tco_done = true;
          return Data_Maybe.Nothing.value;
        }

        ;

        if (v instanceof Data_List_Lazy_Types.Cons && v1 === 0) {
          $tco_done = true;
          return new Data_Maybe.Just(v.value0);
        }

        ;

        if (v instanceof Data_List_Lazy_Types.Cons) {
          $tco_var_v = Data_List_Lazy_Types.step(v.value1);
          $copy_v1 = v1 - 1 | 0;
          return;
        }

        ;
        throw new Error("Failed pattern match at Data.List.Lazy (line 299, column 3 - line 299, column 21): " + [v.constructor.name, v1.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_v, $copy_v1);
      }

      ;
      return $tco_result;
    };
  };

  return go(Data_List_Lazy_Types.step(xs));
};

var head = function head(xs) {
  return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
    return v.head;
  })(uncons(xs));
};

var transpose = function transpose(xs) {
  var v = uncons(xs);

  if (v instanceof Data_Maybe.Nothing) {
    return xs;
  }

  ;

  if (v instanceof Data_Maybe.Just) {
    var v1 = uncons(v.value0.head);

    if (v1 instanceof Data_Maybe.Nothing) {
      return transpose(v.value0.tail);
    }

    ;

    if (v1 instanceof Data_Maybe.Just) {
      return Data_List_Lazy_Types.cons(Data_List_Lazy_Types.cons(v1.value0.head)(mapMaybe(head)(v.value0.tail)))(transpose(Data_List_Lazy_Types.cons(v1.value0.tail)(mapMaybe(tail)(v.value0.tail))));
    }

    ;
    throw new Error("Failed pattern match at Data.List.Lazy (line 734, column 7 - line 738, column 72): " + [v1.constructor.name]);
  }

  ;
  throw new Error("Failed pattern match at Data.List.Lazy (line 730, column 3 - line 738, column 72): " + [v.constructor.name]);
};

var groupBy = function groupBy(eq) {
  var go = function go(v) {
    if (v instanceof Data_List_Lazy_Types.Nil) {
      return Data_List_Lazy_Types.Nil.value;
    }

    ;

    if (v instanceof Data_List_Lazy_Types.Cons) {
      var v1 = span(eq(v.value0))(v.value1);
      return new Data_List_Lazy_Types.Cons(Data_Lazy.defer(function (v2) {
        return new Data_NonEmpty.NonEmpty(v.value0, v1.init);
      }), groupBy(eq)(v1.rest));
    }

    ;
    throw new Error("Failed pattern match at Data.List.Lazy (line 588, column 3 - line 588, column 15): " + [v.constructor.name]);
  };

  var $251 = Data_Functor.map(Data_Lazy.functorLazy)(go);
  var $252 = Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList);
  return function ($253) {
    return Data_List_Lazy_Types.List($251($252($253)));
  };
};

var group = function group(dictEq) {
  return groupBy(Data_Eq.eq(dictEq));
};

var fromStep = function () {
  var $254 = Control_Applicative.pure(Data_Lazy.applicativeLazy);
  return function ($255) {
    return Data_List_Lazy_Types.List($254($255));
  };
}();

var insertBy = function insertBy(cmp) {
  return function (x) {
    return function (xs) {
      var go = function go(v) {
        if (v instanceof Data_List_Lazy_Types.Nil) {
          return new Data_List_Lazy_Types.Cons(x, Data_List_Lazy_Types.nil);
        }

        ;

        if (v instanceof Data_List_Lazy_Types.Cons) {
          var v1 = cmp(x)(v.value0);

          if (v1 instanceof Data_Ordering.GT) {
            return new Data_List_Lazy_Types.Cons(v.value0, insertBy(cmp)(x)(v.value1));
          }

          ;
          return new Data_List_Lazy_Types.Cons(x, fromStep(v));
        }

        ;
        throw new Error("Failed pattern match at Data.List.Lazy (line 235, column 3 - line 235, column 22): " + [v.constructor.name]);
      };

      return Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(xs));
    };
  };
};

var insert = function insert(dictOrd) {
  return insertBy(Data_Ord.compare(dictOrd));
};

var fromFoldable = function fromFoldable(dictFoldable) {
  return Data_Foldable.foldr(dictFoldable)(Data_List_Lazy_Types.cons)(Data_List_Lazy_Types.nil);
};

var foldrLazy = function foldrLazy(dictLazy) {
  return function (op) {
    return function (z) {
      var go = function go(xs) {
        var v = Data_List_Lazy_Types.step(xs);

        if (v instanceof Data_List_Lazy_Types.Cons) {
          return Control_Lazy.defer(dictLazy)(function (v1) {
            return op(v.value0)(go(v.value1));
          });
        }

        ;

        if (v instanceof Data_List_Lazy_Types.Nil) {
          return z;
        }

        ;
        throw new Error("Failed pattern match at Data.List.Lazy (line 756, column 13 - line 758, column 15): " + [v.constructor.name]);
      };

      return go;
    };
  };
};

var foldM = function foldM(dictMonad) {
  return function (f) {
    return function (a) {
      return function (xs) {
        var v = uncons(xs);

        if (v instanceof Data_Maybe.Nothing) {
          return Control_Applicative.pure(dictMonad.Applicative0())(a);
        }

        ;

        if (v instanceof Data_Maybe.Just) {
          return Control_Bind.bind(dictMonad.Bind1())(f(a)(v.value0.head))(function (a$prime) {
            return foldM(dictMonad)(f)(a$prime)(v.value0.tail);
          });
        }

        ;
        throw new Error("Failed pattern match at Data.List.Lazy (line 747, column 5 - line 750, column 54): " + [v.constructor.name]);
      };
    };
  };
};

var findIndex = function findIndex(fn) {
  var go = function go(n) {
    return function (list) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(uncons(list))(function (o) {
        var $199 = fn(o.head);

        if ($199) {
          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(n);
        }

        ;
        return go(n + 1 | 0)(o.tail);
      });
    };
  };

  return go(0);
};

var findLastIndex = function findLastIndex(fn) {
  return function (xs) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
      return (length(xs) - 1 | 0) - v | 0;
    })(findIndex(fn)(reverse(xs)));
  };
};

var filterM = function filterM(dictMonad) {
  return function (p) {
    return function (list) {
      var v = uncons(list);

      if (v instanceof Data_Maybe.Nothing) {
        return Control_Applicative.pure(dictMonad.Applicative0())(Data_List_Lazy_Types.nil);
      }

      ;

      if (v instanceof Data_Maybe.Just) {
        return Control_Bind.bind(dictMonad.Bind1())(p(v.value0.head))(function (b) {
          return Control_Bind.bind(dictMonad.Bind1())(filterM(dictMonad)(p)(v.value0.tail))(function (xs$prime) {
            return Control_Applicative.pure(dictMonad.Applicative0())(function () {
              if (b) {
                return Data_List_Lazy_Types.cons(v.value0.head)(xs$prime);
              }

              ;
              return xs$prime;
            }());
          });
        });
      }

      ;
      throw new Error("Failed pattern match at Data.List.Lazy (line 443, column 5 - line 448, column 48): " + [v.constructor.name]);
    };
  };
};

var filter = function filter(p) {
  var go = function go($copy_v) {
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(v) {
      if (v instanceof Data_List_Lazy_Types.Nil) {
        $tco_done = true;
        return Data_List_Lazy_Types.Nil.value;
      }

      ;

      if (v instanceof Data_List_Lazy_Types.Cons) {
        if (p(v.value0)) {
          $tco_done = true;
          return new Data_List_Lazy_Types.Cons(v.value0, filter(p)(v.value1));
        }

        ;

        if (Data_Boolean.otherwise) {
          $copy_v = Data_List_Lazy_Types.step(v.value1);
          return;
        }

        ;
      }

      ;
      throw new Error("Failed pattern match at Data.List.Lazy (line 428, column 3 - line 428, column 15): " + [v.constructor.name]);
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }

    ;
    return $tco_result;
  };

  var $256 = Data_Functor.map(Data_Lazy.functorLazy)(go);
  var $257 = Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList);
  return function ($258) {
    return Data_List_Lazy_Types.List($256($257($258)));
  };
};

var intersectBy = function intersectBy(eq) {
  return function (xs) {
    return function (ys) {
      return filter(function (x) {
        return Data_Foldable.any(Data_List_Lazy_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean)(eq(x))(ys);
      })(xs);
    };
  };
};

var intersect = function intersect(dictEq) {
  return intersectBy(Data_Eq.eq(dictEq));
};

var nubBy = function nubBy(eq) {
  var go = function go(v) {
    if (v instanceof Data_List_Lazy_Types.Nil) {
      return Data_List_Lazy_Types.Nil.value;
    }

    ;

    if (v instanceof Data_List_Lazy_Types.Cons) {
      return new Data_List_Lazy_Types.Cons(v.value0, nubBy(eq)(filter(function (y) {
        return !eq(v.value0)(y);
      })(v.value1)));
    }

    ;
    throw new Error("Failed pattern match at Data.List.Lazy (line 621, column 3 - line 621, column 15): " + [v.constructor.name]);
  };

  var $259 = Data_Functor.map(Data_Lazy.functorLazy)(go);
  var $260 = Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList);
  return function ($261) {
    return Data_List_Lazy_Types.List($259($260($261)));
  };
};

var nub = function nub(dictEq) {
  return nubBy(Data_Eq.eq(dictEq));
};

var eqPattern = function eqPattern(dictEq) {
  return new Data_Eq.Eq(function (x) {
    return function (y) {
      return Data_Eq.eq(Data_List_Lazy_Types.eqList(dictEq))(x)(y);
    };
  });
};

var ordPattern = function ordPattern(dictOrd) {
  return new Data_Ord.Ord(function () {
    return eqPattern(dictOrd.Eq0());
  }, function (x) {
    return function (y) {
      return Data_Ord.compare(Data_List_Lazy_Types.ordList(dictOrd))(x)(y);
    };
  });
};

var elemLastIndex = function elemLastIndex(dictEq) {
  return function (x) {
    return findLastIndex(function (v) {
      return Data_Eq.eq(dictEq)(v)(x);
    });
  };
};

var elemIndex = function elemIndex(dictEq) {
  return function (x) {
    return findIndex(function (v) {
      return Data_Eq.eq(dictEq)(v)(x);
    });
  };
};

var dropWhile = function dropWhile(p) {
  var go = function go($copy_v) {
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(v) {
      if (v instanceof Data_List_Lazy_Types.Cons && p(v.value0)) {
        $copy_v = Data_List_Lazy_Types.step(v.value1);
        return;
      }

      ;
      $tco_done = true;
      return fromStep(v);
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }

    ;
    return $tco_result;
  };

  return function ($262) {
    return go(Data_List_Lazy_Types.step($262));
  };
};

var drop = function drop(n) {
  var go = function go($copy_v) {
    return function ($copy_v1) {
      var $tco_var_v = $copy_v;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(v, v1) {
        if (v === 0) {
          $tco_done = true;
          return v1;
        }

        ;

        if (v1 instanceof Data_List_Lazy_Types.Nil) {
          $tco_done = true;
          return Data_List_Lazy_Types.Nil.value;
        }

        ;

        if (v1 instanceof Data_List_Lazy_Types.Cons) {
          $tco_var_v = v - 1 | 0;
          $copy_v1 = Data_List_Lazy_Types.step(v1.value1);
          return;
        }

        ;
        throw new Error("Failed pattern match at Data.List.Lazy (line 536, column 3 - line 536, column 15): " + [v.constructor.name, v1.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_v, $copy_v1);
      }

      ;
      return $tco_result;
    };
  };

  var $263 = Data_Functor.map(Data_Lazy.functorLazy)(go(n));
  var $264 = Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList);
  return function ($265) {
    return Data_List_Lazy_Types.List($263($264($265)));
  };
};

var slice = function slice(start) {
  return function (end) {
    return function (xs) {
      return take(end - start | 0)(drop(start)(xs));
    };
  };
};

var deleteBy = function deleteBy(eq) {
  return function (x) {
    return function (xs) {
      var go = function go(v) {
        if (v instanceof Data_List_Lazy_Types.Nil) {
          return Data_List_Lazy_Types.Nil.value;
        }

        ;

        if (v instanceof Data_List_Lazy_Types.Cons) {
          if (eq(x)(v.value0)) {
            return Data_List_Lazy_Types.step(v.value1);
          }

          ;

          if (Data_Boolean.otherwise) {
            return new Data_List_Lazy_Types.Cons(v.value0, deleteBy(eq)(x)(v.value1));
          }

          ;
        }

        ;
        throw new Error("Failed pattern match at Data.List.Lazy (line 650, column 3 - line 650, column 15): " + [v.constructor.name]);
      };

      return Data_Functor.map(Data_Lazy.functorLazy)(go)(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(xs));
    };
  };
};

var unionBy = function unionBy(eq) {
  return function (xs) {
    return function (ys) {
      return Data_Semigroup.append(Data_List_Lazy_Types.semigroupList)(xs)(Data_Foldable.foldl(Data_List_Lazy_Types.foldableList)(Data_Function.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
    };
  };
};

var union = function union(dictEq) {
  return unionBy(Data_Eq.eq(dictEq));
};

var deleteAt = function deleteAt(n) {
  return function (xs) {
    var go = function go(v) {
      return function (v1) {
        if (v1 instanceof Data_List_Lazy_Types.Nil) {
          return Data_List_Lazy_Types.Nil.value;
        }

        ;

        if (v === 0 && v1 instanceof Data_List_Lazy_Types.Cons) {
          return Data_List_Lazy_Types.step(v1.value1);
        }

        ;

        if (v1 instanceof Data_List_Lazy_Types.Cons) {
          return new Data_List_Lazy_Types.Cons(v1.value0, deleteAt(v - 1 | 0)(v1.value1));
        }

        ;
        throw new Error("Failed pattern match at Data.List.Lazy (line 353, column 3 - line 353, column 17): " + [v.constructor.name, v1.constructor.name]);
      };
    };

    return Data_Functor.map(Data_Lazy.functorLazy)(go(n))(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(xs));
  };
};

var $$delete = function $$delete(dictEq) {
  return deleteBy(Data_Eq.eq(dictEq));
};

var difference = function difference(dictEq) {
  return Data_Foldable.foldl(Data_List_Lazy_Types.foldableList)(Data_Function.flip($$delete(dictEq)));
};

var cycle = function cycle(xs) {
  return Control_Lazy.fix(Data_List_Lazy_Types.lazyList)(function (ys) {
    return Data_Semigroup.append(Data_List_Lazy_Types.semigroupList)(xs)(ys);
  });
};

var concatMap = Data_Function.flip(Control_Bind.bind(Data_List_Lazy_Types.bindList));

var concat = function concat(v) {
  return Control_Bind.bind(Data_List_Lazy_Types.bindList)(v)(Control_Category.identity(Control_Category.categoryFn));
};

var catMaybes = mapMaybe(Control_Category.identity(Control_Category.categoryFn));

var alterAt = function alterAt(n) {
  return function (f) {
    return function (xs) {
      var go = function go(v) {
        return function (v1) {
          if (v1 instanceof Data_List_Lazy_Types.Nil) {
            return Data_List_Lazy_Types.Nil.value;
          }

          ;

          if (v === 0 && v1 instanceof Data_List_Lazy_Types.Cons) {
            var v2 = f(v1.value0);

            if (v2 instanceof Data_Maybe.Nothing) {
              return Data_List_Lazy_Types.step(v1.value1);
            }

            ;

            if (v2 instanceof Data_Maybe.Just) {
              return new Data_List_Lazy_Types.Cons(v2.value0, v1.value1);
            }

            ;
            throw new Error("Failed pattern match at Data.List.Lazy (line 394, column 22 - line 396, column 26): " + [v2.constructor.name]);
          }

          ;

          if (v1 instanceof Data_List_Lazy_Types.Cons) {
            return new Data_List_Lazy_Types.Cons(v1.value0, alterAt(v - 1 | 0)(f)(v1.value1));
          }

          ;
          throw new Error("Failed pattern match at Data.List.Lazy (line 393, column 3 - line 393, column 17): " + [v.constructor.name, v1.constructor.name]);
        };
      };

      return Data_Functor.map(Data_Lazy.functorLazy)(go(n))(Data_Newtype.unwrap(Data_List_Lazy_Types.newtypeList)(xs));
    };
  };
};

var modifyAt = function modifyAt(n) {
  return function (f) {
    return alterAt(n)(function ($266) {
      return Data_Maybe.Just.create(f($266));
    });
  };
};

module.exports = {
  toUnfoldable: toUnfoldable,
  fromFoldable: fromFoldable,
  singleton: singleton,
  range: range,
  replicate: replicate,
  replicateM: replicateM,
  some: some,
  many: many,
  repeat: repeat,
  iterate: iterate,
  cycle: cycle,
  "null": $$null,
  length: length,
  snoc: snoc,
  insert: insert,
  insertBy: insertBy,
  head: head,
  last: last,
  tail: tail,
  init: init,
  uncons: uncons,
  index: index,
  elemIndex: elemIndex,
  elemLastIndex: elemLastIndex,
  findIndex: findIndex,
  findLastIndex: findLastIndex,
  insertAt: insertAt,
  deleteAt: deleteAt,
  updateAt: updateAt,
  modifyAt: modifyAt,
  alterAt: alterAt,
  reverse: reverse,
  concat: concat,
  concatMap: concatMap,
  filter: filter,
  filterM: filterM,
  mapMaybe: mapMaybe,
  catMaybes: catMaybes,
  Pattern: Pattern,
  stripPrefix: stripPrefix,
  slice: slice,
  take: take,
  takeWhile: takeWhile,
  drop: drop,
  dropWhile: dropWhile,
  span: span,
  group: group,
  groupBy: groupBy,
  partition: partition,
  nub: nub,
  nubBy: nubBy,
  union: union,
  unionBy: unionBy,
  "delete": $$delete,
  deleteBy: deleteBy,
  difference: difference,
  intersect: intersect,
  intersectBy: intersectBy,
  zipWith: zipWith,
  zipWithA: zipWithA,
  zip: zip,
  unzip: unzip,
  transpose: transpose,
  foldM: foldM,
  foldrLazy: foldrLazy,
  scanrLazy: scanrLazy,
  eqPattern: eqPattern,
  ordPattern: ordPattern,
  newtypePattern: newtypePattern,
  showPattern: showPattern
};
},{"../Control.Alt/index.js":"../output/Control.Alt/index.js","../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Category/index.js":"../output/Control.Category/index.js","../Control.Lazy/index.js":"../output/Control.Lazy/index.js","../Control.Monad.Rec.Class/index.js":"../output/Control.Monad.Rec.Class/index.js","../Data.Boolean/index.js":"../output/Data.Boolean/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Foldable/index.js":"../output/Data.Foldable/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.HeytingAlgebra/index.js":"../output/Data.HeytingAlgebra/index.js","../Data.Lazy/index.js":"../output/Data.Lazy/index.js","../Data.List.Lazy.Types/index.js":"../output/Data.List.Lazy.Types/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.NonEmpty/index.js":"../output/Data.NonEmpty/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Ordering/index.js":"../output/Data.Ordering/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Show/index.js":"../output/Data.Show/index.js","../Data.Traversable/index.js":"../output/Data.Traversable/index.js","../Data.Tuple/index.js":"../output/Data.Tuple/index.js","../Data.Unfoldable/index.js":"../output/Data.Unfoldable/index.js"}],"../output/Data.Map.Internal/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_List = require("../Data.List/index.js");

var Data_List_Lazy = require("../Data.List.Lazy/index.js");

var Data_List_Lazy_Types = require("../Data.List.Lazy.Types/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Leaf = function () {
  function Leaf() {}

  ;
  Leaf.value = new Leaf();
  return Leaf;
}();

var Two = function () {
  function Two(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  ;

  Two.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return function (value3) {
          return new Two(value0, value1, value2, value3);
        };
      };
    };
  };

  return Two;
}();

var Three = function () {
  function Three(value0, value1, value2, value3, value4, value5, value6) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  ;

  Three.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return function (value3) {
          return function (value4) {
            return function (value5) {
              return function (value6) {
                return new Three(value0, value1, value2, value3, value4, value5, value6);
              };
            };
          };
        };
      };
    };
  };

  return Three;
}();

var TwoLeft = function () {
  function TwoLeft(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  ;

  TwoLeft.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return new TwoLeft(value0, value1, value2);
      };
    };
  };

  return TwoLeft;
}();

var TwoRight = function () {
  function TwoRight(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  ;

  TwoRight.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return new TwoRight(value0, value1, value2);
      };
    };
  };

  return TwoRight;
}();

var ThreeLeft = function () {
  function ThreeLeft(value0, value1, value2, value3, value4, value5) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  ;

  ThreeLeft.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return function (value3) {
          return function (value4) {
            return function (value5) {
              return new ThreeLeft(value0, value1, value2, value3, value4, value5);
            };
          };
        };
      };
    };
  };

  return ThreeLeft;
}();

var ThreeMiddle = function () {
  function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  ;

  ThreeMiddle.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return function (value3) {
          return function (value4) {
            return function (value5) {
              return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
            };
          };
        };
      };
    };
  };

  return ThreeMiddle;
}();

var ThreeRight = function () {
  function ThreeRight(value0, value1, value2, value3, value4, value5) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  ;

  ThreeRight.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return function (value3) {
          return function (value4) {
            return function (value5) {
              return new ThreeRight(value0, value1, value2, value3, value4, value5);
            };
          };
        };
      };
    };
  };

  return ThreeRight;
}();

var KickUp = function () {
  function KickUp(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  ;

  KickUp.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return function (value3) {
          return new KickUp(value0, value1, value2, value3);
        };
      };
    };
  };

  return KickUp;
}();

var values = function values(v) {
  if (v instanceof Leaf) {
    return Data_List_Types.Nil.value;
  }

  ;

  if (v instanceof Two) {
    return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(values(v.value3)));
  }

  ;

  if (v instanceof Three) {
    return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value5))(values(v.value6)))));
  }

  ;
  throw new Error("Failed pattern match at Data.Map.Internal (line 612, column 1 - line 612, column 40): " + [v.constructor.name]);
};

var size = function size(v) {
  if (v instanceof Leaf) {
    return 0;
  }

  ;

  if (v instanceof Two) {
    return (1 + size(v.value0) | 0) + size(v.value3) | 0;
  }

  ;

  if (v instanceof Three) {
    return ((2 + size(v.value0) | 0) + size(v.value3) | 0) + size(v.value6) | 0;
  }

  ;
  throw new Error("Failed pattern match at Data.Map.Internal (line 662, column 1 - line 662, column 35): " + [v.constructor.name]);
};

var singleton = function singleton(k) {
  return function (v) {
    return new Two(Leaf.value, k, v, Leaf.value);
  };
};

var toUnfoldable = function toUnfoldable(dictUnfoldable) {
  return function (m) {
    var go = function go($copy_v) {
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(v) {
        if (v instanceof Data_List_Types.Nil) {
          $tco_done = true;
          return Data_Maybe.Nothing.value;
        }

        ;

        if (v instanceof Data_List_Types.Cons) {
          if (v.value0 instanceof Leaf) {
            $copy_v = v.value1;
            return;
          }

          ;

          if (v.value0 instanceof Two && v.value0.value0 instanceof Leaf && v.value0.value3 instanceof Leaf) {
            $tco_done = true;
            return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), v.value1));
          }

          ;

          if (v.value0 instanceof Two && v.value0.value0 instanceof Leaf) {
            $tco_done = true;
            return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));
          }

          ;

          if (v.value0 instanceof Two) {
            $copy_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));
            return;
          }

          ;

          if (v.value0 instanceof Three) {
            $copy_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, new Data_List_Types.Cons(singleton(v.value0.value4)(v.value0.value5), new Data_List_Types.Cons(v.value0.value6, v.value1)))));
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 577, column 18 - line 586, column 71): " + [v.value0.constructor.name]);
        }

        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 576, column 3 - line 576, column 19): " + [v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($copy_v);
      }

      ;
      return $tco_result;
    };

    return Data_Unfoldable.unfoldr(dictUnfoldable)(go)(new Data_List_Types.Cons(m, Data_List_Types.Nil.value));
  };
};

var toAscArray = toUnfoldable(Data_Unfoldable.unfoldableArray);

var toUnfoldableUnordered = function toUnfoldableUnordered(dictUnfoldable) {
  return function (m) {
    var go = function go($copy_v) {
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(v) {
        if (v instanceof Data_List_Types.Nil) {
          $tco_done = true;
          return Data_Maybe.Nothing.value;
        }

        ;

        if (v instanceof Data_List_Types.Cons) {
          if (v.value0 instanceof Leaf) {
            $copy_v = v.value1;
            return;
          }

          ;

          if (v.value0 instanceof Two) {
            $tco_done = true;
            return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(v.value0.value3, v.value1))));
          }

          ;

          if (v.value0 instanceof Three) {
            $tco_done = true;
            return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), new Data_List_Types.Cons(singleton(v.value0.value4)(v.value0.value5), new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(v.value0.value3, new Data_List_Types.Cons(v.value0.value6, v.value1))))));
          }

          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 598, column 18 - line 603, column 77): " + [v.value0.constructor.name]);
        }

        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 597, column 3 - line 597, column 19): " + [v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($copy_v);
      }

      ;
      return $tco_result;
    };

    return Data_Unfoldable.unfoldr(dictUnfoldable)(go)(new Data_List_Types.Cons(m, Data_List_Types.Nil.value));
  };
};

var showTree = function showTree(dictShow) {
  return function (dictShow1) {
    return function (v) {
      if (v instanceof Leaf) {
        return "Leaf";
      }

      ;

      if (v instanceof Two) {
        return "Two (" + (showTree(dictShow)(dictShow1)(v.value0) + (") (" + (Data_Show.show(dictShow)(v.value1) + (") (" + (Data_Show.show(dictShow1)(v.value2) + (") (" + (showTree(dictShow)(dictShow1)(v.value3) + ")")))))));
      }

      ;

      if (v instanceof Three) {
        return "Three (" + (showTree(dictShow)(dictShow1)(v.value0) + (") (" + (Data_Show.show(dictShow)(v.value1) + (") (" + (Data_Show.show(dictShow1)(v.value2) + (") (" + (showTree(dictShow)(dictShow1)(v.value3) + (") (" + (Data_Show.show(dictShow)(v.value4) + (") (" + (Data_Show.show(dictShow1)(v.value5) + (") (" + (showTree(dictShow)(dictShow1)(v.value6) + ")")))))))))))));
      }

      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 153, column 1 - line 153, column 62): " + [v.constructor.name]);
    };
  };
};

var showMap = function showMap(dictShow) {
  return function (dictShow1) {
    return new Data_Show.Show(function (m) {
      return "(fromFoldable " + (Data_Show.show(Data_Show.showArray(Data_Tuple.showTuple(dictShow)(dictShow1)))(toAscArray(m)) + ")");
    });
  };
};

var lookupLE = function lookupLE(dictOrd) {
  return function (k) {
    var comp = Data_Ord.compare(dictOrd);

    var go = function go(v) {
      if (v instanceof Leaf) {
        return Data_Maybe.Nothing.value;
      }

      ;

      if (v instanceof Two) {
        var v2 = comp(k)(v.value1);

        if (v2 instanceof Data_Ordering.EQ) {
          return new Data_Maybe.Just({
            key: v.value1,
            value: v.value2
          });
        }

        ;

        if (v2 instanceof Data_Ordering.GT) {
          return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
            key: v.value1,
            value: v.value2
          })(go(v.value3)));
        }

        ;

        if (v2 instanceof Data_Ordering.LT) {
          return go(v.value0);
        }

        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 225, column 33 - line 228, column 20): " + [v2.constructor.name]);
      }

      ;

      if (v instanceof Three) {
        var v3 = comp(k)(v.value4);

        if (v3 instanceof Data_Ordering.EQ) {
          return new Data_Maybe.Just({
            key: v.value4,
            value: v.value5
          });
        }

        ;

        if (v3 instanceof Data_Ordering.GT) {
          return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
            key: v.value4,
            value: v.value5
          })(go(v.value6)));
        }

        ;

        if (v3 instanceof Data_Ordering.LT) {
          return go(new Two(v.value0, v.value1, v.value2, v.value3));
        }

        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 229, column 45 - line 232, column 36): " + [v3.constructor.name]);
      }

      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 224, column 5 - line 224, column 22): " + [v.constructor.name]);
    };

    return go;
  };
};

var lookupGE = function lookupGE(dictOrd) {
  return function (k) {
    var comp = Data_Ord.compare(dictOrd);

    var go = function go(v) {
      if (v instanceof Leaf) {
        return Data_Maybe.Nothing.value;
      }

      ;

      if (v instanceof Two) {
        var v2 = comp(k)(v.value1);

        if (v2 instanceof Data_Ordering.EQ) {
          return new Data_Maybe.Just({
            key: v.value1,
            value: v.value2
          });
        }

        ;

        if (v2 instanceof Data_Ordering.LT) {
          return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
            key: v.value1,
            value: v.value2
          })(go(v.value0)));
        }

        ;

        if (v2 instanceof Data_Ordering.GT) {
          return go(v.value3);
        }

        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 259, column 33 - line 262, column 21): " + [v2.constructor.name]);
      }

      ;

      if (v instanceof Three) {
        var v3 = comp(k)(v.value1);

        if (v3 instanceof Data_Ordering.EQ) {
          return new Data_Maybe.Just({
            key: v.value1,
            value: v.value2
          });
        }

        ;

        if (v3 instanceof Data_Ordering.LT) {
          return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
            key: v.value1,
            value: v.value2
          })(go(v.value0)));
        }

        ;

        if (v3 instanceof Data_Ordering.GT) {
          return go(new Two(v.value3, v.value4, v.value5, v.value6));
        }

        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 263, column 45 - line 266, column 37): " + [v3.constructor.name]);
      }

      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 258, column 5 - line 258, column 22): " + [v.constructor.name]);
    };

    return go;
  };
};

var lookup = function lookup(dictOrd) {
  return function (k) {
    var comp = Data_Ord.compare(dictOrd);

    var go = function go($copy_v) {
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(v) {
        if (v instanceof Leaf) {
          $tco_done = true;
          return Data_Maybe.Nothing.value;
        }

        ;

        if (v instanceof Two) {
          var v2 = comp(k)(v.value1);

          if (v2 instanceof Data_Ordering.EQ) {
            $tco_done = true;
            return new Data_Maybe.Just(v.value2);
          }

          ;

          if (v2 instanceof Data_Ordering.LT) {
            $copy_v = v.value0;
            return;
          }

          ;
          $copy_v = v.value3;
          return;
        }

        ;

        if (v instanceof Three) {
          var v3 = comp(k)(v.value1);

          if (v3 instanceof Data_Ordering.EQ) {
            $tco_done = true;
            return new Data_Maybe.Just(v.value2);
          }

          ;
          var v4 = comp(k)(v.value4);

          if (v4 instanceof Data_Ordering.EQ) {
            $tco_done = true;
            return new Data_Maybe.Just(v.value5);
          }

          ;

          if (v3 instanceof Data_Ordering.LT) {
            $copy_v = v.value0;
            return;
          }

          ;

          if (v4 instanceof Data_Ordering.GT) {
            $copy_v = v.value6;
            return;
          }

          ;
          $copy_v = v.value3;
          return;
        }

        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 200, column 5 - line 200, column 22): " + [v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($copy_v);
      }

      ;
      return $tco_result;
    };

    return go;
  };
};

var member = function member(dictOrd) {
  return function (k) {
    return function (m) {
      return Data_Maybe.isJust(lookup(dictOrd)(k)(m));
    };
  };
};

var keys = function keys(v) {
  if (v instanceof Leaf) {
    return Data_List_Types.Nil.value;
  }

  ;

  if (v instanceof Two) {
    return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(keys(v.value3)));
  }

  ;

  if (v instanceof Three) {
    return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value4))(keys(v.value6)))));
  }

  ;
  throw new Error("Failed pattern match at Data.Map.Internal (line 606, column 1 - line 606, column 38): " + [v.constructor.name]);
};

var isSubmap = function isSubmap(dictOrd) {
  return function (dictEq) {
    return function (m1) {
      return function (m2) {
        var f = function f(v) {
          return Data_Eq.eq(Data_Maybe.eqMaybe(dictEq))(lookup(dictOrd)(v.value0)(m2))(new Data_Maybe.Just(v.value1));
        };

        return Data_Foldable.all(Data_List_Lazy_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean)(f)(toUnfoldable(Data_List_Lazy_Types.unfoldableList)(m1));
      };
    };
  };
};

var isEmpty = function isEmpty(v) {
  if (v instanceof Leaf) {
    return true;
  }

  ;
  return false;
};

var functorMap = new Data_Functor.Functor(function (v) {
  return function (v1) {
    if (v1 instanceof Leaf) {
      return Leaf.value;
    }

    ;

    if (v1 instanceof Two) {
      return new Two(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3));
    }

    ;

    if (v1 instanceof Three) {
      return new Three(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3), v1.value4, v(v1.value5), Data_Functor.map(functorMap)(v)(v1.value6));
    }

    ;
    throw new Error("Failed pattern match at Data.Map.Internal (line 96, column 1 - line 99, column 110): " + [v.constructor.name, v1.constructor.name]);
  };
});
var functorWithIndexMap = new Data_FunctorWithIndex.FunctorWithIndex(function () {
  return functorMap;
}, function (v) {
  return function (v1) {
    if (v1 instanceof Leaf) {
      return Leaf.value;
    }

    ;

    if (v1 instanceof Two) {
      return new Two(Data_FunctorWithIndex.mapWithIndex(functorWithIndexMap)(v)(v1.value0), v1.value1, v(v1.value1)(v1.value2), Data_FunctorWithIndex.mapWithIndex(functorWithIndexMap)(v)(v1.value3));
    }

    ;

    if (v1 instanceof Three) {
      return new Three(Data_FunctorWithIndex.mapWithIndex(functorWithIndexMap)(v)(v1.value0), v1.value1, v(v1.value1)(v1.value2), Data_FunctorWithIndex.mapWithIndex(functorWithIndexMap)(v)(v1.value3), v1.value4, v(v1.value4)(v1.value5), Data_FunctorWithIndex.mapWithIndex(functorWithIndexMap)(v)(v1.value6));
    }

    ;
    throw new Error("Failed pattern match at Data.Map.Internal (line 101, column 1 - line 104, column 152): " + [v.constructor.name, v1.constructor.name]);
  };
});

var fromZipper = function fromZipper($copy_dictOrd) {
  return function ($copy_v) {
    return function ($copy_tree) {
      var $tco_var_dictOrd = $copy_dictOrd;
      var $tco_var_v = $copy_v;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(dictOrd, v, tree) {
        if (v instanceof Data_List_Types.Nil) {
          $tco_done = true;
          return tree;
        }

        ;

        if (v instanceof Data_List_Types.Cons) {
          if (v.value0 instanceof TwoLeft) {
            $tco_var_dictOrd = dictOrd;
            $tco_var_v = v.value1;
            $copy_tree = new Two(tree, v.value0.value0, v.value0.value1, v.value0.value2);
            return;
          }

          ;

          if (v.value0 instanceof TwoRight) {
            $tco_var_dictOrd = dictOrd;
            $tco_var_v = v.value1;
            $copy_tree = new Two(v.value0.value0, v.value0.value1, v.value0.value2, tree);
            return;
          }

          ;

          if (v.value0 instanceof ThreeLeft) {
            $tco_var_dictOrd = dictOrd;
            $tco_var_v = v.value1;
            $copy_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
            return;
          }

          ;

          if (v.value0 instanceof ThreeMiddle) {
            $tco_var_dictOrd = dictOrd;
            $tco_var_v = v.value1;
            $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, tree, v.value0.value3, v.value0.value4, v.value0.value5);
            return;
          }

          ;

          if (v.value0 instanceof ThreeRight) {
            $tco_var_dictOrd = dictOrd;
            $tco_var_v = v.value1;
            $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, tree);
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 418, column 3 - line 423, column 88): " + [v.value0.constructor.name]);
        }

        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 415, column 1 - line 415, column 80): " + [v.constructor.name, tree.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_tree);
      }

      ;
      return $tco_result;
    };
  };
};

var insert = function insert(dictOrd) {
  return function (k) {
    return function (v) {
      var up = function up($copy_v1) {
        return function ($copy_v2) {
          var $tco_var_v1 = $copy_v1;
          var $tco_done = false;
          var $tco_result;

          function $tco_loop(v1, v2) {
            if (v1 instanceof Data_List_Types.Nil) {
              $tco_done = true;
              return new Two(v2.value0, v2.value1, v2.value2, v2.value3);
            }

            ;

            if (v1 instanceof Data_List_Types.Cons) {
              if (v1.value0 instanceof TwoLeft) {
                $tco_done = true;
                return fromZipper(dictOrd)(v1.value1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, v1.value0.value0, v1.value0.value1, v1.value0.value2));
              }

              ;

              if (v1.value0 instanceof TwoRight) {
                $tco_done = true;
                return fromZipper(dictOrd)(v1.value1)(new Three(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0, v2.value1, v2.value2, v2.value3));
              }

              ;

              if (v1.value0 instanceof ThreeLeft) {
                $tco_var_v1 = v1.value1;
                $copy_v2 = new KickUp(new Two(v2.value0, v2.value1, v2.value2, v2.value3), v1.value0.value0, v1.value0.value1, new Two(v1.value0.value2, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                return;
              }

              ;

              if (v1.value0 instanceof ThreeMiddle) {
                $tco_var_v1 = v1.value1;
                $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0), v2.value1, v2.value2, new Two(v2.value3, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                return;
              }

              ;

              if (v1.value0 instanceof ThreeRight) {
                $tco_var_v1 = v1.value1;
                $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v1.value0.value3), v1.value0.value4, v1.value0.value5, new Two(v2.value0, v2.value1, v2.value2, v2.value3));
                return;
              }

              ;
              throw new Error("Failed pattern match at Data.Map.Internal (line 454, column 5 - line 459, column 108): " + [v1.value0.constructor.name, v2.constructor.name]);
            }

            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 451, column 3 - line 451, column 56): " + [v1.constructor.name, v2.constructor.name]);
          }

          ;

          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_v1, $copy_v2);
          }

          ;
          return $tco_result;
        };
      };

      var comp = Data_Ord.compare(dictOrd);

      var down = function down($copy_ctx) {
        return function ($copy_v1) {
          var $tco_var_ctx = $copy_ctx;
          var $tco_done = false;
          var $tco_result;

          function $tco_loop(ctx, v1) {
            if (v1 instanceof Leaf) {
              $tco_done = true;
              return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
            }

            ;

            if (v1 instanceof Two) {
              var v2 = comp(k)(v1.value1);

              if (v2 instanceof Data_Ordering.EQ) {
                $tco_done = true;
                return fromZipper(dictOrd)(ctx)(new Two(v1.value0, k, v, v1.value3));
              }

              ;

              if (v2 instanceof Data_Ordering.LT) {
                $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(v1.value1, v1.value2, v1.value3), ctx);
                $copy_v1 = v1.value0;
                return;
              }

              ;
              $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(v1.value0, v1.value1, v1.value2), ctx);
              $copy_v1 = v1.value3;
              return;
            }

            ;

            if (v1 instanceof Three) {
              var v3 = comp(k)(v1.value1);

              if (v3 instanceof Data_Ordering.EQ) {
                $tco_done = true;
                return fromZipper(dictOrd)(ctx)(new Three(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));
              }

              ;
              var v4 = comp(k)(v1.value4);

              if (v4 instanceof Data_Ordering.EQ) {
                $tco_done = true;
                return fromZipper(dictOrd)(ctx)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));
              }

              ;

              if (v3 instanceof Data_Ordering.LT) {
                $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);
                $copy_v1 = v1.value0;
                return;
              }

              ;

              if (v3 instanceof Data_Ordering.GT && v4 instanceof Data_Ordering.LT) {
                $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);
                $copy_v1 = v1.value3;
                return;
              }

              ;
              $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);
              $copy_v1 = v1.value6;
              return;
            }

            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 434, column 3 - line 434, column 55): " + [ctx.constructor.name, v1.constructor.name]);
          }

          ;

          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_ctx, $copy_v1);
          }

          ;
          return $tco_result;
        };
      };

      return down(Data_List_Types.Nil.value);
    };
  };
};

var pop = function pop(dictOrd) {
  return function (k) {
    var up = function up($copy_ctxs) {
      return function ($copy_tree) {
        var $tco_var_ctxs = $copy_ctxs;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(ctxs, tree) {
          if (ctxs instanceof Data_List_Types.Nil) {
            $tco_done = true;
            return tree;
          }

          ;

          if (ctxs instanceof Data_List_Types.Cons) {
            if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Leaf && tree instanceof Leaf) {
              $tco_done = true;
              return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value));
            }

            ;

            if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Leaf && tree instanceof Leaf) {
              $tco_done = true;
              return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value));
            }

            ;

            if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Two) {
              $tco_var_ctxs = ctxs.value1;
              $copy_tree = new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3);
              return;
            }

            ;

            if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Two) {
              $tco_var_ctxs = ctxs.value1;
              $copy_tree = new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree);
              return;
            }

            ;

            if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Three) {
              $tco_done = true;
              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6)));
            }

            ;

            if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Three) {
              $tco_done = true;
              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree)));
            }

            ;

            if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Leaf && ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf) {
              $tco_done = true;
              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
            }

            ;

            if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Leaf && ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf) {
              $tco_done = true;
              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
            }

            ;

            if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value0 instanceof Leaf && ctxs.value0.value3 instanceof Leaf && tree instanceof Leaf) {
              $tco_done = true;
              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value4, ctxs.value0.value5, Leaf.value));
            }

            ;

            if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Two) {
              $tco_done = true;
              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
            }

            ;

            if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Two) {
              $tco_done = true;
              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
            }

            ;

            if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Two) {
              $tco_done = true;
              return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0, ctxs.value0.value5.value1, ctxs.value0.value5.value2, ctxs.value0.value5.value3)));
            }

            ;

            if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Two) {
              $tco_done = true;
              return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3, ctxs.value0.value4, ctxs.value0.value5, tree)));
            }

            ;

            if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Three) {
              $tco_done = true;
              return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
            }

            ;

            if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Three) {
              $tco_done = true;
              return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
            }

            ;

            if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Three) {
              $tco_done = true;
              return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0), ctxs.value0.value5.value1, ctxs.value0.value5.value2, new Two(ctxs.value0.value5.value3, ctxs.value0.value5.value4, ctxs.value0.value5.value5, ctxs.value0.value5.value6)));
            }

            ;

            if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Three) {
              $tco_done = true;
              return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3), ctxs.value0.value3.value4, ctxs.value0.value3.value5, new Two(ctxs.value0.value3.value6, ctxs.value0.value4, ctxs.value0.value5, tree)));
            }

            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 511, column 9 - line 528, column 136): " + [ctxs.value0.constructor.name, tree.constructor.name]);
          }

          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 508, column 5 - line 528, column 136): " + [ctxs.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_ctxs, $copy_tree);
        }

        ;
        return $tco_result;
      };
    };

    var removeMaxNode = function removeMaxNode($copy_ctx) {
      return function ($copy_m) {
        var $tco_var_ctx = $copy_ctx;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(ctx, m) {
          if (m instanceof Two && m.value0 instanceof Leaf && m.value3 instanceof Leaf) {
            $tco_done = true;
            return up(ctx)(Leaf.value);
          }

          ;

          if (m instanceof Two) {
            $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
            $copy_m = m.value3;
            return;
          }

          ;

          if (m instanceof Three && m.value0 instanceof Leaf && m.value3 instanceof Leaf && m.value6 instanceof Leaf) {
            $tco_done = true;
            return up(new Data_List_Types.Cons(new TwoRight(Leaf.value, m.value1, m.value2), ctx))(Leaf.value);
          }

          ;

          if (m instanceof Three) {
            $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
            $copy_m = m.value6;
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 540, column 5 - line 544, column 107): " + [m.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_ctx, $copy_m);
        }

        ;
        return $tco_result;
      };
    };

    var maxNode = function maxNode($copy_m) {
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(m) {
        if (m instanceof Two && m.value3 instanceof Leaf) {
          $tco_done = true;
          return {
            key: m.value1,
            value: m.value2
          };
        }

        ;

        if (m instanceof Two) {
          $copy_m = m.value3;
          return;
        }

        ;

        if (m instanceof Three && m.value6 instanceof Leaf) {
          $tco_done = true;
          return {
            key: m.value4,
            value: m.value5
          };
        }

        ;

        if (m instanceof Three) {
          $copy_m = m.value6;
          return;
        }

        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 531, column 33 - line 535, column 45): " + [m.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($copy_m);
      }

      ;
      return $tco_result;
    };

    var comp = Data_Ord.compare(dictOrd);

    var down = function down($copy_ctx) {
      return function ($copy_m) {
        var $tco_var_ctx = $copy_ctx;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(ctx, m) {
          if (m instanceof Leaf) {
            $tco_done = true;
            return Data_Maybe.Nothing.value;
          }

          ;

          if (m instanceof Two) {
            var v = comp(k)(m.value1);

            if (m.value3 instanceof Leaf && v instanceof Data_Ordering.EQ) {
              $tco_done = true;
              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, up(ctx)(Leaf.value)));
            }

            ;

            if (v instanceof Data_Ordering.EQ) {
              var max = maxNode(m.value0);
              $tco_done = true;
              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new TwoLeft(max.key, max.value, m.value3), ctx))(m.value0)));
            }

            ;

            if (v instanceof Data_Ordering.LT) {
              $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(m.value1, m.value2, m.value3), ctx);
              $copy_m = m.value0;
              return;
            }

            ;
            $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
            $copy_m = m.value3;
            return;
          }

          ;

          if (m instanceof Three) {
            var leaves = function () {
              if (m.value0 instanceof Leaf && m.value3 instanceof Leaf && m.value6 instanceof Leaf) {
                return true;
              }

              ;
              return false;
            }();

            var v = comp(k)(m.value4);
            var v3 = comp(k)(m.value1);

            if (leaves && v3 instanceof Data_Ordering.EQ) {
              $tco_done = true;
              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value4, m.value5, Leaf.value))));
            }

            ;

            if (leaves && v instanceof Data_Ordering.EQ) {
              $tco_done = true;
              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value1, m.value2, Leaf.value))));
            }

            ;

            if (v3 instanceof Data_Ordering.EQ) {
              var max = maxNode(m.value0);
              $tco_done = true;
              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new ThreeLeft(max.key, max.value, m.value3, m.value4, m.value5, m.value6), ctx))(m.value0)));
            }

            ;

            if (v instanceof Data_Ordering.EQ) {
              var max = maxNode(m.value3);
              $tco_done = true;
              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, removeMaxNode(new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, max.key, max.value, m.value6), ctx))(m.value3)));
            }

            ;

            if (v3 instanceof Data_Ordering.LT) {
              $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(m.value1, m.value2, m.value3, m.value4, m.value5, m.value6), ctx);
              $copy_m = m.value0;
              return;
            }

            ;

            if (v3 instanceof Data_Ordering.GT && v instanceof Data_Ordering.LT) {
              $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, m.value4, m.value5, m.value6), ctx);
              $copy_m = m.value3;
              return;
            }

            ;
            $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
            $copy_m = m.value6;
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 481, column 34 - line 504, column 80): " + [m.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_ctx, $copy_m);
        }

        ;
        return $tco_result;
      };
    };

    return down(Data_List_Types.Nil.value);
  };
};

var foldableMap = new Data_Foldable.Foldable(function (dictMonoid) {
  return function (f) {
    return function (m) {
      return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f)(values(m));
    };
  };
}, function (f) {
  return function (z) {
    return function (m) {
      return Data_Foldable.foldl(Data_List_Types.foldableList)(f)(z)(values(m));
    };
  };
}, function (f) {
  return function (z) {
    return function (m) {
      return Data_Foldable.foldr(Data_List_Types.foldableList)(f)(z)(values(m));
    };
  };
});
var traversableMap = new Data_Traversable.Traversable(function () {
  return foldableMap;
}, function () {
  return functorMap;
}, function (dictApplicative) {
  return Data_Traversable.traverse(traversableMap)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      if (v instanceof Leaf) {
        return Control_Applicative.pure(dictApplicative)(Leaf.value);
      }

      ;

      if (v instanceof Two) {
        return Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(Two.create)(Data_Traversable.traverse(traversableMap)(dictApplicative)(f)(v.value0)))(Control_Applicative.pure(dictApplicative)(v.value1)))(f(v.value2)))(Data_Traversable.traverse(traversableMap)(dictApplicative)(f)(v.value3));
      }

      ;

      if (v instanceof Three) {
        return Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(Three.create)(Data_Traversable.traverse(traversableMap)(dictApplicative)(f)(v.value0)))(Control_Applicative.pure(dictApplicative)(v.value1)))(f(v.value2)))(Data_Traversable.traverse(traversableMap)(dictApplicative)(f)(v.value3)))(Control_Applicative.pure(dictApplicative)(v.value4)))(f(v.value5)))(Data_Traversable.traverse(traversableMap)(dictApplicative)(f)(v.value6));
      }

      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 119, column 1 - line 134, column 31): " + [f.constructor.name, v.constructor.name]);
    };
  };
});

var foldSubmap = function foldSubmap(dictOrd) {
  return function (dictMonoid) {
    return function (kmin) {
      return function (kmax) {
        return function (f) {
          var tooSmall = function () {
            if (kmin instanceof Data_Maybe.Just) {
              return function (k) {
                return Data_Ord.lessThan(dictOrd)(k)(kmin.value0);
              };
            }

            ;

            if (kmin instanceof Data_Maybe.Nothing) {
              return Data_Function["const"](false);
            }

            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 319, column 7 - line 323, column 22): " + [kmin.constructor.name]);
          }();

          var tooLarge = function () {
            if (kmax instanceof Data_Maybe.Just) {
              return function (k) {
                return Data_Ord.greaterThan(dictOrd)(k)(kmax.value0);
              };
            }

            ;

            if (kmax instanceof Data_Maybe.Nothing) {
              return Data_Function["const"](false);
            }

            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 326, column 7 - line 330, column 22): " + [kmax.constructor.name]);
          }();

          var inBounds = function () {
            if (kmin instanceof Data_Maybe.Just && kmax instanceof Data_Maybe.Just) {
              return function (k) {
                return Data_Ord.lessThanOrEq(dictOrd)(kmin.value0)(k) && Data_Ord.lessThanOrEq(dictOrd)(k)(kmax.value0);
              };
            }

            ;

            if (kmin instanceof Data_Maybe.Just && kmax instanceof Data_Maybe.Nothing) {
              return function (k) {
                return Data_Ord.lessThanOrEq(dictOrd)(kmin.value0)(k);
              };
            }

            ;

            if (kmin instanceof Data_Maybe.Nothing && kmax instanceof Data_Maybe.Just) {
              return function (k) {
                return Data_Ord.lessThanOrEq(dictOrd)(k)(kmax.value0);
              };
            }

            ;

            if (kmin instanceof Data_Maybe.Nothing && kmax instanceof Data_Maybe.Nothing) {
              return Data_Function["const"](true);
            }

            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 333, column 7 - line 341, column 21): " + [kmin.constructor.name, kmax.constructor.name]);
          }();

          var go = function go(v) {
            if (v instanceof Leaf) {
              return Data_Monoid.mempty(dictMonoid);
            }

            ;

            if (v instanceof Two) {
              return Data_Semigroup.append(dictMonoid.Semigroup0())(function () {
                var $633 = tooSmall(v.value1);

                if ($633) {
                  return Data_Monoid.mempty(dictMonoid);
                }

                ;
                return go(v.value0);
              }())(Data_Semigroup.append(dictMonoid.Semigroup0())(function () {
                var $634 = inBounds(v.value1);

                if ($634) {
                  return f(v.value1)(v.value2);
                }

                ;
                return Data_Monoid.mempty(dictMonoid);
              }())(function () {
                var $635 = tooLarge(v.value1);

                if ($635) {
                  return Data_Monoid.mempty(dictMonoid);
                }

                ;
                return go(v.value3);
              }()));
            }

            ;

            if (v instanceof Three) {
              return Data_Semigroup.append(dictMonoid.Semigroup0())(function () {
                var $640 = tooSmall(v.value1);

                if ($640) {
                  return Data_Monoid.mempty(dictMonoid);
                }

                ;
                return go(v.value0);
              }())(Data_Semigroup.append(dictMonoid.Semigroup0())(function () {
                var $641 = inBounds(v.value1);

                if ($641) {
                  return f(v.value1)(v.value2);
                }

                ;
                return Data_Monoid.mempty(dictMonoid);
              }())(Data_Semigroup.append(dictMonoid.Semigroup0())(function () {
                var $642 = tooSmall(v.value4) || tooLarge(v.value1);

                if ($642) {
                  return Data_Monoid.mempty(dictMonoid);
                }

                ;
                return go(v.value3);
              }())(Data_Semigroup.append(dictMonoid.Semigroup0())(function () {
                var $643 = inBounds(v.value4);

                if ($643) {
                  return f(v.value4)(v.value5);
                }

                ;
                return Data_Monoid.mempty(dictMonoid);
              }())(function () {
                var $644 = tooLarge(v.value4);

                if ($644) {
                  return Data_Monoid.mempty(dictMonoid);
                }

                ;
                return go(v.value6);
              }()))));
            }

            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 359, column 10 - line 371, column 54): " + [v.constructor.name]);
          };

          return go;
        };
      };
    };
  };
};

var findMin = function () {
  var go = function go($copy_v) {
    return function ($copy_v1) {
      var $tco_var_v = $copy_v;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(v, v1) {
        if (v1 instanceof Leaf) {
          $tco_done = true;
          return v;
        }

        ;

        if (v1 instanceof Two) {
          $tco_var_v = new Data_Maybe.Just({
            key: v1.value1,
            value: v1.value2
          });
          $copy_v1 = v1.value0;
          return;
        }

        ;

        if (v1 instanceof Three) {
          $tco_var_v = new Data_Maybe.Just({
            key: v1.value1,
            value: v1.value2
          });
          $copy_v1 = v1.value0;
          return;
        }

        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 297, column 5 - line 297, column 22): " + [v.constructor.name, v1.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_v, $copy_v1);
      }

      ;
      return $tco_result;
    };
  };

  return go(Data_Maybe.Nothing.value);
}();

var lookupGT = function lookupGT(dictOrd) {
  return function (k) {
    var comp = Data_Ord.compare(dictOrd);

    var go = function go(v) {
      if (v instanceof Leaf) {
        return Data_Maybe.Nothing.value;
      }

      ;

      if (v instanceof Two) {
        var v2 = comp(k)(v.value1);

        if (v2 instanceof Data_Ordering.EQ) {
          return findMin(v.value3);
        }

        ;

        if (v2 instanceof Data_Ordering.LT) {
          return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
            key: v.value1,
            value: v.value2
          })(go(v.value0)));
        }

        ;

        if (v2 instanceof Data_Ordering.GT) {
          return go(v.value3);
        }

        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 276, column 33 - line 279, column 21): " + [v2.constructor.name]);
      }

      ;

      if (v instanceof Three) {
        var v3 = comp(k)(v.value1);

        if (v3 instanceof Data_Ordering.EQ) {
          return findMin(new Two(v.value3, v.value4, v.value5, v.value6));
        }

        ;

        if (v3 instanceof Data_Ordering.LT) {
          return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
            key: v.value1,
            value: v.value2
          })(go(v.value0)));
        }

        ;

        if (v3 instanceof Data_Ordering.GT) {
          return go(new Two(v.value3, v.value4, v.value5, v.value6));
        }

        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 280, column 45 - line 283, column 37): " + [v3.constructor.name]);
      }

      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 275, column 5 - line 275, column 22): " + [v.constructor.name]);
    };

    return go;
  };
};

var findMax = function () {
  var go = function go($copy_v) {
    return function ($copy_v1) {
      var $tco_var_v = $copy_v;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(v, v1) {
        if (v1 instanceof Leaf) {
          $tco_done = true;
          return v;
        }

        ;

        if (v1 instanceof Two) {
          $tco_var_v = new Data_Maybe.Just({
            key: v1.value1,
            value: v1.value2
          });
          $copy_v1 = v1.value3;
          return;
        }

        ;

        if (v1 instanceof Three) {
          $tco_var_v = new Data_Maybe.Just({
            key: v1.value4,
            value: v1.value5
          });
          $copy_v1 = v1.value6;
          return;
        }

        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 289, column 5 - line 289, column 22): " + [v.constructor.name, v1.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_v, $copy_v1);
      }

      ;
      return $tco_result;
    };
  };

  return go(Data_Maybe.Nothing.value);
}();

var lookupLT = function lookupLT(dictOrd) {
  return function (k) {
    var comp = Data_Ord.compare(dictOrd);

    var go = function go(v) {
      if (v instanceof Leaf) {
        return Data_Maybe.Nothing.value;
      }

      ;

      if (v instanceof Two) {
        var v2 = comp(k)(v.value1);

        if (v2 instanceof Data_Ordering.EQ) {
          return findMax(v.value0);
        }

        ;

        if (v2 instanceof Data_Ordering.GT) {
          return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
            key: v.value1,
            value: v.value2
          })(go(v.value3)));
        }

        ;

        if (v2 instanceof Data_Ordering.LT) {
          return go(v.value0);
        }

        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 242, column 33 - line 245, column 20): " + [v2.constructor.name]);
      }

      ;

      if (v instanceof Three) {
        var v3 = comp(k)(v.value4);

        if (v3 instanceof Data_Ordering.EQ) {
          return findMax(new Two(v.value0, v.value1, v.value2, v.value3));
        }

        ;

        if (v3 instanceof Data_Ordering.GT) {
          return Data_Maybe.Just.create(Data_Maybe.fromMaybe({
            key: v.value4,
            value: v.value5
          })(go(v.value6)));
        }

        ;

        if (v3 instanceof Data_Ordering.LT) {
          return go(new Two(v.value0, v.value1, v.value2, v.value3));
        }

        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 246, column 45 - line 249, column 36): " + [v3.constructor.name]);
      }

      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 241, column 5 - line 241, column 22): " + [v.constructor.name]);
    };

    return go;
  };
};

var eqMap = function eqMap(dictEq) {
  return function (dictEq1) {
    return new Data_Eq.Eq(function (m1) {
      return function (m2) {
        return Data_Eq.eq(Data_Eq.eqArray(Data_Tuple.eqTuple(dictEq)(dictEq1)))(toAscArray(m1))(toAscArray(m2));
      };
    });
  };
};

var ordMap = function ordMap(dictOrd) {
  return function (dictOrd1) {
    return new Data_Ord.Ord(function () {
      return eqMap(dictOrd.Eq0())(dictOrd1.Eq0());
    }, function (m1) {
      return function (m2) {
        return Data_Ord.compare(Data_Ord.ordArray(Data_Tuple.ordTuple(dictOrd)(dictOrd1)))(toAscArray(m1))(toAscArray(m2));
      };
    });
  };
};

var eq1Map = function eq1Map(dictEq) {
  return new Data_Eq.Eq1(function (dictEq1) {
    return Data_Eq.eq(eqMap(dictEq)(dictEq1));
  });
};

var ord1Map = function ord1Map(dictOrd) {
  return new Data_Ord.Ord1(function () {
    return eq1Map(dictOrd.Eq0());
  }, function (dictOrd1) {
    return Data_Ord.compare(ordMap(dictOrd)(dictOrd1));
  });
};

var empty = Leaf.value;

var fromFoldable = function fromFoldable(dictOrd) {
  return function (dictFoldable) {
    return Data_Foldable.foldl(dictFoldable)(function (m) {
      return function (v) {
        return insert(dictOrd)(v.value0)(v.value1)(m);
      };
    })(empty);
  };
};

var filterWithKey = function filterWithKey(dictOrd) {
  return function (predicate) {
    var $758 = fromFoldable(dictOrd)(Data_List_Lazy_Types.foldableList);
    var $759 = Data_List_Lazy.filter(Data_Tuple.uncurry(predicate));
    var $760 = toUnfoldable(Data_List_Lazy_Types.unfoldableList);
    return function ($761) {
      return $758($759($760($761)));
    };
  };
};

var filter = function filter(dictOrd) {
  return function (predicate) {
    return filterWithKey(dictOrd)(Data_Function["const"](predicate));
  };
};

var filterKeys = function filterKeys(dictOrd) {
  return function (predicate) {
    return filterWithKey(dictOrd)(function ($762) {
      return Data_Function["const"](predicate($762));
    });
  };
};

var fromFoldableWithIndex = function fromFoldableWithIndex(dictOrd) {
  return function (dictFoldableWithIndex) {
    return Data_FoldableWithIndex.foldlWithIndex(dictFoldableWithIndex)(function (k) {
      return function (m) {
        return function (v) {
          return insert(dictOrd)(k)(v)(m);
        };
      };
    })(empty);
  };
};

var intersectionWith = function intersectionWith(dictOrd) {
  return function (f) {
    return function (m1) {
      return function (m2) {
        var go = function go($copy_v) {
          return function ($copy_v1) {
            return function ($copy_m) {
              var $tco_var_v = $copy_v;
              var $tco_var_v1 = $copy_v1;
              var $tco_done = false;
              var $tco_result;

              function $tco_loop(v, v1, m) {
                if (v instanceof Data_List_Types.Nil) {
                  $tco_done = true;
                  return m;
                }

                ;

                if (v1 instanceof Data_List_Types.Nil) {
                  $tco_done = true;
                  return m;
                }

                ;

                if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
                  var v2 = Data_Ord.compare(dictOrd)(v.value0.value0)(v1.value0.value0);

                  if (v2 instanceof Data_Ordering.LT) {
                    $tco_var_v = v.value1;
                    $tco_var_v1 = v1;
                    $copy_m = m;
                    return;
                  }

                  ;

                  if (v2 instanceof Data_Ordering.EQ) {
                    $tco_var_v = v.value1;
                    $tco_var_v1 = v1.value1;
                    $copy_m = insert(dictOrd)(v.value0.value0)(f(v.value0.value1)(v1.value0.value1))(m);
                    return;
                  }

                  ;

                  if (v2 instanceof Data_Ordering.GT) {
                    $tco_var_v = v;
                    $tco_var_v1 = v1.value1;
                    $copy_m = m;
                    return;
                  }

                  ;
                  throw new Error("Failed pattern match at Data.Map.Internal (line 641, column 5 - line 644, column 27): " + [v2.constructor.name]);
                }

                ;
                throw new Error("Failed pattern match at Data.Map.Internal (line 638, column 3 - line 638, column 17): " + [v.constructor.name, v1.constructor.name, m.constructor.name]);
              }

              ;

              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_m);
              }

              ;
              return $tco_result;
            };
          };
        };

        return go(toUnfoldable(Data_List_Types.unfoldableList)(m1))(toUnfoldable(Data_List_Types.unfoldableList)(m2))(empty);
      };
    };
  };
};

var intersection = function intersection(dictOrd) {
  return intersectionWith(dictOrd)(Data_Function["const"]);
};

var $$delete = function $$delete(dictOrd) {
  return function (k) {
    return function (m) {
      return Data_Maybe.maybe(m)(Data_Tuple.snd)(pop(dictOrd)(k)(m));
    };
  };
};

var difference = function difference(dictOrd) {
  return function (m1) {
    return function (m2) {
      return Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip($$delete(dictOrd)))(m1)(keys(m2));
    };
  };
};

var checkValid = function checkValid(tree) {
  var allHeights = function allHeights(v) {
    if (v instanceof Leaf) {
      return Control_Applicative.pure(Data_List_Types.applicativeList)(0);
    }

    ;

    if (v instanceof Two) {
      return Data_Functor.map(Data_List_Types.functorList)(function (n) {
        return n + 1 | 0;
      })(Data_Semigroup.append(Data_List_Types.semigroupList)(allHeights(v.value0))(allHeights(v.value3)));
    }

    ;

    if (v instanceof Three) {
      return Data_Functor.map(Data_List_Types.functorList)(function (n) {
        return n + 1 | 0;
      })(Data_Semigroup.append(Data_List_Types.semigroupList)(allHeights(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(allHeights(v.value3))(allHeights(v.value6))));
    }

    ;
    throw new Error("Failed pattern match at Data.Map.Internal (line 188, column 3 - line 188, column 36): " + [v.constructor.name]);
  };

  return Data_List.length(Data_List.nub(Data_Eq.eqInt)(allHeights(tree))) === 1;
};

var asList = Control_Category.identity(Control_Category.categoryFn);
var foldableWithIndexMap = new Data_FoldableWithIndex.FoldableWithIndex(function () {
  return foldableMap;
}, function (dictMonoid) {
  return function (f) {
    return function (m) {
      return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(Data_Tuple.uncurry(f))(asList(toUnfoldable(Data_List_Types.unfoldableList)(m)));
    };
  };
}, function (f) {
  return function (z) {
    return function (m) {
      return Data_Foldable.foldl(Data_List_Types.foldableList)(function () {
        var $763 = Data_Function.flip(f);
        return function ($764) {
          return Data_Tuple.uncurry($763($764));
        };
      }())(z)(asList(toUnfoldable(Data_List_Types.unfoldableList)(m)));
    };
  };
}, function (f) {
  return function (z) {
    return function (m) {
      return Data_Foldable.foldr(Data_List_Types.foldableList)(Data_Tuple.uncurry(f))(z)(asList(toUnfoldable(Data_List_Types.unfoldableList)(m)));
    };
  };
});

var mapMaybeWithKey = function mapMaybeWithKey(dictOrd) {
  return function (f) {
    return Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexMap)(function (k) {
      return function (a) {
        return function (acc) {
          return Data_Maybe.maybe(acc)(function (b) {
            return insert(dictOrd)(k)(b)(acc);
          })(f(k)(a));
        };
      };
    })(empty);
  };
};

var mapMaybe = function mapMaybe(dictOrd) {
  var $765 = mapMaybeWithKey(dictOrd);
  return function ($766) {
    return $765(Data_Function["const"]($766));
  };
};

var traversableWithIndexMap = new Data_TraversableWithIndex.TraversableWithIndex(function () {
  return foldableWithIndexMap;
}, function () {
  return functorWithIndexMap;
}, function () {
  return traversableMap;
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      if (v instanceof Leaf) {
        return Control_Applicative.pure(dictApplicative)(Leaf.value);
      }

      ;

      if (v instanceof Two) {
        return Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(Two.create)(Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexMap)(dictApplicative)(f)(v.value0)))(Control_Applicative.pure(dictApplicative)(v.value1)))(f(v.value1)(v.value2)))(Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexMap)(dictApplicative)(f)(v.value3));
      }

      ;

      if (v instanceof Three) {
        return Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(Three.create)(Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexMap)(dictApplicative)(f)(v.value0)))(Control_Applicative.pure(dictApplicative)(v.value1)))(f(v.value1)(v.value2)))(Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexMap)(dictApplicative)(f)(v.value3)))(Control_Applicative.pure(dictApplicative)(v.value4)))(f(v.value4)(v.value5)))(Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexMap)(dictApplicative)(f)(v.value6));
      }

      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 136, column 1 - line 150, column 40): " + [f.constructor.name, v.constructor.name]);
    };
  };
});

var alter = function alter(dictOrd) {
  return function (f) {
    return function (k) {
      return function (m) {
        var v = f(lookup(dictOrd)(k)(m));

        if (v instanceof Data_Maybe.Nothing) {
          return $$delete(dictOrd)(k)(m);
        }

        ;

        if (v instanceof Data_Maybe.Just) {
          return insert(dictOrd)(k)(v.value0)(m);
        }

        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 549, column 15 - line 551, column 25): " + [v.constructor.name]);
      };
    };
  };
};

var fromFoldableWith = function fromFoldableWith(dictOrd) {
  return function (dictFoldable) {
    return function (f) {
      var combine = function combine(v) {
        return function (v1) {
          if (v1 instanceof Data_Maybe.Just) {
            return Data_Maybe.Just.create(f(v)(v1.value0));
          }

          ;

          if (v1 instanceof Data_Maybe.Nothing) {
            return new Data_Maybe.Just(v);
          }

          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 566, column 3 - line 566, column 38): " + [v.constructor.name, v1.constructor.name]);
        };
      };

      return Data_Foldable.foldl(dictFoldable)(function (m) {
        return function (v) {
          return alter(dictOrd)(combine(v.value1))(v.value0)(m);
        };
      })(empty);
    };
  };
};

var insertWith = function insertWith(dictOrd) {
  return function (f) {
    return function (k) {
      return function (v) {
        return alter(dictOrd)(function () {
          var $767 = Data_Maybe.maybe(v)(Data_Function.flip(f)(v));
          return function ($768) {
            return Data_Maybe.Just.create($767($768));
          };
        }())(k);
      };
    };
  };
};

var unionWith = function unionWith(dictOrd) {
  return function (f) {
    return function (m1) {
      return function (m2) {
        var go = function go(m) {
          return function (v) {
            return alter(dictOrd)(function () {
              var $769 = Data_Maybe.maybe(v.value1)(f(v.value1));
              return function ($770) {
                return Data_Maybe.Just.create($769($770));
              };
            }())(v.value0)(m);
          };
        };

        return Data_Foldable.foldl(Data_List_Types.foldableList)(go)(m2)(toUnfoldable(Data_List_Types.unfoldableList)(m1));
      };
    };
  };
};

var union = function union(dictOrd) {
  return unionWith(dictOrd)(Data_Function["const"]);
};

var semigroupMap = function semigroupMap(dictOrd) {
  return new Data_Semigroup.Semigroup(union(dictOrd));
};

var monoidMap = function monoidMap(dictOrd) {
  return new Data_Monoid.Monoid(function () {
    return semigroupMap(dictOrd);
  }, empty);
};

var submap = function submap(dictOrd) {
  return function (kmin) {
    return function (kmax) {
      return foldSubmap(dictOrd)(monoidMap(dictOrd))(kmin)(kmax)(singleton);
    };
  };
};

var unions = function unions(dictOrd) {
  return function (dictFoldable) {
    return Data_Foldable.foldl(dictFoldable)(union(dictOrd))(empty);
  };
};

var update = function update(dictOrd) {
  return function (f) {
    return function (k) {
      return function (m) {
        return alter(dictOrd)(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
      };
    };
  };
};

module.exports = {
  showTree: showTree,
  empty: empty,
  isEmpty: isEmpty,
  singleton: singleton,
  checkValid: checkValid,
  insert: insert,
  insertWith: insertWith,
  lookup: lookup,
  lookupLE: lookupLE,
  lookupLT: lookupLT,
  lookupGE: lookupGE,
  lookupGT: lookupGT,
  findMin: findMin,
  findMax: findMax,
  foldSubmap: foldSubmap,
  submap: submap,
  fromFoldable: fromFoldable,
  fromFoldableWith: fromFoldableWith,
  fromFoldableWithIndex: fromFoldableWithIndex,
  toUnfoldable: toUnfoldable,
  toUnfoldableUnordered: toUnfoldableUnordered,
  "delete": $$delete,
  pop: pop,
  member: member,
  alter: alter,
  update: update,
  keys: keys,
  values: values,
  union: union,
  unionWith: unionWith,
  unions: unions,
  intersection: intersection,
  intersectionWith: intersectionWith,
  difference: difference,
  isSubmap: isSubmap,
  size: size,
  filterWithKey: filterWithKey,
  filterKeys: filterKeys,
  filter: filter,
  mapMaybeWithKey: mapMaybeWithKey,
  mapMaybe: mapMaybe,
  eq1Map: eq1Map,
  eqMap: eqMap,
  ord1Map: ord1Map,
  ordMap: ordMap,
  showMap: showMap,
  semigroupMap: semigroupMap,
  monoidMap: monoidMap,
  functorMap: functorMap,
  functorWithIndexMap: functorWithIndexMap,
  foldableMap: foldableMap,
  foldableWithIndexMap: foldableWithIndexMap,
  traversableMap: traversableMap,
  traversableWithIndexMap: traversableWithIndexMap
};
},{"../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Category/index.js":"../output/Control.Category/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Foldable/index.js":"../output/Data.Foldable/index.js","../Data.FoldableWithIndex/index.js":"../output/Data.FoldableWithIndex/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.FunctorWithIndex/index.js":"../output/Data.FunctorWithIndex/index.js","../Data.HeytingAlgebra/index.js":"../output/Data.HeytingAlgebra/index.js","../Data.List/index.js":"../output/Data.List/index.js","../Data.List.Lazy/index.js":"../output/Data.List.Lazy/index.js","../Data.List.Lazy.Types/index.js":"../output/Data.List.Lazy.Types/index.js","../Data.List.Types/index.js":"../output/Data.List.Types/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Ordering/index.js":"../output/Data.Ordering/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Show/index.js":"../output/Data.Show/index.js","../Data.Traversable/index.js":"../output/Data.Traversable/index.js","../Data.TraversableWithIndex/index.js":"../output/Data.TraversableWithIndex/index.js","../Data.Tuple/index.js":"../output/Data.Tuple/index.js","../Data.Unfoldable/index.js":"../output/Data.Unfoldable/index.js"}],"../output/Halogen.Data.OrdBox/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var OrdBox = function () {
  function OrdBox(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  ;

  OrdBox.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return new OrdBox(value0, value1, value2);
      };
    };
  };

  return OrdBox;
}();

var unOrdBox = function unOrdBox(v) {
  return v.value2;
};

var mkOrdBox = function mkOrdBox(dictOrd) {
  return OrdBox.create(Data_Eq.eq(dictOrd.Eq0()))(Data_Ord.compare(dictOrd));
};

var eqOrdBox = new Data_Eq.Eq(function (v) {
  return function (v1) {
    return v.value0(v.value2)(v1.value2);
  };
});
var ordOrdBox = new Data_Ord.Ord(function () {
  return eqOrdBox;
}, function (v) {
  return function (v1) {
    return v.value1(v.value2)(v1.value2);
  };
});
module.exports = {
  mkOrdBox: mkOrdBox,
  unOrdBox: unOrdBox,
  eqOrdBox: eqOrdBox,
  ordOrdBox: ordOrdBox
};
},{"../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js"}],"../output/Halogen.Data.Slot/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Map_Internal = require("../Data.Map.Internal/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Halogen_Data_OrdBox = require("../Halogen.Data.OrdBox/index.js");

var SlotStorage = function SlotStorage(x) {
  return x;
};

var slots = function slots(dictCons) {
  return function (dictIsSymbol) {
    return function (dictOrd) {
      return function (sym) {
        return function (v) {
          var key = Data_Symbol.reflectSymbol(dictIsSymbol)(sym);

          var go = function go(v1) {
            return function (val) {
              if (key === v1.value0) {
                return Data_Map_Internal.singleton(Halogen_Data_OrdBox.unOrdBox(v1.value1))(val);
              }

              ;

              if (Data_Boolean.otherwise) {
                return Data_Monoid.mempty(Data_Map_Internal.monoidMap(dictOrd));
              }

              ;
              throw new Error("Failed pattern match at Halogen.Data.Slot (line 117, column 3 - line 119, column 25): " + [v1.constructor.name, val.constructor.name]);
            };
          };

          return Data_Map_Internal.foldSubmap(Data_Tuple.ordTuple(Data_Ord.ordString)(Halogen_Data_OrdBox.ordOrdBox))(Data_Map_Internal.monoidMap(dictOrd))(Data_Maybe.Nothing.value)(Data_Maybe.Nothing.value)(go)(v);
        };
      };
    };
  };
};

var pop = function pop(dictCons) {
  return function (dictIsSymbol) {
    return function (dictOrd) {
      return function (sym) {
        return function (key) {
          return function (v) {
            return Data_Map_Internal.pop(Data_Tuple.ordTuple(Data_Ord.ordString)(Halogen_Data_OrdBox.ordOrdBox))(new Data_Tuple.Tuple(Data_Symbol.reflectSymbol(dictIsSymbol)(sym), Halogen_Data_OrdBox.mkOrdBox(dictOrd)(key)))(v);
          };
        };
      };
    };
  };
};

var lookup = function lookup(dictCons) {
  return function (dictIsSymbol) {
    return function (dictOrd) {
      return function (sym) {
        return function (key) {
          return function (v) {
            return Data_Map_Internal.lookup(Data_Tuple.ordTuple(Data_Ord.ordString)(Halogen_Data_OrdBox.ordOrdBox))(new Data_Tuple.Tuple(Data_Symbol.reflectSymbol(dictIsSymbol)(sym), Halogen_Data_OrdBox.mkOrdBox(dictOrd)(key)))(v);
          };
        };
      };
    };
  };
};

var insert = function insert(dictCons) {
  return function (dictIsSymbol) {
    return function (dictOrd) {
      return function (sym) {
        return function (key) {
          return function (val) {
            return function (v) {
              return Data_Map_Internal.insert(Data_Tuple.ordTuple(Data_Ord.ordString)(Halogen_Data_OrdBox.ordOrdBox))(new Data_Tuple.Tuple(Data_Symbol.reflectSymbol(dictIsSymbol)(sym), Halogen_Data_OrdBox.mkOrdBox(dictOrd)(key)))(val)(v);
            };
          };
        };
      };
    };
  };
};

var foreachSlot = function foreachSlot(dictApplicative) {
  return function (v) {
    return function (k) {
      return Data_Foldable.traverse_(dictApplicative)(Data_Map_Internal.foldableMap)(function ($37) {
        return k($37);
      })(v);
    };
  };
};

var empty = Data_Map_Internal.empty;
module.exports = {
  empty: empty,
  lookup: lookup,
  insert: insert,
  pop: pop,
  slots: slots,
  foreachSlot: foreachSlot
};
},{"../Data.Boolean/index.js":"../output/Data.Boolean/index.js","../Data.Foldable/index.js":"../output/Data.Foldable/index.js","../Data.Map.Internal/index.js":"../output/Data.Map.Internal/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Symbol/index.js":"../output/Data.Symbol/index.js","../Data.Tuple/index.js":"../output/Data.Tuple/index.js","../Halogen.Data.OrdBox/index.js":"../output/Halogen.Data.OrdBox/index.js"}],"../output/Data.Functor.Contravariant/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Data_Functor = require("../Data.Functor/index.js");

var Data_Void = require("../Data.Void/index.js");

var Contravariant = function Contravariant(cmap) {
  this.cmap = cmap;
};

var cmap = function cmap(dict) {
  return dict.cmap;
};

var cmapFlipped = function cmapFlipped(dictContravariant) {
  return function (x) {
    return function (f) {
      return cmap(dictContravariant)(f)(x);
    };
  };
};

var coerce = function coerce(dictContravariant) {
  return function (dictFunctor) {
    return function (a) {
      return Data_Functor.map(dictFunctor)(Data_Void.absurd)(cmap(dictContravariant)(Data_Void.absurd)(a));
    };
  };
};

var imapC = function imapC(dictContravariant) {
  return function (v) {
    return function (f) {
      return cmap(dictContravariant)(f);
    };
  };
};

module.exports = {
  cmap: cmap,
  Contravariant: Contravariant,
  cmapFlipped: cmapFlipped,
  coerce: coerce,
  imapC: imapC
};
},{"../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Void/index.js":"../output/Data.Void/index.js"}],"../output/Data.Const/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Bifoldable = require("../Data.Bifoldable/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Bitraversable = require("../Data.Bitraversable/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_Contravariant = require("../Data.Functor.Contravariant/index.js");

var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");

var Const = function Const(x) {
  return x;
};

var showConst = function showConst(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Const " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semiringConst = function semiringConst(dictSemiring) {
  return dictSemiring;
};

var semigroupoidConst = new Control_Semigroupoid.Semigroupoid(function (v) {
  return function (v1) {
    return v1;
  };
});

var semigroupConst = function semigroupConst(dictSemigroup) {
  return dictSemigroup;
};

var ringConst = function ringConst(dictRing) {
  return dictRing;
};

var ordConst = function ordConst(dictOrd) {
  return dictOrd;
};

var newtypeConst = new Data_Newtype.Newtype(function (n) {
  return n;
}, Const);

var monoidConst = function monoidConst(dictMonoid) {
  return dictMonoid;
};

var heytingAlgebraConst = function heytingAlgebraConst(dictHeytingAlgebra) {
  return dictHeytingAlgebra;
};

var functorConst = new Data_Functor.Functor(function (f) {
  return function (m) {
    return m;
  };
});
var functorWithIndexConst = new Data_FunctorWithIndex.FunctorWithIndex(function () {
  return functorConst;
}, function (v) {
  return function (v1) {
    return v1;
  };
});
var invariantConst = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorConst));
var foldableConst = new Data_Foldable.Foldable(function (dictMonoid) {
  return function (v) {
    return function (v1) {
      return Data_Monoid.mempty(dictMonoid);
    };
  };
}, function (v) {
  return function (z) {
    return function (v1) {
      return z;
    };
  };
}, function (v) {
  return function (z) {
    return function (v1) {
      return z;
    };
  };
});
var foldableWithIndexConst = new Data_FoldableWithIndex.FoldableWithIndex(function () {
  return foldableConst;
}, function (dictMonoid) {
  return function (v) {
    return function (v1) {
      return Data_Monoid.mempty(dictMonoid);
    };
  };
}, function (v) {
  return function (z) {
    return function (v1) {
      return z;
    };
  };
}, function (v) {
  return function (z) {
    return function (v1) {
      return z;
    };
  };
});
var traversableConst = new Data_Traversable.Traversable(function () {
  return foldableConst;
}, function () {
  return functorConst;
}, function (dictApplicative) {
  return function (v) {
    return Control_Applicative.pure(dictApplicative)(v);
  };
}, function (dictApplicative) {
  return function (v) {
    return function (v1) {
      return Control_Applicative.pure(dictApplicative)(v1);
    };
  };
});
var traversableWithIndexConst = new Data_TraversableWithIndex.TraversableWithIndex(function () {
  return foldableWithIndexConst;
}, function () {
  return functorWithIndexConst;
}, function () {
  return traversableConst;
}, function (dictApplicative) {
  return function (v) {
    return function (v1) {
      return Control_Applicative.pure(dictApplicative)(v1);
    };
  };
});

var euclideanRingConst = function euclideanRingConst(dictEuclideanRing) {
  return dictEuclideanRing;
};

var eqConst = function eqConst(dictEq) {
  return dictEq;
};

var eq1Const = function eq1Const(dictEq) {
  return new Data_Eq.Eq1(function (dictEq1) {
    return Data_Eq.eq(eqConst(dictEq));
  });
};

var ord1Const = function ord1Const(dictOrd) {
  return new Data_Ord.Ord1(function () {
    return eq1Const(dictOrd.Eq0());
  }, function (dictOrd1) {
    return Data_Ord.compare(ordConst(dictOrd));
  });
};

var contravariantConst = new Data_Functor_Contravariant.Contravariant(function (v) {
  return function (v1) {
    return v1;
  };
});

var commutativeRingConst = function commutativeRingConst(dictCommutativeRing) {
  return dictCommutativeRing;
};

var boundedConst = function boundedConst(dictBounded) {
  return dictBounded;
};

var booleanAlgebraConst = function booleanAlgebraConst(dictBooleanAlgebra) {
  return dictBooleanAlgebra;
};

var bifunctorConst = new Data_Bifunctor.Bifunctor(function (f) {
  return function (v) {
    return function (v1) {
      return f(v1);
    };
  };
});
var bifoldableConst = new Data_Bifoldable.Bifoldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      return function (v1) {
        return f(v1);
      };
    };
  };
}, function (f) {
  return function (v) {
    return function (z) {
      return function (v1) {
        return f(z)(v1);
      };
    };
  };
}, function (f) {
  return function (v) {
    return function (z) {
      return function (v1) {
        return f(v1)(z);
      };
    };
  };
});
var bitraversableConst = new Data_Bitraversable.Bitraversable(function () {
  return bifoldableConst;
}, function () {
  return bifunctorConst;
}, function (dictApplicative) {
  return function (v) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(Const)(v);
  };
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return function (v1) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Const)(f(v1));
      };
    };
  };
});

var applyConst = function applyConst(dictSemigroup) {
  return new Control_Apply.Apply(function () {
    return functorConst;
  }, function (v) {
    return function (v1) {
      return Data_Semigroup.append(dictSemigroup)(v)(v1);
    };
  });
};

var applicativeConst = function applicativeConst(dictMonoid) {
  return new Control_Applicative.Applicative(function () {
    return applyConst(dictMonoid.Semigroup0());
  }, function (v) {
    return Data_Monoid.mempty(dictMonoid);
  });
};

module.exports = {
  Const: Const,
  newtypeConst: newtypeConst,
  eqConst: eqConst,
  eq1Const: eq1Const,
  ordConst: ordConst,
  ord1Const: ord1Const,
  boundedConst: boundedConst,
  showConst: showConst,
  semigroupoidConst: semigroupoidConst,
  semigroupConst: semigroupConst,
  monoidConst: monoidConst,
  semiringConst: semiringConst,
  ringConst: ringConst,
  euclideanRingConst: euclideanRingConst,
  commutativeRingConst: commutativeRingConst,
  heytingAlgebraConst: heytingAlgebraConst,
  booleanAlgebraConst: booleanAlgebraConst,
  functorConst: functorConst,
  bifunctorConst: bifunctorConst,
  functorWithIndexConst: functorWithIndexConst,
  invariantConst: invariantConst,
  contravariantConst: contravariantConst,
  applyConst: applyConst,
  applicativeConst: applicativeConst,
  foldableConst: foldableConst,
  foldableWithIndexConst: foldableWithIndexConst,
  bifoldableConst: bifoldableConst,
  traversableConst: traversableConst,
  traversableWithIndexConst: traversableWithIndexConst,
  bitraversableConst: bitraversableConst
};
},{"../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Semigroupoid/index.js":"../output/Control.Semigroupoid/index.js","../Data.Bifoldable/index.js":"../output/Data.Bifoldable/index.js","../Data.Bifunctor/index.js":"../output/Data.Bifunctor/index.js","../Data.Bitraversable/index.js":"../output/Data.Bitraversable/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Foldable/index.js":"../output/Data.Foldable/index.js","../Data.FoldableWithIndex/index.js":"../output/Data.FoldableWithIndex/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Functor.Contravariant/index.js":"../output/Data.Functor.Contravariant/index.js","../Data.Functor.Invariant/index.js":"../output/Data.Functor.Invariant/index.js","../Data.FunctorWithIndex/index.js":"../output/Data.FunctorWithIndex/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Show/index.js":"../output/Data.Show/index.js","../Data.Traversable/index.js":"../output/Data.Traversable/index.js","../Data.TraversableWithIndex/index.js":"../output/Data.TraversableWithIndex/index.js"}],"../output/Data.List.NonEmpty/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_List = require("../Data.List/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_NonEmpty = require("../Data.NonEmpty/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Partial_Unsafe = require("../Partial.Unsafe/index.js");

var zipWith = function zipWith(f) {
  return function (v) {
    return function (v1) {
      return new Data_NonEmpty.NonEmpty(f(v.value0)(v1.value0), Data_List.zipWith(f)(v.value1)(v1.value1));
    };
  };
};

var zipWithA = function zipWithA(dictApplicative) {
  return function (f) {
    return function (xs) {
      return function (ys) {
        return Data_Semigroup_Traversable.sequence1(Data_List_Types.traversable1NonEmptyList)(dictApplicative.Apply0())(zipWith(f)(xs)(ys));
      };
    };
  };
};

var zip = zipWith(Data_Tuple.Tuple.create);

var wrappedOperation2 = function wrappedOperation2(name) {
  return function (f) {
    return function (v) {
      return function (v1) {
        var v2 = f(new Data_List_Types.Cons(v.value0, v.value1))(new Data_List_Types.Cons(v1.value0, v1.value1));

        if (v2 instanceof Data_List_Types.Cons) {
          return new Data_NonEmpty.NonEmpty(v2.value0, v2.value1);
        }

        ;

        if (v2 instanceof Data_List_Types.Nil) {
          return Partial_Unsafe.unsafeCrashWith("Impossible: empty list in NonEmptyList " + name);
        }

        ;
        throw new Error("Failed pattern match at Data.List.NonEmpty (line 104, column 3 - line 106, column 81): " + [v2.constructor.name]);
      };
    };
  };
};

var wrappedOperation = function wrappedOperation(name) {
  return function (f) {
    return function (v) {
      var v1 = f(new Data_List_Types.Cons(v.value0, v.value1));

      if (v1 instanceof Data_List_Types.Cons) {
        return new Data_NonEmpty.NonEmpty(v1.value0, v1.value1);
      }

      ;

      if (v1 instanceof Data_List_Types.Nil) {
        return Partial_Unsafe.unsafeCrashWith("Impossible: empty list in NonEmptyList " + name);
      }

      ;
      throw new Error("Failed pattern match at Data.List.NonEmpty (line 91, column 3 - line 93, column 81): " + [v1.constructor.name]);
    };
  };
};

var updateAt = function updateAt(i) {
  return function (a) {
    return function (v) {
      if (i === 0) {
        return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(a, v.value1));
      }

      ;

      if (Data_Boolean.otherwise) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function ($161) {
          return Data_List_Types.NonEmptyList(function (v1) {
            return new Data_NonEmpty.NonEmpty(v.value0, v1);
          }($161));
        })(Data_List.updateAt(i - 1 | 0)(a)(v.value1));
      }

      ;
      throw new Error("Failed pattern match at Data.List.NonEmpty (line 197, column 1 - line 197, column 75): " + [i.constructor.name, a.constructor.name, v.constructor.name]);
    };
  };
};

var unzip = function unzip(ts) {
  return new Data_Tuple.Tuple(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Data_Tuple.fst)(ts), Data_Functor.map(Data_List_Types.functorNonEmptyList)(Data_Tuple.snd)(ts));
};

var unsnoc = function unsnoc(v) {
  var v1 = Data_List.unsnoc(v.value1);

  if (v1 instanceof Data_Maybe.Nothing) {
    return {
      init: Data_List_Types.Nil.value,
      last: v.value0
    };
  }

  ;

  if (v1 instanceof Data_Maybe.Just) {
    return {
      init: new Data_List_Types.Cons(v.value0, v1.value0.init),
      last: v1.value0.last
    };
  }

  ;
  throw new Error("Failed pattern match at Data.List.NonEmpty (line 159, column 35 - line 161, column 50): " + [v1.constructor.name]);
};

var unionBy = function () {
  var $162 = wrappedOperation2("unionBy");
  return function ($163) {
    return $162(Data_List.unionBy($163));
  };
}();

var union = function union(dictEq) {
  return wrappedOperation2("union")(Data_List.union(dictEq));
};

var uncons = function uncons(v) {
  return {
    head: v.value0,
    tail: v.value1
  };
};

var toList = function toList(v) {
  return new Data_List_Types.Cons(v.value0, v.value1);
};

var toUnfoldable = function toUnfoldable(dictUnfoldable) {
  var $164 = Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
      return new Data_Tuple.Tuple(rec.head, rec.tail);
    })(Data_List.uncons(xs));
  });
  return function ($165) {
    return $164(toList($165));
  };
};

var tail = function tail(v) {
  return v.value1;
};

var sortBy = function () {
  var $166 = wrappedOperation("sortBy");
  return function ($167) {
    return $166(Data_List.sortBy($167));
  };
}();

var sort = function sort(dictOrd) {
  return function (xs) {
    return sortBy(Data_Ord.compare(dictOrd))(xs);
  };
};

var snoc = function snoc(v) {
  return function (y) {
    return new Data_NonEmpty.NonEmpty(v.value0, Data_List.snoc(v.value1)(y));
  };
};

var singleton = function () {
  var $168 = Data_NonEmpty.singleton(Data_List_Types.plusList);
  return function ($169) {
    return Data_List_Types.NonEmptyList($168($169));
  };
}();

var snoc$prime = function snoc$prime(v) {
  return function (y) {
    if (v instanceof Data_List_Types.Cons) {
      return new Data_NonEmpty.NonEmpty(v.value0, Data_List.snoc(v.value1)(y));
    }

    ;

    if (v instanceof Data_List_Types.Nil) {
      return singleton(y);
    }

    ;
    throw new Error("Failed pattern match at Data.List.NonEmpty (line 139, column 1 - line 139, column 51): " + [v.constructor.name, y.constructor.name]);
  };
};

var reverse = wrappedOperation("reverse")(Data_List.reverse);

var nubBy = function () {
  var $170 = wrappedOperation("nubBy");
  return function ($171) {
    return $170(Data_List.nubBy($171));
  };
}();

var nub = function nub(dictEq) {
  return wrappedOperation("nub")(Data_List.nub(dictEq));
};

var modifyAt = function modifyAt(i) {
  return function (f) {
    return function (v) {
      if (i === 0) {
        return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(f(v.value0), v.value1));
      }

      ;

      if (Data_Boolean.otherwise) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function ($172) {
          return Data_List_Types.NonEmptyList(function (v1) {
            return new Data_NonEmpty.NonEmpty(v.value0, v1);
          }($172));
        })(Data_List.modifyAt(i - 1 | 0)(f)(v.value1));
      }

      ;
      throw new Error("Failed pattern match at Data.List.NonEmpty (line 202, column 1 - line 202, column 82): " + [i.constructor.name, f.constructor.name, v.constructor.name]);
    };
  };
};

var mapWithIndex = Data_FunctorWithIndex.mapWithIndex(Data_List_Types.functorWithIndexNonEmptyList);

var lift = function lift(f) {
  return function (v) {
    return f(new Data_List_Types.Cons(v.value0, v.value1));
  };
};

var mapMaybe = function mapMaybe($173) {
  return lift(Data_List.mapMaybe($173));
};

var partition = function partition($174) {
  return lift(Data_List.partition($174));
};

var span = function span($175) {
  return lift(Data_List.span($175));
};

var take = function take($176) {
  return lift(Data_List.take($176));
};

var takeWhile = function takeWhile($177) {
  return lift(Data_List.takeWhile($177));
};

var length = function length(v) {
  return 1 + Data_List.length(v.value1) | 0;
};

var last = function last(v) {
  return Data_Maybe.fromMaybe(v.value0)(Data_List.last(v.value1));
};

var intersectBy = function () {
  var $178 = wrappedOperation2("intersectBy");
  return function ($179) {
    return $178(Data_List.intersectBy($179));
  };
}();

var intersect = function intersect(dictEq) {
  return wrappedOperation2("intersect")(Data_List.intersect(dictEq));
};

var insertAt = function insertAt(i) {
  return function (a) {
    return function (v) {
      if (i === 0) {
        return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(a, new Data_List_Types.Cons(v.value0, v.value1)));
      }

      ;

      if (Data_Boolean.otherwise) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function ($180) {
          return Data_List_Types.NonEmptyList(function (v1) {
            return new Data_NonEmpty.NonEmpty(v.value0, v1);
          }($180));
        })(Data_List.insertAt(i - 1 | 0)(a)(v.value1));
      }

      ;
      throw new Error("Failed pattern match at Data.List.NonEmpty (line 192, column 1 - line 192, column 75): " + [i.constructor.name, a.constructor.name, v.constructor.name]);
    };
  };
};

var init = function init(v) {
  return Data_Maybe.maybe(Data_List_Types.Nil.value)(function (v1) {
    return new Data_List_Types.Cons(v.value0, v1);
  })(Data_List.init(v.value1));
};

var index = function index(v) {
  return function (i) {
    if (i === 0) {
      return new Data_Maybe.Just(v.value0);
    }

    ;

    if (Data_Boolean.otherwise) {
      return Data_List.index(v.value1)(i - 1 | 0);
    }

    ;
    throw new Error("Failed pattern match at Data.List.NonEmpty (line 166, column 1 - line 166, column 52): " + [v.constructor.name, i.constructor.name]);
  };
};

var head = function head(v) {
  return v.value0;
};

var groupBy = function () {
  var $181 = wrappedOperation("groupBy");
  return function ($182) {
    return $181(Data_List.groupBy($182));
  };
}();

var group$prime = function group$prime(dictOrd) {
  return wrappedOperation("group'")(Data_List["group'"](dictOrd));
};

var group = function group(dictEq) {
  return wrappedOperation("group")(Data_List.group(dictEq));
};

var fromList = function fromList(v) {
  if (v instanceof Data_List_Types.Nil) {
    return Data_Maybe.Nothing.value;
  }

  ;

  if (v instanceof Data_List_Types.Cons) {
    return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(v.value0, v.value1));
  }

  ;
  throw new Error("Failed pattern match at Data.List.NonEmpty (line 120, column 1 - line 120, column 57): " + [v.constructor.name]);
};

var fromFoldable = function fromFoldable(dictFoldable) {
  var $183 = Data_List.fromFoldable(dictFoldable);
  return function ($184) {
    return fromList($183($184));
  };
};

var foldM = function foldM(dictMonad) {
  return function (f) {
    return function (a) {
      return function (v) {
        return Control_Bind.bind(dictMonad.Bind1())(f(a)(v.value0))(function (a$prime) {
          return Data_List.foldM(dictMonad)(f)(a$prime)(v.value1);
        });
      };
    };
  };
};

var findLastIndex = function findLastIndex(f) {
  return function (v) {
    var v1 = Data_List.findLastIndex(f)(v.value1);

    if (v1 instanceof Data_Maybe.Just) {
      return new Data_Maybe.Just(v1.value0 + 1 | 0);
    }

    ;

    if (v1 instanceof Data_Maybe.Nothing) {
      if (f(v.value0)) {
        return new Data_Maybe.Just(0);
      }

      ;

      if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
      }

      ;
    }

    ;
    throw new Error("Failed pattern match at Data.List.NonEmpty (line 186, column 3 - line 190, column 29): " + [v1.constructor.name]);
  };
};

var findIndex = function findIndex(f) {
  return function (v) {
    if (f(v.value0)) {
      return new Data_Maybe.Just(0);
    }

    ;

    if (Data_Boolean.otherwise) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (v1) {
        return v1 + 1 | 0;
      })(Data_List.findIndex(f)(v.value1));
    }

    ;
    throw new Error("Failed pattern match at Data.List.NonEmpty (line 179, column 1 - line 179, column 69): " + [f.constructor.name, v.constructor.name]);
  };
};

var filterM = function filterM(dictMonad) {
  var $185 = Data_List.filterM(dictMonad);
  return function ($186) {
    return lift($185($186));
  };
};

var filter = function filter($187) {
  return lift(Data_List.filter($187));
};

var elemLastIndex = function elemLastIndex(dictEq) {
  return function (x) {
    return findLastIndex(function (v) {
      return Data_Eq.eq(dictEq)(v)(x);
    });
  };
};

var elemIndex = function elemIndex(dictEq) {
  return function (x) {
    return findIndex(function (v) {
      return Data_Eq.eq(dictEq)(v)(x);
    });
  };
};

var dropWhile = function dropWhile($188) {
  return lift(Data_List.dropWhile($188));
};

var drop = function drop($189) {
  return lift(Data_List.drop($189));
};

var cons$prime = function cons$prime(x) {
  return function (xs) {
    return new Data_NonEmpty.NonEmpty(x, xs);
  };
};

var cons = function cons(y) {
  return function (v) {
    return new Data_NonEmpty.NonEmpty(y, new Data_List_Types.Cons(v.value0, v.value1));
  };
};

var concatMap = Data_Function.flip(Control_Bind.bind(Data_List_Types.bindNonEmptyList));

var concat = function concat(v) {
  return Control_Bind.bind(Data_List_Types.bindNonEmptyList)(v)(Control_Category.identity(Control_Category.categoryFn));
};

var catMaybes = lift(Data_List.catMaybes);

var appendFoldable = function appendFoldable(dictFoldable) {
  return function (v) {
    return function (ys) {
      return new Data_NonEmpty.NonEmpty(v.value0, Data_Semigroup.append(Data_List_Types.semigroupList)(v.value1)(Data_List.fromFoldable(dictFoldable)(ys)));
    };
  };
};

module.exports = {
  toUnfoldable: toUnfoldable,
  fromFoldable: fromFoldable,
  fromList: fromList,
  toList: toList,
  singleton: singleton,
  length: length,
  cons: cons,
  "cons'": cons$prime,
  snoc: snoc,
  "snoc'": snoc$prime,
  head: head,
  last: last,
  tail: tail,
  init: init,
  uncons: uncons,
  unsnoc: unsnoc,
  index: index,
  elemIndex: elemIndex,
  elemLastIndex: elemLastIndex,
  findIndex: findIndex,
  findLastIndex: findLastIndex,
  insertAt: insertAt,
  updateAt: updateAt,
  modifyAt: modifyAt,
  reverse: reverse,
  concat: concat,
  concatMap: concatMap,
  filter: filter,
  filterM: filterM,
  mapMaybe: mapMaybe,
  catMaybes: catMaybes,
  appendFoldable: appendFoldable,
  mapWithIndex: mapWithIndex,
  sort: sort,
  sortBy: sortBy,
  take: take,
  takeWhile: takeWhile,
  drop: drop,
  dropWhile: dropWhile,
  span: span,
  group: group,
  "group'": group$prime,
  groupBy: groupBy,
  partition: partition,
  nub: nub,
  nubBy: nubBy,
  union: union,
  unionBy: unionBy,
  intersect: intersect,
  intersectBy: intersectBy,
  zipWith: zipWith,
  zipWithA: zipWithA,
  zip: zip,
  unzip: unzip,
  foldM: foldM
};
},{"../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Category/index.js":"../output/Control.Category/index.js","../Data.Boolean/index.js":"../output/Data.Boolean/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.FunctorWithIndex/index.js":"../output/Data.FunctorWithIndex/index.js","../Data.List/index.js":"../output/Data.List/index.js","../Data.List.Types/index.js":"../output/Data.List.Types/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.NonEmpty/index.js":"../output/Data.NonEmpty/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Semigroup.Traversable/index.js":"../output/Data.Semigroup.Traversable/index.js","../Data.Tuple/index.js":"../output/Data.Tuple/index.js","../Data.Unfoldable/index.js":"../output/Data.Unfoldable/index.js","../Partial.Unsafe/index.js":"../output/Partial.Unsafe/index.js"}],"../output/Control.Applicative.Free/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Const = require("../Data.Const/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_List_NonEmpty = require("../Data.List.NonEmpty/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_NonEmpty = require("../Data.NonEmpty/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Pure = function () {
  function Pure(value0) {
    this.value0 = value0;
  }

  ;

  Pure.create = function (value0) {
    return new Pure(value0);
  };

  return Pure;
}();

var Lift = function () {
  function Lift(value0) {
    this.value0 = value0;
  }

  ;

  Lift.create = function (value0) {
    return new Lift(value0);
  };

  return Lift;
}();

var Ap = function () {
  function Ap(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Ap.create = function (value0) {
    return function (value1) {
      return new Ap(value0, value1);
    };
  };

  return Ap;
}();

var mkAp = function mkAp(fba) {
  return function (fb) {
    return new Ap(fba, fb);
  };
};

var liftFreeAp = Lift.create;

var goLeft = function goLeft($copy_dictApplicative) {
  return function ($copy_fStack) {
    return function ($copy_valStack) {
      return function ($copy_nat) {
        return function ($copy_func) {
          return function ($copy_count) {
            var $tco_var_dictApplicative = $copy_dictApplicative;
            var $tco_var_fStack = $copy_fStack;
            var $tco_var_valStack = $copy_valStack;
            var $tco_var_nat = $copy_nat;
            var $tco_var_func = $copy_func;
            var $tco_done = false;
            var $tco_result;

            function $tco_loop(dictApplicative, fStack, valStack, nat, func, count) {
              if (func instanceof Pure) {
                $tco_done = true;
                return new Data_Tuple.Tuple(new Data_List_Types.Cons({
                  func: Control_Applicative.pure(dictApplicative)(func.value0),
                  count: count
                }, fStack), valStack);
              }

              ;

              if (func instanceof Lift) {
                $tco_done = true;
                return new Data_Tuple.Tuple(new Data_List_Types.Cons({
                  func: nat(func.value0),
                  count: count
                }, fStack), valStack);
              }

              ;

              if (func instanceof Ap) {
                $tco_var_dictApplicative = dictApplicative;
                $tco_var_fStack = fStack;
                $tco_var_valStack = Data_List_NonEmpty.cons(func.value1)(valStack);
                $tco_var_nat = nat;
                $tco_var_func = func.value0;
                $copy_count = count + 1 | 0;
                return;
              }

              ;
              throw new Error("Failed pattern match at Control.Applicative.Free (line 102, column 41 - line 105, column 81): " + [func.constructor.name]);
            }

            ;

            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_dictApplicative, $tco_var_fStack, $tco_var_valStack, $tco_var_nat, $tco_var_func, $copy_count);
            }

            ;
            return $tco_result;
          };
        };
      };
    };
  };
};

var goApply = function goApply($copy_dictApplicative) {
  return function ($copy_fStack) {
    return function ($copy_vals) {
      return function ($copy_gVal) {
        var $tco_var_dictApplicative = $copy_dictApplicative;
        var $tco_var_fStack = $copy_fStack;
        var $tco_var_vals = $copy_vals;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(dictApplicative, fStack, vals, gVal) {
          if (fStack instanceof Data_List_Types.Nil) {
            $tco_done = true;
            return new Data_Either.Left(gVal);
          }

          ;

          if (fStack instanceof Data_List_Types.Cons) {
            var gRes = Control_Apply.apply(dictApplicative.Apply0())(fStack.value0.func)(gVal);
            var $14 = fStack.value0.count === 1;

            if ($14) {
              if (fStack.value1 instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return new Data_Either.Left(gRes);
              }

              ;
              $tco_var_dictApplicative = dictApplicative;
              $tco_var_fStack = fStack.value1;
              $tco_var_vals = vals;
              $copy_gVal = gRes;
              return;
            }

            ;

            if (vals instanceof Data_List_Types.Nil) {
              $tco_done = true;
              return new Data_Either.Left(gRes);
            }

            ;

            if (vals instanceof Data_List_Types.Cons) {
              $tco_done = true;
              return Data_Either.Right.create(new Data_Tuple.Tuple(new Data_List_Types.Cons({
                func: gRes,
                count: fStack.value0.count - 1 | 0
              }, fStack.value1), new Data_NonEmpty.NonEmpty(vals.value0, vals.value1)));
            }

            ;
            throw new Error("Failed pattern match at Control.Applicative.Free (line 83, column 11 - line 88, column 50): " + [vals.constructor.name]);
          }

          ;
          throw new Error("Failed pattern match at Control.Applicative.Free (line 72, column 3 - line 88, column 50): " + [fStack.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_dictApplicative, $tco_var_fStack, $tco_var_vals, $copy_gVal);
        }

        ;
        return $tco_result;
      };
    };
  };
};

var functorFreeAp = new Data_Functor.Functor(function (f) {
  return function (x) {
    return mkAp(new Pure(f))(x);
  };
});

var foldFreeAp = function foldFreeAp(dictApplicative) {
  return function (nat) {
    return function (z) {
      var go = function go($copy_v) {
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(v) {
          if (v.value1.value0 instanceof Pure) {
            var v1 = goApply(dictApplicative)(v.value0)(v.value1.value1)(Control_Applicative.pure(dictApplicative)(v.value1.value0.value0));

            if (v1 instanceof Data_Either.Left) {
              $tco_done = true;
              return v1.value0;
            }

            ;

            if (v1 instanceof Data_Either.Right) {
              $copy_v = v1.value0;
              return;
            }

            ;
            throw new Error("Failed pattern match at Control.Applicative.Free (line 54, column 17 - line 56, column 24): " + [v1.constructor.name]);
          }

          ;

          if (v.value1.value0 instanceof Lift) {
            var v1 = goApply(dictApplicative)(v.value0)(v.value1.value1)(nat(v.value1.value0.value0));

            if (v1 instanceof Data_Either.Left) {
              $tco_done = true;
              return v1.value0;
            }

            ;

            if (v1 instanceof Data_Either.Right) {
              $copy_v = v1.value0;
              return;
            }

            ;
            throw new Error("Failed pattern match at Control.Applicative.Free (line 57, column 17 - line 59, column 24): " + [v1.constructor.name]);
          }

          ;

          if (v.value1.value0 instanceof Ap) {
            var nextVals = new Data_NonEmpty.NonEmpty(v.value1.value0.value1, v.value1.value1);
            $copy_v = goLeft(dictApplicative)(v.value0)(nextVals)(nat)(v.value1.value0.value0)(1);
            return;
          }

          ;
          throw new Error("Failed pattern match at Control.Applicative.Free (line 53, column 5 - line 62, column 47): " + [v.value1.value0.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
        }

        ;
        return $tco_result;
      };

      return go(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_List_NonEmpty.singleton(z)));
    };
  };
};

var retractFreeAp = function retractFreeAp(dictApplicative) {
  return foldFreeAp(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
};

var applyFreeAp = new Control_Apply.Apply(function () {
  return functorFreeAp;
}, function (fba) {
  return function (fb) {
    return mkAp(fba)(fb);
  };
});
var applicativeFreeAp = new Control_Applicative.Applicative(function () {
  return applyFreeAp;
}, Pure.create);

var hoistFreeAp = function hoistFreeAp(f) {
  return foldFreeAp(applicativeFreeAp)(function ($37) {
    return liftFreeAp(f($37));
  });
};

var analyzeFreeAp = function analyzeFreeAp(dictMonoid) {
  return function (k) {
    var $38 = Data_Newtype.unwrap(Data_Const.newtypeConst);
    var $39 = foldFreeAp(Data_Const.applicativeConst(dictMonoid))(function ($41) {
      return Data_Const.Const(k($41));
    });
    return function ($40) {
      return $38($39($40));
    };
  };
};

module.exports = {
  liftFreeAp: liftFreeAp,
  retractFreeAp: retractFreeAp,
  foldFreeAp: foldFreeAp,
  hoistFreeAp: hoistFreeAp,
  analyzeFreeAp: analyzeFreeAp,
  functorFreeAp: functorFreeAp,
  applyFreeAp: applyFreeAp,
  applicativeFreeAp: applicativeFreeAp
};
},{"../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Category/index.js":"../output/Control.Category/index.js","../Data.Const/index.js":"../output/Data.Const/index.js","../Data.Either/index.js":"../output/Data.Either/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.List.NonEmpty/index.js":"../output/Data.List.NonEmpty/index.js","../Data.List.Types/index.js":"../output/Data.List.Types/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.NonEmpty/index.js":"../output/Data.NonEmpty/index.js","../Data.Tuple/index.js":"../output/Data.Tuple/index.js"}],"../output/Data.CatQueue/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_List = require("../Data.List/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");

var CatQueue = function () {
  function CatQueue(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  CatQueue.create = function (value0) {
    return function (value1) {
      return new CatQueue(value0, value1);
    };
  };

  return CatQueue;
}();

var unsnoc = function unsnoc($copy_v) {
  var $tco_done = false;
  var $tco_result;

  function $tco_loop(v) {
    if (v.value1 instanceof Data_List_Types.Cons) {
      $tco_done = true;
      return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value1.value0, new CatQueue(v.value0, v.value1.value1)));
    }

    ;

    if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
      $tco_done = true;
      return Data_Maybe.Nothing.value;
    }

    ;

    if (v.value1 instanceof Data_List_Types.Nil) {
      $copy_v = new CatQueue(Data_List_Types.Nil.value, Data_List.reverse(v.value0));
      return;
    }

    ;
    throw new Error("Failed pattern match at Data.CatQueue (line 93, column 1 - line 93, column 63): " + [v.constructor.name]);
  }

  ;

  while (!$tco_done) {
    $tco_result = $tco_loop($copy_v);
  }

  ;
  return $tco_result;
};

var uncons = function uncons($copy_v) {
  var $tco_done = false;
  var $tco_result;

  function $tco_loop(v) {
    if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
      $tco_done = true;
      return Data_Maybe.Nothing.value;
    }

    ;

    if (v.value0 instanceof Data_List_Types.Nil) {
      $copy_v = new CatQueue(Data_List.reverse(v.value1), Data_List_Types.Nil.value);
      return;
    }

    ;

    if (v.value0 instanceof Data_List_Types.Cons) {
      $tco_done = true;
      return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0.value0, new CatQueue(v.value0.value1, v.value1)));
    }

    ;
    throw new Error("Failed pattern match at Data.CatQueue (line 83, column 1 - line 83, column 63): " + [v.constructor.name]);
  }

  ;

  while (!$tco_done) {
    $tco_result = $tco_loop($copy_v);
  }

  ;
  return $tco_result;
};

var snoc = function snoc(v) {
  return function (a) {
    return new CatQueue(v.value0, new Data_List_Types.Cons(a, v.value1));
  };
};

var showCatQueue = function showCatQueue(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(CatQueue " + (Data_Show.show(Data_List_Types.showList(dictShow))(v.value0) + (" " + (Data_Show.show(Data_List_Types.showList(dictShow))(v.value1) + ")")));
  });
};

var $$null = function $$null(v) {
  if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
    return true;
  }

  ;
  return false;
};

var length = function length(v) {
  return Data_List.length(v.value0) + Data_List.length(v.value1) | 0;
};

var functorCatQueue = new Data_Functor.Functor(function (f) {
  return function (v) {
    return new CatQueue(Data_Functor.map(Data_List_Types.functorList)(f)(v.value0), Data_Functor.map(Data_List_Types.functorList)(f)(v.value1));
  };
});
var foldableCatQueue = new Data_Foldable.Foldable(function (dictMonoid) {
  return Data_Foldable.foldMapDefaultL(foldableCatQueue)(dictMonoid);
}, function (f) {
  var go = function go($copy_acc) {
    return function ($copy_q) {
      var $tco_var_acc = $copy_acc;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(acc, q) {
        var v = uncons(q);

        if (v instanceof Data_Maybe.Just) {
          $tco_var_acc = f(acc)(v.value0.value0);
          $copy_q = v.value0.value1;
          return;
        }

        ;

        if (v instanceof Data_Maybe.Nothing) {
          $tco_done = true;
          return acc;
        }

        ;
        throw new Error("Failed pattern match at Data.CatQueue (line 148, column 16 - line 150, column 22): " + [v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_acc, $copy_q);
      }

      ;
      return $tco_result;
    };
  };

  return go;
}, function (f) {
  return Data_Foldable.foldrDefault(foldableCatQueue)(f);
});
var semigroupCatQueue = new Data_Semigroup.Semigroup(Data_Foldable.foldl(foldableCatQueue)(snoc));
var empty = new CatQueue(Data_List_Types.Nil.value, Data_List_Types.Nil.value);
var monoidCatQueue = new Data_Monoid.Monoid(function () {
  return semigroupCatQueue;
}, empty);
var singleton = snoc(empty);

var fromFoldable = function fromFoldable(dictFoldable) {
  return function (f) {
    return Data_Foldable.foldMap(dictFoldable)(monoidCatQueue)(singleton)(f);
  };
};

var traversableCatQueue = new Data_Traversable.Traversable(function () {
  return foldableCatQueue;
}, function () {
  return functorCatQueue;
}, function (dictApplicative) {
  return Data_Traversable.sequenceDefault(traversableCatQueue)(dictApplicative);
}, function (dictApplicative) {
  return function (f) {
    var $100 = Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Foldable.foldl(foldableCatQueue)(snoc)(empty));
    var $101 = Data_Foldable.foldl(foldableCatQueue)(function (acc) {
      var $103 = Control_Apply.lift2(dictApplicative.Apply0())(snoc)(acc);
      return function ($104) {
        return $103(f($104));
      };
    })(Control_Applicative.pure(dictApplicative)(empty));
    return function ($102) {
      return $100($101($102));
    };
  };
});
var unfoldable1CatQueue = new Data_Unfoldable1.Unfoldable1(function (f) {
  return function (b) {
    var go = function go($copy_source) {
      return function ($copy_memo) {
        var $tco_var_source = $copy_source;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(source, memo) {
          var v = f(source);

          if (v.value1 instanceof Data_Maybe.Nothing) {
            $tco_done = true;
            return snoc(memo)(v.value0);
          }

          ;

          if (v.value1 instanceof Data_Maybe.Just) {
            $tco_var_source = v.value1.value0;
            $copy_memo = snoc(memo)(v.value0);
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.CatQueue (line 155, column 24 - line 157, column 57): " + [v.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_source, $copy_memo);
        }

        ;
        return $tco_result;
      };
    };

    return go(b)(empty);
  };
});
var unfoldableCatQueue = new Data_Unfoldable.Unfoldable(function () {
  return unfoldable1CatQueue;
}, function (f) {
  return function (b) {
    var go = function go($copy_source) {
      return function ($copy_memo) {
        var $tco_var_source = $copy_source;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(source, memo) {
          var v = f(source);

          if (v instanceof Data_Maybe.Nothing) {
            $tco_done = true;
            return memo;
          }

          ;

          if (v instanceof Data_Maybe.Just) {
            $tco_var_source = v.value0.value1;
            $copy_memo = snoc(memo)(v.value0.value0);
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.CatQueue (line 162, column 24 - line 164, column 57): " + [v.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_source, $copy_memo);
        }

        ;
        return $tco_result;
      };
    };

    return go(b)(empty);
  };
});

var cqEq = function cqEq(dictEq) {
  var elemEq = Data_Eq.eq(dictEq);

  var go = function go($copy_xs) {
    return function ($copy_ys) {
      var $tco_var_xs = $copy_xs;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(xs, ys) {
        var v = uncons(ys);
        var v1 = uncons(xs);

        if (v1 instanceof Data_Maybe.Just && v instanceof Data_Maybe.Just && elemEq(v1.value0.value0)(v.value0.value0)) {
          $tco_var_xs = v1.value0.value1;
          $copy_ys = v.value0.value1;
          return;
        }

        ;

        if (v1 instanceof Data_Maybe.Nothing && v instanceof Data_Maybe.Nothing) {
          $tco_done = true;
          return true;
        }

        ;
        $tco_done = true;
        return false;
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_xs, $copy_ys);
      }

      ;
      return $tco_result;
    };
  };

  return go;
};

var eqCatQueue = function eqCatQueue(dictEq) {
  return new Data_Eq.Eq(cqEq(dictEq));
};

var cqCompare = function cqCompare(dictOrd) {
  var elemCompare = Data_Ord.compare(dictOrd);

  var go = function go($copy_xs) {
    return function ($copy_ys) {
      var $tco_var_xs = $copy_xs;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(xs, ys) {
        var v = uncons(ys);
        var v1 = uncons(xs);

        if (v1 instanceof Data_Maybe.Just && v instanceof Data_Maybe.Just) {
          var v2 = elemCompare(v1.value0.value0)(v.value0.value0);

          if (v2 instanceof Data_Ordering.EQ) {
            $tco_var_xs = v1.value0.value1;
            $copy_ys = v.value0.value1;
            return;
          }

          ;
          $tco_done = true;
          return v2;
        }

        ;

        if (v1 instanceof Data_Maybe.Just && v instanceof Data_Maybe.Nothing) {
          $tco_done = true;
          return Data_Ordering.GT.value;
        }

        ;

        if (v1 instanceof Data_Maybe.Nothing && v instanceof Data_Maybe.Just) {
          $tco_done = true;
          return Data_Ordering.LT.value;
        }

        ;

        if (v1 instanceof Data_Maybe.Nothing && v instanceof Data_Maybe.Nothing) {
          $tco_done = true;
          return Data_Ordering.EQ.value;
        }

        ;
        throw new Error("Failed pattern match at Data.CatQueue (line 118, column 16 - line 125, column 30): " + [v1.constructor.name, v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_xs, $copy_ys);
      }

      ;
      return $tco_result;
    };
  };

  return go;
};

var ordCatQueue = function ordCatQueue(dictOrd) {
  return new Data_Ord.Ord(function () {
    return eqCatQueue(dictOrd.Eq0());
  }, cqCompare(dictOrd));
};

var cons = function cons(a) {
  return function (v) {
    return new CatQueue(new Data_List_Types.Cons(a, v.value0), v.value1);
  };
};

var monadCatQueue = new Control_Monad.Monad(function () {
  return applicativeCatQueue;
}, function () {
  return bindCatQueue;
});
var bindCatQueue = new Control_Bind.Bind(function () {
  return applyCatQueue;
}, Data_Function.flip(Data_Foldable.foldMap(foldableCatQueue)(monoidCatQueue)));
var applyCatQueue = new Control_Apply.Apply(function () {
  return functorCatQueue;
}, Control_Monad.ap(monadCatQueue));
var applicativeCatQueue = new Control_Applicative.Applicative(function () {
  return applyCatQueue;
}, singleton);
var altCatQueue = new Control_Alt.Alt(function () {
  return functorCatQueue;
}, Data_Semigroup.append(semigroupCatQueue));
var plusCatQueue = new Control_Plus.Plus(function () {
  return altCatQueue;
}, empty);
var alternativeCatQueue = new Control_Alternative.Alternative(function () {
  return applicativeCatQueue;
}, function () {
  return plusCatQueue;
});
var monadZeroCatQueue = new Control_MonadZero.MonadZero(function () {
  return alternativeCatQueue;
}, function () {
  return monadCatQueue;
});
var monadPlusCatQueue = new Control_MonadPlus.MonadPlus(function () {
  return monadZeroCatQueue;
});
module.exports = {
  CatQueue: CatQueue,
  empty: empty,
  "null": $$null,
  singleton: singleton,
  length: length,
  cons: cons,
  snoc: snoc,
  uncons: uncons,
  unsnoc: unsnoc,
  fromFoldable: fromFoldable,
  eqCatQueue: eqCatQueue,
  ordCatQueue: ordCatQueue,
  semigroupCatQueue: semigroupCatQueue,
  monoidCatQueue: monoidCatQueue,
  showCatQueue: showCatQueue,
  foldableCatQueue: foldableCatQueue,
  unfoldable1CatQueue: unfoldable1CatQueue,
  unfoldableCatQueue: unfoldableCatQueue,
  traversableCatQueue: traversableCatQueue,
  functorCatQueue: functorCatQueue,
  applyCatQueue: applyCatQueue,
  applicativeCatQueue: applicativeCatQueue,
  bindCatQueue: bindCatQueue,
  monadCatQueue: monadCatQueue,
  altCatQueue: altCatQueue,
  plusCatQueue: plusCatQueue,
  alternativeCatQueue: alternativeCatQueue,
  monadZeroCatQueue: monadZeroCatQueue,
  monadPlusCatQueue: monadPlusCatQueue
};
},{"../Control.Alt/index.js":"../output/Control.Alt/index.js","../Control.Alternative/index.js":"../output/Control.Alternative/index.js","../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Monad/index.js":"../output/Control.Monad/index.js","../Control.MonadPlus/index.js":"../output/Control.MonadPlus/index.js","../Control.MonadZero/index.js":"../output/Control.MonadZero/index.js","../Control.Plus/index.js":"../output/Control.Plus/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Foldable/index.js":"../output/Data.Foldable/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.List/index.js":"../output/Data.List/index.js","../Data.List.Types/index.js":"../output/Data.List.Types/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Ordering/index.js":"../output/Data.Ordering/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Show/index.js":"../output/Data.Show/index.js","../Data.Traversable/index.js":"../output/Data.Traversable/index.js","../Data.Tuple/index.js":"../output/Data.Tuple/index.js","../Data.Unfoldable/index.js":"../output/Data.Unfoldable/index.js","../Data.Unfoldable1/index.js":"../output/Data.Unfoldable1/index.js"}],"../output/Data.CatList/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_CatQueue = require("../Data.CatQueue/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");

var CatNil = function () {
  function CatNil() {}

  ;
  CatNil.value = new CatNil();
  return CatNil;
}();

var CatCons = function () {
  function CatCons(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  CatCons.create = function (value0) {
    return function (value1) {
      return new CatCons(value0, value1);
    };
  };

  return CatCons;
}();

var showCatList = function showCatList(dictShow) {
  return new Data_Show.Show(function (v) {
    if (v instanceof CatNil) {
      return "CatNil";
    }

    ;

    if (v instanceof CatCons) {
      return "(CatList " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(Data_CatQueue.showCatQueue(showCatList(dictShow)))(v.value1) + ")")));
    }

    ;
    throw new Error("Failed pattern match at Data.CatList (line 148, column 1 - line 150, column 71): " + [v.constructor.name]);
  });
};

var $$null = function $$null(v) {
  if (v instanceof CatNil) {
    return true;
  }

  ;
  return false;
};

var link = function link(v) {
  return function (v1) {
    if (v instanceof CatNil) {
      return v1;
    }

    ;

    if (v1 instanceof CatNil) {
      return v;
    }

    ;

    if (v instanceof CatCons) {
      return new CatCons(v.value0, Data_CatQueue.snoc(v.value1)(v1));
    }

    ;
    throw new Error("Failed pattern match at Data.CatList (line 109, column 1 - line 109, column 54): " + [v.constructor.name, v1.constructor.name]);
  };
};

var foldr = function foldr(k) {
  return function (b) {
    return function (q) {
      var foldl = function foldl($copy_v) {
        return function ($copy_c) {
          return function ($copy_v1) {
            var $tco_var_v = $copy_v;
            var $tco_var_c = $copy_c;
            var $tco_done = false;
            var $tco_result;

            function $tco_loop(v, c, v1) {
              if (v1 instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return c;
              }

              ;

              if (v1 instanceof Data_List_Types.Cons) {
                $tco_var_v = v;
                $tco_var_c = v(c)(v1.value0);
                $copy_v1 = v1.value1;
                return;
              }

              ;
              throw new Error("Failed pattern match at Data.CatList (line 125, column 3 - line 125, column 59): " + [v.constructor.name, c.constructor.name, v1.constructor.name]);
            }

            ;

            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_v, $tco_var_c, $copy_v1);
            }

            ;
            return $tco_result;
          };
        };
      };

      var go = function go($copy_xs) {
        return function ($copy_ys) {
          var $tco_var_xs = $copy_xs;
          var $tco_done = false;
          var $tco_result;

          function $tco_loop(xs, ys) {
            var v = Data_CatQueue.uncons(xs);

            if (v instanceof Data_Maybe.Nothing) {
              $tco_done = true;
              return foldl(function (x) {
                return function (i) {
                  return i(x);
                };
              })(b)(ys);
            }

            ;

            if (v instanceof Data_Maybe.Just) {
              $tco_var_xs = v.value0.value1;
              $copy_ys = new Data_List_Types.Cons(k(v.value0.value0), ys);
              return;
            }

            ;
            throw new Error("Failed pattern match at Data.CatList (line 121, column 14 - line 123, column 67): " + [v.constructor.name]);
          }

          ;

          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_xs, $copy_ys);
          }

          ;
          return $tco_result;
        };
      };

      return go(q)(Data_List_Types.Nil.value);
    };
  };
};

var uncons = function uncons(v) {
  if (v instanceof CatNil) {
    return Data_Maybe.Nothing.value;
  }

  ;

  if (v instanceof CatCons) {
    return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, function () {
      var $44 = Data_CatQueue["null"](v.value1);

      if ($44) {
        return CatNil.value;
      }

      ;
      return foldr(link)(CatNil.value)(v.value1);
    }()));
  }

  ;
  throw new Error("Failed pattern match at Data.CatList (line 100, column 1 - line 100, column 61): " + [v.constructor.name]);
};

var foldableCatList = new Data_Foldable.Foldable(function (dictMonoid) {
  return Data_Foldable.foldMapDefaultL(foldableCatList)(dictMonoid);
}, function (f) {
  var go = function go($copy_acc) {
    return function ($copy_q) {
      var $tco_var_acc = $copy_acc;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(acc, q) {
        var v = uncons(q);

        if (v instanceof Data_Maybe.Just) {
          $tco_var_acc = f(acc)(v.value0.value0);
          $copy_q = v.value0.value1;
          return;
        }

        ;

        if (v instanceof Data_Maybe.Nothing) {
          $tco_done = true;
          return acc;
        }

        ;
        throw new Error("Failed pattern match at Data.CatList (line 157, column 16 - line 159, column 22): " + [v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_acc, $copy_q);
      }

      ;
      return $tco_result;
    };
  };

  return go;
}, function (f) {
  return function (s) {
    return function (l) {
      return Data_Foldable.foldrDefault(foldableCatList)(f)(s)(l);
    };
  };
});
var length = Data_Foldable.length(foldableCatList)(Data_Semiring.semiringInt);

var foldMap = function foldMap(dictMonoid) {
  return function (f) {
    return function (v) {
      if (v instanceof CatNil) {
        return Data_Monoid.mempty(dictMonoid);
      }

      ;

      if (v instanceof CatCons) {
        var d = function () {
          var $53 = Data_CatQueue["null"](v.value1);

          if ($53) {
            return CatNil.value;
          }

          ;
          return foldr(link)(CatNil.value)(v.value1);
        }();

        return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(foldMap(dictMonoid)(f)(d));
      }

      ;
      throw new Error("Failed pattern match at Data.CatList (line 135, column 1 - line 135, column 62): " + [f.constructor.name, v.constructor.name]);
    };
  };
};

var empty = CatNil.value;
var append = link;

var cons = function cons(a) {
  return function (cat) {
    return append(new CatCons(a, Data_CatQueue.empty))(cat);
  };
};

var functorCatList = new Data_Functor.Functor(function (v) {
  return function (v1) {
    if (v1 instanceof CatNil) {
      return CatNil.value;
    }

    ;

    if (v1 instanceof CatCons) {
      var d = function () {
        var $58 = Data_CatQueue["null"](v1.value1);

        if ($58) {
          return CatNil.value;
        }

        ;
        return foldr(link)(CatNil.value)(v1.value1);
      }();

      return cons(v(v1.value0))(Data_Functor.map(functorCatList)(v)(d));
    }

    ;
    throw new Error("Failed pattern match at Data.CatList (line 185, column 1 - line 189, column 26): " + [v.constructor.name, v1.constructor.name]);
  };
});

var singleton = function singleton(a) {
  return cons(a)(CatNil.value);
};

var traversableCatList = new Data_Traversable.Traversable(function () {
  return foldableCatList;
}, function () {
  return functorCatList;
}, function (dictApplicative) {
  return function (v) {
    if (v instanceof CatNil) {
      return Control_Applicative.pure(dictApplicative)(CatNil.value);
    }

    ;

    if (v instanceof CatCons) {
      var d = function () {
        var $62 = Data_CatQueue["null"](v.value1);

        if ($62) {
          return CatNil.value;
        }

        ;
        return foldr(link)(CatNil.value)(v.value1);
      }();

      return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(cons)(v.value0))(Data_Traversable.sequence(traversableCatList)(dictApplicative)(d));
    }

    ;
    throw new Error("Failed pattern match at Data.CatList (line 175, column 1 - line 183, column 33): " + [v.constructor.name]);
  };
}, function (dictApplicative) {
  return function (v) {
    return function (v1) {
      if (v1 instanceof CatNil) {
        return Control_Applicative.pure(dictApplicative)(CatNil.value);
      }

      ;

      if (v1 instanceof CatCons) {
        var d = function () {
          var $67 = Data_CatQueue["null"](v1.value1);

          if ($67) {
            return CatNil.value;
          }

          ;
          return foldr(link)(CatNil.value)(v1.value1);
        }();

        return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(cons)(v(v1.value0)))(Data_Traversable.traverse(traversableCatList)(dictApplicative)(v)(d));
      }

      ;
      throw new Error("Failed pattern match at Data.CatList (line 175, column 1 - line 183, column 33): " + [v.constructor.name, v1.constructor.name]);
    };
  };
});
var semigroupCatList = new Data_Semigroup.Semigroup(append);
var monoidCatList = new Data_Monoid.Monoid(function () {
  return semigroupCatList;
}, CatNil.value);
var monadCatList = new Control_Monad.Monad(function () {
  return applicativeCatList;
}, function () {
  return bindCatList;
});
var bindCatList = new Control_Bind.Bind(function () {
  return applyCatList;
}, Data_Function.flip(foldMap(monoidCatList)));
var applyCatList = new Control_Apply.Apply(function () {
  return functorCatList;
}, Control_Monad.ap(monadCatList));
var applicativeCatList = new Control_Applicative.Applicative(function () {
  return applyCatList;
}, singleton);

var fromFoldable = function fromFoldable(dictFoldable) {
  return function (f) {
    return Data_Foldable.foldMap(dictFoldable)(monoidCatList)(singleton)(f);
  };
};

var snoc = function snoc(cat) {
  return function (a) {
    return append(cat)(new CatCons(a, Data_CatQueue.empty));
  };
};

var unfoldable1CatList = new Data_Unfoldable1.Unfoldable1(function (f) {
  return function (b) {
    var go = function go($copy_source) {
      return function ($copy_memo) {
        var $tco_var_source = $copy_source;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(source, memo) {
          var v = f(source);

          if (v.value1 instanceof Data_Maybe.Nothing) {
            $tco_done = true;
            return snoc(memo)(v.value0);
          }

          ;

          if (v.value1 instanceof Data_Maybe.Just) {
            $tco_var_source = v.value1.value0;
            $copy_memo = snoc(memo)(v.value0);
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.CatList (line 171, column 24 - line 173, column 57): " + [v.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_source, $copy_memo);
        }

        ;
        return $tco_result;
      };
    };

    return go(b)(CatNil.value);
  };
});
var unfoldableCatList = new Data_Unfoldable.Unfoldable(function () {
  return unfoldable1CatList;
}, function (f) {
  return function (b) {
    var go = function go($copy_source) {
      return function ($copy_memo) {
        var $tco_var_source = $copy_source;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(source, memo) {
          var v = f(source);

          if (v instanceof Data_Maybe.Nothing) {
            $tco_done = true;
            return memo;
          }

          ;

          if (v instanceof Data_Maybe.Just) {
            $tco_var_source = v.value0.value1;
            $copy_memo = snoc(memo)(v.value0.value0);
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.CatList (line 164, column 24 - line 166, column 57): " + [v.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_source, $copy_memo);
        }

        ;
        return $tco_result;
      };
    };

    return go(b)(CatNil.value);
  };
});
var altCatList = new Control_Alt.Alt(function () {
  return functorCatList;
}, append);
var plusCatList = new Control_Plus.Plus(function () {
  return altCatList;
}, empty);
var alternativeCatList = new Control_Alternative.Alternative(function () {
  return applicativeCatList;
}, function () {
  return plusCatList;
});
var monadZeroCatList = new Control_MonadZero.MonadZero(function () {
  return alternativeCatList;
}, function () {
  return monadCatList;
});
var monadPlusCatList = new Control_MonadPlus.MonadPlus(function () {
  return monadZeroCatList;
});
module.exports = {
  CatNil: CatNil,
  CatCons: CatCons,
  empty: empty,
  "null": $$null,
  singleton: singleton,
  length: length,
  append: append,
  cons: cons,
  snoc: snoc,
  uncons: uncons,
  fromFoldable: fromFoldable,
  semigroupCatList: semigroupCatList,
  monoidCatList: monoidCatList,
  showCatList: showCatList,
  foldableCatList: foldableCatList,
  unfoldableCatList: unfoldableCatList,
  unfoldable1CatList: unfoldable1CatList,
  traversableCatList: traversableCatList,
  functorCatList: functorCatList,
  applyCatList: applyCatList,
  applicativeCatList: applicativeCatList,
  bindCatList: bindCatList,
  monadCatList: monadCatList,
  altCatList: altCatList,
  plusCatList: plusCatList,
  alternativeCatList: alternativeCatList,
  monadZeroCatList: monadZeroCatList,
  monadPlusCatList: monadPlusCatList
};
},{"../Control.Alt/index.js":"../output/Control.Alt/index.js","../Control.Alternative/index.js":"../output/Control.Alternative/index.js","../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Monad/index.js":"../output/Control.Monad/index.js","../Control.MonadPlus/index.js":"../output/Control.MonadPlus/index.js","../Control.MonadZero/index.js":"../output/Control.MonadZero/index.js","../Control.Plus/index.js":"../output/Control.Plus/index.js","../Data.CatQueue/index.js":"../output/Data.CatQueue/index.js","../Data.Foldable/index.js":"../output/Data.Foldable/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.List.Types/index.js":"../output/Data.List.Types/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Semiring/index.js":"../output/Data.Semiring/index.js","../Data.Show/index.js":"../output/Data.Show/index.js","../Data.Traversable/index.js":"../output/Data.Traversable/index.js","../Data.Tuple/index.js":"../output/Data.Tuple/index.js","../Data.Unfoldable/index.js":"../output/Data.Unfoldable/index.js","../Data.Unfoldable1/index.js":"../output/Data.Unfoldable1/index.js"}],"../output/Control.Monad.Free/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Data_CatList = require("../Data.CatList/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var ExpF = function ExpF(x) {
  return x;
};

var Free = function () {
  function Free(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Free.create = function (value0) {
    return function (value1) {
      return new Free(value0, value1);
    };
  };

  return Free;
}();

var Return = function () {
  function Return(value0) {
    this.value0 = value0;
  }

  ;

  Return.create = function (value0) {
    return new Return(value0);
  };

  return Return;
}();

var Bind = function () {
  function Bind(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Bind.create = function (value0) {
    return function (value1) {
      return new Bind(value0, value1);
    };
  };

  return Bind;
}();

var toView = function toView($copy_v) {
  var $tco_done = false;
  var $tco_result;

  function $tco_loop(v) {
    var runExpF = function runExpF(v2) {
      return v2;
    };

    var concatF = function concatF(v2) {
      return function (r) {
        return new Free(v2.value0, Data_Semigroup.append(Data_CatList.semigroupCatList)(v2.value1)(r));
      };
    };

    if (v.value0 instanceof Return) {
      var v2 = Data_CatList.uncons(v.value1);

      if (v2 instanceof Data_Maybe.Nothing) {
        $tco_done = true;
        return new Return(v.value0.value0);
      }

      ;

      if (v2 instanceof Data_Maybe.Just) {
        $copy_v = concatF(runExpF(v2.value0.value0)(v.value0.value0))(v2.value0.value1);
        return;
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.Free (line 227, column 7 - line 231, column 64): " + [v2.constructor.name]);
    }

    ;

    if (v.value0 instanceof Bind) {
      $tco_done = true;
      return new Bind(v.value0.value0, function (a) {
        return concatF(v.value0.value1(a))(v.value1);
      });
    }

    ;
    throw new Error("Failed pattern match at Control.Monad.Free (line 225, column 3 - line 233, column 56): " + [v.value0.constructor.name]);
  }

  ;

  while (!$tco_done) {
    $tco_result = $tco_loop($copy_v);
  }

  ;
  return $tco_result;
};

var runFreeM = function runFreeM(dictFunctor) {
  return function (dictMonadRec) {
    return function (k) {
      var go = function go(f) {
        var v = toView(f);

        if (v instanceof Return) {
          return Data_Functor.map(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(Control_Monad_Rec_Class.Done.create)(Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(v.value0));
        }

        ;

        if (v instanceof Bind) {
          return Data_Functor.map(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(Control_Monad_Rec_Class.Loop.create)(k(Data_Functor.map(dictFunctor)(v.value1)(v.value0)));
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.Free (line 194, column 10 - line 196, column 37): " + [v.constructor.name]);
      };

      return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
    };
  };
};

var runFree = function runFree(dictFunctor) {
  return function (k) {
    var go = function go($copy_f) {
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(f) {
        var v = toView(f);

        if (v instanceof Return) {
          $tco_done = true;
          return v.value0;
        }

        ;

        if (v instanceof Bind) {
          $copy_f = k(Data_Functor.map(dictFunctor)(v.value1)(v.value0));
          return;
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.Free (line 178, column 10 - line 180, column 33): " + [v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($copy_f);
      }

      ;
      return $tco_result;
    };

    return go;
  };
};

var resume$prime = function resume$prime(k) {
  return function (j) {
    return function (f) {
      var v = toView(f);

      if (v instanceof Return) {
        return j(v.value0);
      }

      ;

      if (v instanceof Bind) {
        return k(v.value0)(v.value1);
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.Free (line 213, column 17 - line 215, column 20): " + [v.constructor.name]);
    };
  };
};

var resume = function resume(dictFunctor) {
  return resume$prime(function (g) {
    return function (i) {
      return new Data_Either.Left(Data_Functor.map(dictFunctor)(i)(g));
    };
  })(Data_Either.Right.create);
};

var fromView = function fromView(f) {
  return new Free(f, Data_CatList.empty);
};

var wrap = function wrap(f) {
  return fromView(new Bind(f, Unsafe_Coerce.unsafeCoerce));
};

var suspendF = function suspendF(dictApplicative) {
  return function (f) {
    return wrap(Control_Applicative.pure(dictApplicative)(f));
  };
};

var freeMonad = new Control_Monad.Monad(function () {
  return freeApplicative;
}, function () {
  return freeBind;
});
var freeFunctor = new Data_Functor.Functor(function (k) {
  return function (f) {
    return Control_Bind.bindFlipped(freeBind)(function () {
      var $120 = Control_Applicative.pure(freeApplicative);
      return function ($121) {
        return $120(k($121));
      };
    }())(f);
  };
});
var freeBind = new Control_Bind.Bind(function () {
  return freeApply;
}, function (v) {
  return function (k) {
    return new Free(v.value0, Data_CatList.snoc(v.value1)(k));
  };
});
var freeApply = new Control_Apply.Apply(function () {
  return freeFunctor;
}, Control_Monad.ap(freeMonad));
var freeApplicative = new Control_Applicative.Applicative(function () {
  return freeApply;
}, function ($122) {
  return fromView(Return.create($122));
});

var semigroupFree = function semigroupFree(dictSemigroup) {
  return new Data_Semigroup.Semigroup(Control_Apply.lift2(freeApply)(Data_Semigroup.append(dictSemigroup)));
};

var freeMonadRec = new Control_Monad_Rec_Class.MonadRec(function () {
  return freeMonad;
}, function (k) {
  return function (a) {
    return Control_Bind.bind(freeBind)(k(a))(function (v) {
      if (v instanceof Control_Monad_Rec_Class.Loop) {
        return Control_Monad_Rec_Class.tailRecM(freeMonadRec)(k)(v.value0);
      }

      ;

      if (v instanceof Control_Monad_Rec_Class.Done) {
        return Control_Applicative.pure(freeApplicative)(v.value0);
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.Free (line 86, column 26 - line 88, column 21): " + [v.constructor.name]);
    });
  };
});

var liftF = function liftF(f) {
  return fromView(new Bind(f, function () {
    var $123 = Control_Applicative.pure(freeApplicative);
    return function ($124) {
      return $123($124);
    };
  }()));
};

var freeMonadTrans = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
  return liftF;
});

var monoidFree = function monoidFree(dictMonoid) {
  return new Data_Monoid.Monoid(function () {
    return semigroupFree(dictMonoid.Semigroup0());
  }, Control_Applicative.pure(freeApplicative)(Data_Monoid.mempty(dictMonoid)));
};

var substFree = function substFree(k) {
  var go = function go(f) {
    var v = toView(f);

    if (v instanceof Return) {
      return Control_Applicative.pure(freeApplicative)(v.value0);
    }

    ;

    if (v instanceof Bind) {
      return Control_Bind.bind(freeBind)(k(v.value0))(Data_Functor.map(Data_Functor.functorFn)(go)(v.value1));
    }

    ;
    throw new Error("Failed pattern match at Control.Monad.Free (line 168, column 10 - line 170, column 33): " + [v.constructor.name]);
  };

  return go;
};

var hoistFree = function hoistFree(k) {
  return substFree(function ($125) {
    return liftF(k($125));
  });
};

var foldableFree = function foldableFree(dictFunctor) {
  return function (dictFoldable) {
    return new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
        var go = function () {
          var $126 = resume(dictFunctor);
          return function ($127) {
            return function (v) {
              if (v instanceof Data_Either.Left) {
                return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(go)(v.value0);
              }

              ;

              if (v instanceof Data_Either.Right) {
                return f(v.value0);
              }

              ;
              throw new Error("Failed pattern match at Control.Monad.Free (line 93, column 21 - line 95, column 21): " + [v.constructor.name]);
            }($126($127));
          };
        }();

        return go;
      };
    }, function (f) {
      var go = function go(r) {
        var $128 = resume(dictFunctor);
        return function ($129) {
          return function (v) {
            if (v instanceof Data_Either.Left) {
              return Data_Foldable.foldl(dictFoldable)(go)(r)(v.value0);
            }

            ;

            if (v instanceof Data_Either.Right) {
              return f(r)(v.value0);
            }

            ;
            throw new Error("Failed pattern match at Control.Monad.Free (line 98, column 23 - line 100, column 23): " + [v.constructor.name]);
          }($128($129));
        };
      };

      return go;
    }, function (f) {
      var go = function go(r) {
        var $130 = resume(dictFunctor);
        return function ($131) {
          return function (v) {
            if (v instanceof Data_Either.Left) {
              return Data_Foldable.foldr(dictFoldable)(Data_Function.flip(go))(r)(v.value0);
            }

            ;

            if (v instanceof Data_Either.Right) {
              return f(v.value0)(r);
            }

            ;
            throw new Error("Failed pattern match at Control.Monad.Free (line 103, column 23 - line 105, column 23): " + [v.constructor.name]);
          }($130($131));
        };
      };

      return go;
    });
  };
};

var traversableFree = function traversableFree(dictTraversable) {
  return new Data_Traversable.Traversable(function () {
    return foldableFree(dictTraversable.Functor0())(dictTraversable.Foldable1());
  }, function () {
    return freeFunctor;
  }, function (dictApplicative) {
    return function (tma) {
      return Data_Traversable.traverse(traversableFree(dictTraversable))(dictApplicative)(Control_Category.identity(Control_Category.categoryFn))(tma);
    };
  }, function (dictApplicative) {
    return function (f) {
      var go = function () {
        var $132 = resume(dictTraversable.Functor0());
        return function ($133) {
          return function (v) {
            if (v instanceof Data_Either.Left) {
              return Data_Functor.map(dictApplicative.Apply0().Functor0())(function () {
                var $134 = Control_Bind.join(freeBind);
                return function ($135) {
                  return $134(liftF($135));
                };
              }())(Data_Traversable.traverse(dictTraversable)(dictApplicative)(go)(v.value0));
            }

            ;

            if (v instanceof Data_Either.Right) {
              return Data_Functor.map(dictApplicative.Apply0().Functor0())(Control_Applicative.pure(freeApplicative))(f(v.value0));
            }

            ;
            throw new Error("Failed pattern match at Control.Monad.Free (line 110, column 21 - line 112, column 30): " + [v.constructor.name]);
          }($132($133));
        };
      }();

      return go;
    };
  });
};

var foldFree = function foldFree(dictMonadRec) {
  return function (k) {
    var go = function go(f) {
      var v = toView(f);

      if (v instanceof Return) {
        return Data_Functor.map(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(Control_Monad_Rec_Class.Done.create)(Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(v.value0));
      }

      ;

      if (v instanceof Bind) {
        return Data_Functor.map(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(function ($136) {
          return Control_Monad_Rec_Class.Loop.create(v.value1($136));
        })(k(v.value0));
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.Free (line 158, column 10 - line 160, column 37): " + [v.constructor.name]);
    };

    return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
  };
};

var eqFree = function eqFree(dictFunctor) {
  return function (dictEq1) {
    return function (dictEq) {
      return new Data_Eq.Eq(function (x) {
        return function (y) {
          var v = resume(dictFunctor)(y);
          var v1 = resume(dictFunctor)(x);

          if (v1 instanceof Data_Either.Left && v instanceof Data_Either.Left) {
            return Data_Eq.eq1(dictEq1)(eqFree(dictFunctor)(dictEq1)(dictEq))(v1.value0)(v.value0);
          }

          ;

          if (v1 instanceof Data_Either.Right && v instanceof Data_Either.Right) {
            return Data_Eq.eq(dictEq)(v1.value0)(v.value0);
          }

          ;
          return false;
        };
      });
    };
  };
};

var ordFree = function ordFree(dictFunctor) {
  return function (dictOrd1) {
    return function (dictOrd) {
      return new Data_Ord.Ord(function () {
        return eqFree(dictFunctor)(dictOrd1.Eq10())(dictOrd.Eq0());
      }, function (x) {
        return function (y) {
          var v = resume(dictFunctor)(y);
          var v1 = resume(dictFunctor)(x);

          if (v1 instanceof Data_Either.Left && v instanceof Data_Either.Left) {
            return Data_Ord.compare1(dictOrd1)(ordFree(dictFunctor)(dictOrd1)(dictOrd))(v1.value0)(v.value0);
          }

          ;

          if (v1 instanceof Data_Either.Left) {
            return Data_Ordering.LT.value;
          }

          ;

          if (v instanceof Data_Either.Left) {
            return Data_Ordering.GT.value;
          }

          ;

          if (v1 instanceof Data_Either.Right && v instanceof Data_Either.Right) {
            return Data_Ord.compare(dictOrd)(v1.value0)(v.value0);
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.Free (line 56, column 17 - line 60, column 36): " + [v1.constructor.name, v.constructor.name]);
        };
      });
    };
  };
};

var eq1Free = function eq1Free(dictFunctor) {
  return function (dictEq1) {
    return new Data_Eq.Eq1(function (dictEq) {
      return Data_Eq.eq(eqFree(dictFunctor)(dictEq1)(dictEq));
    });
  };
};

var ord1Free = function ord1Free(dictFunctor) {
  return function (dictOrd1) {
    return function (dictOrd) {
      return new Data_Ord.Ord1(function () {
        return eq1Free(dictFunctor)(dictOrd1.Eq10());
      }, function (dictOrd2) {
        return Data_Ord.compare(ordFree(dictFunctor)(dictOrd1)(dictOrd2));
      });
    };
  };
};

module.exports = {
  suspendF: suspendF,
  wrap: wrap,
  liftF: liftF,
  hoistFree: hoistFree,
  foldFree: foldFree,
  substFree: substFree,
  runFree: runFree,
  runFreeM: runFreeM,
  resume: resume,
  "resume'": resume$prime,
  eqFree: eqFree,
  eq1Free: eq1Free,
  ordFree: ordFree,
  ord1Free: ord1Free,
  freeFunctor: freeFunctor,
  freeBind: freeBind,
  freeApplicative: freeApplicative,
  freeApply: freeApply,
  freeMonad: freeMonad,
  freeMonadTrans: freeMonadTrans,
  freeMonadRec: freeMonadRec,
  foldableFree: foldableFree,
  traversableFree: traversableFree,
  semigroupFree: semigroupFree,
  monoidFree: monoidFree
};
},{"../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Category/index.js":"../output/Control.Category/index.js","../Control.Monad/index.js":"../output/Control.Monad/index.js","../Control.Monad.Rec.Class/index.js":"../output/Control.Monad.Rec.Class/index.js","../Control.Monad.Trans.Class/index.js":"../output/Control.Monad.Trans.Class/index.js","../Data.CatList/index.js":"../output/Data.CatList/index.js","../Data.Either/index.js":"../output/Data.Either/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Foldable/index.js":"../output/Data.Foldable/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Ordering/index.js":"../output/Data.Ordering/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Traversable/index.js":"../output/Data.Traversable/index.js","../Unsafe.Coerce/index.js":"../output/Unsafe.Coerce/index.js"}],"../output/Halogen.Query.ChildQuery/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Data_Functor = require("../Data.Functor/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var ChildQuery = function () {
  function ChildQuery(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  ;

  ChildQuery.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return new ChildQuery(value0, value1, value2);
      };
    };
  };

  return ChildQuery;
}();

var unChildQueryBox = Unsafe_Coerce.unsafeCoerce;
var mkChildQueryBox = Unsafe_Coerce.unsafeCoerce;
var functorChildQuery = new Data_Functor.Functor(function (f) {
  return unChildQueryBox(function (v) {
    return mkChildQueryBox(new ChildQuery(function (dictApplicative) {
      return v.value0(dictApplicative);
    }, v.value1, function ($6) {
      return f(v.value2($6));
    }));
  });
});
module.exports = {
  ChildQuery: ChildQuery,
  mkChildQueryBox: mkChildQueryBox,
  unChildQueryBox: unChildQueryBox,
  functorChildQuery: functorChildQuery
};
},{"../Data.Functor/index.js":"../output/Data.Functor/index.js","../Unsafe.Coerce/index.js":"../output/Unsafe.Coerce/index.js"}],"../output/Control.Monad.Free.Trans/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Exists = require("../Data.Exists/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect_Aff_Class = require("../Effect.Aff.Class/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Bound = function () {
  function Bound(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Bound.create = function (value0) {
    return function (value1) {
      return new Bound(value0, value1);
    };
  };

  return Bound;
}();

var FreeT = function () {
  function FreeT(value0) {
    this.value0 = value0;
  }

  ;

  FreeT.create = function (value0) {
    return new FreeT(value0);
  };

  return FreeT;
}();

var Bind = function () {
  function Bind(value0) {
    this.value0 = value0;
  }

  ;

  Bind.create = function (value0) {
    return new Bind(value0);
  };

  return Bind;
}();

var monadTransFreeT = function monadTransFreeT(dictFunctor) {
  return new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return function (ma) {
      return new FreeT(function (v) {
        return Data_Functor.map(dictMonad.Bind1().Apply0().Functor0())(Data_Either.Left.create)(ma);
      });
    };
  });
};

var freeT = FreeT.create;

var bound = function bound(m) {
  return function (f) {
    return new Bind(Data_Exists.mkExists(new Bound(m, f)));
  };
};

var functorFreeT = function functorFreeT(dictFunctor) {
  return function (dictFunctor1) {
    return new Data_Functor.Functor(function (f) {
      return function (v) {
        if (v instanceof FreeT) {
          return new FreeT(function (v1) {
            return Data_Functor.map(dictFunctor1)(Data_Bifunctor.bimap(Data_Either.bifunctorEither)(f)(Data_Functor.map(dictFunctor)(Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f))))(v.value0(Data_Unit.unit));
          });
        }

        ;

        if (v instanceof Bind) {
          return Data_Exists.runExists(function (v1) {
            return bound(v1.value0)(function () {
              var $123 = Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f);
              return function ($124) {
                return $123(v1.value1($124));
              };
            }());
          })(v.value0);
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 59, column 1 - line 61, column 71): " + [f.constructor.name, v.constructor.name]);
      };
    });
  };
};

var bimapFreeT = function bimapFreeT(dictFunctor) {
  return function (dictFunctor1) {
    return function (nf) {
      return function (nm) {
        return function (v) {
          if (v instanceof Bind) {
            return Data_Exists.runExists(function (v1) {
              return bound(function () {
                var $125 = bimapFreeT(dictFunctor)(dictFunctor1)(nf)(nm);
                return function ($126) {
                  return $125(v1.value0($126));
                };
              }())(function () {
                var $127 = bimapFreeT(dictFunctor)(dictFunctor1)(nf)(nm);
                return function ($128) {
                  return $127(v1.value1($128));
                };
              }());
            })(v.value0);
          }

          ;

          if (v instanceof FreeT) {
            return new FreeT(function (v1) {
              return Data_Functor.map(dictFunctor1)(Data_Functor.map(Data_Either.functorEither)(function () {
                var $129 = Data_Functor.map(dictFunctor)(bimapFreeT(dictFunctor)(dictFunctor1)(nf)(nm));
                return function ($130) {
                  return nf($129($130));
                };
              }()))(nm(v.value0(Data_Unit.unit)));
            });
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 123, column 1 - line 123, column 109): " + [nf.constructor.name, nm.constructor.name, v.constructor.name]);
        };
      };
    };
  };
};

var hoistFreeT = function hoistFreeT(dictFunctor) {
  return function (dictFunctor1) {
    return bimapFreeT(dictFunctor)(dictFunctor1)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var interpret = function interpret(dictFunctor) {
  return function (dictFunctor1) {
    return function (nf) {
      return bimapFreeT(dictFunctor)(dictFunctor1)(nf)(Control_Category.identity(Control_Category.categoryFn));
    };
  };
};

var monadFreeT = function monadFreeT(dictFunctor) {
  return function (dictMonad) {
    return new Control_Monad.Monad(function () {
      return applicativeFreeT(dictFunctor)(dictMonad);
    }, function () {
      return bindFreeT(dictFunctor)(dictMonad);
    });
  };
};

var bindFreeT = function bindFreeT(dictFunctor) {
  return function (dictMonad) {
    return new Control_Bind.Bind(function () {
      return applyFreeT(dictFunctor)(dictMonad);
    }, function (v) {
      return function (f) {
        if (v instanceof Bind) {
          return Data_Exists.runExists(function (v1) {
            return bound(v1.value0)(function (x) {
              return bound(function (v2) {
                return v1.value1(x);
              })(f);
            });
          })(v.value0);
        }

        ;
        return bound(function (v1) {
          return v;
        })(f);
      };
    });
  };
};

var applyFreeT = function applyFreeT(dictFunctor) {
  return function (dictMonad) {
    return new Control_Apply.Apply(function () {
      return functorFreeT(dictFunctor)(dictMonad.Bind1().Apply0().Functor0());
    }, Control_Monad.ap(monadFreeT(dictFunctor)(dictMonad)));
  };
};

var applicativeFreeT = function applicativeFreeT(dictFunctor) {
  return function (dictMonad) {
    return new Control_Applicative.Applicative(function () {
      return applyFreeT(dictFunctor)(dictMonad);
    }, function (a) {
      return new FreeT(function (v) {
        return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(a));
      });
    });
  };
};

var liftFreeT = function liftFreeT(dictFunctor) {
  return function (dictMonad) {
    return function (fa) {
      return new FreeT(function (v) {
        return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(Data_Functor.map(dictFunctor)(Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad)))(fa)));
      });
    };
  };
};

var resume = function resume(dictFunctor) {
  return function (dictMonadRec) {
    var go = function go(v) {
      if (v instanceof FreeT) {
        return Data_Functor.map(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(Control_Monad_Rec_Class.Done.create)(v.value0(Data_Unit.unit));
      }

      ;

      if (v instanceof Bind) {
        return Data_Exists.runExists(function (v1) {
          var v2 = v1.value0(Data_Unit.unit);

          if (v2 instanceof FreeT) {
            return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(v2.value0(Data_Unit.unit))(function (v3) {
              if (v3 instanceof Data_Either.Left) {
                return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Loop(v1.value1(v3.value0)));
              }

              ;

              if (v3 instanceof Data_Either.Right) {
                return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Done(new Data_Either.Right(Data_Functor.map(dictFunctor)(function (h) {
                  return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(h)(v1.value1);
                })(v3.value0))));
              }

              ;
              throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 54, column 20 - line 56, column 67): " + [v3.constructor.name]);
            });
          }

          ;

          if (v2 instanceof Bind) {
            return Data_Exists.runExists(function (v3) {
              return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Loop(Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(v3.value0(Data_Unit.unit))(function (z) {
                return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(v3.value1(z))(v1.value1);
              })));
            })(v2.value0);
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 52, column 5 - line 57, column 98): " + [v2.constructor.name]);
        })(v.value0);
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 49, column 3 - line 49, column 75): " + [v.constructor.name]);
    };

    return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
  };
};

var runFreeT = function runFreeT(dictFunctor) {
  return function (dictMonadRec) {
    return function (interp) {
      var go = function go(v) {
        if (v instanceof Data_Either.Left) {
          return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Done(v.value0));
        }

        ;

        if (v instanceof Data_Either.Right) {
          return Data_Functor.map(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(Control_Monad_Rec_Class.Loop.create)(interp(v.value0));
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 141, column 3 - line 141, column 63): " + [v.constructor.name]);
      };

      return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(Control_Bind.composeKleisliFlipped(dictMonadRec.Monad0().Bind1())(go)(resume(dictFunctor)(dictMonadRec)));
    };
  };
};

var semigroupFreeT = function semigroupFreeT(dictFunctor) {
  return function (dictMonad) {
    return function (dictSemigroup) {
      return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyFreeT(dictFunctor)(dictMonad))(Data_Semigroup.append(dictSemigroup)));
    };
  };
};

var monadAskFreeT = function monadAskFreeT(dictFunctor) {
  return function (dictMonadAsk) {
    return new Control_Monad_Reader_Class.MonadAsk(function () {
      return monadFreeT(dictFunctor)(dictMonadAsk.Monad0());
    }, Control_Monad_Trans_Class.lift(monadTransFreeT(dictFunctor))(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
  };
};

var monadEffectFreeT = function monadEffectFreeT(dictFunctor) {
  return function (dictMonadEffect) {
    return new Effect_Class.MonadEffect(function () {
      return monadFreeT(dictFunctor)(dictMonadEffect.Monad0());
    }, function () {
      var $131 = Control_Monad_Trans_Class.lift(monadTransFreeT(dictFunctor))(dictMonadEffect.Monad0());
      var $132 = Effect_Class.liftEffect(dictMonadEffect);
      return function ($133) {
        return $131($132($133));
      };
    }());
  };
};

var monadAffFreeT = function monadAffFreeT(dictFunctor) {
  return function (dictMonadAff) {
    return new Effect_Aff_Class.MonadAff(function () {
      return monadEffectFreeT(dictFunctor)(dictMonadAff.MonadEffect0());
    }, function () {
      var $134 = Control_Monad_Trans_Class.lift(monadTransFreeT(dictFunctor))(dictMonadAff.MonadEffect0().Monad0());
      var $135 = Effect_Aff_Class.liftAff(dictMonadAff);
      return function ($136) {
        return $134($135($136));
      };
    }());
  };
};

var monadStateFreeT = function monadStateFreeT(dictFunctor) {
  return function (dictMonadState) {
    return new Control_Monad_State_Class.MonadState(function () {
      return monadFreeT(dictFunctor)(dictMonadState.Monad0());
    }, function () {
      var $137 = Control_Monad_Trans_Class.lift(monadTransFreeT(dictFunctor))(dictMonadState.Monad0());
      var $138 = Control_Monad_State_Class.state(dictMonadState);
      return function ($139) {
        return $137($138($139));
      };
    }());
  };
};

var monadTellFreeT = function monadTellFreeT(dictFunctor) {
  return function (dictMonadTell) {
    return new Control_Monad_Writer_Class.MonadTell(function () {
      return monadFreeT(dictFunctor)(dictMonadTell.Monad0());
    }, function () {
      var $140 = Control_Monad_Trans_Class.lift(monadTransFreeT(dictFunctor))(dictMonadTell.Monad0());
      var $141 = Control_Monad_Writer_Class.tell(dictMonadTell);
      return function ($142) {
        return $140($141($142));
      };
    }());
  };
};

var monadThrowFreeT = function monadThrowFreeT(dictFunctor) {
  return function (dictMonadThrow) {
    return new Control_Monad_Error_Class.MonadThrow(function () {
      return monadFreeT(dictFunctor)(dictMonadThrow.Monad0());
    }, function () {
      var $143 = Control_Monad_Trans_Class.lift(monadTransFreeT(dictFunctor))(dictMonadThrow.Monad0());
      var $144 = Control_Monad_Error_Class.throwError(dictMonadThrow);
      return function ($145) {
        return $143($144($145));
      };
    }());
  };
};

var monadRecFreeT = function monadRecFreeT(dictFunctor) {
  return function (dictMonad) {
    return new Control_Monad_Rec_Class.MonadRec(function () {
      return monadFreeT(dictFunctor)(dictMonad);
    }, function (f) {
      var go = function go(s) {
        return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonad))(f(s))(function (v) {
          if (v instanceof Control_Monad_Rec_Class.Loop) {
            return go(v.value0);
          }

          ;

          if (v instanceof Control_Monad_Rec_Class.Done) {
            return Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad))(v.value0);
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 82, column 15 - line 84, column 25): " + [v.constructor.name]);
        });
      };

      return go;
    });
  };
};

var monoidFreeT = function monoidFreeT(dictFunctor) {
  return function (dictMonad) {
    return function (dictMonoid) {
      return new Data_Monoid.Monoid(function () {
        return semigroupFreeT(dictFunctor)(dictMonad)(dictMonoid.Semigroup0());
      }, Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad))(Data_Monoid.mempty(dictMonoid)));
    };
  };
};

var substFreeT = function substFreeT(dictMonad) {
  return function (dictFunctor) {
    return function (fBind) {
      return function (v) {
        if (v instanceof Bind) {
          return Data_Exists.runExists(function (v1) {
            return bound(function () {
              var $146 = substFreeT(dictMonad)(dictFunctor)(fBind);
              return function ($147) {
                return $146(v1.value0($147));
              };
            }())(function () {
              var $148 = substFreeT(dictMonad)(dictFunctor)(fBind);
              return function ($149) {
                return $148(v1.value1($149));
              };
            }());
          })(v.value0);
        }

        ;

        if (v instanceof FreeT) {
          return Control_Bind.join(bindFreeT(dictFunctor)(dictMonad))(new FreeT(function (v1) {
            return Data_Functor.mapFlipped(dictMonad.Bind1().Apply0().Functor0())(v.value0(Data_Unit.unit))(function (v2) {
              if (v2 instanceof Data_Either.Left) {
                return Data_Either.Left.create(Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad))(v2.value0));
              }

              ;

              if (v2 instanceof Data_Either.Right) {
                return Data_Either.Left.create(bound(function (v3) {
                  return fBind(v2.value0);
                })(substFreeT(dictMonad)(dictFunctor)(fBind)));
              }

              ;
              throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 132, column 60 - line 134, column 69): " + [v2.constructor.name]);
            });
          }));
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 130, column 1 - line 130, column 101): " + [fBind.constructor.name, v.constructor.name]);
      };
    };
  };
};

module.exports = {
  freeT: freeT,
  liftFreeT: liftFreeT,
  hoistFreeT: hoistFreeT,
  interpret: interpret,
  bimapFreeT: bimapFreeT,
  substFreeT: substFreeT,
  resume: resume,
  runFreeT: runFreeT,
  functorFreeT: functorFreeT,
  applyFreeT: applyFreeT,
  applicativeFreeT: applicativeFreeT,
  bindFreeT: bindFreeT,
  monadFreeT: monadFreeT,
  monadTransFreeT: monadTransFreeT,
  monadRecFreeT: monadRecFreeT,
  semigroupFreeT: semigroupFreeT,
  monoidFreeT: monoidFreeT,
  monadEffectFreeT: monadEffectFreeT,
  monadAffFreeT: monadAffFreeT,
  monadAskFreeT: monadAskFreeT,
  monadTellFreeT: monadTellFreeT,
  monadStateFreeT: monadStateFreeT,
  monadThrowFreeT: monadThrowFreeT
};
},{"../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Category/index.js":"../output/Control.Category/index.js","../Control.Monad/index.js":"../output/Control.Monad/index.js","../Control.Monad.Error.Class/index.js":"../output/Control.Monad.Error.Class/index.js","../Control.Monad.Reader.Class/index.js":"../output/Control.Monad.Reader.Class/index.js","../Control.Monad.Rec.Class/index.js":"../output/Control.Monad.Rec.Class/index.js","../Control.Monad.State.Class/index.js":"../output/Control.Monad.State.Class/index.js","../Control.Monad.Trans.Class/index.js":"../output/Control.Monad.Trans.Class/index.js","../Control.Monad.Writer.Class/index.js":"../output/Control.Monad.Writer.Class/index.js","../Data.Bifunctor/index.js":"../output/Data.Bifunctor/index.js","../Data.Either/index.js":"../output/Data.Either/index.js","../Data.Exists/index.js":"../output/Data.Exists/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js","../Effect.Aff.Class/index.js":"../output/Effect.Aff.Class/index.js","../Effect.Class/index.js":"../output/Effect.Class/index.js"}],"../output/Data.Profunctor/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Profunctor = function Profunctor(dimap) {
  this.dimap = dimap;
};

var profunctorFn = new Profunctor(function (a2b) {
  return function (c2d) {
    return function (b2c) {
      return function ($9) {
        return c2d(b2c(a2b($9)));
      };
    };
  };
});

var dimap = function dimap(dict) {
  return dict.dimap;
};

var lcmap = function lcmap(dictProfunctor) {
  return function (a2b) {
    return dimap(dictProfunctor)(a2b)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var rmap = function rmap(dictProfunctor) {
  return function (b2c) {
    return dimap(dictProfunctor)(Control_Category.identity(Control_Category.categoryFn))(b2c);
  };
};

var unwrapIso = function unwrapIso(dictProfunctor) {
  return function (dictNewtype) {
    return dimap(dictProfunctor)(Data_Newtype.wrap(dictNewtype))(Data_Newtype.unwrap(dictNewtype));
  };
};

var wrapIso = function wrapIso(dictProfunctor) {
  return function (dictNewtype) {
    return function (v) {
      return dimap(dictProfunctor)(Data_Newtype.unwrap(dictNewtype))(Data_Newtype.wrap(dictNewtype));
    };
  };
};

var arr = function arr(dictCategory) {
  return function (dictProfunctor) {
    return function (f) {
      return rmap(dictProfunctor)(f)(Control_Category.identity(dictCategory));
    };
  };
};

module.exports = {
  dimap: dimap,
  Profunctor: Profunctor,
  lcmap: lcmap,
  rmap: rmap,
  arr: arr,
  unwrapIso: unwrapIso,
  wrapIso: wrapIso,
  profunctorFn: profunctorFn
};
},{"../Control.Category/index.js":"../output/Control.Category/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js"}],"../output/Control.Coroutine/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");

var Control_Monad_Free_Trans = require("../Control.Monad.Free.Trans/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Parallel_Class = require("../Control.Parallel.Class/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Transform = function Transform(x) {
  return x;
};

var Emit = function () {
  function Emit(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Emit.create = function (value0) {
    return function (value1) {
      return new Emit(value0, value1);
    };
  };

  return Emit;
}();

var CoTransform = function () {
  function CoTransform(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  CoTransform.create = function (value0) {
    return function (value1) {
      return new CoTransform(value0, value1);
    };
  };

  return CoTransform;
}();

var Await = function Await(x) {
  return x;
};

var runProcess = function runProcess(dictMonadRec) {
  return Control_Monad_Free_Trans.runFreeT(Data_Identity.functorIdentity)(dictMonadRec)(function () {
    var $176 = Control_Applicative.pure(dictMonadRec.Monad0().Applicative0());
    var $177 = Data_Newtype.unwrap(Data_Identity.newtypeIdentity);
    return function ($178) {
      return $176($177($178));
    };
  }());
};

var profunctorAwait = new Data_Profunctor.Profunctor(function (f) {
  return function (g) {
    return function (v) {
      return Data_Profunctor.dimap(Data_Profunctor.profunctorFn)(f)(g)(v);
    };
  };
});

var loop = function loop(dictFunctor) {
  return function (dictMonad) {
    return function (me) {
      return Control_Monad_Rec_Class.tailRecM(Control_Monad_Free_Trans.monadRecFreeT(dictFunctor)(dictMonad))(function (v) {
        return Data_Functor.map(Control_Monad_Free_Trans.functorFreeT(dictFunctor)(dictMonad.Bind1().Apply0().Functor0()))(Data_Maybe.maybe(new Control_Monad_Rec_Class.Loop(Data_Unit.unit))(Control_Monad_Rec_Class.Done.create))(me);
      })(Data_Unit.unit);
    };
  };
};

var fuseWithL = function fuseWithL(dictFunctor) {
  return function (dictFunctor1) {
    return function (dictFunctor2) {
      return function (dictMonadRec) {
        return function (zap) {
          return function (fs) {
            return function (gs) {
              var go = function go(v) {
                return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(dictMonadRec.Monad0()))(Control_Monad_Except_Trans.ExceptT(Control_Monad_Free_Trans.resume(dictFunctor)(dictMonadRec)(v.value0)))(function (l) {
                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(dictMonadRec.Monad0()))(Control_Monad_Except_Trans.ExceptT(Control_Monad_Free_Trans.resume(dictFunctor1)(dictMonadRec)(v.value1)))(function (r) {
                    return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonadRec.Monad0()))(Data_Functor.map(dictFunctor2)(function (t) {
                      return Control_Monad_Free_Trans.freeT(function (v1) {
                        return go(t);
                      });
                    })(zap(Data_Tuple.Tuple.create)(l)(r)));
                  });
                }));
              };

              return Control_Monad_Free_Trans.freeT(function (v) {
                return go(new Data_Tuple.Tuple(fs, gs));
              });
            };
          };
        };
      };
    };
  };
};

var fuseWith = function fuseWith(dictFunctor) {
  return function (dictFunctor1) {
    return function (dictFunctor2) {
      return function (dictMonadRec) {
        return function (dictParallel) {
          return function (zap) {
            return function (fs) {
              return function (gs) {
                var go = function go(v) {
                  return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(Control_Parallel_Class.sequential(dictParallel)(Control_Apply.apply(dictParallel.Applicative1().Apply0())(Data_Functor.map(dictParallel.Applicative1().Apply0().Functor0())(Control_Apply.lift2(Data_Either.applyEither)(zap(Data_Tuple.Tuple.create)))(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(dictFunctor)(dictMonadRec)(v.value0))))(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(dictFunctor1)(dictMonadRec)(v.value1)))))(function (next) {
                    if (next instanceof Data_Either.Left) {
                      return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Data_Either.Left(next.value0));
                    }

                    ;

                    if (next instanceof Data_Either.Right) {
                      return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Data_Either.Right(Data_Functor.map(dictFunctor2)(function (t) {
                        return Control_Monad_Free_Trans.freeT(function (v1) {
                          return go(t);
                        });
                      })(next.value0)));
                    }

                    ;
                    throw new Error("Failed pattern match at Control.Coroutine (line 79, column 5 - line 81, column 63): " + [next.constructor.name]);
                  });
                };

                return Control_Monad_Free_Trans.freeT(function (v) {
                  return go(new Data_Tuple.Tuple(fs, gs));
                });
              };
            };
          };
        };
      };
    };
  };
};

var functorAwait = new Data_Functor.Functor(Data_Profunctor.rmap(profunctorAwait));

var joinConsumers = function joinConsumers(dictMonadRec) {
  return function (dictParallel) {
    return fuseWith(functorAwait)(functorAwait)(functorAwait)(dictMonadRec)(dictParallel)(function (f) {
      return function (v) {
        return function (v1) {
          return function (v2) {
            return f(v(v2.value0))(v1(v2.value1));
          };
        };
      };
    });
  };
};

var bifunctorTransform = new Data_Bifunctor.Bifunctor(function (f) {
  return function (g) {
    return function (v) {
      var $179 = Data_Bifunctor.bimap(Data_Tuple.bifunctorTuple)(f)(g);
      return function ($180) {
        return $179(v($180));
      };
    };
  };
});
var functorTransform = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorTransform));

var composeTransformers = function composeTransformers(dictMonadRec) {
  return function (dictParallel) {
    return fuseWith(functorTransform)(functorTransform)(functorTransform)(dictMonadRec)(dictParallel)(function (f) {
      return function (v) {
        return function (v1) {
          return function (i) {
            var v2 = v(i);
            var v3 = v1(v2.value0);
            return new Data_Tuple.Tuple(v3.value0, f(v2.value1)(v3.value1));
          };
        };
      };
    });
  };
};

var transform = function transform(dictMonad) {
  return function (f) {
    return Control_Monad_Free_Trans.liftFreeT(functorTransform)(dictMonad)(function (i) {
      return new Data_Tuple.Tuple(f(i), Data_Unit.unit);
    });
  };
};

var transformConsumer = function transformConsumer(dictMonadRec) {
  return function (dictParallel) {
    return fuseWith(functorTransform)(functorAwait)(functorAwait)(dictMonadRec)(dictParallel)(function (f) {
      return function (v) {
        return function (v1) {
          return function (i) {
            var v2 = v(i);
            return f(v2.value1)(v1(v2.value0));
          };
        };
      };
    });
  };
};

var bifunctorEmit = new Data_Bifunctor.Bifunctor(function (f) {
  return function (g) {
    return function (v) {
      return new Emit(f(v.value0), g(v.value1));
    };
  };
});
var functorEmit = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorEmit));

var connect = function connect(dictMonadRec) {
  return function (dictParallel) {
    return fuseWith(functorEmit)(functorAwait)(Data_Identity.functorIdentity)(dictMonadRec)(dictParallel)(function (f) {
      return function (v) {
        return function (v1) {
          return f(v.value1)(v1(v.value0));
        };
      };
    });
  };
};

var emit = function emit(dictMonad) {
  return function (o) {
    return Control_Monad_Free_Trans.liftFreeT(functorEmit)(dictMonad)(new Emit(o, Data_Unit.unit));
  };
};

var joinProducers = function joinProducers(dictMonadRec) {
  return function (dictParallel) {
    return fuseWith(functorEmit)(functorEmit)(functorEmit)(dictMonadRec)(dictParallel)(function (f) {
      return function (v) {
        return function (v1) {
          return new Emit(new Data_Tuple.Tuple(v.value0, v1.value0), f(v.value1)(v1.value1));
        };
      };
    });
  };
};

var producer = function producer(dictMonad) {
  return function (recv) {
    return loop(functorEmit)(dictMonad)(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonad))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorEmit))(dictMonad)(recv))(function (e) {
      if (e instanceof Data_Either.Left) {
        return Data_Functor.voidLeft(Control_Monad_Free_Trans.functorFreeT(functorEmit)(dictMonad.Bind1().Apply0().Functor0()))(emit(dictMonad)(e.value0))(Data_Maybe.Nothing.value);
      }

      ;

      if (e instanceof Data_Either.Right) {
        return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonad))(new Data_Maybe.Just(e.value0));
      }

      ;
      throw new Error("Failed pattern match at Control.Coroutine (line 125, column 3 - line 127, column 29): " + [e.constructor.name]);
    }));
  };
};

var pullFrom = function pullFrom(dictMonadRec) {
  return fuseWithL(functorAwait)(functorEmit)(Data_Identity.functorIdentity)(dictMonadRec)(function (f) {
    return function (v) {
      return function (v1) {
        return Control_Applicative.pure(Data_Identity.applicativeIdentity)(f(v(v1.value0))(v1.value1));
      };
    };
  });
};

var transformProducer = function transformProducer(dictMonadRec) {
  return function (dictParallel) {
    return fuseWith(functorEmit)(functorTransform)(functorEmit)(dictMonadRec)(dictParallel)(function (f) {
      return function (v) {
        return function (v1) {
          var v2 = v1(v.value0);
          return new Emit(v2.value0, f(v.value1)(v2.value1));
        };
      };
    });
  };
};

var bifunctorCoTransform = new Data_Bifunctor.Bifunctor(function (f) {
  return function (g) {
    return function (v) {
      return new CoTransform(f(v.value0), function ($181) {
        return g(v.value1($181));
      });
    };
  };
});
var functorCoTransform = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorCoTransform));

var composeCoTransformers = function composeCoTransformers(dictMonadRec) {
  return function (dictParallel) {
    return fuseWith(functorCoTransform)(functorCoTransform)(functorCoTransform)(dictMonadRec)(dictParallel)(function (f) {
      return function (v) {
        return function (v1) {
          return new CoTransform(v1.value0, function (i) {
            return f(v.value1(i))(v1.value1(v.value0));
          });
        };
      };
    });
  };
};

var cotransform = function cotransform(dictMonad) {
  return function (o) {
    return Control_Monad_Free_Trans.freeT(function (v) {
      return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(new CoTransform(o, Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorCoTransform)(dictMonad)))));
    });
  };
};

var fuseCoTransform = function fuseCoTransform(dictMonadRec) {
  return function (dictParallel) {
    return fuseWith(functorTransform)(functorCoTransform)(Data_Identity.functorIdentity)(dictMonadRec)(dictParallel)(function (f) {
      return function (v) {
        return function (v1) {
          var v2 = v(v1.value0);
          return f(v2.value1)(v1.value1(v2.value0));
        };
      };
    });
  };
};

var transformCoTransformL = function transformCoTransformL(dictMonadRec) {
  return function (dictParallel) {
    return fuseWith(functorTransform)(functorCoTransform)(functorCoTransform)(dictMonadRec)(dictParallel)(function (f) {
      return function (v) {
        return function (v1) {
          return new CoTransform(v1.value0, function (i1) {
            var v2 = v(i1);
            return f(v2.value1)(v1.value1(v2.value0));
          });
        };
      };
    });
  };
};

var transformCoTransformR = function transformCoTransformR(dictMonadRec) {
  return function (dictParallel) {
    return fuseWith(functorCoTransform)(functorTransform)(functorCoTransform)(dictMonadRec)(dictParallel)(function (f) {
      return function (v) {
        return function (v1) {
          var v2 = v1(v.value0);
          return new CoTransform(v2.value0, function ($182) {
            return function (v3) {
              return f(v3)(v2.value1);
            }(v.value1($182));
          });
        };
      };
    });
  };
};

var $$await = function $$await(dictMonad) {
  return Control_Monad_Free_Trans.liftFreeT(functorAwait)(dictMonad)(Control_Category.identity(Control_Category.categoryFn));
};

var consumer = function consumer(dictMonad) {
  return function (send) {
    return loop(functorAwait)(dictMonad)(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorAwait)(dictMonad))($$await(dictMonad))(function (a) {
      return Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorAwait))(dictMonad)(send(a));
    }));
  };
};

module.exports = {
  loop: loop,
  runProcess: runProcess,
  fuseWith: fuseWith,
  fuseWithL: fuseWithL,
  Emit: Emit,
  emit: emit,
  producer: producer,
  Await: Await,
  "await": $$await,
  consumer: consumer,
  Transform: Transform,
  transform: transform,
  CoTransform: CoTransform,
  cotransform: cotransform,
  connect: connect,
  pullFrom: pullFrom,
  transformProducer: transformProducer,
  transformConsumer: transformConsumer,
  composeTransformers: composeTransformers,
  composeCoTransformers: composeCoTransformers,
  fuseCoTransform: fuseCoTransform,
  transformCoTransformL: transformCoTransformL,
  transformCoTransformR: transformCoTransformR,
  joinProducers: joinProducers,
  joinConsumers: joinConsumers,
  bifunctorEmit: bifunctorEmit,
  functorEmit: functorEmit,
  profunctorAwait: profunctorAwait,
  functorAwait: functorAwait,
  bifunctorTransform: bifunctorTransform,
  functorTransform: functorTransform,
  bifunctorCoTransform: bifunctorCoTransform,
  functorCoTransform: functorCoTransform
};
},{"../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Category/index.js":"../output/Control.Category/index.js","../Control.Monad.Except.Trans/index.js":"../output/Control.Monad.Except.Trans/index.js","../Control.Monad.Free.Trans/index.js":"../output/Control.Monad.Free.Trans/index.js","../Control.Monad.Rec.Class/index.js":"../output/Control.Monad.Rec.Class/index.js","../Control.Monad.Trans.Class/index.js":"../output/Control.Monad.Trans.Class/index.js","../Control.Parallel.Class/index.js":"../output/Control.Parallel.Class/index.js","../Data.Bifunctor/index.js":"../output/Data.Bifunctor/index.js","../Data.Either/index.js":"../output/Data.Either/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Identity/index.js":"../output/Data.Identity/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Profunctor/index.js":"../output/Data.Profunctor/index.js","../Data.Tuple/index.js":"../output/Data.Tuple/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js"}],"../output/Effect.AVar/foreign.js":[function(require,module,exports) {
/* globals exports, setTimeout */
"use strict";

var AVar = function () {
  function MutableQueue() {
    this.head = null;
    this.last = null;
    this.size = 0;
  }

  function MutableCell(queue, value) {
    this.queue = queue;
    this.value = value;
    this.next = null;
    this.prev = null;
  }

  function AVar(value) {
    this.draining = false;
    this.error = null;
    this.value = value;
    this.takes = new MutableQueue();
    this.reads = new MutableQueue();
    this.puts = new MutableQueue();
  }

  var EMPTY = {};

  function runEff(eff) {
    try {
      eff();
    } catch (error) {
      setTimeout(function () {
        throw error;
      }, 0);
    }
  }

  function putLast(queue, value) {
    var cell = new MutableCell(queue, value);

    switch (queue.size) {
      case 0:
        queue.head = cell;
        break;

      case 1:
        cell.prev = queue.head;
        queue.head.next = cell;
        queue.last = cell;
        break;

      default:
        cell.prev = queue.last;
        queue.last.next = cell;
        queue.last = cell;
    }

    queue.size++;
    return cell;
  }

  function takeLast(queue) {
    var cell;

    switch (queue.size) {
      case 0:
        return null;

      case 1:
        cell = queue.head;
        queue.head = null;
        break;

      case 2:
        cell = queue.last;
        queue.head.next = null;
        queue.last = null;
        break;

      default:
        cell = queue.last;
        queue.last = cell.prev;
        queue.last.next = null;
    }

    cell.prev = null;
    cell.queue = null;
    queue.size--;
    return cell.value;
  }

  function takeHead(queue) {
    var cell;

    switch (queue.size) {
      case 0:
        return null;

      case 1:
        cell = queue.head;
        queue.head = null;
        break;

      case 2:
        cell = queue.head;
        queue.last.prev = null;
        queue.head = queue.last;
        queue.last = null;
        break;

      default:
        cell = queue.head;
        queue.head = cell.next;
        queue.head.prev = null;
    }

    cell.next = null;
    cell.queue = null;
    queue.size--;
    return cell.value;
  }

  function deleteCell(cell) {
    if (cell.queue === null) {
      return;
    }

    if (cell.queue.last === cell) {
      takeLast(cell.queue);
      return;
    }

    if (cell.queue.head === cell) {
      takeHead(cell.queue);
      return;
    }

    if (cell.prev) {
      cell.prev.next = cell.next;
    }

    if (cell.next) {
      cell.next.prev = cell.prev;
    }

    cell.queue.size--;
    cell.queue = null;
    cell.value = null;
    cell.next = null;
    cell.prev = null;
  }

  function drainVar(util, avar) {
    if (avar.draining) {
      return;
    }

    var ps = avar.puts;
    var ts = avar.takes;
    var rs = avar.reads;
    var p, r, t, value, rsize;
    avar.draining = true;

    while (1) {
      // eslint-disable-line no-constant-condition
      p = null;
      r = null;
      t = null;
      value = avar.value;
      rsize = rs.size;

      if (avar.error !== null) {
        value = util.left(avar.error);

        while (p = takeHead(ps)) {
          // eslint-disable-line no-cond-assign
          runEff(p.cb(value));
        }

        while (r = takeHead(rs)) {
          // eslint-disable-line no-cond-assign
          runEff(r(value));
        }

        while (t = takeHead(ts)) {
          // eslint-disable-line no-cond-assign
          runEff(t(value));
        }

        break;
      } // Process the next put. We do not immediately invoke the callback
      // because we want to preserve ordering. If there are takes/reads
      // we want to run those first.


      if (value === EMPTY && (p = takeHead(ps))) {
        avar.value = value = p.value;
      }

      if (value !== EMPTY) {
        // We go ahead and queue up the next take for the same reasons as
        // above. Invoking the read callbacks can affect the mutable queue.
        t = takeHead(ts); // We only want to process the reads queued up before running these
        // callbacks so we guard on rsize.

        while (rsize-- && (r = takeHead(rs))) {
          runEff(r(util.right(value)));
        }

        if (t !== null) {
          avar.value = EMPTY;
          runEff(t(util.right(value)));
        }
      }

      if (p !== null) {
        runEff(p.cb(util.right(void 0)));
      } // Callbacks could have queued up more items so we need to guard on the
      // actual mutable properties.


      if (avar.value === EMPTY && ps.size === 0 || avar.value !== EMPTY && ts.size === 0) {
        break;
      }
    }

    avar.draining = false;
  }

  AVar.EMPTY = EMPTY;
  AVar.putLast = putLast;
  AVar.takeLast = takeLast;
  AVar.takeHead = takeHead;
  AVar.deleteCell = deleteCell;
  AVar.drainVar = drainVar;
  return AVar;
}();

exports.empty = function () {
  return new AVar(AVar.EMPTY);
};

exports._newVar = function (value) {
  return function () {
    return new AVar(value);
  };
};

exports._killVar = function (util, error, avar) {
  return function () {
    if (avar.error === null) {
      avar.error = error;
      avar.value = AVar.EMPTY;
      AVar.drainVar(util, avar);
    }
  };
};

exports._putVar = function (util, value, avar, cb) {
  return function () {
    var cell = AVar.putLast(avar.puts, {
      cb: cb,
      value: value
    });
    AVar.drainVar(util, avar);
    return function () {
      AVar.deleteCell(cell);
    };
  };
};

exports._takeVar = function (util, avar, cb) {
  return function () {
    var cell = AVar.putLast(avar.takes, cb);
    AVar.drainVar(util, avar);
    return function () {
      AVar.deleteCell(cell);
    };
  };
};

exports._readVar = function (util, avar, cb) {
  return function () {
    var cell = AVar.putLast(avar.reads, cb);
    AVar.drainVar(util, avar);
    return function () {
      AVar.deleteCell(cell);
    };
  };
};

exports._tryPutVar = function (util, value, avar) {
  return function () {
    if (avar.value === AVar.EMPTY && avar.error === null) {
      avar.value = value;
      AVar.drainVar(util, avar);
      return true;
    } else {
      return false;
    }
  };
};

exports._tryTakeVar = function (util, avar) {
  return function () {
    var value = avar.value;

    if (value === AVar.EMPTY) {
      return util.nothing;
    } else {
      avar.value = AVar.EMPTY;
      AVar.drainVar(util, avar);
      return util.just(value);
    }
  };
};

exports._tryReadVar = function (util, avar) {
  return function () {
    if (avar.value === AVar.EMPTY) {
      return util.nothing;
    } else {
      return util.just(avar.value);
    }
  };
};

exports._status = function (util, avar) {
  return function () {
    if (avar.error) {
      return util.killed(avar.error);
    }

    if (avar.value === AVar.EMPTY) {
      return util.empty;
    }

    return util.filled(avar.value);
  };
};
},{}],"../output/Effect.AVar/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Killed = function () {
  function Killed(value0) {
    this.value0 = value0;
  }

  ;

  Killed.create = function (value0) {
    return new Killed(value0);
  };

  return Killed;
}();

var Filled = function () {
  function Filled(value0) {
    this.value0 = value0;
  }

  ;

  Filled.create = function (value0) {
    return new Filled(value0);
  };

  return Filled;
}();

var Empty = function () {
  function Empty() {}

  ;
  Empty.value = new Empty();
  return Empty;
}();

var $$new = $foreign["_newVar"];

var isKilled = function isKilled(v) {
  if (v instanceof Killed) {
    return true;
  }

  ;
  return false;
};

var isFilled = function isFilled(v) {
  if (v instanceof Filled) {
    return true;
  }

  ;
  return false;
};

var isEmpty = function isEmpty(v) {
  if (v instanceof Empty) {
    return true;
  }

  ;
  return false;
};

var ffiUtil = {
  left: Data_Either.Left.create,
  right: Data_Either.Right.create,
  nothing: Data_Maybe.Nothing.value,
  just: Data_Maybe.Just.create,
  killed: Killed.create,
  filled: Filled.create,
  empty: Empty.value
};

var kill = function kill(err) {
  return function (avar) {
    return $foreign["_killVar"](ffiUtil, err, avar);
  };
};

var put = function put(value) {
  return function (avar) {
    return function (cb) {
      return $foreign["_putVar"](ffiUtil, value, avar, cb);
    };
  };
};

var read = function read(avar) {
  return function (cb) {
    return $foreign["_readVar"](ffiUtil, avar, cb);
  };
};

var status = function status(avar) {
  return $foreign["_status"](ffiUtil, avar);
};

var take = function take(avar) {
  return function (cb) {
    return $foreign["_takeVar"](ffiUtil, avar, cb);
  };
};

var tryPut = function tryPut(value) {
  return function (avar) {
    return $foreign["_tryPutVar"](ffiUtil, value, avar);
  };
};

var tryRead = function tryRead(avar) {
  return $foreign["_tryReadVar"](ffiUtil, avar);
};

var tryTake = function tryTake(avar) {
  return $foreign["_tryTakeVar"](ffiUtil, avar);
};

module.exports = {
  Killed: Killed,
  Filled: Filled,
  Empty: Empty,
  "new": $$new,
  take: take,
  tryTake: tryTake,
  put: put,
  tryPut: tryPut,
  read: read,
  tryRead: tryRead,
  kill: kill,
  status: status,
  isEmpty: isEmpty,
  isFilled: isFilled,
  isKilled: isKilled,
  empty: $foreign.empty
};
},{"./foreign.js":"../output/Effect.AVar/foreign.js","../Data.Either/index.js":"../output/Data.Either/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js"}],"../output/Effect.Aff.AVar/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Effect_AVar = require("../Effect.AVar/index.js");

var Effect_Aff = require("../Effect.Aff/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var tryTake = function () {
  var $0 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
  return function ($1) {
    return $0(Effect_AVar.tryTake($1));
  };
}();

var tryRead = function () {
  var $2 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
  return function ($3) {
    return $2(Effect_AVar.tryRead($3));
  };
}();

var tryPut = function tryPut(value) {
  var $4 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
  var $5 = Effect_AVar.tryPut(value);
  return function ($6) {
    return $4($5($6));
  };
};

var take = function take(avar) {
  return Effect_Aff.makeAff(function (k) {
    return function __do() {
      var c = Effect_AVar.take(avar)(k)();
      return Effect_Aff.effectCanceler(c);
    };
  });
};

var status = function () {
  var $7 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
  return function ($8) {
    return $7(Effect_AVar.status($8));
  };
}();

var read = function read(avar) {
  return Effect_Aff.makeAff(function (k) {
    return function __do() {
      var c = Effect_AVar.read(avar)(k)();
      return Effect_Aff.effectCanceler(c);
    };
  });
};

var put = function put(value) {
  return function (avar) {
    return Effect_Aff.makeAff(function (k) {
      return function __do() {
        var c = Effect_AVar.put(value)(avar)(k)();
        return Effect_Aff.effectCanceler(c);
      };
    });
  };
};

var $$new = function () {
  var $9 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
  return function ($10) {
    return $9(Effect_AVar["new"]($10));
  };
}();

var kill = function kill(error) {
  var $11 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
  var $12 = Effect_AVar.kill(error);
  return function ($13) {
    return $11($12($13));
  };
};

var empty = Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_AVar.empty);
module.exports = {
  "new": $$new,
  empty: empty,
  status: status,
  take: take,
  tryTake: tryTake,
  put: put,
  tryPut: tryPut,
  read: read,
  tryRead: tryRead,
  kill: kill
};
},{"../Effect.AVar/index.js":"../output/Effect.AVar/index.js","../Effect.Aff/index.js":"../output/Effect.Aff/index.js","../Effect.Class/index.js":"../output/Effect.Class/index.js"}],"../output/Halogen.Query.EventSource/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Coroutine = require("../Control.Coroutine/index.js");

var Control_Monad_Free_Trans = require("../Control.Monad.Free.Trans/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect = require("../Effect/index.js");

var Effect_Aff = require("../Effect.Aff/index.js");

var Effect_Aff_AVar = require("../Effect.Aff.AVar/index.js");

var Effect_Aff_Class = require("../Effect.Aff.Class/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Effect_Exception = require("../Effect.Exception/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Finalizer = function Finalizer(x) {
  return x;
};

var EventSource = function EventSource(x) {
  return x;
};

var Emitter = function Emitter(x) {
  return x;
};

var semigroupFinalizer = function semigroupFinalizer(dictApply) {
  return new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      return Control_Apply.applySecond(dictApply)(v)(v1);
    };
  });
};

var newtypeEventSource = new Data_Newtype.Newtype(function (n) {
  return n;
}, EventSource);

var monoidFinalizer = function monoidFinalizer(dictApplicative) {
  return new Data_Monoid.Monoid(function () {
    return semigroupFinalizer(dictApplicative.Apply0());
  }, Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
};

var hoistFinalizer = function hoistFinalizer(nat) {
  return function (v) {
    return nat(v);
  };
};

var hoistEmitter = function hoistEmitter(nat) {
  return function (v) {
    return function ($37) {
      return nat(v($37));
    };
  };
};

var hoist = function hoist(dictFunctor) {
  return function (nat) {
    return function (v) {
      return EventSource(Data_Functor.map(dictFunctor)(function (e) {
        return {
          producer: Control_Monad_Free_Trans.hoistFreeT(Control_Coroutine.functorEmit)(dictFunctor)(nat)(e.producer),
          finalizer: hoistFinalizer(nat)(e.finalizer)
        };
      })(nat(v)));
    };
  };
};

var functorEventSource = function functorEventSource(dictFunctor) {
  return new Data_Functor.Functor(function (f) {
    return function (v) {
      return EventSource(Data_Functor.map(dictFunctor)(function (e) {
        return {
          producer: Control_Monad_Free_Trans.interpret(Control_Coroutine.functorEmit)(dictFunctor)(Data_Bifunctor.lmap(Control_Coroutine.bifunctorEmit)(f))(e.producer),
          finalizer: e.finalizer
        };
      })(v));
    };
  });
};

var finalize = function finalize(v) {
  return v;
};

var emit = function emit(v) {
  return function (a) {
    return v(new Data_Either.Left(a));
  };
};

var close = function close(v) {
  return v(new Data_Either.Right(Data_Unit.unit));
};

var affEventSource = function affEventSource(dictMonadAff) {
  return function (recv) {
    return EventSource(Effect_Aff_Class.liftAff(dictMonadAff)(Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff_AVar.empty)(function (inputVar) {
      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff_AVar.empty)(function (finalizeVar) {
        var producer = Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorEmit)(dictMonadAff.MonadEffect0().Monad0()))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorEmit))(dictMonadAff.MonadEffect0().Monad0())(Effect_Aff_Class.liftAff(dictMonadAff)(Control_Bind.bindFlipped(Effect_Aff.bindAff)(Data_Function.flip(Effect_Aff_AVar.put)(finalizeVar))(recv(Data_Function.flip(Effect_Aff_AVar.put)(inputVar))))))(function () {
          return Control_Coroutine.producer(dictMonadAff.MonadEffect0().Monad0())(Effect_Aff_Class.liftAff(dictMonadAff)(Effect_Aff_AVar.take(inputVar)));
        });
        var finalizer = Control_Bind.bind(dictMonadAff.MonadEffect0().Monad0().Bind1())(Effect_Aff_Class.liftAff(dictMonadAff)(Effect_Aff.attempt(Effect_Aff_AVar.take(finalizeVar))))(function (v) {
          if (v instanceof Data_Either.Left) {
            return Control_Applicative.pure(dictMonadAff.MonadEffect0().Monad0().Applicative0())(Data_Unit.unit);
          }

          ;

          if (v instanceof Data_Either.Right) {
            return Effect_Aff_Class.liftAff(dictMonadAff)(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Aff_AVar.kill(Effect_Exception.error("finalized"))(finalizeVar))(function () {
              return finalize(v.value0);
            }));
          }

          ;
          throw new Error("Failed pattern match at Halogen.Query.EventSource (line 71, column 51 - line 75, column 21): " + [v.constructor.name]);
        });
        return Control_Applicative.pure(Effect_Aff.applicativeAff)({
          producer: producer,
          finalizer: finalizer
        });
      });
    })));
  };
};

var effectEventSource = function effectEventSource(dictMonadAff) {
  var $38 = affEventSource(dictMonadAff);
  var $39 = Data_Profunctor.dimap(Data_Profunctor.profunctorFn)(hoistEmitter(Effect_Aff.launchAff_))(function () {
    var $41 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
    var $42 = Data_Functor.map(Effect.functorEffect)(hoistFinalizer(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)));
    return function ($43) {
      return $41($42($43));
    };
  }());
  return function ($40) {
    return $38($39($40));
  };
};

var eventListenerEventSource = function eventListenerEventSource(dictMonadAff) {
  return function (eventType) {
    return function (target) {
      return function (f) {
        return effectEventSource(dictMonadAff)(function (emitter) {
          return function __do() {
            var listener = Web_Event_EventTarget.eventListener(function () {
              var $44 = Data_Maybe.maybe(Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))(emit(emitter));
              return function ($45) {
                return $44(f($45));
              };
            }())();
            Web_Event_EventTarget.addEventListener(eventType)(listener)(false)(target)();
            return Web_Event_EventTarget.removeEventListener(eventType)(listener)(false)(target);
          };
        });
      };
    };
  };
};

module.exports = {
  EventSource: EventSource,
  hoist: hoist,
  affEventSource: affEventSource,
  effectEventSource: effectEventSource,
  eventListenerEventSource: eventListenerEventSource,
  Emitter: Emitter,
  emit: emit,
  close: close,
  hoistEmitter: hoistEmitter,
  Finalizer: Finalizer,
  finalize: finalize,
  hoistFinalizer: hoistFinalizer,
  newtypeEventSource: newtypeEventSource,
  functorEventSource: functorEventSource,
  semigroupFinalizer: semigroupFinalizer,
  monoidFinalizer: monoidFinalizer
};
},{"../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Coroutine/index.js":"../output/Control.Coroutine/index.js","../Control.Monad.Free.Trans/index.js":"../output/Control.Monad.Free.Trans/index.js","../Control.Monad.Trans.Class/index.js":"../output/Control.Monad.Trans.Class/index.js","../Data.Bifunctor/index.js":"../output/Data.Bifunctor/index.js","../Data.Either/index.js":"../output/Data.Either/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Profunctor/index.js":"../output/Data.Profunctor/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js","../Effect/index.js":"../output/Effect/index.js","../Effect.Aff/index.js":"../output/Effect.Aff/index.js","../Effect.Aff.AVar/index.js":"../output/Effect.Aff.AVar/index.js","../Effect.Aff.Class/index.js":"../output/Effect.Aff.Class/index.js","../Effect.Class/index.js":"../output/Effect.Class/index.js","../Effect.Exception/index.js":"../output/Effect.Exception/index.js","../Web.Event.EventTarget/index.js":"../output/Web.Event.EventTarget/index.js"}],"../output/Halogen.Query.HalogenM/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Applicative_Free = require("../Control.Applicative.Free/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Free = require("../Control.Monad.Free/index.js");

var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");

var Control_Parallel_Class = require("../Control.Parallel.Class/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Map_Internal = require("../Data.Map.Internal/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect_Aff_Class = require("../Effect.Aff.Class/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Halogen_Data_Slot = require("../Halogen.Data.Slot/index.js");

var Halogen_Query_ChildQuery = require("../Halogen.Query.ChildQuery/index.js");

var Halogen_Query_EventSource = require("../Halogen.Query.EventSource/index.js");

var SubscriptionId = function SubscriptionId(x) {
  return x;
};

var ForkId = function ForkId(x) {
  return x;
};

var State = function () {
  function State(value0) {
    this.value0 = value0;
  }

  ;

  State.create = function (value0) {
    return new State(value0);
  };

  return State;
}();

var Subscribe = function () {
  function Subscribe(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Subscribe.create = function (value0) {
    return function (value1) {
      return new Subscribe(value0, value1);
    };
  };

  return Subscribe;
}();

var Unsubscribe = function () {
  function Unsubscribe(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Unsubscribe.create = function (value0) {
    return function (value1) {
      return new Unsubscribe(value0, value1);
    };
  };

  return Unsubscribe;
}();

var Lift = function () {
  function Lift(value0) {
    this.value0 = value0;
  }

  ;

  Lift.create = function (value0) {
    return new Lift(value0);
  };

  return Lift;
}();

var ChildQuery = function () {
  function ChildQuery(value0) {
    this.value0 = value0;
  }

  ;

  ChildQuery.create = function (value0) {
    return new ChildQuery(value0);
  };

  return ChildQuery;
}();

var Raise = function () {
  function Raise(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Raise.create = function (value0) {
    return function (value1) {
      return new Raise(value0, value1);
    };
  };

  return Raise;
}();

var Par = function () {
  function Par(value0) {
    this.value0 = value0;
  }

  ;

  Par.create = function (value0) {
    return new Par(value0);
  };

  return Par;
}();

var Fork = function () {
  function Fork(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Fork.create = function (value0) {
    return function (value1) {
      return new Fork(value0, value1);
    };
  };

  return Fork;
}();

var Kill = function () {
  function Kill(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Kill.create = function (value0) {
    return function (value1) {
      return new Kill(value0, value1);
    };
  };

  return Kill;
}();

var GetRef = function () {
  function GetRef(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  GetRef.create = function (value0) {
    return function (value1) {
      return new GetRef(value0, value1);
    };
  };

  return GetRef;
}();

var HalogenAp = function HalogenAp(x) {
  return x;
};

var HalogenM = function HalogenM(x) {
  return x;
};

var unsubscribe = function unsubscribe(sid) {
  return HalogenM(Control_Monad_Free.liftF(new Unsubscribe(sid, Data_Unit.unit)));
};

var subscribe$prime = function subscribe$prime(esc) {
  return HalogenM(Control_Monad_Free.liftF(new Subscribe(esc, Data_Function["const"](Data_Unit.unit))));
};

var subscribe = function subscribe(es) {
  return HalogenM(Control_Monad_Free.liftF(new Subscribe(function (v) {
    return es;
  }, Control_Category.identity(Control_Category.categoryFn))));
};

var semigroupHalogenM = function semigroupHalogenM(dictSemigroup) {
  return Control_Monad_Free.semigroupFree(dictSemigroup);
};

var raise = function raise(o) {
  return HalogenM(Control_Monad_Free.liftF(new Raise(o, Data_Unit.unit)));
};

var queryAll = function queryAll(dictCons) {
  return function (dictIsSymbol) {
    return function (dictOrd) {
      return function (label) {
        return function (q) {
          var catMapMaybes = function catMapMaybes(dictOrd1) {
            return Data_FoldableWithIndex.foldrWithIndex(Data_Map_Internal.foldableWithIndexMap)(function (k) {
              return function (v) {
                return function (acc) {
                  return Data_Maybe.maybe(acc)(Data_Function.flip(Data_Map_Internal.insert(dictOrd1)(k))(acc))(v);
                };
              };
            })(Data_Map_Internal.empty);
          };

          return HalogenM(Control_Monad_Free.liftF(ChildQuery.create(Halogen_Query_ChildQuery.mkChildQueryBox(new Halogen_Query_ChildQuery.ChildQuery(function (dictApplicative) {
            return function (k) {
              var $131 = Data_Functor.map(dictApplicative.Apply0().Functor0())(catMapMaybes(dictOrd));
              var $132 = Data_Traversable.traverse(Data_Map_Internal.traversableMap)(dictApplicative)(k);
              var $133 = Halogen_Data_Slot.slots()(dictIsSymbol)(dictOrd)(label);
              return function ($134) {
                return $131($132($133($134)));
              };
            };
          }, q, Control_Category.identity(Control_Category.categoryFn))))));
        };
      };
    };
  };
};

var query = function query(dictCons) {
  return function (dictIsSymbol) {
    return function (dictOrd) {
      return function (label) {
        return function (p) {
          return function (q) {
            return HalogenM(Control_Monad_Free.liftF(ChildQuery.create(Halogen_Query_ChildQuery.mkChildQueryBox(new Halogen_Query_ChildQuery.ChildQuery(function (dictApplicative) {
              return function (k) {
                var $135 = Data_Maybe.maybe(Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value))(k);
                var $136 = Halogen_Data_Slot.lookup()(dictIsSymbol)(dictOrd)(label)(p);
                return function ($137) {
                  return $135($136($137));
                };
              };
            }, q, Control_Category.identity(Control_Category.categoryFn))))));
          };
        };
      };
    };
  };
};

var ordSubscriptionId = Data_Ord.ordInt;
var ordForkId = Data_Ord.ordInt;
var newtypeHalogenAp = new Data_Newtype.Newtype(function (n) {
  return n;
}, HalogenAp);

var monoidHalogenM = function monoidHalogenM(dictMonoid) {
  return Control_Monad_Free.monoidFree(dictMonoid);
};

var monadTransHalogenM = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
  return function ($138) {
    return HalogenM(Control_Monad_Free.liftF(Lift.create($138)));
  };
});
var monadHalogenM = Control_Monad_Free.freeMonad;
var monadStateHalogenM = new Control_Monad_State_Class.MonadState(function () {
  return monadHalogenM;
}, function ($139) {
  return HalogenM(Control_Monad_Free.liftF(State.create($139)));
});

var monadTellHalogenM = function monadTellHalogenM(dictMonadTell) {
  return new Control_Monad_Writer_Class.MonadTell(function () {
    return monadHalogenM;
  }, function () {
    var $140 = Control_Monad_Writer_Class.tell(dictMonadTell);
    return function ($141) {
      return HalogenM(Control_Monad_Free.liftF(Lift.create($140($141))));
    };
  }());
};

var monadThrowHalogenM = function monadThrowHalogenM(dictMonadThrow) {
  return new Control_Monad_Error_Class.MonadThrow(function () {
    return monadHalogenM;
  }, function () {
    var $142 = Control_Monad_Error_Class.throwError(dictMonadThrow);
    return function ($143) {
      return HalogenM(Control_Monad_Free.liftF(Lift.create($142($143))));
    };
  }());
};

var monadEffectHalogenM = function monadEffectHalogenM(dictMonadEffect) {
  return new Effect_Class.MonadEffect(function () {
    return monadHalogenM;
  }, function () {
    var $144 = Effect_Class.liftEffect(dictMonadEffect);
    return function ($145) {
      return HalogenM(Control_Monad_Free.liftF(Lift.create($144($145))));
    };
  }());
};

var monadAskHalogenM = function monadAskHalogenM(dictMonadAsk) {
  return new Control_Monad_Reader_Class.MonadAsk(function () {
    return monadHalogenM;
  }, HalogenM(Control_Monad_Free.liftF(new Lift(Control_Monad_Reader_Class.ask(dictMonadAsk)))));
};

var monadAffHalogenM = function monadAffHalogenM(dictMonadAff) {
  return new Effect_Aff_Class.MonadAff(function () {
    return monadEffectHalogenM(dictMonadAff.MonadEffect0());
  }, function () {
    var $146 = Effect_Aff_Class.liftAff(dictMonadAff);
    return function ($147) {
      return HalogenM(Control_Monad_Free.liftF(Lift.create($146($147))));
    };
  }());
};

var mapOutput = function mapOutput(f) {
  return function (v) {
    var go = function go(v1) {
      if (v1 instanceof State) {
        return new State(v1.value0);
      }

      ;

      if (v1 instanceof Subscribe) {
        return new Subscribe(v1.value0, v1.value1);
      }

      ;

      if (v1 instanceof Unsubscribe) {
        return new Unsubscribe(v1.value0, v1.value1);
      }

      ;

      if (v1 instanceof Lift) {
        return new Lift(v1.value0);
      }

      ;

      if (v1 instanceof ChildQuery) {
        return new ChildQuery(v1.value0);
      }

      ;

      if (v1 instanceof Raise) {
        return new Raise(f(v1.value0), v1.value1);
      }

      ;

      if (v1 instanceof Par) {
        return new Par(Data_Newtype.over(newtypeHalogenAp)(newtypeHalogenAp)(HalogenAp)(Control_Applicative_Free.hoistFreeAp(mapOutput(f)))(v1.value0));
      }

      ;

      if (v1 instanceof Fork) {
        return new Fork(mapOutput(f)(v1.value0), v1.value1);
      }

      ;

      if (v1 instanceof Kill) {
        return new Kill(v1.value0, v1.value1);
      }

      ;

      if (v1 instanceof GetRef) {
        return new GetRef(v1.value0, v1.value1);
      }

      ;
      throw new Error("Failed pattern match at Halogen.Query.HalogenM (line 278, column 8 - line 288, column 29): " + [v1.constructor.name]);
    };

    return Control_Monad_Free.hoistFree(go)(v);
  };
};

var mapAction = function mapAction(dictFunctor) {
  return function (f) {
    return function (v) {
      var go = function go(v1) {
        if (v1 instanceof State) {
          return new State(v1.value0);
        }

        ;

        if (v1 instanceof Subscribe) {
          return new Subscribe(function () {
            var $148 = Data_Functor.map(Halogen_Query_EventSource.functorEventSource(dictFunctor))(f);
            return function ($149) {
              return $148(v1.value0($149));
            };
          }(), v1.value1);
        }

        ;

        if (v1 instanceof Unsubscribe) {
          return new Unsubscribe(v1.value0, v1.value1);
        }

        ;

        if (v1 instanceof Lift) {
          return new Lift(v1.value0);
        }

        ;

        if (v1 instanceof ChildQuery) {
          return new ChildQuery(v1.value0);
        }

        ;

        if (v1 instanceof Raise) {
          return new Raise(v1.value0, v1.value1);
        }

        ;

        if (v1 instanceof Par) {
          return new Par(Data_Newtype.over(newtypeHalogenAp)(newtypeHalogenAp)(HalogenAp)(Control_Applicative_Free.hoistFreeAp(mapAction(dictFunctor)(f)))(v1.value0));
        }

        ;

        if (v1 instanceof Fork) {
          return new Fork(mapAction(dictFunctor)(f)(v1.value0), v1.value1);
        }

        ;

        if (v1 instanceof Kill) {
          return new Kill(v1.value0, v1.value1);
        }

        ;

        if (v1 instanceof GetRef) {
          return new GetRef(v1.value0, v1.value1);
        }

        ;
        throw new Error("Failed pattern match at Halogen.Query.HalogenM (line 258, column 8 - line 268, column 29): " + [v1.constructor.name]);
      };

      return Control_Monad_Free.hoistFree(go)(v);
    };
  };
};

var kill = function kill(fid) {
  return HalogenM(Control_Monad_Free.liftF(new Kill(fid, Data_Unit.unit)));
};

var imapState = function imapState(f) {
  return function (f$prime) {
    return function (v) {
      var go = function go(v1) {
        if (v1 instanceof State) {
          return new State(function () {
            var $150 = Data_Functor.map(Data_Tuple.functorTuple)(f);
            return function ($151) {
              return $150(v1.value0(f$prime($151)));
            };
          }());
        }

        ;

        if (v1 instanceof Subscribe) {
          return new Subscribe(v1.value0, v1.value1);
        }

        ;

        if (v1 instanceof Unsubscribe) {
          return new Unsubscribe(v1.value0, v1.value1);
        }

        ;

        if (v1 instanceof Lift) {
          return new Lift(v1.value0);
        }

        ;

        if (v1 instanceof ChildQuery) {
          return new ChildQuery(v1.value0);
        }

        ;

        if (v1 instanceof Raise) {
          return new Raise(v1.value0, v1.value1);
        }

        ;

        if (v1 instanceof Par) {
          return new Par(Data_Newtype.over(newtypeHalogenAp)(newtypeHalogenAp)(HalogenAp)(Control_Applicative_Free.hoistFreeAp(imapState(f)(f$prime)))(v1.value0));
        }

        ;

        if (v1 instanceof Fork) {
          return new Fork(imapState(f)(f$prime)(v1.value0), v1.value1);
        }

        ;

        if (v1 instanceof Kill) {
          return new Kill(v1.value0, v1.value1);
        }

        ;

        if (v1 instanceof GetRef) {
          return new GetRef(v1.value0, v1.value1);
        }

        ;
        throw new Error("Failed pattern match at Halogen.Query.HalogenM (line 237, column 8 - line 247, column 29): " + [v1.constructor.name]);
      };

      return Control_Monad_Free.hoistFree(go)(v);
    };
  };
};

var hoist = function hoist(dictFunctor) {
  return function (nat) {
    return function (v) {
      var go = function go(v1) {
        if (v1 instanceof State) {
          return new State(v1.value0);
        }

        ;

        if (v1 instanceof Subscribe) {
          return new Subscribe(function () {
            var $152 = Halogen_Query_EventSource.hoist(dictFunctor)(nat);
            return function ($153) {
              return $152(v1.value0($153));
            };
          }(), v1.value1);
        }

        ;

        if (v1 instanceof Unsubscribe) {
          return new Unsubscribe(v1.value0, v1.value1);
        }

        ;

        if (v1 instanceof Lift) {
          return new Lift(nat(v1.value0));
        }

        ;

        if (v1 instanceof ChildQuery) {
          return new ChildQuery(v1.value0);
        }

        ;

        if (v1 instanceof Raise) {
          return new Raise(v1.value0, v1.value1);
        }

        ;

        if (v1 instanceof Par) {
          return new Par(Data_Newtype.over(newtypeHalogenAp)(newtypeHalogenAp)(HalogenAp)(Control_Applicative_Free.hoistFreeAp(hoist(dictFunctor)(nat)))(v1.value0));
        }

        ;

        if (v1 instanceof Fork) {
          return new Fork(hoist(dictFunctor)(nat)(v1.value0), v1.value1);
        }

        ;

        if (v1 instanceof Kill) {
          return new Kill(v1.value0, v1.value1);
        }

        ;

        if (v1 instanceof GetRef) {
          return new GetRef(v1.value0, v1.value1);
        }

        ;
        throw new Error("Failed pattern match at Halogen.Query.HalogenM (line 299, column 8 - line 309, column 29): " + [v1.constructor.name]);
      };

      return Control_Monad_Free.hoistFree(go)(v);
    };
  };
};

var getRef = function getRef(p) {
  return HalogenM(Control_Monad_Free.liftF(new GetRef(p, Control_Category.identity(Control_Category.categoryFn))));
};

var functorHalogenM = Control_Monad_Free.freeFunctor;
var functorHalogenAp = Control_Applicative_Free.functorFreeAp;

var functorHalogenF = function functorHalogenF(dictFunctor) {
  return new Data_Functor.Functor(function (f) {
    return function (v) {
      if (v instanceof State) {
        return new State(function () {
          var $154 = Data_Bifunctor.lmap(Data_Tuple.bifunctorTuple)(f);
          return function ($155) {
            return $154(v.value0($155));
          };
        }());
      }

      ;

      if (v instanceof Subscribe) {
        return new Subscribe(v.value0, function ($156) {
          return f(v.value1($156));
        });
      }

      ;

      if (v instanceof Unsubscribe) {
        return new Unsubscribe(v.value0, f(v.value1));
      }

      ;

      if (v instanceof Lift) {
        return new Lift(Data_Functor.map(dictFunctor)(f)(v.value0));
      }

      ;

      if (v instanceof ChildQuery) {
        return new ChildQuery(Data_Functor.map(Halogen_Query_ChildQuery.functorChildQuery)(f)(v.value0));
      }

      ;

      if (v instanceof Raise) {
        return new Raise(v.value0, f(v.value1));
      }

      ;

      if (v instanceof Par) {
        return new Par(Data_Functor.map(functorHalogenAp)(f)(v.value0));
      }

      ;

      if (v instanceof Fork) {
        return new Fork(v.value0, function ($157) {
          return f(v.value1($157));
        });
      }

      ;

      if (v instanceof Kill) {
        return new Kill(v.value0, f(v.value1));
      }

      ;

      if (v instanceof GetRef) {
        return new GetRef(v.value0, function ($158) {
          return f(v.value1($158));
        });
      }

      ;
      throw new Error("Failed pattern match at Halogen.Query.HalogenM (line 55, column 11 - line 65, column 37): " + [v.constructor.name]);
    };
  });
};

var fork = function fork(hmu) {
  return HalogenM(Control_Monad_Free.liftF(new Fork(hmu, Control_Category.identity(Control_Category.categoryFn))));
};

var eqSubscriptionId = Data_Eq.eqInt;
var eqForkId = Data_Eq.eqInt;
var bindHalogenM = Control_Monad_Free.freeBind;
var applyHalogenM = Control_Monad_Free.freeApply;
var applyHalogenAp = Control_Applicative_Free.applyFreeAp;
var applicativeHalogenM = Control_Monad_Free.freeApplicative;
var monadRecHalogenM = new Control_Monad_Rec_Class.MonadRec(function () {
  return monadHalogenM;
}, function (k) {
  return function (a) {
    return Control_Bind.bind(bindHalogenM)(k(a))(function (v) {
      if (v instanceof Control_Monad_Rec_Class.Loop) {
        return Control_Monad_Rec_Class.tailRecM(monadRecHalogenM)(k)(v.value0);
      }

      ;

      if (v instanceof Control_Monad_Rec_Class.Done) {
        return Control_Applicative.pure(applicativeHalogenM)(v.value0);
      }

      ;
      throw new Error("Failed pattern match at Halogen.Query.HalogenM (line 102, column 26 - line 104, column 21): " + [v.constructor.name]);
    });
  };
});
var applicativeHalogenAp = Control_Applicative_Free.applicativeFreeAp;
var parallelHalogenM = new Control_Parallel_Class.Parallel(function () {
  return applicativeHalogenAp;
}, function () {
  return monadHalogenM;
}, function ($159) {
  return HalogenAp(Control_Applicative_Free.liftFreeAp($159));
}, function ($160) {
  return HalogenM(Control_Monad_Free.liftF(Par.create($160)));
});
module.exports = {
  State: State,
  Subscribe: Subscribe,
  Unsubscribe: Unsubscribe,
  Lift: Lift,
  ChildQuery: ChildQuery,
  Raise: Raise,
  Par: Par,
  Fork: Fork,
  Kill: Kill,
  GetRef: GetRef,
  HalogenM: HalogenM,
  HalogenAp: HalogenAp,
  raise: raise,
  query: query,
  queryAll: queryAll,
  SubscriptionId: SubscriptionId,
  subscribe: subscribe,
  "subscribe'": subscribe$prime,
  unsubscribe: unsubscribe,
  ForkId: ForkId,
  fork: fork,
  kill: kill,
  getRef: getRef,
  imapState: imapState,
  mapAction: mapAction,
  mapOutput: mapOutput,
  hoist: hoist,
  functorHalogenF: functorHalogenF,
  functorHalogenM: functorHalogenM,
  applyHalogenM: applyHalogenM,
  applicativeHalogenM: applicativeHalogenM,
  bindHalogenM: bindHalogenM,
  monadHalogenM: monadHalogenM,
  semigroupHalogenM: semigroupHalogenM,
  monoidHalogenM: monoidHalogenM,
  monadEffectHalogenM: monadEffectHalogenM,
  monadAffHalogenM: monadAffHalogenM,
  parallelHalogenM: parallelHalogenM,
  monadTransHalogenM: monadTransHalogenM,
  monadRecHalogenM: monadRecHalogenM,
  monadStateHalogenM: monadStateHalogenM,
  monadAskHalogenM: monadAskHalogenM,
  monadTellHalogenM: monadTellHalogenM,
  monadThrowHalogenM: monadThrowHalogenM,
  newtypeHalogenAp: newtypeHalogenAp,
  functorHalogenAp: functorHalogenAp,
  applyHalogenAp: applyHalogenAp,
  applicativeHalogenAp: applicativeHalogenAp,
  eqSubscriptionId: eqSubscriptionId,
  ordSubscriptionId: ordSubscriptionId,
  eqForkId: eqForkId,
  ordForkId: ordForkId
};
},{"../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Applicative.Free/index.js":"../output/Control.Applicative.Free/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Category/index.js":"../output/Control.Category/index.js","../Control.Monad.Error.Class/index.js":"../output/Control.Monad.Error.Class/index.js","../Control.Monad.Free/index.js":"../output/Control.Monad.Free/index.js","../Control.Monad.Reader.Class/index.js":"../output/Control.Monad.Reader.Class/index.js","../Control.Monad.Rec.Class/index.js":"../output/Control.Monad.Rec.Class/index.js","../Control.Monad.State.Class/index.js":"../output/Control.Monad.State.Class/index.js","../Control.Monad.Trans.Class/index.js":"../output/Control.Monad.Trans.Class/index.js","../Control.Monad.Writer.Class/index.js":"../output/Control.Monad.Writer.Class/index.js","../Control.Parallel.Class/index.js":"../output/Control.Parallel.Class/index.js","../Data.Bifunctor/index.js":"../output/Data.Bifunctor/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.FoldableWithIndex/index.js":"../output/Data.FoldableWithIndex/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Map.Internal/index.js":"../output/Data.Map.Internal/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Traversable/index.js":"../output/Data.Traversable/index.js","../Data.Tuple/index.js":"../output/Data.Tuple/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js","../Effect.Aff.Class/index.js":"../output/Effect.Aff.Class/index.js","../Effect.Class/index.js":"../output/Effect.Class/index.js","../Halogen.Data.Slot/index.js":"../output/Halogen.Data.Slot/index.js","../Halogen.Query.ChildQuery/index.js":"../output/Halogen.Query.ChildQuery/index.js","../Halogen.Query.EventSource/index.js":"../output/Halogen.Query.EventSource/index.js"}],"../output/Halogen.Query.HalogenQ/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Coyoneda = require("../Data.Coyoneda/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Initialize = function () {
  function Initialize(value0) {
    this.value0 = value0;
  }

  ;

  Initialize.create = function (value0) {
    return new Initialize(value0);
  };

  return Initialize;
}();

var Finalize = function () {
  function Finalize(value0) {
    this.value0 = value0;
  }

  ;

  Finalize.create = function (value0) {
    return new Finalize(value0);
  };

  return Finalize;
}();

var Receive = function () {
  function Receive(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Receive.create = function (value0) {
    return function (value1) {
      return new Receive(value0, value1);
    };
  };

  return Receive;
}();

var Action = function () {
  function Action(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Action.create = function (value0) {
    return function (value1) {
      return new Action(value0, value1);
    };
  };

  return Action;
}();

var Query = function () {
  function Query(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Query.create = function (value0) {
    return function (value1) {
      return new Query(value0, value1);
    };
  };

  return Query;
}();

var functorHalogenQ = new Data_Functor.Functor(function (f) {
  return function (m) {
    if (m instanceof Initialize) {
      return new Initialize(f(m.value0));
    }

    ;

    if (m instanceof Finalize) {
      return new Finalize(f(m.value0));
    }

    ;

    if (m instanceof Receive) {
      return new Receive(m.value0, f(m.value1));
    }

    ;

    if (m instanceof Action) {
      return new Action(m.value0, f(m.value1));
    }

    ;

    if (m instanceof Query) {
      return new Query(Data_Functor.map(Data_Coyoneda.functorCoyoneda)(f)(m.value0), Data_Functor.map(Data_Functor.functorFn)(f)(m.value1));
    }

    ;
    throw new Error("Failed pattern match at Halogen.Query.HalogenQ (line 23, column 1 - line 23, column 73): " + [m.constructor.name]);
  };
});
var bifunctorHalogenQ = new Data_Bifunctor.Bifunctor(function (f) {
  return function (g) {
    return function (v) {
      if (v instanceof Initialize) {
        return new Initialize(g(v.value0));
      }

      ;

      if (v instanceof Finalize) {
        return new Finalize(g(v.value0));
      }

      ;

      if (v instanceof Receive) {
        return new Receive(f(v.value0), g(v.value1));
      }

      ;

      if (v instanceof Action) {
        return new Action(v.value0, g(v.value1));
      }

      ;

      if (v instanceof Query) {
        return new Query(Data_Functor.map(Data_Coyoneda.functorCoyoneda)(g)(v.value0), Data_Functor.map(Data_Functor.functorFn)(g)(v.value1));
      }

      ;
      throw new Error("Failed pattern match at Halogen.Query.HalogenQ (line 16, column 15 - line 21, column 45): " + [v.constructor.name]);
    };
  };
});
module.exports = {
  Initialize: Initialize,
  Finalize: Finalize,
  Receive: Receive,
  Action: Action,
  Query: Query,
  bifunctorHalogenQ: bifunctorHalogenQ,
  functorHalogenQ: functorHalogenQ
};
},{"../Data.Bifunctor/index.js":"../output/Data.Bifunctor/index.js","../Data.Coyoneda/index.js":"../output/Data.Coyoneda/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js"}],"../output/Data.Array/foreign.js":[function(require,module,exports) {
"use strict"; //------------------------------------------------------------------------------
// Array creation --------------------------------------------------------------
//------------------------------------------------------------------------------

exports.range = function (start) {
  return function (end) {
    var step = start > end ? -1 : 1;
    var result = new Array(step * (end - start) + 1);
    var i = start,
        n = 0;

    while (i !== end) {
      result[n++] = i;
      i += step;
    }

    result[n] = i;
    return result;
  };
};

var replicateFill = function replicateFill(count) {
  return function (value) {
    if (count < 1) {
      return [];
    }

    var result = new Array(count);
    return result.fill(value);
  };
};

var replicatePolyfill = function replicatePolyfill(count) {
  return function (value) {
    var result = [];
    var n = 0;

    for (var i = 0; i < count; i++) {
      result[n++] = value;
    }

    return result;
  };
}; // In browsers that have Array.prototype.fill we use it, as it's faster.


exports.replicate = typeof Array.prototype.fill === "function" ? replicateFill : replicatePolyfill;

exports.fromFoldableImpl = function () {
  function Cons(head, tail) {
    this.head = head;
    this.tail = tail;
  }

  var emptyList = {};

  function curryCons(head) {
    return function (tail) {
      return new Cons(head, tail);
    };
  }

  function listToArray(list) {
    var result = [];
    var count = 0;
    var xs = list;

    while (xs !== emptyList) {
      result[count++] = xs.head;
      xs = xs.tail;
    }

    return result;
  }

  return function (foldr) {
    return function (xs) {
      return listToArray(foldr(curryCons)(emptyList)(xs));
    };
  };
}(); //------------------------------------------------------------------------------
// Array size ------------------------------------------------------------------
//------------------------------------------------------------------------------


exports.length = function (xs) {
  return xs.length;
}; //------------------------------------------------------------------------------
// Extending arrays ------------------------------------------------------------
//------------------------------------------------------------------------------


exports.cons = function (e) {
  return function (l) {
    return [e].concat(l);
  };
};

exports.snoc = function (l) {
  return function (e) {
    var l1 = l.slice();
    l1.push(e);
    return l1;
  };
}; //------------------------------------------------------------------------------
// Non-indexed reads -----------------------------------------------------------
//------------------------------------------------------------------------------


exports["uncons'"] = function (empty) {
  return function (next) {
    return function (xs) {
      return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
    };
  };
}; //------------------------------------------------------------------------------
// Indexed operations ----------------------------------------------------------
//------------------------------------------------------------------------------


exports.indexImpl = function (just) {
  return function (nothing) {
    return function (xs) {
      return function (i) {
        return i < 0 || i >= xs.length ? nothing : just(xs[i]);
      };
    };
  };
};

exports.findIndexImpl = function (just) {
  return function (nothing) {
    return function (f) {
      return function (xs) {
        for (var i = 0, l = xs.length; i < l; i++) {
          if (f(xs[i])) return just(i);
        }

        return nothing;
      };
    };
  };
};

exports.findLastIndexImpl = function (just) {
  return function (nothing) {
    return function (f) {
      return function (xs) {
        for (var i = xs.length - 1; i >= 0; i--) {
          if (f(xs[i])) return just(i);
        }

        return nothing;
      };
    };
  };
};

exports._insertAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (a) {
        return function (l) {
          if (i < 0 || i > l.length) return nothing;
          var l1 = l.slice();
          l1.splice(i, 0, a);
          return just(l1);
        };
      };
    };
  };
};

exports._deleteAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (l) {
        if (i < 0 || i >= l.length) return nothing;
        var l1 = l.slice();
        l1.splice(i, 1);
        return just(l1);
      };
    };
  };
};

exports._updateAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (a) {
        return function (l) {
          if (i < 0 || i >= l.length) return nothing;
          var l1 = l.slice();
          l1[i] = a;
          return just(l1);
        };
      };
    };
  };
}; //------------------------------------------------------------------------------
// Transformations -------------------------------------------------------------
//------------------------------------------------------------------------------


exports.reverse = function (l) {
  return l.slice().reverse();
};

exports.concat = function (xss) {
  if (xss.length <= 10000) {
    // This method is faster, but it crashes on big arrays.
    // So we use it when can and fallback to simple variant otherwise.
    return Array.prototype.concat.apply([], xss);
  }

  var result = [];

  for (var i = 0, l = xss.length; i < l; i++) {
    var xs = xss[i];

    for (var j = 0, m = xs.length; j < m; j++) {
      result.push(xs[j]);
    }
  }

  return result;
};

exports.filter = function (f) {
  return function (xs) {
    return xs.filter(f);
  };
};

exports.partition = function (f) {
  return function (xs) {
    var yes = [];
    var no = [];

    for (var i = 0; i < xs.length; i++) {
      var x = xs[i];
      if (f(x)) yes.push(x);else no.push(x);
    }

    return {
      yes: yes,
      no: no
    };
  };
}; //------------------------------------------------------------------------------
// Sorting ---------------------------------------------------------------------
//------------------------------------------------------------------------------


exports.sortImpl = function (f) {
  return function (l) {
    return l.slice().sort(function (x, y) {
      return f(x)(y);
    });
  };
}; //------------------------------------------------------------------------------
// Subarrays -------------------------------------------------------------------
//------------------------------------------------------------------------------


exports.slice = function (s) {
  return function (e) {
    return function (l) {
      return l.slice(s, e);
    };
  };
};

exports.take = function (n) {
  return function (l) {
    return n < 1 ? [] : l.slice(0, n);
  };
};

exports.drop = function (n) {
  return function (l) {
    return n < 1 ? l : l.slice(n);
  };
}; //------------------------------------------------------------------------------
// Zipping ---------------------------------------------------------------------
//------------------------------------------------------------------------------


exports.zipWith = function (f) {
  return function (xs) {
    return function (ys) {
      var l = xs.length < ys.length ? xs.length : ys.length;
      var result = new Array(l);

      for (var i = 0; i < l; i++) {
        result[i] = f(xs[i])(ys[i]);
      }

      return result;
    };
  };
}; //------------------------------------------------------------------------------
// Partial ---------------------------------------------------------------------
//------------------------------------------------------------------------------


exports.unsafeIndexImpl = function (xs) {
  return function (n) {
    return xs[n];
  };
};
},{}],"../output/Control.Monad.ST.Internal/foreign.js":[function(require,module,exports) {
"use strict";

exports.map_ = function (f) {
  return function (a) {
    return function () {
      return f(a());
    };
  };
};

exports.pure_ = function (a) {
  return function () {
    return a;
  };
};

exports.bind_ = function (a) {
  return function (f) {
    return function () {
      return f(a())();
    };
  };
};

exports.run = function (f) {
  return f();
};

exports["while"] = function (f) {
  return function (a) {
    return function () {
      while (f()) {
        a();
      }
    };
  };
};

exports["for"] = function (lo) {
  return function (hi) {
    return function (f) {
      return function () {
        for (var i = lo; i < hi; i++) {
          f(i)();
        }
      };
    };
  };
};

exports.foreach = function (as) {
  return function (f) {
    return function () {
      for (var i = 0, l = as.length; i < l; i++) {
        f(as[i])();
      }
    };
  };
};

exports.new = function (val) {
  return function () {
    return {
      value: val
    };
  };
};

exports.read = function (ref) {
  return function () {
    return ref.value;
  };
};

exports["modify'"] = function (f) {
  return function (ref) {
    return function () {
      var t = f(ref.value);
      ref.value = t.state;
      return t.value;
    };
  };
};

exports.write = function (a) {
  return function (ref) {
    return function () {
      return ref.value = a; // eslint-disable-line no-return-assign
    };
  };
};
},{}],"../output/Control.Monad.ST.Internal/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var modify = function modify(f) {
  return $foreign["modify'"](function (s) {
    var s$prime = f(s);
    return {
      state: s$prime,
      value: s$prime
    };
  });
};

var functorST = new Data_Functor.Functor($foreign.map_);
var monadST = new Control_Monad.Monad(function () {
  return applicativeST;
}, function () {
  return bindST;
});
var bindST = new Control_Bind.Bind(function () {
  return applyST;
}, $foreign.bind_);
var applyST = new Control_Apply.Apply(function () {
  return functorST;
}, Control_Monad.ap(monadST));
var applicativeST = new Control_Applicative.Applicative(function () {
  return applyST;
}, $foreign.pure_);
var monadRecST = new Control_Monad_Rec_Class.MonadRec(function () {
  return monadST;
}, function (f) {
  return function (a) {
    var isLooping = function isLooping(v) {
      if (v instanceof Control_Monad_Rec_Class.Loop) {
        return true;
      }

      ;
      return false;
    };

    var fromDone = function fromDone(v) {
      if (v instanceof Control_Monad_Rec_Class.Done) {
        return v.value0;
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.ST.Internal (line 54, column 32 - line 54, column 46): " + [v.constructor.name]);
    };

    return Control_Bind.bind(bindST)(Control_Bind.bindFlipped(bindST)($foreign["new"])(f(a)))(function (r) {
      return Control_Bind.discard(Control_Bind.discardUnit)(bindST)($foreign["while"](Data_Functor.map(functorST)(isLooping)($foreign.read(r)))(Control_Bind.bind(bindST)($foreign.read(r))(function (v) {
        if (v instanceof Control_Monad_Rec_Class.Loop) {
          return Control_Bind.bind(bindST)(f(v.value0))(function (e) {
            return Data_Functor["void"](functorST)($foreign.write(e)(r));
          });
        }

        ;

        if (v instanceof Control_Monad_Rec_Class.Done) {
          return Control_Applicative.pure(applicativeST)(Data_Unit.unit);
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.ST.Internal (line 46, column 18 - line 50, column 28): " + [v.constructor.name]);
      })))(function () {
        return Data_Functor.map(functorST)(fromDone)($foreign.read(r));
      });
    });
  };
});
module.exports = {
  modify: modify,
  functorST: functorST,
  applyST: applyST,
  applicativeST: applicativeST,
  bindST: bindST,
  monadST: monadST,
  monadRecST: monadRecST,
  map_: $foreign.map_,
  pure_: $foreign.pure_,
  bind_: $foreign.bind_,
  run: $foreign.run,
  "while": $foreign["while"],
  "for": $foreign["for"],
  foreach: $foreign.foreach,
  "new": $foreign["new"],
  read: $foreign.read,
  "modify'": $foreign["modify'"],
  write: $foreign.write
};
},{"./foreign.js":"../output/Control.Monad.ST.Internal/foreign.js","../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Monad/index.js":"../output/Control.Monad/index.js","../Control.Monad.Rec.Class/index.js":"../output/Control.Monad.Rec.Class/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js"}],"../output/Data.Array.ST/foreign.js":[function(require,module,exports) {
"use strict";

exports.empty = function () {
  return [];
};

exports.peekImpl = function (just) {
  return function (nothing) {
    return function (i) {
      return function (xs) {
        return function () {
          return i >= 0 && i < xs.length ? just(xs[i]) : nothing;
        };
      };
    };
  };
};

exports.poke = function (i) {
  return function (a) {
    return function (xs) {
      return function () {
        var ret = i >= 0 && i < xs.length;
        if (ret) xs[i] = a;
        return ret;
      };
    };
  };
};

exports.popImpl = function (just) {
  return function (nothing) {
    return function (xs) {
      return function () {
        return xs.length > 0 ? just(xs.pop()) : nothing;
      };
    };
  };
};

exports.pushAll = function (as) {
  return function (xs) {
    return function () {
      return xs.push.apply(xs, as);
    };
  };
};

exports.shiftImpl = function (just) {
  return function (nothing) {
    return function (xs) {
      return function () {
        return xs.length > 0 ? just(xs.shift()) : nothing;
      };
    };
  };
};

exports.unshiftAll = function (as) {
  return function (xs) {
    return function () {
      return xs.unshift.apply(xs, as);
    };
  };
};

exports.splice = function (i) {
  return function (howMany) {
    return function (bs) {
      return function (xs) {
        return function () {
          return xs.splice.apply(xs, [i, howMany].concat(bs));
        };
      };
    };
  };
};

exports.unsafeFreeze = function (xs) {
  return function () {
    return xs;
  };
};

exports.unsafeThaw = function (xs) {
  return function () {
    return xs;
  };
};

function copyImpl(xs) {
  return function () {
    return xs.slice();
  };
}

exports.freeze = copyImpl;
exports.thaw = copyImpl;

exports.sortByImpl = function (comp) {
  return function (xs) {
    return function () {
      return xs.sort(function (x, y) {
        return comp(x)(y);
      });
    };
  };
};

exports.toAssocArray = function (xs) {
  return function () {
    var n = xs.length;
    var as = new Array(n);

    for (var i = 0; i < n; i++) {
      as[i] = {
        value: xs[i],
        index: i
      };
    }

    return as;
  };
};
},{}],"../output/Data.Array.ST/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad_ST_Internal = require("../Control.Monad.ST.Internal/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var withArray = function withArray(f) {
  return function (xs) {
    return function __do() {
      var result = $foreign.thaw(xs)();
      f(result)();
      return $foreign.unsafeFreeze(result)();
    };
  };
};

var unshift = function unshift(a) {
  return $foreign.unshiftAll([a]);
};

var sortBy = function sortBy(comp) {
  var comp$prime = function comp$prime(x) {
    return function (y) {
      var v = comp(x)(y);

      if (v instanceof Data_Ordering.GT) {
        return 1;
      }

      ;

      if (v instanceof Data_Ordering.EQ) {
        return 0;
      }

      ;

      if (v instanceof Data_Ordering.LT) {
        return -1 | 0;
      }

      ;
      throw new Error("Failed pattern match at Data.Array.ST (line 105, column 15 - line 108, column 13): " + [v.constructor.name]);
    };
  };

  return $foreign.sortByImpl(comp$prime);
};

var sortWith = function sortWith(dictOrd) {
  return function (f) {
    return sortBy(Data_Ord.comparing(dictOrd)(f));
  };
};

var sort = function sort(dictOrd) {
  return sortBy(Data_Ord.compare(dictOrd));
};

var shift = $foreign.shiftImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var run = function run(st) {
  return Control_Bind.bind(Control_Monad_ST_Internal.bindST)(st)($foreign.unsafeFreeze)();
};

var push = function push(a) {
  return $foreign.pushAll([a]);
};

var pop = $foreign.popImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var peek = $foreign.peekImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var modify = function modify(i) {
  return function (f) {
    return function (xs) {
      return function __do() {
        var entry = peek(i)(xs)();

        if (entry instanceof Data_Maybe.Just) {
          return $foreign.poke(i)(f(entry.value0))(xs)();
        }

        ;

        if (entry instanceof Data_Maybe.Nothing) {
          return false;
        }

        ;
        throw new Error("Failed pattern match at Data.Array.ST (line 188, column 3 - line 190, column 26): " + [entry.constructor.name]);
      };
    };
  };
};

module.exports = {
  run: run,
  withArray: withArray,
  peek: peek,
  modify: modify,
  pop: pop,
  push: push,
  shift: shift,
  unshift: unshift,
  sort: sort,
  sortBy: sortBy,
  sortWith: sortWith,
  empty: $foreign.empty,
  poke: $foreign.poke,
  pushAll: $foreign.pushAll,
  unshiftAll: $foreign.unshiftAll,
  splice: $foreign.splice,
  freeze: $foreign.freeze,
  thaw: $foreign.thaw,
  unsafeFreeze: $foreign.unsafeFreeze,
  unsafeThaw: $foreign.unsafeThaw,
  toAssocArray: $foreign.toAssocArray
};
},{"./foreign.js":"../output/Data.Array.ST/foreign.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Monad.ST.Internal/index.js":"../output/Control.Monad.ST.Internal/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Ordering/index.js":"../output/Data.Ordering/index.js"}],"../output/Data.Array.ST.Iterator/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Monad_ST_Internal = require("../Control.Monad.ST.Internal/index.js");

var Data_Array_ST = require("../Data.Array.ST/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Iterator = function () {
  function Iterator(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Iterator.create = function (value0) {
    return function (value1) {
      return new Iterator(value0, value1);
    };
  };

  return Iterator;
}();

var peek = function peek(v) {
  return function __do() {
    var i = Control_Monad_ST_Internal.read(v.value1)();
    return v.value0(i);
  };
};

var next = function next(v) {
  return function __do() {
    var i = Control_Monad_ST_Internal.read(v.value1)();
    Control_Monad_ST_Internal.modify(function (v1) {
      return v1 + 1 | 0;
    })(v.value1)();
    return v.value0(i);
  };
};

var pushWhile = function pushWhile(p) {
  return function (iter) {
    return function (array) {
      return function __do() {
        var $$break = Control_Monad_ST_Internal["new"](false)();

        while (Data_Functor.map(Control_Monad_ST_Internal.functorST)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))(Control_Monad_ST_Internal.read($$break))()) {
          (function __do() {
            var mx = peek(iter)();

            if (mx instanceof Data_Maybe.Just && p(mx.value0)) {
              Data_Array_ST.push(mx.value0)(array)();
              return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(next(iter))();
            }

            ;
            return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Control_Monad_ST_Internal.write(true)($$break))();
          })();
        }

        ;
        return {};
      };
    };
  };
};

var pushAll = pushWhile(Data_Function["const"](true));

var iterator = function iterator(f) {
  return Data_Functor.map(Control_Monad_ST_Internal.functorST)(Iterator.create(f))(Control_Monad_ST_Internal["new"](0));
};

var iterate = function iterate(iter) {
  return function (f) {
    return function __do() {
      var $$break = Control_Monad_ST_Internal["new"](false)();

      while (Data_Functor.map(Control_Monad_ST_Internal.functorST)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))(Control_Monad_ST_Internal.read($$break))()) {
        (function __do() {
          var mx = next(iter)();

          if (mx instanceof Data_Maybe.Just) {
            return f(mx.value0)();
          }

          ;

          if (mx instanceof Data_Maybe.Nothing) {
            return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Control_Monad_ST_Internal.write(true)($$break))();
          }

          ;
          throw new Error("Failed pattern match at Data.Array.ST.Iterator (line 42, column 5 - line 44, column 47): " + [mx.constructor.name]);
        })();
      }

      ;
      return {};
    };
  };
};

var exhausted = function () {
  var $13 = Data_Functor.map(Control_Monad_ST_Internal.functorST)(Data_Maybe.isNothing);
  return function ($14) {
    return $13(peek($14));
  };
}();

module.exports = {
  iterator: iterator,
  iterate: iterate,
  next: next,
  peek: peek,
  exhausted: exhausted,
  pushWhile: pushWhile,
  pushAll: pushAll
};
},{"../Control.Monad.ST.Internal/index.js":"../output/Control.Monad.ST.Internal/index.js","../Data.Array.ST/index.js":"../output/Data.Array.ST/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.HeytingAlgebra/index.js":"../output/Data.HeytingAlgebra/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js"}],"../output/Data.Array/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Lazy = require("../Control.Lazy/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_ST_Internal = require("../Control.Monad.ST.Internal/index.js");

var Data_Array_ST = require("../Data.Array.ST/index.js");

var Data_Array_ST_Iterator = require("../Data.Array.ST.Iterator/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var zipWithA = function zipWithA(dictApplicative) {
  return function (f) {
    return function (xs) {
      return function (ys) {
        return Data_Traversable.sequence(Data_Traversable.traversableArray)(dictApplicative)($foreign.zipWith(f)(xs)(ys));
      };
    };
  };
};

var zip = $foreign.zipWith(Data_Tuple.Tuple.create);

var updateAtIndices = function updateAtIndices(dictFoldable) {
  return function (us) {
    return function (xs) {
      return Data_Array_ST.withArray(function (res) {
        return Data_Foldable.traverse_(Control_Monad_ST_Internal.applicativeST)(dictFoldable)(function (v) {
          return Data_Array_ST.poke(v.value0)(v.value1)(res);
        })(us);
      })(xs)();
    };
  };
};

var updateAt = $foreign["_updateAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var unsafeIndex = function unsafeIndex(dictPartial) {
  return $foreign.unsafeIndexImpl;
};

var uncons = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
  return function (xs) {
    return new Data_Maybe.Just({
      head: x,
      tail: xs
    });
  };
});

var toUnfoldable = function toUnfoldable(dictUnfoldable) {
  return function (xs) {
    var len = $foreign.length(xs);

    var f = function f(i) {
      if (i < len) {
        return new Data_Maybe.Just(new Data_Tuple.Tuple(unsafeIndex()(xs)(i), i + 1 | 0));
      }

      ;

      if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
      }

      ;
      throw new Error("Failed pattern match at Data.Array (line 143, column 3 - line 145, column 26): " + [i.constructor.name]);
    };

    return Data_Unfoldable.unfoldr(dictUnfoldable)(f)(0);
  };
};

var takeEnd = function takeEnd(n) {
  return function (xs) {
    return $foreign.drop($foreign.length(xs) - n | 0)(xs);
  };
};

var tail = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (v) {
  return function (xs) {
    return new Data_Maybe.Just(xs);
  };
});

var sortBy = function sortBy(comp) {
  return function (xs) {
    var comp$prime = function comp$prime(x) {
      return function (y) {
        var v = comp(x)(y);

        if (v instanceof Data_Ordering.GT) {
          return 1;
        }

        ;

        if (v instanceof Data_Ordering.EQ) {
          return 0;
        }

        ;

        if (v instanceof Data_Ordering.LT) {
          return -1 | 0;
        }

        ;
        throw new Error("Failed pattern match at Data.Array (line 702, column 15 - line 705, column 13): " + [v.constructor.name]);
      };
    };

    return $foreign.sortImpl(comp$prime)(xs);
  };
};

var sortWith = function sortWith(dictOrd) {
  return function (f) {
    return sortBy(Data_Ord.comparing(dictOrd)(f));
  };
};

var sort = function sort(dictOrd) {
  return function (xs) {
    return sortBy(Data_Ord.compare(dictOrd))(xs);
  };
};

var singleton = function singleton(a) {
  return [a];
};

var $$null = function $$null(xs) {
  return $foreign.length(xs) === 0;
};

var nubByEq = function nubByEq(eq) {
  return function (xs) {
    return function __do() {
      var arr = Data_Array_ST.empty();
      Control_Monad_ST_Internal.foreach(xs)(function (x) {
        return function __do() {
          var e = Data_Functor.map(Control_Monad_ST_Internal.functorST)(function () {
            var $84 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean);
            var $85 = Data_Foldable.any(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (v) {
              return eq(v)(x);
            });
            return function ($86) {
              return $84($85($86));
            };
          }())(Data_Array_ST.unsafeFreeze(arr))();
          return Control_Applicative.when(Control_Monad_ST_Internal.applicativeST)(e)(Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Data_Array_ST.push(x)(arr)))();
        };
      })();
      return Data_Array_ST.unsafeFreeze(arr)();
    }();
  };
};

var nubEq = function nubEq(dictEq) {
  return nubByEq(Data_Eq.eq(dictEq));
};

var modifyAtIndices = function modifyAtIndices(dictFoldable) {
  return function (is) {
    return function (f) {
      return function (xs) {
        return Data_Array_ST.withArray(function (res) {
          return Data_Foldable.traverse_(Control_Monad_ST_Internal.applicativeST)(dictFoldable)(function (i) {
            return Data_Array_ST.modify(i)(f)(res);
          })(is);
        })(xs)();
      };
    };
  };
};

var mapWithIndex = function mapWithIndex(f) {
  return function (xs) {
    return $foreign.zipWith(f)($foreign.range(0)($foreign.length(xs) - 1 | 0))(xs);
  };
};

var some = function some(dictAlternative) {
  return function (dictLazy) {
    return function (v) {
      return Control_Apply.apply(dictAlternative.Applicative0().Apply0())(Data_Functor.map(dictAlternative.Plus1().Alt0().Functor0())($foreign.cons)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
        return many(dictAlternative)(dictLazy)(v);
      }));
    };
  };
};

var many = function many(dictAlternative) {
  return function (dictLazy) {
    return function (v) {
      return Control_Alt.alt(dictAlternative.Plus1().Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())([]));
    };
  };
};

var insertAt = $foreign["_insertAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var init = function init(xs) {
  if ($$null(xs)) {
    return Data_Maybe.Nothing.value;
  }

  ;

  if (Data_Boolean.otherwise) {
    return new Data_Maybe.Just($foreign.slice(0)($foreign.length(xs) - 1 | 0)(xs));
  }

  ;
  throw new Error("Failed pattern match at Data.Array (line 323, column 1 - line 323, column 45): " + [xs.constructor.name]);
};

var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var last = function last(xs) {
  return index(xs)($foreign.length(xs) - 1 | 0);
};

var unsnoc = function unsnoc(xs) {
  return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
    return function (v1) {
      return {
        init: v,
        last: v1
      };
    };
  })(init(xs)))(last(xs));
};

var modifyAt = function modifyAt(i) {
  return function (f) {
    return function (xs) {
      var go = function go(x) {
        return updateAt(i)(f(x))(xs);
      };

      return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));
    };
  };
};

var span = function span(p) {
  return function (arr) {
    var go = function go($copy_i) {
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(i) {
        var v = index(arr)(i);

        if (v instanceof Data_Maybe.Just) {
          var $60 = p(v.value0);

          if ($60) {
            $copy_i = i + 1 | 0;
            return;
          }

          ;
          $tco_done = true;
          return new Data_Maybe.Just(i);
        }

        ;

        if (v instanceof Data_Maybe.Nothing) {
          $tco_done = true;
          return Data_Maybe.Nothing.value;
        }

        ;
        throw new Error("Failed pattern match at Data.Array (line 834, column 5 - line 836, column 25): " + [v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($copy_i);
      }

      ;
      return $tco_result;
    };

    var breakIndex = go(0);

    if (breakIndex instanceof Data_Maybe.Just && breakIndex.value0 === 0) {
      return {
        init: [],
        rest: arr
      };
    }

    ;

    if (breakIndex instanceof Data_Maybe.Just) {
      return {
        init: $foreign.slice(0)(breakIndex.value0)(arr),
        rest: $foreign.slice(breakIndex.value0)($foreign.length(arr))(arr)
      };
    }

    ;

    if (breakIndex instanceof Data_Maybe.Nothing) {
      return {
        init: arr,
        rest: []
      };
    }

    ;
    throw new Error("Failed pattern match at Data.Array (line 821, column 3 - line 827, column 30): " + [breakIndex.constructor.name]);
  };
};

var takeWhile = function takeWhile(p) {
  return function (xs) {
    return span(p)(xs).init;
  };
};

var unzip = function unzip(xs) {
  return function __do() {
    var fsts = Data_Array_ST.empty();
    var snds = Data_Array_ST.empty();
    var iter = Data_Array_ST_Iterator.iterator(function (v) {
      return index(xs)(v);
    })();
    Data_Array_ST_Iterator.iterate(iter)(function (v) {
      return function __do() {
        Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Data_Array_ST.push(v.value0)(fsts))();
        return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Data_Array_ST.push(v.value1)(snds))();
      };
    })();
    var fsts$prime = Data_Array_ST.unsafeFreeze(fsts)();
    var snds$prime = Data_Array_ST.unsafeFreeze(snds)();
    return new Data_Tuple.Tuple(fsts$prime, snds$prime);
  }();
};

var head = function head(xs) {
  return index(xs)(0);
};

var nubBy = function nubBy(comp) {
  return function (xs) {
    var indexedAndSorted = sortBy(function (x) {
      return function (y) {
        return comp(Data_Tuple.snd(x))(Data_Tuple.snd(y));
      };
    })(mapWithIndex(Data_Tuple.Tuple.create)(xs));
    var v = head(indexedAndSorted);

    if (v instanceof Data_Maybe.Nothing) {
      return [];
    }

    ;

    if (v instanceof Data_Maybe.Just) {
      return Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.snd)(sortWith(Data_Ord.ordInt)(Data_Tuple.fst)(function __do() {
        var result = Data_Array_ST.unsafeThaw(singleton(v.value0))();
        Control_Monad_ST_Internal.foreach(indexedAndSorted)(function (v1) {
          return function __do() {
            var lst = Data_Functor.map(Control_Monad_ST_Internal.functorST)(function () {
              var $87 = function (dictPartial) {
                var $89 = Data_Maybe.fromJust();
                return function ($90) {
                  return $89(last($90));
                };
              }();

              return function ($88) {
                return Data_Tuple.snd($87($88));
              };
            }())(Data_Array_ST.unsafeFreeze(result))();
            return Control_Applicative.when(Control_Monad_ST_Internal.applicativeST)(Data_Eq.notEq(Data_Ordering.eqOrdering)(comp(lst)(v1.value1))(Data_Ordering.EQ.value))(Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Data_Array_ST.push(v1)(result)))();
          };
        })();
        return Data_Array_ST.unsafeFreeze(result)();
      }()));
    }

    ;
    throw new Error("Failed pattern match at Data.Array (line 903, column 17 - line 911, column 29): " + [v.constructor.name]);
  };
};

var nub = function nub(dictOrd) {
  return nubBy(Data_Ord.compare(dictOrd));
};

var groupBy = function groupBy(op) {
  return function (xs) {
    return function __do() {
      var result = Data_Array_ST.empty();
      var iter = Data_Array_ST_Iterator.iterator(function (v) {
        return index(xs)(v);
      })();
      Data_Array_ST_Iterator.iterate(iter)(function (x) {
        return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(function __do() {
          var sub = Data_Array_ST.empty();
          Data_Array_ST.push(x)(sub)();
          Data_Array_ST_Iterator.pushWhile(op(x))(iter)(sub)();
          var grp = Data_Array_ST.unsafeFreeze(sub)();
          return Data_Array_ST.push(grp)(result)();
        });
      })();
      return Data_Array_ST.unsafeFreeze(result)();
    }();
  };
};

var group = function group(dictEq) {
  return function (xs) {
    return groupBy(Data_Eq.eq(dictEq))(xs);
  };
};

var group$prime = function group$prime(dictOrd) {
  var $91 = group(dictOrd.Eq0());
  var $92 = sort(dictOrd);
  return function ($93) {
    return $91($92($93));
  };
};

var fromFoldable = function fromFoldable(dictFoldable) {
  return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
};

var foldRecM = function foldRecM(dictMonadRec) {
  return function (f) {
    return function (a) {
      return function (array) {
        var go = function go(res) {
          return function (i) {
            if (i >= $foreign.length(array)) {
              return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Done(res));
            }

            ;

            if (Data_Boolean.otherwise) {
              return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(f(res)(unsafeIndex()(array)(i)))(function (res$prime) {
                return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Loop({
                  a: res$prime,
                  b: i + 1 | 0
                }));
              });
            }

            ;
            throw new Error("Failed pattern match at Data.Array (line 1101, column 3 - line 1105, column 42): " + [res.constructor.name, i.constructor.name]);
          };
        };

        return Control_Monad_Rec_Class.tailRecM2(dictMonadRec)(go)(a)(0);
      };
    };
  };
};

var foldM = function foldM(dictMonad) {
  return function (f) {
    return function (a) {
      return $foreign["uncons'"](function (v) {
        return Control_Applicative.pure(dictMonad.Applicative0())(a);
      })(function (b) {
        return function (bs) {
          return Control_Bind.bind(dictMonad.Bind1())(f(a)(b))(function (a$prime) {
            return foldM(dictMonad)(f)(a$prime)(bs);
          });
        };
      });
    };
  };
};

var findLastIndex = $foreign.findLastIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var insertBy = function insertBy(cmp) {
  return function (x) {
    return function (ys) {
      var i = Data_Maybe.maybe(0)(function (v) {
        return v + 1 | 0;
      })(findLastIndex(function (y) {
        return Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(x)(y))(Data_Ordering.GT.value);
      })(ys));
      return Data_Maybe.fromJust()(insertAt(i)(x)(ys));
    };
  };
};

var insert = function insert(dictOrd) {
  return insertBy(Data_Ord.compare(dictOrd));
};

var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var intersectBy = function intersectBy(eq) {
  return function (xs) {
    return function (ys) {
      return $foreign.filter(function (x) {
        return Data_Maybe.isJust(findIndex(eq(x))(ys));
      })(xs);
    };
  };
};

var intersect = function intersect(dictEq) {
  return intersectBy(Data_Eq.eq(dictEq));
};

var elemLastIndex = function elemLastIndex(dictEq) {
  return function (x) {
    return findLastIndex(function (v) {
      return Data_Eq.eq(dictEq)(v)(x);
    });
  };
};

var elemIndex = function elemIndex(dictEq) {
  return function (x) {
    return findIndex(function (v) {
      return Data_Eq.eq(dictEq)(v)(x);
    });
  };
};

var dropWhile = function dropWhile(p) {
  return function (xs) {
    return span(p)(xs).rest;
  };
};

var dropEnd = function dropEnd(n) {
  return function (xs) {
    return $foreign.take($foreign.length(xs) - n | 0)(xs);
  };
};

var deleteAt = $foreign["_deleteAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var deleteBy = function deleteBy(v) {
  return function (v1) {
    return function (v2) {
      if (v2.length === 0) {
        return [];
      }

      ;
      return Data_Maybe.maybe(v2)(function (i) {
        return Data_Maybe.fromJust()(deleteAt(i)(v2));
      })(findIndex(v(v1))(v2));
    };
  };
};

var unionBy = function unionBy(eq) {
  return function (xs) {
    return function (ys) {
      return Data_Semigroup.append(Data_Semigroup.semigroupArray)(xs)(Data_Foldable.foldl(Data_Foldable.foldableArray)(Data_Function.flip(deleteBy(eq)))(nubByEq(eq)(ys))(xs));
    };
  };
};

var union = function union(dictEq) {
  return unionBy(Data_Eq.eq(dictEq));
};

var $$delete = function $$delete(dictEq) {
  return deleteBy(Data_Eq.eq(dictEq));
};

var difference = function difference(dictEq) {
  return Data_Foldable.foldr(Data_Foldable.foldableArray)($$delete(dictEq));
};

var concatMap = Data_Function.flip(Control_Bind.bind(Control_Bind.bindArray));

var mapMaybe = function mapMaybe(f) {
  return concatMap(function () {
    var $94 = Data_Maybe.maybe([])(singleton);
    return function ($95) {
      return $94(f($95));
    };
  }());
};

var filterA = function filterA(dictApplicative) {
  return function (p) {
    var $96 = Data_Functor.map(dictApplicative.Apply0().Functor0())(mapMaybe(function (v) {
      if (v.value1) {
        return new Data_Maybe.Just(v.value0);
      }

      ;
      return Data_Maybe.Nothing.value;
    }));
    var $97 = Data_Traversable.traverse(Data_Traversable.traversableArray)(dictApplicative)(function (x) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Tuple.Tuple.create(x))(p(x));
    });
    return function ($98) {
      return $96($97($98));
    };
  };
};

var catMaybes = mapMaybe(Control_Category.identity(Control_Category.categoryFn));

var alterAt = function alterAt(i) {
  return function (f) {
    return function (xs) {
      var go = function go(x) {
        var v = f(x);

        if (v instanceof Data_Maybe.Nothing) {
          return deleteAt(i)(xs);
        }

        ;

        if (v instanceof Data_Maybe.Just) {
          return updateAt(i)(v.value0)(xs);
        }

        ;
        throw new Error("Failed pattern match at Data.Array (line 544, column 10 - line 546, column 32): " + [v.constructor.name]);
      };

      return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));
    };
  };
};

module.exports = {
  fromFoldable: fromFoldable,
  toUnfoldable: toUnfoldable,
  singleton: singleton,
  some: some,
  many: many,
  "null": $$null,
  insert: insert,
  insertBy: insertBy,
  head: head,
  last: last,
  tail: tail,
  init: init,
  uncons: uncons,
  unsnoc: unsnoc,
  index: index,
  elemIndex: elemIndex,
  elemLastIndex: elemLastIndex,
  findIndex: findIndex,
  findLastIndex: findLastIndex,
  insertAt: insertAt,
  deleteAt: deleteAt,
  updateAt: updateAt,
  updateAtIndices: updateAtIndices,
  modifyAt: modifyAt,
  modifyAtIndices: modifyAtIndices,
  alterAt: alterAt,
  concatMap: concatMap,
  filterA: filterA,
  mapMaybe: mapMaybe,
  catMaybes: catMaybes,
  mapWithIndex: mapWithIndex,
  sort: sort,
  sortBy: sortBy,
  sortWith: sortWith,
  takeEnd: takeEnd,
  takeWhile: takeWhile,
  dropEnd: dropEnd,
  dropWhile: dropWhile,
  span: span,
  group: group,
  "group'": group$prime,
  groupBy: groupBy,
  nub: nub,
  nubEq: nubEq,
  nubBy: nubBy,
  nubByEq: nubByEq,
  union: union,
  unionBy: unionBy,
  "delete": $$delete,
  deleteBy: deleteBy,
  difference: difference,
  intersect: intersect,
  intersectBy: intersectBy,
  zipWithA: zipWithA,
  zip: zip,
  unzip: unzip,
  foldM: foldM,
  foldRecM: foldRecM,
  unsafeIndex: unsafeIndex,
  range: $foreign.range,
  replicate: $foreign.replicate,
  length: $foreign.length,
  cons: $foreign.cons,
  snoc: $foreign.snoc,
  reverse: $foreign.reverse,
  concat: $foreign.concat,
  filter: $foreign.filter,
  partition: $foreign.partition,
  slice: $foreign.slice,
  take: $foreign.take,
  drop: $foreign.drop,
  zipWith: $foreign.zipWith
};
},{"./foreign.js":"../output/Data.Array/foreign.js","../Control.Alt/index.js":"../output/Control.Alt/index.js","../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Category/index.js":"../output/Control.Category/index.js","../Control.Lazy/index.js":"../output/Control.Lazy/index.js","../Control.Monad.Rec.Class/index.js":"../output/Control.Monad.Rec.Class/index.js","../Control.Monad.ST.Internal/index.js":"../output/Control.Monad.ST.Internal/index.js","../Data.Array.ST/index.js":"../output/Data.Array.ST/index.js","../Data.Array.ST.Iterator/index.js":"../output/Data.Array.ST.Iterator/index.js","../Data.Boolean/index.js":"../output/Data.Boolean/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Foldable/index.js":"../output/Data.Foldable/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.HeytingAlgebra/index.js":"../output/Data.HeytingAlgebra/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Ordering/index.js":"../output/Data.Ordering/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Traversable/index.js":"../output/Data.Traversable/index.js","../Data.Tuple/index.js":"../output/Data.Tuple/index.js","../Data.Unfoldable/index.js":"../output/Data.Unfoldable/index.js"}],"../output/Halogen.VDom.Machine/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Step = function () {
  function Step(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  ;

  Step.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return function (value3) {
          return new Step(value0, value1, value2, value3);
        };
      };
    };
  };

  return Step;
}();

var unStep = Unsafe_Coerce.unsafeCoerce;

var step = function step(v, a) {
  return v.value2(v.value1, a);
};

var mkStep = Unsafe_Coerce.unsafeCoerce;

var halt = function halt(v) {
  return v.value3(v.value1);
};

var extract = unStep(function (v) {
  return v.value0;
});
module.exports = {
  Step: Step,
  mkStep: mkStep,
  unStep: unStep,
  extract: extract,
  step: step,
  halt: halt
};
},{"../Unsafe.Coerce/index.js":"../output/Unsafe.Coerce/index.js"}],"../output/Halogen.VDom.Types/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Namespace = function Namespace(x) {
  return x;
};

var ElemName = function ElemName(x) {
  return x;
};

var Text = function () {
  function Text(value0) {
    this.value0 = value0;
  }

  ;

  Text.create = function (value0) {
    return new Text(value0);
  };

  return Text;
}();

var Elem = function () {
  function Elem(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  ;

  Elem.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return function (value3) {
          return new Elem(value0, value1, value2, value3);
        };
      };
    };
  };

  return Elem;
}();

var Keyed = function () {
  function Keyed(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  ;

  Keyed.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return function (value3) {
          return new Keyed(value0, value1, value2, value3);
        };
      };
    };
  };

  return Keyed;
}();

var Widget = function () {
  function Widget(value0) {
    this.value0 = value0;
  }

  ;

  Widget.create = function (value0) {
    return new Widget(value0);
  };

  return Widget;
}();

var Grafted = function () {
  function Grafted(value0) {
    this.value0 = value0;
  }

  ;

  Grafted.create = function (value0) {
    return new Grafted(value0);
  };

  return Grafted;
}();

var Graft = function () {
  function Graft(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  ;

  Graft.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return new Graft(value0, value1, value2);
      };
    };
  };

  return Graft;
}();

var unGraft = function unGraft(f) {
  return function ($58) {
    return f($58);
  };
};

var ordNamespace = Data_Ord.ordString;
var ordElemName = Data_Ord.ordString;
var newtypeNamespace = new Data_Newtype.Newtype(function (n) {
  return n;
}, Namespace);
var newtypeElemName = new Data_Newtype.Newtype(function (n) {
  return n;
}, ElemName);
var graft = Unsafe_Coerce.unsafeCoerce;
var functorGraft = new Data_Functor.Functor(function (g) {
  return unGraft(function (v) {
    return graft(new Graft(v.value0, function ($59) {
      return g(v.value1($59));
    }, v.value2));
  });
});
var functorVDom = new Data_Functor.Functor(function (g) {
  return function (v) {
    if (v instanceof Text) {
      return new Text(v.value0);
    }

    ;

    if (v instanceof Grafted) {
      return new Grafted(Data_Functor.map(functorGraft)(g)(v.value0));
    }

    ;
    return new Grafted(graft(new Graft(Control_Category.identity(Control_Category.categoryFn), g, v)));
  };
});
var eqNamespace = Data_Eq.eqString;
var eqElemName = Data_Eq.eqString;
var bifunctorGraft = new Data_Bifunctor.Bifunctor(function (f) {
  return function (g) {
    return unGraft(function (v) {
      return graft(new Graft(function ($60) {
        return f(v.value0($60));
      }, function ($61) {
        return g(v.value1($61));
      }, v.value2));
    });
  };
});
var bifunctorVDom = new Data_Bifunctor.Bifunctor(function (f) {
  return function (g) {
    return function (v) {
      if (v instanceof Text) {
        return new Text(v.value0);
      }

      ;

      if (v instanceof Grafted) {
        return new Grafted(Data_Bifunctor.bimap(bifunctorGraft)(f)(g)(v.value0));
      }

      ;
      return new Grafted(graft(new Graft(f, g, v)));
    };
  };
});
var runGraft = unGraft(function (v) {
  var go = function go(v2) {
    if (v2 instanceof Text) {
      return new Text(v2.value0);
    }

    ;

    if (v2 instanceof Elem) {
      return new Elem(v2.value0, v2.value1, v.value0(v2.value2), Data_Functor.map(Data_Functor.functorArray)(go)(v2.value3));
    }

    ;

    if (v2 instanceof Keyed) {
      return new Keyed(v2.value0, v2.value1, v.value0(v2.value2), Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Data_Tuple.functorTuple)(go))(v2.value3));
    }

    ;

    if (v2 instanceof Widget) {
      return new Widget(v.value1(v2.value0));
    }

    ;

    if (v2 instanceof Grafted) {
      return new Grafted(Data_Bifunctor.bimap(bifunctorGraft)(v.value0)(v.value1)(v2.value0));
    }

    ;
    throw new Error("Failed pattern match at Halogen.VDom.Types (line 86, column 7 - line 86, column 27): " + [v2.constructor.name]);
  };

  return go(v.value2);
});

var renderWidget = function renderWidget(f) {
  return function (g) {
    return function (v) {
      if (v instanceof Text) {
        return new Text(v.value0);
      }

      ;

      if (v instanceof Elem) {
        return new Elem(v.value0, v.value1, f(v.value2), Data_Functor.map(Data_Functor.functorArray)(renderWidget(f)(g))(v.value3));
      }

      ;

      if (v instanceof Keyed) {
        return new Keyed(v.value0, v.value1, f(v.value2), Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Data_Tuple.functorTuple)(renderWidget(f)(g)))(v.value3));
      }

      ;

      if (v instanceof Widget) {
        return g(v.value0);
      }

      ;

      if (v instanceof Grafted) {
        return renderWidget(f)(g)(runGraft(v.value0));
      }

      ;
      throw new Error("Failed pattern match at Halogen.VDom.Types (line 48, column 20 - line 53, column 48): " + [v.constructor.name]);
    };
  };
};

module.exports = {
  Text: Text,
  Elem: Elem,
  Keyed: Keyed,
  Widget: Widget,
  Grafted: Grafted,
  renderWidget: renderWidget,
  Graft: Graft,
  graft: graft,
  unGraft: unGraft,
  runGraft: runGraft,
  ElemName: ElemName,
  Namespace: Namespace,
  functorVDom: functorVDom,
  bifunctorVDom: bifunctorVDom,
  functorGraft: functorGraft,
  bifunctorGraft: bifunctorGraft,
  newtypeElemName: newtypeElemName,
  eqElemName: eqElemName,
  ordElemName: ordElemName,
  newtypeNamespace: newtypeNamespace,
  eqNamespace: eqNamespace,
  ordNamespace: ordNamespace
};
},{"../Control.Category/index.js":"../output/Control.Category/index.js","../Data.Bifunctor/index.js":"../output/Data.Bifunctor/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Tuple/index.js":"../output/Data.Tuple/index.js","../Unsafe.Coerce/index.js":"../output/Unsafe.Coerce/index.js"}],"../output/Halogen.VDom.Util/foreign.js":[function(require,module,exports) {
"use strict";

exports.unsafeGetAny = function (key, obj) {
  return obj[key];
};

exports.unsafeHasAny = function (key, obj) {
  return obj.hasOwnProperty(key);
};

exports.unsafeSetAny = function (key, val, obj) {
  obj[key] = val;
};

exports.unsafeDeleteAny = function (key, obj) {
  delete obj[key];
};

exports.forE = function (a, f) {
  var b = [];

  for (var i = 0; i < a.length; i++) {
    b.push(f(i, a[i]));
  }

  return b;
};

exports.forEachE = function (a, f) {
  for (var i = 0; i < a.length; i++) {
    f(a[i]);
  }
};

exports.forInE = function (o, f) {
  var ks = Object.keys(o);

  for (var i = 0; i < ks.length; i++) {
    var k = ks[i];
    f(k, o[k]);
  }
};

exports.replicateE = function (n, f) {
  for (var i = 0; i < n; i++) {
    f();
  }
};

exports.diffWithIxE = function (a1, a2, f1, f2, f3) {
  var a3 = [];
  var l1 = a1.length;
  var l2 = a2.length;
  var i = 0;

  while (1) {
    if (i < l1) {
      if (i < l2) {
        a3.push(f1(i, a1[i], a2[i]));
      } else {
        f2(i, a1[i]);
      }
    } else if (i < l2) {
      a3.push(f3(i, a2[i]));
    } else {
      break;
    }

    i++;
  }

  return a3;
};

exports.strMapWithIxE = function (as, fk, f) {
  var o = {};

  for (var i = 0; i < as.length; i++) {
    var a = as[i];
    var k = fk(a);
    o[k] = f(k, i, a);
  }

  return o;
};

exports.diffWithKeyAndIxE = function (o1, as, fk, f1, f2, f3) {
  var o2 = {};

  for (var i = 0; i < as.length; i++) {
    var a = as[i];
    var k = fk(a);

    if (o1.hasOwnProperty(k)) {
      o2[k] = f1(k, i, o1[k], a);
    } else {
      o2[k] = f3(k, i, a);
    }
  }

  for (var k in o1) {
    if (k in o2) {
      continue;
    }

    f2(k, o1[k]);
  }

  return o2;
};

exports.refEq = function (a, b) {
  return a === b;
};

exports.createTextNode = function (s, doc) {
  return doc.createTextNode(s);
};

exports.setTextContent = function (s, n) {
  n.textContent = s;
};

exports.createElement = function (ns, name, doc) {
  if (ns != null) {
    return doc.createElementNS(ns, name);
  } else {
    return doc.createElement(name);
  }
};

exports.insertChildIx = function (i, a, b) {
  var n = b.childNodes.item(i) || null;

  if (n !== a) {
    b.insertBefore(a, n);
  }
};

exports.removeChild = function (a, b) {
  if (b && a.parentNode === b) {
    b.removeChild(a);
  }
};

exports.parentNode = function (a) {
  return a.parentNode;
};

exports.setAttribute = function (ns, attr, val, el) {
  if (ns != null) {
    el.setAttributeNS(ns, attr, val);
  } else {
    el.setAttribute(attr, val);
  }
};

exports.removeAttribute = function (ns, attr, el) {
  if (ns != null) {
    el.removeAttributeNS(ns, attr);
  } else {
    el.removeAttribute(attr);
  }
};

exports.hasAttribute = function (ns, attr, el) {
  if (ns != null) {
    return el.hasAttributeNS(ns, attr);
  } else {
    return el.hasAttribute(attr);
  }
};

exports.addEventListener = function (ev, listener, el) {
  el.addEventListener(ev, listener, false);
};

exports.removeEventListener = function (ev, listener, el) {
  el.removeEventListener(ev, listener, false);
};

exports.jsUndefined = void 0;
},{}],"../output/Foreign.Object.ST/foreign.js":[function(require,module,exports) {
"use strict";

exports["new"] = function () {
  return {};
};

exports.peekImpl = function (just) {
  return function (nothing) {
    return function (k) {
      return function (m) {
        return function () {
          return {}.hasOwnProperty.call(m, k) ? just(m[k]) : nothing;
        };
      };
    };
  };
};

exports.poke = function (k) {
  return function (v) {
    return function (m) {
      return function () {
        m[k] = v;
        return m;
      };
    };
  };
};

exports["delete"] = function (k) {
  return function (m) {
    return function () {
      delete m[k];
      return m;
    };
  };
};
},{}],"../output/Foreign.Object.ST/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var peek = $foreign.peekImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
module.exports = {
  peek: peek,
  "new": $foreign["new"],
  poke: $foreign.poke,
  "delete": $foreign["delete"]
};
},{"./foreign.js":"../output/Foreign.Object.ST/foreign.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js"}],"../output/Halogen.VDom.Util/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Foreign_Object_ST = require("../Foreign.Object.ST/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var unsafeLookup = $foreign.unsafeGetAny;
var unsafeFreeze = Unsafe_Coerce.unsafeCoerce;
var pokeMutMap = $foreign.unsafeSetAny;
var newMutMap = Foreign_Object_ST["new"];
var deleteMutMap = $foreign.unsafeDeleteAny;
module.exports = {
  newMutMap: newMutMap,
  pokeMutMap: pokeMutMap,
  deleteMutMap: deleteMutMap,
  unsafeFreeze: unsafeFreeze,
  unsafeLookup: unsafeLookup,
  unsafeGetAny: $foreign.unsafeGetAny,
  unsafeHasAny: $foreign.unsafeHasAny,
  unsafeSetAny: $foreign.unsafeSetAny,
  unsafeDeleteAny: $foreign.unsafeDeleteAny,
  forE: $foreign.forE,
  forEachE: $foreign.forEachE,
  forInE: $foreign.forInE,
  replicateE: $foreign.replicateE,
  diffWithIxE: $foreign.diffWithIxE,
  diffWithKeyAndIxE: $foreign.diffWithKeyAndIxE,
  strMapWithIxE: $foreign.strMapWithIxE,
  refEq: $foreign.refEq,
  createTextNode: $foreign.createTextNode,
  setTextContent: $foreign.setTextContent,
  createElement: $foreign.createElement,
  insertChildIx: $foreign.insertChildIx,
  removeChild: $foreign.removeChild,
  parentNode: $foreign.parentNode,
  setAttribute: $foreign.setAttribute,
  removeAttribute: $foreign.removeAttribute,
  hasAttribute: $foreign.hasAttribute,
  addEventListener: $foreign.addEventListener,
  removeEventListener: $foreign.removeEventListener,
  jsUndefined: $foreign.jsUndefined
};
},{"./foreign.js":"../output/Halogen.VDom.Util/foreign.js","../Foreign.Object.ST/index.js":"../output/Foreign.Object.ST/index.js","../Unsafe.Coerce/index.js":"../output/Unsafe.Coerce/index.js"}],"../output/Web.DOM.Element/foreign.js":[function(require,module,exports) {
"use strict";

var getProp = function getProp(name) {
  return function (doctype) {
    return doctype[name];
  };
};

exports._namespaceURI = getProp("namespaceURI");
exports._prefix = getProp("prefix");
exports.localName = getProp("localName");
exports.tagName = getProp("tagName");

exports.id = function (node) {
  return function () {
    return node.id;
  };
};

exports.setId = function (id) {
  return function (node) {
    return function () {
      node.id = id;
      return {};
    };
  };
};

exports.className = function (node) {
  return function () {
    return node.className;
  };
};

exports.classList = function (element) {
  return function () {
    return element.classList;
  };
};

exports.setClassName = function (className) {
  return function (node) {
    return function () {
      node.className = className;
      return {};
    };
  };
};

exports.getElementsByTagName = function (localName) {
  return function (doc) {
    return function () {
      return doc.getElementsByTagName(localName);
    };
  };
};

exports._getElementsByTagNameNS = function (ns) {
  return function (localName) {
    return function (doc) {
      return function () {
        return doc.getElementsByTagNameNS(ns, localName);
      };
    };
  };
};

exports.getElementsByClassName = function (classNames) {
  return function (doc) {
    return function () {
      return doc.getElementsByClassName(classNames);
    };
  };
};

exports.setAttribute = function (name) {
  return function (value) {
    return function (element) {
      return function () {
        element.setAttribute(name, value);
        return {};
      };
    };
  };
};

exports._getAttribute = function (name) {
  return function (element) {
    return function () {
      return element.getAttribute(name);
    };
  };
};

exports.hasAttribute = function (name) {
  return function (element) {
    return function () {
      return element.hasAttribute(name);
    };
  };
};

exports.removeAttribute = function (name) {
  return function (element) {
    return function () {
      element.removeAttribute(name);
      return {};
    };
  };
}; // - CSSOM ---------------------------------------------------------------------


exports.scrollTop = function (node) {
  return function () {
    return node.scrollTop;
  };
};

exports.setScrollTop = function (scrollTop) {
  return function (node) {
    return function () {
      node.scrollTop = scrollTop;
      return {};
    };
  };
};

exports.scrollLeft = function (node) {
  return function () {
    return node.scrollLeft;
  };
};

exports.setScrollLeft = function (scrollLeft) {
  return function (node) {
    return function () {
      node.scrollLeft = scrollLeft;
      return {};
    };
  };
};

exports.scrollWidth = function (el) {
  return function () {
    return el.scrollWidth;
  };
};

exports.scrollHeight = function (el) {
  return function () {
    return el.scrollHeight;
  };
};

exports.clientTop = function (el) {
  return function () {
    return el.clientTop;
  };
};

exports.clientLeft = function (el) {
  return function () {
    return el.clientLeft;
  };
};

exports.clientWidth = function (el) {
  return function () {
    return el.clientWidth;
  };
};

exports.clientHeight = function (el) {
  return function () {
    return el.clientHeight;
  };
};
},{}],"../output/Web.DOM.Element/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;

var prefix = function prefix($0) {
  return Data_Nullable.toMaybe($foreign["_prefix"]($0));
};

var namespaceURI = function namespaceURI($1) {
  return Data_Nullable.toMaybe($foreign["_namespaceURI"]($1));
};

var getElementsByTagNameNS = function getElementsByTagNameNS($2) {
  return $foreign["_getElementsByTagNameNS"](Data_Nullable.toNullable($2));
};

var getAttribute = function getAttribute(attr) {
  var $3 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  var $4 = $foreign["_getAttribute"](attr);
  return function ($5) {
    return $3($4($5));
  };
};

var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("Element");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("Element");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("Element");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("Element");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("Element");
module.exports = {
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  namespaceURI: namespaceURI,
  prefix: prefix,
  getElementsByTagNameNS: getElementsByTagNameNS,
  getAttribute: getAttribute,
  localName: $foreign.localName,
  tagName: $foreign.tagName,
  id: $foreign.id,
  setId: $foreign.setId,
  className: $foreign.className,
  classList: $foreign.classList,
  setClassName: $foreign.setClassName,
  getElementsByTagName: $foreign.getElementsByTagName,
  getElementsByClassName: $foreign.getElementsByClassName,
  setAttribute: $foreign.setAttribute,
  hasAttribute: $foreign.hasAttribute,
  removeAttribute: $foreign.removeAttribute,
  scrollTop: $foreign.scrollTop,
  setScrollTop: $foreign.setScrollTop,
  scrollLeft: $foreign.scrollLeft,
  setScrollLeft: $foreign.setScrollLeft,
  scrollWidth: $foreign.scrollWidth,
  scrollHeight: $foreign.scrollHeight,
  clientTop: $foreign.clientTop,
  clientLeft: $foreign.clientLeft,
  clientWidth: $foreign.clientWidth,
  clientHeight: $foreign.clientHeight
};
},{"./foreign.js":"../output/Web.DOM.Element/foreign.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Nullable/index.js":"../output/Data.Nullable/index.js","../Effect/index.js":"../output/Effect/index.js","../Unsafe.Coerce/index.js":"../output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"../output/Web.Internal.FFI/index.js"}],"../output/Halogen.VDom.DOM/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Data_Array = require("../Data.Array/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Halogen_VDom_Machine = require("../Halogen.VDom.Machine/index.js");

var Halogen_VDom_Types = require("../Halogen.VDom.Types/index.js");

var Halogen_VDom_Util = require("../Halogen.VDom.Util/index.js");

var Web_DOM_Element = require("../Web.DOM.Element/index.js");

var VDomSpec = function VDomSpec(x) {
  return x;
};

var haltWidget = function haltWidget(v) {
  return Halogen_VDom_Machine.halt(v.widget);
};

var patchWidget = function patchWidget(state, vdom) {
  if (vdom instanceof Halogen_VDom_Types.Grafted) {
    return patchWidget(state, Halogen_VDom_Types.runGraft(vdom.value0));
  }

  ;

  if (vdom instanceof Halogen_VDom_Types.Widget) {
    var res = Halogen_VDom_Machine.step(state.widget, vdom.value0);
    var res$prime = Halogen_VDom_Machine.unStep(function (v) {
      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(v.value0, {
        build: state.build,
        widget: res
      }, patchWidget, haltWidget));
    })(res);
    return res$prime;
  }

  ;
  haltWidget(state);
  return state.build(vdom);
};

var haltText = function haltText(v) {
  var parent = Halogen_VDom_Util.parentNode(v.node);
  return Halogen_VDom_Util.removeChild(v.node, parent);
};

var patchText = function patchText(state, vdom) {
  if (vdom instanceof Halogen_VDom_Types.Grafted) {
    return patchText(state, Halogen_VDom_Types.runGraft(vdom.value0));
  }

  ;

  if (vdom instanceof Halogen_VDom_Types.Text) {
    if (state.value === vdom.value0) {
      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, state, patchText, haltText));
    }

    ;

    if (Data_Boolean.otherwise) {
      var nextState = {
        build: state.build,
        node: state.node,
        value: vdom.value0
      };
      Halogen_VDom_Util.setTextContent(vdom.value0, state.node);
      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchText, haltText));
    }

    ;
  }

  ;
  haltText(state);
  return state.build(vdom);
};

var haltKeyed = function haltKeyed(v) {
  var parent = Halogen_VDom_Util.parentNode(v.node);
  Halogen_VDom_Util.removeChild(v.node, parent);
  Halogen_VDom_Util.forInE(v.children, function (v1, s) {
    return Halogen_VDom_Machine.halt(s);
  });
  return Halogen_VDom_Machine.halt(v.attrs);
};

var haltElem = function haltElem(v) {
  var parent = Halogen_VDom_Util.parentNode(v.node);
  Halogen_VDom_Util.removeChild(v.node, parent);
  Halogen_VDom_Util.forEachE(v.children, Halogen_VDom_Machine.halt);
  return Halogen_VDom_Machine.halt(v.attrs);
};

var eqElemSpec = function eqElemSpec(ns1, v, ns2, v1) {
  var $56 = v === v1;

  if ($56) {
    if (ns1 instanceof Data_Maybe.Just && ns2 instanceof Data_Maybe.Just && ns1.value0 === ns2.value0) {
      return true;
    }

    ;

    if (ns1 instanceof Data_Maybe.Nothing && ns2 instanceof Data_Maybe.Nothing) {
      return true;
    }

    ;
    return false;
  }

  ;
  return false;
};

var patchElem = function patchElem(state, vdom) {
  if (vdom instanceof Halogen_VDom_Types.Grafted) {
    return patchElem(state, Halogen_VDom_Types.runGraft(vdom.value0));
  }

  ;

  if (vdom instanceof Halogen_VDom_Types.Elem && eqElemSpec(state.ns, state.name, vdom.value0, vdom.value1)) {
    var v = Data_Array.length(vdom.value3);
    var v1 = Data_Array.length(state.children);

    if (v1 === 0 && v === 0) {
      var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
      var nextState = {
        build: state.build,
        node: state.node,
        attrs: attrs2,
        ns: vdom.value0,
        name: vdom.value1,
        children: state.children
      };
      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchElem, haltElem));
    }

    ;

    var onThis = function onThis(ix, s) {
      return Halogen_VDom_Machine.halt(s);
    };

    var onThese = function onThese(ix, s, v2) {
      var res = Halogen_VDom_Machine.step(s, v2);
      Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), state.node);
      return res;
    };

    var onThat = function onThat(ix, v2) {
      var res = state.build(v2);
      Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), state.node);
      return res;
    };

    var children2 = Halogen_VDom_Util.diffWithIxE(state.children, vdom.value3, onThese, onThis, onThat);
    var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
    var nextState = {
      build: state.build,
      node: state.node,
      attrs: attrs2,
      ns: vdom.value0,
      name: vdom.value1,
      children: children2
    };
    return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchElem, haltElem));
  }

  ;
  haltElem(state);
  return state.build(vdom);
};

var patchKeyed = function patchKeyed(state, vdom) {
  if (vdom instanceof Halogen_VDom_Types.Grafted) {
    return patchKeyed(state, Halogen_VDom_Types.runGraft(vdom.value0));
  }

  ;

  if (vdom instanceof Halogen_VDom_Types.Keyed && eqElemSpec(state.ns, state.name, vdom.value0, vdom.value1)) {
    var v = Data_Array.length(vdom.value3);

    if (state.length === 0 && v === 0) {
      var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
      var nextState = {
        build: state.build,
        node: state.node,
        attrs: attrs2,
        ns: vdom.value0,
        name: vdom.value1,
        children: state.children,
        length: 0
      };
      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchKeyed, haltKeyed));
    }

    ;

    var onThis = function onThis(v2, s) {
      return Halogen_VDom_Machine.halt(s);
    };

    var onThese = function onThese(v2, ix$prime, s, v3) {
      var res = Halogen_VDom_Machine.step(s, v3.value1);
      Halogen_VDom_Util.insertChildIx(ix$prime, Halogen_VDom_Machine.extract(res), state.node);
      return res;
    };

    var onThat = function onThat(v2, ix, v3) {
      var res = state.build(v3.value1);
      Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), state.node);
      return res;
    };

    var children2 = Halogen_VDom_Util.diffWithKeyAndIxE(state.children, vdom.value3, Data_Tuple.fst, onThese, onThis, onThat);
    var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
    var nextState = {
      build: state.build,
      node: state.node,
      attrs: attrs2,
      ns: vdom.value0,
      name: vdom.value1,
      children: children2,
      length: v
    };
    return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchKeyed, haltKeyed));
  }

  ;
  haltKeyed(state);
  return state.build(vdom);
};

var buildWidget = function buildWidget(v, build, w) {
  var res = v.buildWidget(v)(w);
  var res$prime = Halogen_VDom_Machine.unStep(function (v1) {
    return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(v1.value0, {
      build: build,
      widget: res
    }, patchWidget, haltWidget));
  })(res);
  return res$prime;
};

var buildText = function buildText(v, build, s) {
  var node = Halogen_VDom_Util.createTextNode(s, v.document);
  var state = {
    build: build,
    node: node,
    value: s
  };
  return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchText, haltText));
};

var buildKeyed = function buildKeyed(v, build, ns1, name1, as1, ch1) {
  var el = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(ns1), name1, v.document);
  var node = Web_DOM_Element.toNode(el);

  var onChild = function onChild(k, ix, v1) {
    var res = build(v1.value1);
    Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), node);
    return res;
  };

  var children = Halogen_VDom_Util.strMapWithIxE(ch1, Data_Tuple.fst, onChild);
  var attrs = v.buildAttributes(el)(as1);
  var state = {
    build: build,
    node: node,
    attrs: attrs,
    ns: ns1,
    name: name1,
    children: children,
    length: Data_Array.length(ch1)
  };
  return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchKeyed, haltKeyed));
};

var buildElem = function buildElem(v, build, ns1, name1, as1, ch1) {
  var el = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(ns1), name1, v.document);
  var node = Web_DOM_Element.toNode(el);

  var onChild = function onChild(ix, child) {
    var res = build(child);
    Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), node);
    return res;
  };

  var children = Halogen_VDom_Util.forE(ch1, onChild);
  var attrs = v.buildAttributes(el)(as1);
  var state = {
    build: build,
    node: node,
    attrs: attrs,
    ns: ns1,
    name: name1,
    children: children
  };
  return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchElem, haltElem));
};

var buildVDom = function buildVDom(spec) {
  var build = function build(v) {
    if (v instanceof Halogen_VDom_Types.Text) {
      return buildText(spec, build, v.value0);
    }

    ;

    if (v instanceof Halogen_VDom_Types.Elem) {
      return buildElem(spec, build, v.value0, v.value1, v.value2, v.value3);
    }

    ;

    if (v instanceof Halogen_VDom_Types.Keyed) {
      return buildKeyed(spec, build, v.value0, v.value1, v.value2, v.value3);
    }

    ;

    if (v instanceof Halogen_VDom_Types.Widget) {
      return buildWidget(spec, build, v.value0);
    }

    ;

    if (v instanceof Halogen_VDom_Types.Grafted) {
      return build(Halogen_VDom_Types.runGraft(v.value0));
    }

    ;
    throw new Error("Failed pattern match at Halogen.VDom.DOM (line 58, column 27 - line 63, column 52): " + [v.constructor.name]);
  };

  return build;
};

module.exports = {
  VDomSpec: VDomSpec,
  buildVDom: buildVDom,
  buildText: buildText,
  buildElem: buildElem,
  buildKeyed: buildKeyed,
  buildWidget: buildWidget
};
},{"../Data.Array/index.js":"../output/Data.Array/index.js","../Data.Boolean/index.js":"../output/Data.Boolean/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Nullable/index.js":"../output/Data.Nullable/index.js","../Data.Tuple/index.js":"../output/Data.Tuple/index.js","../Halogen.VDom.Machine/index.js":"../output/Halogen.VDom.Machine/index.js","../Halogen.VDom.Types/index.js":"../output/Halogen.VDom.Types/index.js","../Halogen.VDom.Util/index.js":"../output/Halogen.VDom.Util/index.js","../Web.DOM.Element/index.js":"../output/Web.DOM.Element/index.js"}],"../output/Halogen.VDom.Thunk/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Halogen_VDom_DOM = require("../Halogen.VDom.DOM/index.js");

var Halogen_VDom_Machine = require("../Halogen.VDom.Machine/index.js");

var Halogen_VDom_Util = require("../Halogen.VDom.Util/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Thunk = function () {
  function Thunk(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  ;

  Thunk.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return function (value3) {
          return new Thunk(value0, value1, value2, value3);
        };
      };
    };
  };

  return Thunk;
}();

var unsafeThunkId = Unsafe_Coerce.unsafeCoerce;

var unsafeEqThunk = function unsafeEqThunk(v, v1) {
  return Halogen_VDom_Util.refEq(v.value0, v1.value0) && Halogen_VDom_Util.refEq(v.value1, v1.value1) && v.value1(v.value3, v1.value3);
};

var thunk = function thunk(tid, eqFn, f, a) {
  return new Thunk(tid, eqFn, f, a);
};

var thunk1 = function thunk1(f, a) {
  return thunk(unsafeThunkId(f), Halogen_VDom_Util.refEq, f, a);
};

var thunk2 = function () {
  var eqFn = function eqFn(a, b) {
    return Halogen_VDom_Util.refEq(a["_1"], b["_1"]) && Halogen_VDom_Util.refEq(a["_2"], b["_2"]);
  };

  return function (f, a, b) {
    return thunk(unsafeThunkId(f), eqFn, function (v) {
      return f(v["_1"])(v["_2"]);
    }, {
      "_1": a,
      "_2": b
    });
  };
}();

var thunk3 = function () {
  var eqFn = function eqFn(a, b) {
    return Halogen_VDom_Util.refEq(a["_1"], b["_1"]) && Halogen_VDom_Util.refEq(a["_2"], b["_2"]) && Halogen_VDom_Util.refEq(a["_3"], b["_3"]);
  };

  return function (f, a, b, c) {
    return thunk(unsafeThunkId(f), eqFn, function (v) {
      return f(v["_1"])(v["_2"])(v["_3"]);
    }, {
      "_1": a,
      "_2": b,
      "_3": c
    });
  };
}();

var thunked = function thunked(eqFn) {
  return function (f) {
    var tid = unsafeThunkId({
      f: f
    });
    var eqFn$prime = Data_Function_Uncurried.mkFn2(eqFn);
    return function (a) {
      return thunk(tid, eqFn$prime, f, a);
    };
  };
};

var runThunk = function runThunk(v) {
  return v.value2(v.value3);
};

var mapThunk = function mapThunk(k) {
  return function (v) {
    return new Thunk(v.value0, v.value1, function ($46) {
      return k(v.value2($46));
    }, v.value3);
  };
};

var hoist = mapThunk;

var functorThunk = function functorThunk(dictFunctor) {
  return new Data_Functor.Functor(function (f) {
    return function (v) {
      return new Thunk(v.value0, v.value1, function () {
        var $47 = Data_Functor.map(dictFunctor)(f);
        return function ($48) {
          return $47(v.value2($48));
        };
      }(), v.value3);
    };
  });
};

var buildThunk = function buildThunk(toVDom) {
  var haltThunk = function haltThunk(state) {
    return Halogen_VDom_Machine.halt(state.vdom);
  };

  var patchThunk = function patchThunk(state, t2) {
    var $43 = unsafeEqThunk(state.thunk, t2);

    if ($43) {
      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(state.vdom), state, patchThunk, haltThunk));
    }

    ;
    var vdom = Halogen_VDom_Machine.step(state.vdom, toVDom(runThunk(t2)));
    return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(vdom), {
      vdom: vdom,
      thunk: t2
    }, patchThunk, haltThunk));
  };

  var renderThunk = function renderThunk(spec) {
    return function (t) {
      var vdom = Halogen_VDom_DOM.buildVDom(spec)(toVDom(runThunk(t)));
      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(vdom), {
        thunk: t,
        vdom: vdom
      }, patchThunk, haltThunk));
    };
  };

  return renderThunk;
};

module.exports = {
  buildThunk: buildThunk,
  runThunk: runThunk,
  hoist: hoist,
  mapThunk: mapThunk,
  thunked: thunked,
  thunk1: thunk1,
  thunk2: thunk2,
  thunk3: thunk3,
  functorThunk: functorThunk
};
},{"../Data.Function.Uncurried/index.js":"../output/Data.Function.Uncurried/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Halogen.VDom.DOM/index.js":"../output/Halogen.VDom.DOM/index.js","../Halogen.VDom.Machine/index.js":"../output/Halogen.VDom.Machine/index.js","../Halogen.VDom.Util/index.js":"../output/Halogen.VDom.Util/index.js","../Unsafe.Coerce/index.js":"../output/Unsafe.Coerce/index.js"}],"../output/Halogen.Component/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Bifunctor_Wrap = require("../Data.Bifunctor.Wrap/index.js");

var Data_Coyoneda = require("../Data.Coyoneda/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Halogen_Data_Slot = require("../Halogen.Data.Slot/index.js");

var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM/index.js");

var Halogen_Query_HalogenQ = require("../Halogen.Query.HalogenQ/index.js");

var Halogen_VDom_Thunk = require("../Halogen.VDom.Thunk/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var ComponentSlot = function () {
  function ComponentSlot(value0) {
    this.value0 = value0;
  }

  ;

  ComponentSlot.create = function (value0) {
    return new ComponentSlot(value0);
  };

  return ComponentSlot;
}();

var ThunkSlot = function () {
  function ThunkSlot(value0) {
    this.value0 = value0;
  }

  ;

  ThunkSlot.create = function (value0) {
    return new ThunkSlot(value0);
  };

  return ThunkSlot;
}();

var unComponentSlot = Unsafe_Coerce.unsafeCoerce;
var unComponent = Unsafe_Coerce.unsafeCoerce;

var mkEval = function mkEval(args) {
  return function (v) {
    if (v instanceof Halogen_Query_HalogenQ.Initialize) {
      return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(args.handleAction)(args.initialize))(v.value0);
    }

    ;

    if (v instanceof Halogen_Query_HalogenQ.Finalize) {
      return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(args.handleAction)(args.finalize))(v.value0);
    }

    ;

    if (v instanceof Halogen_Query_HalogenQ.Receive) {
      return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(args.handleAction)(args.receive(v.value0)))(v.value1);
    }

    ;

    if (v instanceof Halogen_Query_HalogenQ.Action) {
      return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(args.handleAction(v.value0))(v.value1);
    }

    ;

    if (v instanceof Halogen_Query_HalogenQ.Query) {
      return Data_Coyoneda.unCoyoneda(function (g) {
        var $28 = Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(Data_Maybe.maybe(v.value1(Data_Unit.unit))(g));
        return function ($29) {
          return $28(args.handleQuery($29));
        };
      })(v.value0);
    }

    ;
    throw new Error("Failed pattern match at Halogen.Component (line 187, column 15 - line 197, column 70): " + [v.constructor.name]);
  };
};

var mkComponentSlot = Unsafe_Coerce.unsafeCoerce;
var mkComponent = Unsafe_Coerce.unsafeCoerce;

var hoistSlot = function hoistSlot(dictBifunctor) {
  return function (dictFunctor) {
    return function (nat) {
      return function (v) {
        if (v instanceof ComponentSlot) {
          return unComponentSlot(function (slot) {
            return ComponentSlot.create(mkComponentSlot({
              get: slot.get,
              pop: slot.pop,
              set: slot.set,
              component: hoist(dictBifunctor)(dictFunctor)(nat)(slot.component),
              input: slot.input,
              output: slot.output
            }));
          })(v.value0);
        }

        ;

        if (v instanceof ThunkSlot) {
          return ThunkSlot.create(Halogen_VDom_Thunk.hoist(Data_Bifunctor.lmap(dictBifunctor)(hoistSlot(dictBifunctor)(dictFunctor)(nat)))(v.value0));
        }

        ;
        throw new Error("Failed pattern match at Halogen.Component (line 286, column 17 - line 291, column 53): " + [v.constructor.name]);
      };
    };
  };
};

var hoist = function hoist(dictBifunctor) {
  return function (dictFunctor) {
    return function (nat) {
      return unComponent(function (c) {
        return mkComponent({
          initialState: c.initialState,
          render: function () {
            var $30 = Data_Bifunctor.lmap(dictBifunctor)(hoistSlot(dictBifunctor)(dictFunctor)(nat));
            return function ($31) {
              return $30(c.render($31));
            };
          }(),
          "eval": function () {
            var $32 = Halogen_Query_HalogenM.hoist(dictFunctor)(nat);
            return function ($33) {
              return $32(c["eval"]($33));
            };
          }()
        });
      });
    };
  };
};

var functorComponentSlotBox = new Data_Functor.Functor(function (f) {
  return unComponentSlot(function (slot) {
    return mkComponentSlot({
      get: slot.get,
      pop: slot.pop,
      set: slot.set,
      component: slot.component,
      input: slot.input,
      output: Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(slot.output)
    });
  });
});

var functorComponentSlot = function functorComponentSlot(dictBifunctor) {
  return new Data_Functor.Functor(function (f) {
    return function (v) {
      if (v instanceof ComponentSlot) {
        return new ComponentSlot(Data_Functor.map(functorComponentSlotBox)(f)(v.value0));
      }

      ;

      if (v instanceof ThunkSlot) {
        return new ThunkSlot(Halogen_VDom_Thunk.mapThunk(function () {
          var $34 = Data_Newtype.under(Data_Bifunctor_Wrap.newtypeWrap)(Data_Bifunctor_Wrap.newtypeWrap)(Data_Bifunctor_Wrap.Wrap)(Data_Functor.map(Data_Bifunctor_Wrap.functorWrap(dictBifunctor))(f));
          var $35 = Data_Bifunctor.lmap(dictBifunctor)(Data_Functor.map(functorComponentSlot(dictBifunctor))(f));
          return function ($36) {
            return $34($35($36));
          };
        }())(v.value0));
      }

      ;
      throw new Error("Failed pattern match at Halogen.Component (line 215, column 11 - line 217, column 94): " + [v.constructor.name]);
    };
  });
};

var defaultEval = {
  handleAction: Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit)),
  handleQuery: Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.Nothing.value)),
  receive: Data_Function["const"](Data_Maybe.Nothing.value),
  initialize: Data_Maybe.Nothing.value,
  finalize: Data_Maybe.Nothing.value
};

var componentSlot = function componentSlot(dictCons) {
  return function (dictIsSymbol) {
    return function (dictOrd) {
      return function (label) {
        return function (p) {
          return function (comp) {
            return function (input) {
              return function (output) {
                return mkComponentSlot({
                  get: Halogen_Data_Slot.lookup()(dictIsSymbol)(dictOrd)(label)(p),
                  pop: Halogen_Data_Slot.pop()(dictIsSymbol)(dictOrd)(label)(p),
                  set: Halogen_Data_Slot.insert()(dictIsSymbol)(dictOrd)(label)(p),
                  component: comp,
                  input: input,
                  output: output
                });
              };
            };
          };
        };
      };
    };
  };
};

module.exports = {
  mkComponent: mkComponent,
  unComponent: unComponent,
  hoist: hoist,
  mkEval: mkEval,
  defaultEval: defaultEval,
  ComponentSlot: ComponentSlot,
  ThunkSlot: ThunkSlot,
  componentSlot: componentSlot,
  mkComponentSlot: mkComponentSlot,
  unComponentSlot: unComponentSlot,
  hoistSlot: hoistSlot,
  functorComponentSlotBox: functorComponentSlotBox,
  functorComponentSlot: functorComponentSlot
};
},{"../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Data.Bifunctor/index.js":"../output/Data.Bifunctor/index.js","../Data.Bifunctor.Wrap/index.js":"../output/Data.Bifunctor.Wrap/index.js","../Data.Coyoneda/index.js":"../output/Data.Coyoneda/index.js","../Data.Foldable/index.js":"../output/Data.Foldable/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js","../Halogen.Data.Slot/index.js":"../output/Halogen.Data.Slot/index.js","../Halogen.Query.HalogenM/index.js":"../output/Halogen.Query.HalogenM/index.js","../Halogen.Query.HalogenQ/index.js":"../output/Halogen.Query.HalogenQ/index.js","../Halogen.VDom.Thunk/index.js":"../output/Halogen.VDom.Thunk/index.js","../Unsafe.Coerce/index.js":"../output/Unsafe.Coerce/index.js"}],"../output/DOM.HTML.Indexed.ButtonType/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var ButtonButton = function () {
  function ButtonButton() {}

  ;
  ButtonButton.value = new ButtonButton();
  return ButtonButton;
}();

var ButtonSubmit = function () {
  function ButtonSubmit() {}

  ;
  ButtonSubmit.value = new ButtonSubmit();
  return ButtonSubmit;
}();

var ButtonReset = function () {
  function ButtonReset() {}

  ;
  ButtonReset.value = new ButtonReset();
  return ButtonReset;
}();

var renderButtonType = function renderButtonType(v) {
  if (v instanceof ButtonButton) {
    return "button";
  }

  ;

  if (v instanceof ButtonSubmit) {
    return "submit";
  }

  ;

  if (v instanceof ButtonReset) {
    return "reset";
  }

  ;
  throw new Error("Failed pattern match at DOM.HTML.Indexed.ButtonType (line 9, column 20 - line 12, column 25): " + [v.constructor.name]);
};

module.exports = {
  ButtonButton: ButtonButton,
  ButtonSubmit: ButtonSubmit,
  ButtonReset: ButtonReset,
  renderButtonType: renderButtonType
};
},{}],"../output/DOM.HTML.Indexed.CrossOriginValue/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Anonymous = function () {
  function Anonymous() {}

  ;
  Anonymous.value = new Anonymous();
  return Anonymous;
}();

var UseCredentials = function () {
  function UseCredentials() {}

  ;
  UseCredentials.value = new UseCredentials();
  return UseCredentials;
}();

var renderCrossOriginValue = function renderCrossOriginValue(v) {
  if (v instanceof Anonymous) {
    return "anonymous";
  }

  ;

  if (v instanceof UseCredentials) {
    return "use-credentials";
  }

  ;
  throw new Error("Failed pattern match at DOM.HTML.Indexed.CrossOriginValue (line 8, column 26 - line 10, column 38): " + [v.constructor.name]);
};

module.exports = {
  Anonymous: Anonymous,
  UseCredentials: UseCredentials,
  renderCrossOriginValue: renderCrossOriginValue
};
},{}],"../output/DOM.HTML.Indexed.DirValue/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var DirLTR = function () {
  function DirLTR() {}

  ;
  DirLTR.value = new DirLTR();
  return DirLTR;
}();

var DirRTL = function () {
  function DirRTL() {}

  ;
  DirRTL.value = new DirRTL();
  return DirRTL;
}();

var DirAuto = function () {
  function DirAuto() {}

  ;
  DirAuto.value = new DirAuto();
  return DirAuto;
}();

var renderDirValue = function renderDirValue(v) {
  if (v instanceof DirLTR) {
    return "ltr";
  }

  ;

  if (v instanceof DirRTL) {
    return "rtl";
  }

  ;

  if (v instanceof DirAuto) {
    return "auto";
  }

  ;
  throw new Error("Failed pattern match at DOM.HTML.Indexed.DirValue (line 9, column 18 - line 12, column 20): " + [v.constructor.name]);
};

module.exports = {
  DirLTR: DirLTR,
  DirRTL: DirRTL,
  DirAuto: DirAuto,
  renderDirValue: renderDirValue
};
},{}],"../output/DOM.HTML.Indexed.FormMethod/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var POST = function () {
  function POST() {}

  ;
  POST.value = new POST();
  return POST;
}();

var GET = function () {
  function GET() {}

  ;
  GET.value = new GET();
  return GET;
}();

var renderFormMethod = function renderFormMethod(v) {
  if (v instanceof POST) {
    return "post";
  }

  ;

  if (v instanceof GET) {
    return "get";
  }

  ;
  throw new Error("Failed pattern match at DOM.HTML.Indexed.FormMethod (line 8, column 20 - line 10, column 15): " + [v.constructor.name]);
};

module.exports = {
  POST: POST,
  GET: GET,
  renderFormMethod: renderFormMethod
};
},{}],"../output/Data.String.Common/foreign.js":[function(require,module,exports) {
"use strict";

exports._localeCompare = function (lt) {
  return function (eq) {
    return function (gt) {
      return function (s1) {
        return function (s2) {
          var result = s1.localeCompare(s2);
          return result < 0 ? lt : result > 0 ? gt : eq;
        };
      };
    };
  };
};

exports.replace = function (s1) {
  return function (s2) {
    return function (s3) {
      return s3.replace(s1, s2);
    };
  };
};

exports.replaceAll = function (s1) {
  return function (s2) {
    return function (s3) {
      return s3.replace(new RegExp(s1.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"), "g"), s2); // eslint-disable-line no-useless-escape
    };
  };
};

exports.split = function (sep) {
  return function (s) {
    return s.split(sep);
  };
};

exports.toLower = function (s) {
  return s.toLowerCase();
};

exports.toUpper = function (s) {
  return s.toUpperCase();
};

exports.trim = function (s) {
  return s.trim();
};

exports.joinWith = function (s) {
  return function (xs) {
    return xs.join(s);
  };
};
},{}],"../output/Data.String.Common/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var $$null = function $$null(s) {
  return s === "";
};

var localeCompare = $foreign["_localeCompare"](Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
module.exports = {
  "null": $$null,
  localeCompare: localeCompare,
  replace: $foreign.replace,
  replaceAll: $foreign.replaceAll,
  split: $foreign.split,
  toLower: $foreign.toLower,
  toUpper: $foreign.toUpper,
  trim: $foreign.trim,
  joinWith: $foreign.joinWith
};
},{"./foreign.js":"../output/Data.String.Common/foreign.js","../Data.Ordering/index.js":"../output/Data.Ordering/index.js"}],"../output/DOM.HTML.Indexed.InputAcceptType/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Data_Functor = require("../Data.Functor/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_String_Common = require("../Data.String.Common/index.js");

var AcceptMediaType = function () {
  function AcceptMediaType(value0) {
    this.value0 = value0;
  }

  ;

  AcceptMediaType.create = function (value0) {
    return new AcceptMediaType(value0);
  };

  return AcceptMediaType;
}();

var AcceptFileExtension = function () {
  function AcceptFileExtension(value0) {
    this.value0 = value0;
  }

  ;

  AcceptFileExtension.create = function (value0) {
    return new AcceptFileExtension(value0);
  };

  return AcceptFileExtension;
}();

var InputAcceptType = function InputAcceptType(x) {
  return x;
};

var semigroupInputAcceptType = new Data_Semigroup.Semigroup(function (v) {
  return function (v1) {
    return Data_Semigroup.append(Data_Semigroup.semigroupArray)(v)(v1);
  };
});

var renderInputAcceptTypeAtom = function renderInputAcceptTypeAtom(v) {
  if (v instanceof AcceptMediaType) {
    return v.value0;
  }

  ;

  if (v instanceof AcceptFileExtension) {
    return v.value0;
  }

  ;
  throw new Error("Failed pattern match at DOM.HTML.Indexed.InputAcceptType (line 28, column 29 - line 30, column 33): " + [v.constructor.name]);
};

var renderInputAcceptType = function renderInputAcceptType(v) {
  return Data_String_Common.joinWith(",")(Data_Functor.map(Data_Functor.functorArray)(renderInputAcceptTypeAtom)(v));
};

var mediaType = function mediaType(mt) {
  return [new AcceptMediaType(mt)];
};

var extension = function extension(ext) {
  return [new AcceptFileExtension(ext)];
};

module.exports = {
  InputAcceptType: InputAcceptType,
  mediaType: mediaType,
  extension: extension,
  AcceptMediaType: AcceptMediaType,
  AcceptFileExtension: AcceptFileExtension,
  renderInputAcceptType: renderInputAcceptType,
  renderInputAcceptTypeAtom: renderInputAcceptTypeAtom,
  semigroupInputAcceptType: semigroupInputAcceptType
};
},{"../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.String.Common/index.js":"../output/Data.String.Common/index.js"}],"../output/DOM.HTML.Indexed.InputType/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var InputButton = function () {
  function InputButton() {}

  ;
  InputButton.value = new InputButton();
  return InputButton;
}();

var InputCheckbox = function () {
  function InputCheckbox() {}

  ;
  InputCheckbox.value = new InputCheckbox();
  return InputCheckbox;
}();

var InputColor = function () {
  function InputColor() {}

  ;
  InputColor.value = new InputColor();
  return InputColor;
}();

var InputDate = function () {
  function InputDate() {}

  ;
  InputDate.value = new InputDate();
  return InputDate;
}();

var InputDatetimeLocal = function () {
  function InputDatetimeLocal() {}

  ;
  InputDatetimeLocal.value = new InputDatetimeLocal();
  return InputDatetimeLocal;
}();

var InputEmail = function () {
  function InputEmail() {}

  ;
  InputEmail.value = new InputEmail();
  return InputEmail;
}();

var InputFile = function () {
  function InputFile() {}

  ;
  InputFile.value = new InputFile();
  return InputFile;
}();

var InputHidden = function () {
  function InputHidden() {}

  ;
  InputHidden.value = new InputHidden();
  return InputHidden;
}();

var InputImage = function () {
  function InputImage() {}

  ;
  InputImage.value = new InputImage();
  return InputImage;
}();

var InputMonth = function () {
  function InputMonth() {}

  ;
  InputMonth.value = new InputMonth();
  return InputMonth;
}();

var InputNumber = function () {
  function InputNumber() {}

  ;
  InputNumber.value = new InputNumber();
  return InputNumber;
}();

var InputPassword = function () {
  function InputPassword() {}

  ;
  InputPassword.value = new InputPassword();
  return InputPassword;
}();

var InputRadio = function () {
  function InputRadio() {}

  ;
  InputRadio.value = new InputRadio();
  return InputRadio;
}();

var InputRange = function () {
  function InputRange() {}

  ;
  InputRange.value = new InputRange();
  return InputRange;
}();

var InputReset = function () {
  function InputReset() {}

  ;
  InputReset.value = new InputReset();
  return InputReset;
}();

var InputSearch = function () {
  function InputSearch() {}

  ;
  InputSearch.value = new InputSearch();
  return InputSearch;
}();

var InputSubmit = function () {
  function InputSubmit() {}

  ;
  InputSubmit.value = new InputSubmit();
  return InputSubmit;
}();

var InputTel = function () {
  function InputTel() {}

  ;
  InputTel.value = new InputTel();
  return InputTel;
}();

var InputText = function () {
  function InputText() {}

  ;
  InputText.value = new InputText();
  return InputText;
}();

var InputTime = function () {
  function InputTime() {}

  ;
  InputTime.value = new InputTime();
  return InputTime;
}();

var InputUrl = function () {
  function InputUrl() {}

  ;
  InputUrl.value = new InputUrl();
  return InputUrl;
}();

var InputWeek = function () {
  function InputWeek() {}

  ;
  InputWeek.value = new InputWeek();
  return InputWeek;
}();

var renderInputType = function renderInputType(v) {
  if (v instanceof InputButton) {
    return "button";
  }

  ;

  if (v instanceof InputCheckbox) {
    return "checkbox";
  }

  ;

  if (v instanceof InputColor) {
    return "color";
  }

  ;

  if (v instanceof InputDate) {
    return "date";
  }

  ;

  if (v instanceof InputDatetimeLocal) {
    return "datetime-local";
  }

  ;

  if (v instanceof InputEmail) {
    return "email";
  }

  ;

  if (v instanceof InputFile) {
    return "file";
  }

  ;

  if (v instanceof InputHidden) {
    return "hidden";
  }

  ;

  if (v instanceof InputImage) {
    return "image";
  }

  ;

  if (v instanceof InputMonth) {
    return "month";
  }

  ;

  if (v instanceof InputNumber) {
    return "number";
  }

  ;

  if (v instanceof InputPassword) {
    return "password";
  }

  ;

  if (v instanceof InputRadio) {
    return "radio";
  }

  ;

  if (v instanceof InputRange) {
    return "range";
  }

  ;

  if (v instanceof InputReset) {
    return "reset";
  }

  ;

  if (v instanceof InputSearch) {
    return "search";
  }

  ;

  if (v instanceof InputSubmit) {
    return "submit";
  }

  ;

  if (v instanceof InputTel) {
    return "tel";
  }

  ;

  if (v instanceof InputText) {
    return "text";
  }

  ;

  if (v instanceof InputTime) {
    return "time";
  }

  ;

  if (v instanceof InputUrl) {
    return "url";
  }

  ;

  if (v instanceof InputWeek) {
    return "week";
  }

  ;
  throw new Error("Failed pattern match at DOM.HTML.Indexed.InputType (line 28, column 19 - line 50, column 22): " + [v.constructor.name]);
};

module.exports = {
  InputButton: InputButton,
  InputCheckbox: InputCheckbox,
  InputColor: InputColor,
  InputDate: InputDate,
  InputDatetimeLocal: InputDatetimeLocal,
  InputEmail: InputEmail,
  InputFile: InputFile,
  InputHidden: InputHidden,
  InputImage: InputImage,
  InputMonth: InputMonth,
  InputNumber: InputNumber,
  InputPassword: InputPassword,
  InputRadio: InputRadio,
  InputRange: InputRange,
  InputReset: InputReset,
  InputSearch: InputSearch,
  InputSubmit: InputSubmit,
  InputTel: InputTel,
  InputText: InputText,
  InputTime: InputTime,
  InputUrl: InputUrl,
  InputWeek: InputWeek,
  renderInputType: renderInputType
};
},{}],"../output/DOM.HTML.Indexed.KindValue/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var KindSubtitles = function () {
  function KindSubtitles() {}

  ;
  KindSubtitles.value = new KindSubtitles();
  return KindSubtitles;
}();

var KindCaptions = function () {
  function KindCaptions() {}

  ;
  KindCaptions.value = new KindCaptions();
  return KindCaptions;
}();

var KindDescriptions = function () {
  function KindDescriptions() {}

  ;
  KindDescriptions.value = new KindDescriptions();
  return KindDescriptions;
}();

var KindChapters = function () {
  function KindChapters() {}

  ;
  KindChapters.value = new KindChapters();
  return KindChapters;
}();

var KindMetadata = function () {
  function KindMetadata() {}

  ;
  KindMetadata.value = new KindMetadata();
  return KindMetadata;
}();

var renderKindValue = function renderKindValue(v) {
  if (v instanceof KindSubtitles) {
    return "subtitles";
  }

  ;

  if (v instanceof KindCaptions) {
    return "captions";
  }

  ;

  if (v instanceof KindDescriptions) {
    return "descriptions";
  }

  ;

  if (v instanceof KindChapters) {
    return "chapters";
  }

  ;

  if (v instanceof KindMetadata) {
    return "metadata";
  }

  ;
  throw new Error("Failed pattern match at DOM.HTML.Indexed.KindValue (line 11, column 19 - line 16, column 29): " + [v.constructor.name]);
};

module.exports = {
  KindSubtitles: KindSubtitles,
  KindCaptions: KindCaptions,
  KindDescriptions: KindDescriptions,
  KindChapters: KindChapters,
  KindMetadata: KindMetadata,
  renderKindValue: renderKindValue
};
},{}],"../output/DOM.HTML.Indexed.MenuType/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var MenuList = function () {
  function MenuList() {}

  ;
  MenuList.value = new MenuList();
  return MenuList;
}();

var MenuContext = function () {
  function MenuContext() {}

  ;
  MenuContext.value = new MenuContext();
  return MenuContext;
}();

var MenuToolbar = function () {
  function MenuToolbar() {}

  ;
  MenuToolbar.value = new MenuToolbar();
  return MenuToolbar;
}();

var renderMenuType = function renderMenuType(v) {
  if (v instanceof MenuList) {
    return "list";
  }

  ;

  if (v instanceof MenuContext) {
    return "context";
  }

  ;

  if (v instanceof MenuToolbar) {
    return "toolbar";
  }

  ;
  throw new Error("Failed pattern match at DOM.HTML.Indexed.MenuType (line 9, column 18 - line 12, column 27): " + [v.constructor.name]);
};

module.exports = {
  MenuList: MenuList,
  MenuContext: MenuContext,
  MenuToolbar: MenuToolbar,
  renderMenuType: renderMenuType
};
},{}],"../output/DOM.HTML.Indexed.MenuitemType/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var MenuitemCommand = function () {
  function MenuitemCommand() {}

  ;
  MenuitemCommand.value = new MenuitemCommand();
  return MenuitemCommand;
}();

var MenuitemCheckbox = function () {
  function MenuitemCheckbox() {}

  ;
  MenuitemCheckbox.value = new MenuitemCheckbox();
  return MenuitemCheckbox;
}();

var MenuitemRadio = function () {
  function MenuitemRadio() {}

  ;
  MenuitemRadio.value = new MenuitemRadio();
  return MenuitemRadio;
}();

var renderMenuitemType = function renderMenuitemType(v) {
  if (v instanceof MenuitemCommand) {
    return "command";
  }

  ;

  if (v instanceof MenuitemCheckbox) {
    return "checkbox";
  }

  ;

  if (v instanceof MenuitemRadio) {
    return "radio";
  }

  ;
  throw new Error("Failed pattern match at DOM.HTML.Indexed.MenuitemType (line 9, column 22 - line 12, column 27): " + [v.constructor.name]);
};

module.exports = {
  MenuitemCommand: MenuitemCommand,
  MenuitemCheckbox: MenuitemCheckbox,
  MenuitemRadio: MenuitemRadio,
  renderMenuitemType: renderMenuitemType
};
},{}],"../output/DOM.HTML.Indexed.OnOff/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var On = function () {
  function On() {}

  ;
  On.value = new On();
  return On;
}();

var Off = function () {
  function Off() {}

  ;
  Off.value = new Off();
  return Off;
}();

var renderOnOff = function renderOnOff(v) {
  if (v instanceof On) {
    return "on";
  }

  ;

  if (v instanceof Off) {
    return "off";
  }

  ;
  throw new Error("Failed pattern match at DOM.HTML.Indexed.OnOff (line 8, column 15 - line 10, column 15): " + [v.constructor.name]);
};

module.exports = {
  On: On,
  Off: Off,
  renderOnOff: renderOnOff
};
},{}],"../output/DOM.HTML.Indexed.OrderedListType/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Uppercase = function () {
  function Uppercase() {}

  ;
  Uppercase.value = new Uppercase();
  return Uppercase;
}();

var Lowercase = function () {
  function Lowercase() {}

  ;
  Lowercase.value = new Lowercase();
  return Lowercase;
}();

var NumeralDecimal = function () {
  function NumeralDecimal() {}

  ;
  NumeralDecimal.value = new NumeralDecimal();
  return NumeralDecimal;
}();

var NumeralRoman = function () {
  function NumeralRoman(value0) {
    this.value0 = value0;
  }

  ;

  NumeralRoman.create = function (value0) {
    return new NumeralRoman(value0);
  };

  return NumeralRoman;
}();

var OrderedListNumeric = function () {
  function OrderedListNumeric(value0) {
    this.value0 = value0;
  }

  ;

  OrderedListNumeric.create = function (value0) {
    return new OrderedListNumeric(value0);
  };

  return OrderedListNumeric;
}();

var OrderedListAlphabetic = function () {
  function OrderedListAlphabetic(value0) {
    this.value0 = value0;
  }

  ;

  OrderedListAlphabetic.create = function (value0) {
    return new OrderedListAlphabetic(value0);
  };

  return OrderedListAlphabetic;
}();

var renderOrderedListType = function renderOrderedListType(v) {
  if (v instanceof OrderedListNumeric && v.value0 instanceof NumeralDecimal) {
    return "1";
  }

  ;

  if (v instanceof OrderedListNumeric && v.value0 instanceof NumeralRoman && v.value0.value0 instanceof Lowercase) {
    return "i";
  }

  ;

  if (v instanceof OrderedListNumeric && v.value0 instanceof NumeralRoman && v.value0.value0 instanceof Uppercase) {
    return "I";
  }

  ;

  if (v instanceof OrderedListAlphabetic && v.value0 instanceof Lowercase) {
    return "a";
  }

  ;

  if (v instanceof OrderedListAlphabetic && v.value0 instanceof Uppercase) {
    return "A";
  }

  ;
  throw new Error("Failed pattern match at DOM.HTML.Indexed.OrderedListType (line 16, column 25 - line 21, column 41): " + [v.constructor.name]);
};

module.exports = {
  Uppercase: Uppercase,
  Lowercase: Lowercase,
  NumeralDecimal: NumeralDecimal,
  NumeralRoman: NumeralRoman,
  OrderedListNumeric: OrderedListNumeric,
  OrderedListAlphabetic: OrderedListAlphabetic,
  renderOrderedListType: renderOrderedListType
};
},{}],"../output/DOM.HTML.Indexed.PreloadValue/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var PreloadNone = function () {
  function PreloadNone() {}

  ;
  PreloadNone.value = new PreloadNone();
  return PreloadNone;
}();

var PreloadAuto = function () {
  function PreloadAuto() {}

  ;
  PreloadAuto.value = new PreloadAuto();
  return PreloadAuto;
}();

var PreloadMetadata = function () {
  function PreloadMetadata() {}

  ;
  PreloadMetadata.value = new PreloadMetadata();
  return PreloadMetadata;
}();

var renderPreloadValue = function renderPreloadValue(v) {
  if (v instanceof PreloadNone) {
    return "none";
  }

  ;

  if (v instanceof PreloadAuto) {
    return "auto";
  }

  ;

  if (v instanceof PreloadMetadata) {
    return "metadata";
  }

  ;
  throw new Error("Failed pattern match at DOM.HTML.Indexed.PreloadValue (line 9, column 22 - line 12, column 32): " + [v.constructor.name]);
};

module.exports = {
  PreloadNone: PreloadNone,
  PreloadAuto: PreloadAuto,
  PreloadMetadata: PreloadMetadata,
  renderPreloadValue: renderPreloadValue
};
},{}],"../output/DOM.HTML.Indexed.ScopeValue/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var ScopeRow = function () {
  function ScopeRow() {}

  ;
  ScopeRow.value = new ScopeRow();
  return ScopeRow;
}();

var ScopeCol = function () {
  function ScopeCol() {}

  ;
  ScopeCol.value = new ScopeCol();
  return ScopeCol;
}();

var ScopeRowGroup = function () {
  function ScopeRowGroup() {}

  ;
  ScopeRowGroup.value = new ScopeRowGroup();
  return ScopeRowGroup;
}();

var ScopeColGroup = function () {
  function ScopeColGroup() {}

  ;
  ScopeColGroup.value = new ScopeColGroup();
  return ScopeColGroup;
}();

var ScopeAuto = function () {
  function ScopeAuto() {}

  ;
  ScopeAuto.value = new ScopeAuto();
  return ScopeAuto;
}();

var renderScopeValue = function renderScopeValue(v) {
  if (v instanceof ScopeRow) {
    return "row";
  }

  ;

  if (v instanceof ScopeCol) {
    return "col";
  }

  ;

  if (v instanceof ScopeRowGroup) {
    return "rowgroup";
  }

  ;

  if (v instanceof ScopeColGroup) {
    return "colgroup";
  }

  ;

  if (v instanceof ScopeAuto) {
    return "auto";
  }

  ;
  throw new Error("Failed pattern match at DOM.HTML.Indexed.ScopeValue (line 11, column 20 - line 16, column 22): " + [v.constructor.name]);
};

module.exports = {
  ScopeRow: ScopeRow,
  ScopeCol: ScopeCol,
  ScopeRowGroup: ScopeRowGroup,
  ScopeColGroup: ScopeColGroup,
  ScopeAuto: ScopeAuto,
  renderScopeValue: renderScopeValue
};
},{}],"../output/DOM.HTML.Indexed.StepValue/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Data_Show = require("../Data.Show/index.js");

var Any = function () {
  function Any() {}

  ;
  Any.value = new Any();
  return Any;
}();

var Step = function () {
  function Step(value0) {
    this.value0 = value0;
  }

  ;

  Step.create = function (value0) {
    return new Step(value0);
  };

  return Step;
}();

var renderStepValue = function renderStepValue(v) {
  if (v instanceof Any) {
    return "any";
  }

  ;

  if (v instanceof Step) {
    return Data_Show.show(Data_Show.showNumber)(v.value0);
  }

  ;
  throw new Error("Failed pattern match at DOM.HTML.Indexed.StepValue (line 10, column 19 - line 12, column 19): " + [v.constructor.name]);
};

module.exports = {
  Any: Any,
  Step: Step,
  renderStepValue: renderStepValue
};
},{"../Data.Show/index.js":"../output/Data.Show/index.js"}],"../output/DOM.HTML.Indexed.WrapValue/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Hard = function () {
  function Hard() {}

  ;
  Hard.value = new Hard();
  return Hard;
}();

var Soft = function () {
  function Soft() {}

  ;
  Soft.value = new Soft();
  return Soft;
}();

var renderWrapValue = function renderWrapValue(v) {
  if (v instanceof Hard) {
    return "hard";
  }

  ;

  if (v instanceof Soft) {
    return "soft";
  }

  ;
  throw new Error("Failed pattern match at DOM.HTML.Indexed.WrapValue (line 8, column 19 - line 10, column 17): " + [v.constructor.name]);
};

module.exports = {
  Hard: Hard,
  Soft: Soft,
  renderWrapValue: renderWrapValue
};
},{}],"../output/Data.MediaType/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Show = require("../Data.Show/index.js");

var MediaType = function MediaType(x) {
  return x;
};

var showMediaType = new Data_Show.Show(function (v) {
  return "(MediaType " + (Data_Show.show(Data_Show.showString)(v) + ")");
});
var newtypeMediaType = new Data_Newtype.Newtype(function (n) {
  return n;
}, MediaType);
var eqMediaType = new Data_Eq.Eq(function (x) {
  return function (y) {
    return x === y;
  };
});
var ordMediaType = new Data_Ord.Ord(function () {
  return eqMediaType;
}, function (x) {
  return function (y) {
    return Data_Ord.compare(Data_Ord.ordString)(x)(y);
  };
});
module.exports = {
  MediaType: MediaType,
  newtypeMediaType: newtypeMediaType,
  eqMediaType: eqMediaType,
  ordMediaType: ordMediaType,
  showMediaType: showMediaType
};
},{"../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Show/index.js":"../output/Data.Show/index.js"}],"../output/Halogen.Query.Input/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var RefLabel = function RefLabel(x) {
  return x;
};

var RefUpdate = function () {
  function RefUpdate(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  RefUpdate.create = function (value0) {
    return function (value1) {
      return new RefUpdate(value0, value1);
    };
  };

  return RefUpdate;
}();

var Action = function () {
  function Action(value0) {
    this.value0 = value0;
  }

  ;

  Action.create = function (value0) {
    return new Action(value0);
  };

  return Action;
}();

var ordRefLabel = Data_Ord.ordString;
var newtypeRefLabel = new Data_Newtype.Newtype(function (n) {
  return n;
}, RefLabel);
var functorInput = new Data_Functor.Functor(function (f) {
  return function (m) {
    if (m instanceof RefUpdate) {
      return new RefUpdate(m.value0, m.value1);
    }

    ;

    if (m instanceof Action) {
      return new Action(f(m.value0));
    }

    ;
    throw new Error("Failed pattern match at Halogen.Query.Input (line 19, column 1 - line 19, column 46): " + [m.constructor.name]);
  };
});
var eqRefLabel = Data_Eq.eqString;
module.exports = {
  RefLabel: RefLabel,
  RefUpdate: RefUpdate,
  Action: Action,
  newtypeRefLabel: newtypeRefLabel,
  eqRefLabel: eqRefLabel,
  ordRefLabel: ordRefLabel,
  functorInput: functorInput
};
},{"../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js"}],"../output/Foreign/foreign.js":[function(require,module,exports) {
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

exports.unsafeToForeign = function (value) {
  return value;
};

exports.unsafeFromForeign = function (value) {
  return value;
};

exports.typeOf = function (value) {
  return _typeof(value);
};

exports.tagOf = function (value) {
  return Object.prototype.toString.call(value).slice(8, -1);
};

exports.isNull = function (value) {
  return value === null;
};

exports.isUndefined = function (value) {
  return value === undefined;
};

exports.isArray = Array.isArray || function (value) {
  return Object.prototype.toString.call(value) === "[object Array]";
};
},{}],"../output/Control.Monad.Except/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var withExcept = Control_Monad_Except_Trans.withExceptT(Data_Identity.functorIdentity);

var runExcept = function () {
  var $0 = Data_Newtype.unwrap(Data_Identity.newtypeIdentity);
  return function ($1) {
    return $0(Control_Monad_Except_Trans.runExceptT($1));
  };
}();

var mapExcept = function mapExcept(f) {
  return Control_Monad_Except_Trans.mapExceptT(function () {
    var $2 = Data_Newtype.unwrap(Data_Identity.newtypeIdentity);
    return function ($3) {
      return Data_Identity.Identity(f($2($3)));
    };
  }());
};

module.exports = {
  runExcept: runExcept,
  mapExcept: mapExcept,
  withExcept: withExcept
};
},{"../Control.Monad.Except.Trans/index.js":"../output/Control.Monad.Except.Trans/index.js","../Data.Identity/index.js":"../output/Data.Identity/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js"}],"../output/Data.Int/foreign.js":[function(require,module,exports) {
"use strict";

exports.fromNumberImpl = function (just) {
  return function (nothing) {
    return function (n) {
      /* jshint bitwise: false */
      return (n | 0) === n ? just(n) : nothing;
    };
  };
};

exports.toNumber = function (n) {
  return n;
};

exports.fromStringAsImpl = function (just) {
  return function (nothing) {
    return function (radix) {
      var digits;

      if (radix < 11) {
        digits = "[0-" + (radix - 1).toString() + "]";
      } else if (radix === 11) {
        digits = "[0-9a]";
      } else {
        digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
      }

      var pattern = new RegExp("^[\\+\\-]?" + digits + "+$", "i");
      return function (s) {
        /* jshint bitwise: false */
        if (pattern.test(s)) {
          var i = parseInt(s, radix);
          return (i | 0) === i ? just(i) : nothing;
        } else {
          return nothing;
        }
      };
    };
  };
};

exports.toStringAs = function (radix) {
  return function (i) {
    return i.toString(radix);
  };
};

exports.quot = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x / y | 0;
  };
};

exports.rem = function (x) {
  return function (y) {
    return x % y;
  };
};

exports.pow = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return Math.pow(x, y) | 0;
  };
};
},{}],"../output/Data.DivisionRing/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var DivisionRing = function DivisionRing(Ring0, recip) {
  this.Ring0 = Ring0;
  this.recip = recip;
};

var recip = function recip(dict) {
  return dict.recip;
};

var rightDiv = function rightDiv(dictDivisionRing) {
  return function (a) {
    return function (b) {
      return Data_Semiring.mul(dictDivisionRing.Ring0().Semiring0())(a)(recip(dictDivisionRing)(b));
    };
  };
};

var leftDiv = function leftDiv(dictDivisionRing) {
  return function (a) {
    return function (b) {
      return Data_Semiring.mul(dictDivisionRing.Ring0().Semiring0())(recip(dictDivisionRing)(b))(a);
    };
  };
};

var divisionringNumber = new DivisionRing(function () {
  return Data_Ring.ringNumber;
}, function (x) {
  return 1.0 / x;
});
module.exports = {
  DivisionRing: DivisionRing,
  recip: recip,
  leftDiv: leftDiv,
  rightDiv: rightDiv,
  divisionringNumber: divisionringNumber
};
},{"../Data.Ring/index.js":"../output/Data.Ring/index.js","../Data.Semiring/index.js":"../output/Data.Semiring/index.js"}],"../output/Global/foreign.js":[function(require,module,exports) {
/* globals exports */
"use strict";

exports.nan = NaN;
exports.isNaN = isNaN;
exports.infinity = Infinity;
exports.isFinite = isFinite;

exports.readInt = function (radix) {
  return function (n) {
    return parseInt(n, radix);
  };
};

exports.readFloat = parseFloat;

var formatNumber = function formatNumber(format) {
  return function (fail, succ, digits, n) {
    try {
      return succ(n[format](digits));
    } catch (e) {
      return fail(e.message);
    }
  };
};

exports._toFixed = formatNumber("toFixed");
exports._toExponential = formatNumber("toExponential");
exports._toPrecision = formatNumber("toPrecision");

var encdecURI = function encdecURI(encdec) {
  return function (fail, succ, s) {
    try {
      return succ(encdec(s));
    } catch (e) {
      return fail(e.message);
    }
  };
};

exports._decodeURI = encdecURI(decodeURI);
exports._encodeURI = encdecURI(encodeURI);
exports._decodeURIComponent = encdecURI(decodeURIComponent);
exports._encodeURIComponent = encdecURI(encodeURIComponent);
},{}],"../output/Global/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var toPrecision = function toPrecision(digits) {
  return function (n) {
    return $foreign["_toPrecision"](Data_Function["const"](Data_Maybe.Nothing.value), Data_Maybe.Just.create, digits, n);
  };
};

var toFixed = function toFixed(digits) {
  return function (n) {
    return $foreign["_toFixed"](Data_Function["const"](Data_Maybe.Nothing.value), Data_Maybe.Just.create, digits, n);
  };
};

var toExponential = function toExponential(digits) {
  return function (n) {
    return $foreign["_toExponential"](Data_Function["const"](Data_Maybe.Nothing.value), Data_Maybe.Just.create, digits, n);
  };
};

var $$encodeURIComponent = function $$encodeURIComponent(s) {
  return $foreign["_encodeURIComponent"](Data_Function["const"](Data_Maybe.Nothing.value), Data_Maybe.Just.create, s);
};

var $$encodeURI = function $$encodeURI(s) {
  return $foreign["_encodeURI"](Data_Function["const"](Data_Maybe.Nothing.value), Data_Maybe.Just.create, s);
};

var $$decodeURIComponent = function $$decodeURIComponent(s) {
  return $foreign["_decodeURIComponent"](Data_Function["const"](Data_Maybe.Nothing.value), Data_Maybe.Just.create, s);
};

var $$decodeURI = function $$decodeURI(s) {
  return $foreign["_decodeURI"](Data_Function["const"](Data_Maybe.Nothing.value), Data_Maybe.Just.create, s);
};

module.exports = {
  toFixed: toFixed,
  toExponential: toExponential,
  toPrecision: toPrecision,
  "decodeURI": $$decodeURI,
  "encodeURI": $$encodeURI,
  "decodeURIComponent": $$decodeURIComponent,
  "encodeURIComponent": $$encodeURIComponent,
  nan: $foreign.nan,
  "isNaN": $foreign["isNaN"],
  infinity: $foreign.infinity,
  "isFinite": $foreign["isFinite"],
  readInt: $foreign.readInt,
  readFloat: $foreign.readFloat
};
},{"./foreign.js":"../output/Global/foreign.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js"}],"../output/Math/foreign.js":[function(require,module,exports) {
"use strict"; // module Math

exports.abs = Math.abs;
exports.acos = Math.acos;
exports.asin = Math.asin;
exports.atan = Math.atan;

exports.atan2 = function (y) {
  return function (x) {
    return Math.atan2(y, x);
  };
};

exports.ceil = Math.ceil;
exports.cos = Math.cos;
exports.exp = Math.exp;
exports.floor = Math.floor;

exports.trunc = Math.trunc || function (n) {
  return n < 0 ? Math.ceil(n) : Math.floor(n);
};

exports.log = Math.log;

exports.max = function (n1) {
  return function (n2) {
    return Math.max(n1, n2);
  };
};

exports.min = function (n1) {
  return function (n2) {
    return Math.min(n1, n2);
  };
};

exports.pow = function (n) {
  return function (p) {
    return Math.pow(n, p);
  };
};

exports.remainder = function (n) {
  return function (m) {
    return n % m;
  };
};

exports.round = Math.round;
exports.sin = Math.sin;
exports.sqrt = Math.sqrt;
exports.tan = Math.tan;
exports.e = Math.E;
exports.ln2 = Math.LN2;
exports.ln10 = Math.LN10;
exports.log2e = Math.LOG2E;
exports.log10e = Math.LOG10E;
exports.pi = Math.PI;
exports.tau = 2 * Math.PI;
exports.sqrt1_2 = Math.SQRT1_2;
exports.sqrt2 = Math.SQRT2;
},{}],"../output/Math/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

module.exports = {
  abs: $foreign.abs,
  acos: $foreign.acos,
  asin: $foreign.asin,
  atan: $foreign.atan,
  atan2: $foreign.atan2,
  ceil: $foreign.ceil,
  cos: $foreign.cos,
  exp: $foreign.exp,
  floor: $foreign.floor,
  log: $foreign.log,
  max: $foreign.max,
  min: $foreign.min,
  pow: $foreign.pow,
  round: $foreign.round,
  sin: $foreign.sin,
  sqrt: $foreign.sqrt,
  tan: $foreign.tan,
  trunc: $foreign.trunc,
  remainder: $foreign.remainder,
  e: $foreign.e,
  ln2: $foreign.ln2,
  ln10: $foreign.ln10,
  log2e: $foreign.log2e,
  log10e: $foreign.log10e,
  pi: $foreign.pi,
  tau: $foreign.tau,
  sqrt1_2: $foreign.sqrt1_2,
  sqrt2: $foreign.sqrt2
};
},{"./foreign.js":"../output/Math/foreign.js"}],"../output/Data.Int/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");

var Data_DivisionRing = require("../Data.DivisionRing/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Global = require("../Global/index.js");

var $$Math = require("../Math/index.js");

var Radix = function Radix(x) {
  return x;
};

var Even = function () {
  function Even() {}

  ;
  Even.value = new Even();
  return Even;
}();

var Odd = function () {
  function Odd() {}

  ;
  Odd.value = new Odd();
  return Odd;
}();

var showParity = new Data_Show.Show(function (v) {
  if (v instanceof Even) {
    return "Even";
  }

  ;

  if (v instanceof Odd) {
    return "Odd";
  }

  ;
  throw new Error("Failed pattern match at Data.Int (line 112, column 1 - line 114, column 19): " + [v.constructor.name]);
});

var radix = function radix(n) {
  if (n >= 2 && n <= 36) {
    return new Data_Maybe.Just(n);
  }

  ;

  if (Data_Boolean.otherwise) {
    return Data_Maybe.Nothing.value;
  }

  ;
  throw new Error("Failed pattern match at Data.Int (line 193, column 1 - line 193, column 28): " + [n.constructor.name]);
};

var odd = function odd(x) {
  return (x & 1) !== 0;
};

var octal = 8;
var hexadecimal = 16;
var fromStringAs = $foreign.fromStringAsImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var fromString = fromStringAs(10);
var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var unsafeClamp = function unsafeClamp(x) {
  if (x === Global.infinity) {
    return 0;
  }

  ;

  if (x === -Global.infinity) {
    return 0;
  }

  ;

  if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
    return Data_Bounded.top(Data_Bounded.boundedInt);
  }

  ;

  if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
    return Data_Bounded.bottom(Data_Bounded.boundedInt);
  }

  ;

  if (Data_Boolean.otherwise) {
    return Data_Maybe.fromMaybe(0)(fromNumber(x));
  }

  ;
  throw new Error("Failed pattern match at Data.Int (line 66, column 1 - line 66, column 29): " + [x.constructor.name]);
};

var round = function round($23) {
  return unsafeClamp($$Math.round($23));
};

var floor = function floor($24) {
  return unsafeClamp($$Math.floor($24));
};

var even = function even(x) {
  return (x & 1) === 0;
};

var parity = function parity(n) {
  var $14 = even(n);

  if ($14) {
    return Even.value;
  }

  ;
  return Odd.value;
};

var eqParity = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof Even && y instanceof Even) {
      return true;
    }

    ;

    if (x instanceof Odd && y instanceof Odd) {
      return true;
    }

    ;
    return false;
  };
});
var ordParity = new Data_Ord.Ord(function () {
  return eqParity;
}, function (x) {
  return function (y) {
    if (x instanceof Even && y instanceof Even) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Even) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Even) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Odd && y instanceof Odd) {
      return Data_Ordering.EQ.value;
    }

    ;
    throw new Error("Failed pattern match at Data.Int (line 110, column 1 - line 110, column 40): " + [x.constructor.name, y.constructor.name]);
  };
});
var semiringParity = new Data_Semiring.Semiring(function (x) {
  return function (y) {
    var $19 = Data_Eq.eq(eqParity)(x)(y);

    if ($19) {
      return Even.value;
    }

    ;
    return Odd.value;
  };
}, function (v) {
  return function (v1) {
    if (v instanceof Odd && v1 instanceof Odd) {
      return Odd.value;
    }

    ;
    return Even.value;
  };
}, Odd.value, Even.value);
var ringParity = new Data_Ring.Ring(function () {
  return semiringParity;
}, Data_Semiring.add(semiringParity));
var divisionRingParity = new Data_DivisionRing.DivisionRing(function () {
  return ringParity;
}, Control_Category.identity(Control_Category.categoryFn));
var decimal = 10;
var commutativeRingParity = new Data_CommutativeRing.CommutativeRing(function () {
  return ringParity;
});
var euclideanRingParity = new Data_EuclideanRing.EuclideanRing(function () {
  return commutativeRingParity;
}, function (v) {
  if (v instanceof Even) {
    return 0;
  }

  ;

  if (v instanceof Odd) {
    return 1;
  }

  ;
  throw new Error("Failed pattern match at Data.Int (line 132, column 1 - line 136, column 17): " + [v.constructor.name]);
}, function (x) {
  return function (v) {
    return x;
  };
}, function (v) {
  return function (v1) {
    return Even.value;
  };
});

var ceil = function ceil($25) {
  return unsafeClamp($$Math.ceil($25));
};

var boundedParity = new Data_Bounded.Bounded(function () {
  return ordParity;
}, Even.value, Odd.value);
var binary = 2;
var base36 = 36;
module.exports = {
  fromNumber: fromNumber,
  ceil: ceil,
  floor: floor,
  round: round,
  fromString: fromString,
  radix: radix,
  binary: binary,
  octal: octal,
  decimal: decimal,
  hexadecimal: hexadecimal,
  base36: base36,
  fromStringAs: fromStringAs,
  Even: Even,
  Odd: Odd,
  parity: parity,
  even: even,
  odd: odd,
  eqParity: eqParity,
  ordParity: ordParity,
  showParity: showParity,
  boundedParity: boundedParity,
  semiringParity: semiringParity,
  ringParity: ringParity,
  commutativeRingParity: commutativeRingParity,
  euclideanRingParity: euclideanRingParity,
  divisionRingParity: divisionRingParity,
  toNumber: $foreign.toNumber,
  toStringAs: $foreign.toStringAs,
  quot: $foreign.quot,
  rem: $foreign.rem,
  pow: $foreign.pow
};
},{"./foreign.js":"../output/Data.Int/foreign.js","../Control.Category/index.js":"../output/Control.Category/index.js","../Data.Boolean/index.js":"../output/Data.Boolean/index.js","../Data.Bounded/index.js":"../output/Data.Bounded/index.js","../Data.CommutativeRing/index.js":"../output/Data.CommutativeRing/index.js","../Data.DivisionRing/index.js":"../output/Data.DivisionRing/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.EuclideanRing/index.js":"../output/Data.EuclideanRing/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Ordering/index.js":"../output/Data.Ordering/index.js","../Data.Ring/index.js":"../output/Data.Ring/index.js","../Data.Semiring/index.js":"../output/Data.Semiring/index.js","../Data.Show/index.js":"../output/Data.Show/index.js","../Global/index.js":"../output/Global/index.js","../Math/index.js":"../output/Math/index.js"}],"../output/Data.String.CodeUnits/foreign.js":[function(require,module,exports) {
"use strict";

exports.fromCharArray = function (a) {
  return a.join("");
};

exports.toCharArray = function (s) {
  return s.split("");
};

exports.singleton = function (c) {
  return c;
};

exports._charAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (s) {
        return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
      };
    };
  };
};

exports._toChar = function (just) {
  return function (nothing) {
    return function (s) {
      return s.length === 1 ? just(s) : nothing;
    };
  };
};

exports.length = function (s) {
  return s.length;
};

exports.countPrefix = function (p) {
  return function (s) {
    var i = 0;

    while (i < s.length && p(s.charAt(i))) {
      i++;
    }

    return i;
  };
};

exports._indexOf = function (just) {
  return function (nothing) {
    return function (x) {
      return function (s) {
        var i = s.indexOf(x);
        return i === -1 ? nothing : just(i);
      };
    };
  };
};

exports._indexOfStartingAt = function (just) {
  return function (nothing) {
    return function (x) {
      return function (startAt) {
        return function (s) {
          if (startAt < 0 || startAt > s.length) return nothing;
          var i = s.indexOf(x, startAt);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };
};

exports._lastIndexOf = function (just) {
  return function (nothing) {
    return function (x) {
      return function (s) {
        var i = s.lastIndexOf(x);
        return i === -1 ? nothing : just(i);
      };
    };
  };
};

exports._lastIndexOfStartingAt = function (just) {
  return function (nothing) {
    return function (x) {
      return function (startAt) {
        return function (s) {
          if (startAt < 0 || startAt > s.length) return nothing;
          var i = s.lastIndexOf(x, startAt);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };
};

exports.take = function (n) {
  return function (s) {
    return s.substr(0, n);
  };
};

exports.drop = function (n) {
  return function (s) {
    return s.substring(n);
  };
};

exports._slice = function (b) {
  return function (e) {
    return function (s) {
      return s.slice(b, e);
    };
  };
};

exports.splitAt = function (i) {
  return function (s) {
    return {
      before: s.substring(0, i),
      after: s.substring(i)
    };
  };
};
},{}],"../output/Data.String.Unsafe/foreign.js":[function(require,module,exports) {
"use strict";

exports.charAt = function (i) {
  return function (s) {
    if (i >= 0 && i < s.length) return s.charAt(i);
    throw new Error("Data.String.Unsafe.charAt: Invalid index.");
  };
};

exports.char = function (s) {
  if (s.length === 1) return s.charAt(0);
  throw new Error("Data.String.Unsafe.char: Expected string of length 1.");
};
},{}],"../output/Data.String.Unsafe/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

module.exports = {
  "char": $foreign["char"],
  charAt: $foreign.charAt
};
},{"./foreign.js":"../output/Data.String.Unsafe/foreign.js"}],"../output/Data.String.CodeUnits/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_String_Unsafe = require("../Data.String.Unsafe/index.js");

var uncons = function uncons(v) {
  if (v === "") {
    return Data_Maybe.Nothing.value;
  }

  ;
  return new Data_Maybe.Just({
    head: Data_String_Unsafe.charAt(0)(v),
    tail: $foreign.drop(1)(v)
  });
};

var toChar = $foreign["_toChar"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var takeWhile = function takeWhile(p) {
  return function (s) {
    return $foreign.take($foreign.countPrefix(p)(s))(s);
  };
};

var takeRight = function takeRight(i) {
  return function (s) {
    return $foreign.drop($foreign.length(s) - i | 0)(s);
  };
};

var stripSuffix = function stripSuffix(v) {
  return function (str) {
    var v1 = $foreign.splitAt($foreign.length(str) - $foreign.length(v) | 0)(str);
    var $9 = v1.after === v;

    if ($9) {
      return new Data_Maybe.Just(v1.before);
    }

    ;
    return Data_Maybe.Nothing.value;
  };
};

var stripPrefix = function stripPrefix(v) {
  return function (str) {
    var v1 = $foreign.splitAt($foreign.length(v))(str);
    var $15 = v1.before === v;

    if ($15) {
      return new Data_Maybe.Just(v1.after);
    }

    ;
    return Data_Maybe.Nothing.value;
  };
};

var slice = function slice(b) {
  return function (e) {
    return function (s) {
      var l = $foreign.length(s);

      var norm = function norm(x) {
        if (x < 0) {
          return l + x | 0;
        }

        ;

        if (Data_Boolean.otherwise) {
          return x;
        }

        ;
        throw new Error("Failed pattern match at Data.String.CodeUnits (line 312, column 5 - line 313, column 27): " + [x.constructor.name]);
      };

      var e$prime = norm(e);
      var b$prime = norm(b);
      var $19 = b$prime < 0 || b$prime >= l || e$prime < 0 || e$prime > l || b$prime > e$prime;

      if ($19) {
        return Data_Maybe.Nothing.value;
      }

      ;
      return new Data_Maybe.Just($foreign["_slice"](b)(e)(s));
    };
  };
};

var lastIndexOf$prime = $foreign["_lastIndexOfStartingAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var lastIndexOf = $foreign["_lastIndexOf"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var indexOf$prime = $foreign["_indexOfStartingAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var indexOf = $foreign["_indexOf"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var dropWhile = function dropWhile(p) {
  return function (s) {
    return $foreign.drop($foreign.countPrefix(p)(s))(s);
  };
};

var dropRight = function dropRight(i) {
  return function (s) {
    return $foreign.take($foreign.length(s) - i | 0)(s);
  };
};

var contains = function contains(pat) {
  var $20 = indexOf(pat);
  return function ($21) {
    return Data_Maybe.isJust($20($21));
  };
};

var charAt = $foreign["_charAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
module.exports = {
  stripPrefix: stripPrefix,
  stripSuffix: stripSuffix,
  contains: contains,
  charAt: charAt,
  toChar: toChar,
  uncons: uncons,
  indexOf: indexOf,
  "indexOf'": indexOf$prime,
  lastIndexOf: lastIndexOf,
  "lastIndexOf'": lastIndexOf$prime,
  takeRight: takeRight,
  takeWhile: takeWhile,
  dropRight: dropRight,
  dropWhile: dropWhile,
  slice: slice,
  singleton: $foreign.singleton,
  fromCharArray: $foreign.fromCharArray,
  toCharArray: $foreign.toCharArray,
  length: $foreign.length,
  countPrefix: $foreign.countPrefix,
  take: $foreign.take,
  drop: $foreign.drop,
  splitAt: $foreign.splitAt
};
},{"./foreign.js":"../output/Data.String.CodeUnits/foreign.js","../Data.Boolean/index.js":"../output/Data.Boolean/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.String.Unsafe/index.js":"../output/Data.String.Unsafe/index.js"}],"../output/Foreign/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Except = require("../Control.Monad.Except/index.js");

var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_Int = require("../Data.Int/index.js");

var Data_List_NonEmpty = require("../Data.List.NonEmpty/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_String_CodeUnits = require("../Data.String.CodeUnits/index.js");

var ForeignError = function () {
  function ForeignError(value0) {
    this.value0 = value0;
  }

  ;

  ForeignError.create = function (value0) {
    return new ForeignError(value0);
  };

  return ForeignError;
}();

var TypeMismatch = function () {
  function TypeMismatch(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  TypeMismatch.create = function (value0) {
    return function (value1) {
      return new TypeMismatch(value0, value1);
    };
  };

  return TypeMismatch;
}();

var ErrorAtIndex = function () {
  function ErrorAtIndex(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  ErrorAtIndex.create = function (value0) {
    return function (value1) {
      return new ErrorAtIndex(value0, value1);
    };
  };

  return ErrorAtIndex;
}();

var ErrorAtProperty = function () {
  function ErrorAtProperty(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  ErrorAtProperty.create = function (value0) {
    return function (value1) {
      return new ErrorAtProperty(value0, value1);
    };
  };

  return ErrorAtProperty;
}();

var showForeignError = new Data_Show.Show(function (v) {
  if (v instanceof ForeignError) {
    return "(ForeignError " + (Data_Show.show(Data_Show.showString)(v.value0) + ")");
  }

  ;

  if (v instanceof ErrorAtIndex) {
    return "(ErrorAtIndex " + (Data_Show.show(Data_Show.showInt)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
  }

  ;

  if (v instanceof ErrorAtProperty) {
    return "(ErrorAtProperty " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
  }

  ;

  if (v instanceof TypeMismatch) {
    return "(TypeMismatch " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(Data_Show.showString)(v.value1) + ")")));
  }

  ;
  throw new Error("Failed pattern match at Foreign (line 63, column 1 - line 67, column 89): " + [v.constructor.name]);
});

var renderForeignError = function renderForeignError(v) {
  if (v instanceof ForeignError) {
    return v.value0;
  }

  ;

  if (v instanceof ErrorAtIndex) {
    return "Error at array index " + (Data_Show.show(Data_Show.showInt)(v.value0) + (": " + renderForeignError(v.value1)));
  }

  ;

  if (v instanceof ErrorAtProperty) {
    return "Error at property " + (Data_Show.show(Data_Show.showString)(v.value0) + (": " + renderForeignError(v.value1)));
  }

  ;

  if (v instanceof TypeMismatch) {
    return "Type mismatch: expected " + (v.value0 + (", found " + v.value1));
  }

  ;
  throw new Error("Failed pattern match at Foreign (line 72, column 1 - line 72, column 45): " + [v.constructor.name]);
};

var readUndefined = function readUndefined(value) {
  if ($foreign.isUndefined(value)) {
    return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Maybe.Nothing.value);
  }

  ;

  if (Data_Boolean.otherwise) {
    return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(new Data_Maybe.Just(value));
  }

  ;
  throw new Error("Failed pattern match at Foreign (line 157, column 1 - line 157, column 46): " + [value.constructor.name]);
};

var readNullOrUndefined = function readNullOrUndefined(value) {
  if ($foreign.isNull(value) || $foreign.isUndefined(value)) {
    return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Maybe.Nothing.value);
  }

  ;

  if (Data_Boolean.otherwise) {
    return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(new Data_Maybe.Just(value));
  }

  ;
  throw new Error("Failed pattern match at Foreign (line 162, column 1 - line 162, column 52): " + [value.constructor.name]);
};

var readNull = function readNull(value) {
  if ($foreign.isNull(value)) {
    return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Maybe.Nothing.value);
  }

  ;

  if (Data_Boolean.otherwise) {
    return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(new Data_Maybe.Just(value));
  }

  ;
  throw new Error("Failed pattern match at Foreign (line 152, column 1 - line 152, column 41): " + [value.constructor.name]);
};

var fail = function () {
  var $107 = Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity));
  return function ($108) {
    return $107(Data_List_NonEmpty.singleton($108));
  };
}();

var readArray = function readArray(value) {
  if ($foreign.isArray(value)) {
    return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
  }

  ;

  if (Data_Boolean.otherwise) {
    return fail(new TypeMismatch("array", $foreign.tagOf(value)));
  }

  ;
  throw new Error("Failed pattern match at Foreign (line 147, column 1 - line 147, column 42): " + [value.constructor.name]);
};

var unsafeReadTagged = function unsafeReadTagged(tag) {
  return function (value) {
    if ($foreign.tagOf(value) === tag) {
      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
    }

    ;

    if (Data_Boolean.otherwise) {
      return fail(new TypeMismatch(tag, $foreign.tagOf(value)));
    }

    ;
    throw new Error("Failed pattern match at Foreign (line 106, column 1 - line 106, column 55): " + [tag.constructor.name, value.constructor.name]);
  };
};

var readBoolean = unsafeReadTagged("Boolean");
var readNumber = unsafeReadTagged("Number");

var readInt = function readInt(value) {
  var error = Data_Either.Left.create(Data_List_NonEmpty.singleton(new TypeMismatch("Int", $foreign.tagOf(value))));

  var fromNumber = function () {
    var $109 = Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither));
    return function ($110) {
      return $109(Data_Int.fromNumber($110));
    };
  }();

  return Control_Monad_Except.mapExcept(Data_Either.either(Data_Function["const"](error))(fromNumber))(readNumber(value));
};

var readString = unsafeReadTagged("String");

var readChar = function readChar(value) {
  var error = Data_Either.Left.create(Data_List_NonEmpty.singleton(new TypeMismatch("Char", $foreign.tagOf(value))));

  var fromString = function () {
    var $111 = Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither));
    return function ($112) {
      return $111(Data_String_CodeUnits.toChar($112));
    };
  }();

  return Control_Monad_Except.mapExcept(Data_Either.either(Data_Function["const"](error))(fromString))(readString(value));
};

var eqForeignError = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof ForeignError && y instanceof ForeignError) {
      return x.value0 === y.value0;
    }

    ;

    if (x instanceof TypeMismatch && y instanceof TypeMismatch) {
      return x.value0 === y.value0 && x.value1 === y.value1;
    }

    ;

    if (x instanceof ErrorAtIndex && y instanceof ErrorAtIndex) {
      return x.value0 === y.value0 && Data_Eq.eq(eqForeignError)(x.value1)(y.value1);
    }

    ;

    if (x instanceof ErrorAtProperty && y instanceof ErrorAtProperty) {
      return x.value0 === y.value0 && Data_Eq.eq(eqForeignError)(x.value1)(y.value1);
    }

    ;
    return false;
  };
});
var ordForeignError = new Data_Ord.Ord(function () {
  return eqForeignError;
}, function (x) {
  return function (y) {
    if (x instanceof ForeignError && y instanceof ForeignError) {
      return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
    }

    ;

    if (x instanceof ForeignError) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof ForeignError) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof TypeMismatch && y instanceof TypeMismatch) {
      var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);

      if (v instanceof Data_Ordering.LT) {
        return Data_Ordering.LT.value;
      }

      ;

      if (v instanceof Data_Ordering.GT) {
        return Data_Ordering.GT.value;
      }

      ;
      return Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
    }

    ;

    if (x instanceof TypeMismatch) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof TypeMismatch) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof ErrorAtIndex && y instanceof ErrorAtIndex) {
      var v = Data_Ord.compare(Data_Ord.ordInt)(x.value0)(y.value0);

      if (v instanceof Data_Ordering.LT) {
        return Data_Ordering.LT.value;
      }

      ;

      if (v instanceof Data_Ordering.GT) {
        return Data_Ordering.GT.value;
      }

      ;
      return Data_Ord.compare(ordForeignError)(x.value1)(y.value1);
    }

    ;

    if (x instanceof ErrorAtIndex) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof ErrorAtIndex) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof ErrorAtProperty && y instanceof ErrorAtProperty) {
      var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);

      if (v instanceof Data_Ordering.LT) {
        return Data_Ordering.LT.value;
      }

      ;

      if (v instanceof Data_Ordering.GT) {
        return Data_Ordering.GT.value;
      }

      ;
      return Data_Ord.compare(ordForeignError)(x.value1)(y.value1);
    }

    ;
    throw new Error("Failed pattern match at Foreign (line 61, column 1 - line 61, column 52): " + [x.constructor.name, y.constructor.name]);
  };
});
module.exports = {
  ForeignError: ForeignError,
  TypeMismatch: TypeMismatch,
  ErrorAtIndex: ErrorAtIndex,
  ErrorAtProperty: ErrorAtProperty,
  renderForeignError: renderForeignError,
  unsafeReadTagged: unsafeReadTagged,
  readString: readString,
  readChar: readChar,
  readBoolean: readBoolean,
  readNumber: readNumber,
  readInt: readInt,
  readArray: readArray,
  readNull: readNull,
  readUndefined: readUndefined,
  readNullOrUndefined: readNullOrUndefined,
  fail: fail,
  eqForeignError: eqForeignError,
  ordForeignError: ordForeignError,
  showForeignError: showForeignError,
  unsafeToForeign: $foreign.unsafeToForeign,
  unsafeFromForeign: $foreign.unsafeFromForeign,
  typeOf: $foreign.typeOf,
  tagOf: $foreign.tagOf,
  isNull: $foreign.isNull,
  isUndefined: $foreign.isUndefined,
  isArray: $foreign.isArray
};
},{"./foreign.js":"../output/Foreign/foreign.js","../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Monad.Error.Class/index.js":"../output/Control.Monad.Error.Class/index.js","../Control.Monad.Except/index.js":"../output/Control.Monad.Except/index.js","../Control.Monad.Except.Trans/index.js":"../output/Control.Monad.Except.Trans/index.js","../Data.Boolean/index.js":"../output/Data.Boolean/index.js","../Data.Either/index.js":"../output/Data.Either/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Identity/index.js":"../output/Data.Identity/index.js","../Data.Int/index.js":"../output/Data.Int/index.js","../Data.List.NonEmpty/index.js":"../output/Data.List.NonEmpty/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Ordering/index.js":"../output/Data.Ordering/index.js","../Data.Show/index.js":"../output/Data.Show/index.js","../Data.String.CodeUnits/index.js":"../output/Data.String.CodeUnits/index.js"}],"../output/Foreign.Object/foreign.js":[function(require,module,exports) {
"use strict";

exports._copyST = function (m) {
  return function () {
    var r = {};

    for (var k in m) {
      if (hasOwnProperty.call(m, k)) {
        r[k] = m[k];
      }
    }

    return r;
  };
};

exports.empty = {};

exports.runST = function (f) {
  return f();
};

exports._fmapObject = function (m0, f) {
  var m = {};

  for (var k in m0) {
    if (hasOwnProperty.call(m0, k)) {
      m[k] = f(m0[k]);
    }
  }

  return m;
};

exports._mapWithKey = function (m0, f) {
  var m = {};

  for (var k in m0) {
    if (hasOwnProperty.call(m0, k)) {
      m[k] = f(k)(m0[k]);
    }
  }

  return m;
};

exports._foldM = function (bind) {
  return function (f) {
    return function (mz) {
      return function (m) {
        var acc = mz;

        function g(k) {
          return function (z) {
            return f(z)(k)(m[k]);
          };
        }

        for (var k in m) {
          if (hasOwnProperty.call(m, k)) {
            acc = bind(acc)(g(k));
          }
        }

        return acc;
      };
    };
  };
};

exports._foldSCObject = function (m, z, f, fromMaybe) {
  var acc = z;

  for (var k in m) {
    if (hasOwnProperty.call(m, k)) {
      var maybeR = f(acc)(k)(m[k]);
      var r = fromMaybe(null)(maybeR);
      if (r === null) return acc;else acc = r;
    }
  }

  return acc;
};

exports.all = function (f) {
  return function (m) {
    for (var k in m) {
      if (hasOwnProperty.call(m, k) && !f(k)(m[k])) return false;
    }

    return true;
  };
};

exports.size = function (m) {
  var s = 0;

  for (var k in m) {
    if (hasOwnProperty.call(m, k)) {
      ++s;
    }
  }

  return s;
};

exports._lookup = function (no, yes, k, m) {
  return k in m ? yes(m[k]) : no;
};

exports._lookupST = function (no, yes, k, m) {
  return function () {
    return k in m ? yes(m[k]) : no;
  };
};

function toArrayWithKey(f) {
  return function (m) {
    var r = [];

    for (var k in m) {
      if (hasOwnProperty.call(m, k)) {
        r.push(f(k)(m[k]));
      }
    }

    return r;
  };
}

exports.toArrayWithKey = toArrayWithKey;
exports.keys = Object.keys || toArrayWithKey(function (k) {
  return function () {
    return k;
  };
});
},{}],"../output/Foreign.Object/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Monad_ST_Internal = require("../Control.Monad.ST.Internal/index.js");

var Data_Array = require("../Data.Array/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Foreign_Object_ST = require("../Foreign.Object.ST/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var values = $foreign.toArrayWithKey(function (v) {
  return function (v1) {
    return v1;
  };
});

var toUnfoldable = function toUnfoldable(dictUnfoldable) {
  var $36 = Data_Array.toUnfoldable(dictUnfoldable);
  var $37 = $foreign.toArrayWithKey(Data_Tuple.Tuple.create);
  return function ($38) {
    return $36($37($38));
  };
};

var toAscUnfoldable = function toAscUnfoldable(dictUnfoldable) {
  var $39 = Data_Array.toUnfoldable(dictUnfoldable);
  var $40 = Data_Array.sortWith(Data_Ord.ordString)(Data_Tuple.fst);
  var $41 = $foreign.toArrayWithKey(Data_Tuple.Tuple.create);
  return function ($42) {
    return $39($40($41($42)));
  };
};

var toAscArray = toAscUnfoldable(Data_Unfoldable.unfoldableArray);
var toArray = $foreign.toArrayWithKey(Data_Tuple.Tuple.create);
var thawST = $foreign["_copyST"];

var singleton = function singleton(k) {
  return function (v) {
    return $foreign.runST(Control_Bind.bindFlipped(Control_Monad_ST_Internal.bindST)(Foreign_Object_ST.poke(k)(v))(Foreign_Object_ST["new"]));
  };
};

var showObject = function showObject(dictShow) {
  return new Data_Show.Show(function (m) {
    return "(fromFoldable " + (Data_Show.show(Data_Show.showArray(Data_Tuple.showTuple(Data_Show.showString)(dictShow)))(toArray(m)) + ")");
  });
};

var mutate = function mutate(f) {
  return function (m) {
    return $foreign.runST(function __do() {
      var s = thawST(m)();
      f(s)();
      return s;
    });
  };
};

var member = Data_Function_Uncurried.runFn4($foreign["_lookup"])(false)(Data_Function["const"](true));

var mapWithKey = function mapWithKey(f) {
  return function (m) {
    return $foreign["_mapWithKey"](m, f);
  };
};

var lookup = Data_Function_Uncurried.runFn4($foreign["_lookup"])(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);

var isSubmap = function isSubmap(dictEq) {
  return function (m1) {
    return function (m2) {
      var f = function f(k) {
        return function (v) {
          return $foreign["_lookup"](false, Data_Eq.eq(dictEq)(v), k, m2);
        };
      };

      return $foreign.all(f)(m1);
    };
  };
};

var isEmpty = $foreign.all(function (v) {
  return function (v1) {
    return false;
  };
});

var insert = function insert(k) {
  return function (v) {
    return mutate(Foreign_Object_ST.poke(k)(v));
  };
};

var functorObject = new Data_Functor.Functor(function (f) {
  return function (m) {
    return $foreign["_fmapObject"](m, f);
  };
});
var functorWithIndexObject = new Data_FunctorWithIndex.FunctorWithIndex(function () {
  return functorObject;
}, mapWithKey);

var fromHomogeneous = function fromHomogeneous(dictHomogeneous) {
  return Unsafe_Coerce.unsafeCoerce;
};

var fromFoldableWith = function fromFoldableWith(dictFoldable) {
  return function (f) {
    return function (l) {
      return $foreign.runST(function __do() {
        var s = Foreign_Object_ST["new"]();
        Data_Foldable.for_(Control_Monad_ST_Internal.applicativeST)(dictFoldable)(l)(function (v) {
          return function __do() {
            var v$prime = $foreign["_lookupST"](v.value1, f(v.value1), v.value0, s)();
            return Foreign_Object_ST.poke(v.value0)(v$prime)(s)();
          };
        })();
        return s;
      });
    };
  };
};

var fromFoldable = function fromFoldable(dictFoldable) {
  return function (l) {
    return $foreign.runST(function __do() {
      var s = Foreign_Object_ST["new"]();
      Control_Monad_ST_Internal.foreach(Data_Array.fromFoldable(dictFoldable)(l))(function (v) {
        return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Foreign_Object_ST.poke(v.value0)(v.value1)(s));
      })();
      return s;
    });
  };
};

var freezeST = $foreign["_copyST"];

var foldMaybe = function foldMaybe(f) {
  return function (z) {
    return function (m) {
      return $foreign["_foldSCObject"](m, z, f, Data_Maybe.fromMaybe);
    };
  };
};

var foldM = function foldM(dictMonad) {
  return function (f) {
    return function (z) {
      return $foreign["_foldM"](Control_Bind.bind(dictMonad.Bind1()))(f)(Control_Applicative.pure(dictMonad.Applicative0())(z));
    };
  };
};

var semigroupObject = function semigroupObject(dictSemigroup) {
  return new Data_Semigroup.Semigroup(function (m1) {
    return function (m2) {
      return mutate(function (s1) {
        return foldM(Control_Monad_ST_Internal.monadST)(function (s2) {
          return function (k) {
            return function (v2) {
              return Foreign_Object_ST.poke(k)($foreign["_lookup"](v2, function (v1) {
                return Data_Semigroup.append(dictSemigroup)(v1)(v2);
              }, k, m2))(s2);
            };
          };
        })(s1)(m1);
      })(m2);
    };
  });
};

var monoidObject = function monoidObject(dictSemigroup) {
  return new Data_Monoid.Monoid(function () {
    return semigroupObject(dictSemigroup);
  }, $foreign.empty);
};

var union = function union(m) {
  return mutate(function (s) {
    return foldM(Control_Monad_ST_Internal.monadST)(function (s$prime) {
      return function (k) {
        return function (v) {
          return Foreign_Object_ST.poke(k)(v)(s$prime);
        };
      };
    })(s)(m);
  });
};

var unions = function unions(dictFoldable) {
  return Data_Foldable.foldl(dictFoldable)(union)($foreign.empty);
};

var fold = $foreign["_foldM"](Data_Function.applyFlipped);

var foldMap = function foldMap(dictMonoid) {
  return function (f) {
    return fold(function (acc) {
      return function (k) {
        return function (v) {
          return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(k)(v));
        };
      };
    })(Data_Monoid.mempty(dictMonoid));
  };
};

var foldableObject = new Data_Foldable.Foldable(function (dictMonoid) {
  return function (f) {
    return foldMap(dictMonoid)(Data_Function["const"](f));
  };
}, function (f) {
  return fold(function (z) {
    return function (v) {
      return f(z);
    };
  });
}, function (f) {
  return function (z) {
    return function (m) {
      return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
    };
  };
});
var foldableWithIndexObject = new Data_FoldableWithIndex.FoldableWithIndex(function () {
  return foldableObject;
}, function (dictMonoid) {
  return foldMap(dictMonoid);
}, function (f) {
  return fold(Data_Function.flip(f));
}, function (f) {
  return function (z) {
    return function (m) {
      return Data_Foldable.foldr(Data_Foldable.foldableArray)(Data_Tuple.uncurry(f))(z)($foreign.toArrayWithKey(Data_Tuple.Tuple.create)(m));
    };
  };
});
var traversableWithIndexObject = new Data_TraversableWithIndex.TraversableWithIndex(function () {
  return foldableWithIndexObject;
}, function () {
  return functorWithIndexObject;
}, function () {
  return traversableObject;
}, function (dictApplicative) {
  return function (f) {
    return function (ms) {
      return fold(function (acc) {
        return function (k) {
          return function (v) {
            return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Function.flip(insert(k)))(acc))(f(k)(v));
          };
        };
      })(Control_Applicative.pure(dictApplicative)($foreign.empty))(ms);
    };
  };
});
var traversableObject = new Data_Traversable.Traversable(function () {
  return foldableObject;
}, function () {
  return functorObject;
}, function (dictApplicative) {
  return Data_Traversable.traverse(traversableObject)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
}, function (dictApplicative) {
  var $43 = Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexObject)(dictApplicative);
  return function ($44) {
    return $43(Data_Function["const"]($44));
  };
});

var filterWithKey = function filterWithKey(predicate) {
  return function (m) {
    var go = function () {
      var step = function step(acc) {
        return function (k) {
          return function (v) {
            var $33 = predicate(k)(v);

            if ($33) {
              return Foreign_Object_ST.poke(k)(v)(acc);
            }

            ;
            return Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST)(acc);
          };
        };
      };

      return function __do() {
        var m$prime = Foreign_Object_ST["new"]();
        return foldM(Control_Monad_ST_Internal.monadST)(step)(m$prime)(m)();
      };
    }();

    return $foreign.runST(go);
  };
};

var filterKeys = function filterKeys(predicate) {
  return filterWithKey(function ($45) {
    return Data_Function["const"](predicate($45));
  });
};

var filter = function filter(predicate) {
  return filterWithKey(Data_Function["const"](predicate));
};

var eqObject = function eqObject(dictEq) {
  return new Data_Eq.Eq(function (m1) {
    return function (m2) {
      return isSubmap(dictEq)(m1)(m2) && isSubmap(dictEq)(m2)(m1);
    };
  });
};

var ordObject = function ordObject(dictOrd) {
  return new Data_Ord.Ord(function () {
    return eqObject(dictOrd.Eq0());
  }, function (m1) {
    return function (m2) {
      return Data_Ord.compare(Data_Ord.ordArray(Data_Tuple.ordTuple(Data_Ord.ordString)(dictOrd)))(toAscArray(m1))(toAscArray(m2));
    };
  });
};

var eq1Object = new Data_Eq.Eq1(function (dictEq) {
  return Data_Eq.eq(eqObject(dictEq));
});

var $$delete = function $$delete(k) {
  return mutate(Foreign_Object_ST["delete"](k));
};

var pop = function pop(k) {
  return function (m) {
    return Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(lookup(k)(m))(function (a) {
      return new Data_Tuple.Tuple(a, $$delete(k)(m));
    });
  };
};

var alter = function alter(f) {
  return function (k) {
    return function (m) {
      var v = f(lookup(k)(m));

      if (v instanceof Data_Maybe.Nothing) {
        return $$delete(k)(m);
      }

      ;

      if (v instanceof Data_Maybe.Just) {
        return insert(k)(v.value0)(m);
      }

      ;
      throw new Error("Failed pattern match at Foreign.Object (line 206, column 15 - line 208, column 25): " + [v.constructor.name]);
    };
  };
};

var update = function update(f) {
  return function (k) {
    return function (m) {
      return alter(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
    };
  };
};

module.exports = {
  isEmpty: isEmpty,
  singleton: singleton,
  insert: insert,
  lookup: lookup,
  toUnfoldable: toUnfoldable,
  toAscUnfoldable: toAscUnfoldable,
  fromFoldable: fromFoldable,
  fromFoldableWith: fromFoldableWith,
  fromHomogeneous: fromHomogeneous,
  "delete": $$delete,
  pop: pop,
  member: member,
  alter: alter,
  update: update,
  mapWithKey: mapWithKey,
  filterWithKey: filterWithKey,
  filterKeys: filterKeys,
  filter: filter,
  values: values,
  union: union,
  unions: unions,
  isSubmap: isSubmap,
  fold: fold,
  foldMap: foldMap,
  foldM: foldM,
  foldMaybe: foldMaybe,
  thawST: thawST,
  freezeST: freezeST,
  functorObject: functorObject,
  functorWithIndexObject: functorWithIndexObject,
  foldableObject: foldableObject,
  foldableWithIndexObject: foldableWithIndexObject,
  traversableObject: traversableObject,
  traversableWithIndexObject: traversableWithIndexObject,
  eqObject: eqObject,
  eq1Object: eq1Object,
  ordObject: ordObject,
  showObject: showObject,
  semigroupObject: semigroupObject,
  monoidObject: monoidObject,
  empty: $foreign.empty,
  size: $foreign.size,
  keys: $foreign.keys,
  all: $foreign.all,
  runST: $foreign.runST,
  toArrayWithKey: $foreign.toArrayWithKey
};
},{"./foreign.js":"../output/Foreign.Object/foreign.js","../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Category/index.js":"../output/Control.Category/index.js","../Control.Monad.ST.Internal/index.js":"../output/Control.Monad.ST.Internal/index.js","../Data.Array/index.js":"../output/Data.Array/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Foldable/index.js":"../output/Data.Foldable/index.js","../Data.FoldableWithIndex/index.js":"../output/Data.FoldableWithIndex/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Function.Uncurried/index.js":"../output/Data.Function.Uncurried/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.FunctorWithIndex/index.js":"../output/Data.FunctorWithIndex/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Monoid/index.js":"../output/Data.Monoid/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Data.Show/index.js":"../output/Data.Show/index.js","../Data.Traversable/index.js":"../output/Data.Traversable/index.js","../Data.TraversableWithIndex/index.js":"../output/Data.TraversableWithIndex/index.js","../Data.Tuple/index.js":"../output/Data.Tuple/index.js","../Data.Unfoldable/index.js":"../output/Data.Unfoldable/index.js","../Foreign.Object.ST/index.js":"../output/Foreign.Object.ST/index.js","../Unsafe.Coerce/index.js":"../output/Unsafe.Coerce/index.js"}],"../output/Halogen.VDom.DOM.Prop/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect_Ref = require("../Effect.Ref/index.js");

var Foreign = require("../Foreign/index.js");

var Foreign_Object = require("../Foreign.Object/index.js");

var Halogen_VDom_Machine = require("../Halogen.VDom.Machine/index.js");

var Halogen_VDom_Util = require("../Halogen.VDom.Util/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");

var Created = function () {
  function Created(value0) {
    this.value0 = value0;
  }

  ;

  Created.create = function (value0) {
    return new Created(value0);
  };

  return Created;
}();

var Removed = function () {
  function Removed(value0) {
    this.value0 = value0;
  }

  ;

  Removed.create = function (value0) {
    return new Removed(value0);
  };

  return Removed;
}();

var Attribute = function () {
  function Attribute(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  ;

  Attribute.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return new Attribute(value0, value1, value2);
      };
    };
  };

  return Attribute;
}();

var Property = function () {
  function Property(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Property.create = function (value0) {
    return function (value1) {
      return new Property(value0, value1);
    };
  };

  return Property;
}();

var Handler = function () {
  function Handler(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Handler.create = function (value0) {
    return function (value1) {
      return new Handler(value0, value1);
    };
  };

  return Handler;
}();

var Ref = function () {
  function Ref(value0) {
    this.value0 = value0;
  }

  ;

  Ref.create = function (value0) {
    return new Ref(value0);
  };

  return Ref;
}();

var unsafeGetProperty = Halogen_VDom_Util.unsafeGetAny;
var setProperty = Halogen_VDom_Util.unsafeSetAny;

var removeProperty = function removeProperty(key, el) {
  var v = Halogen_VDom_Util.hasAttribute(Data_Nullable["null"], key, el);

  if (v) {
    return Halogen_VDom_Util.removeAttribute(Data_Nullable["null"], key, el);
  }

  ;
  var v1 = Foreign.typeOf(Halogen_VDom_Util.unsafeGetAny(key, el));

  if (v1 === "string") {
    return Halogen_VDom_Util.unsafeSetAny(key, "", el);
  }

  ;

  if (key === "rowSpan") {
    return Halogen_VDom_Util.unsafeSetAny(key, 1, el);
  }

  ;

  if (key === "colSpan") {
    return Halogen_VDom_Util.unsafeSetAny(key, 1, el);
  }

  ;
  return Halogen_VDom_Util.unsafeSetAny(key, Halogen_VDom_Util.jsUndefined, el);
};

var propToStrKey = function propToStrKey(v) {
  if (v instanceof Attribute && v.value0 instanceof Data_Maybe.Just) {
    return "attr/" + (v.value0.value0 + (":" + v.value1));
  }

  ;

  if (v instanceof Attribute) {
    return "attr/:" + v.value1;
  }

  ;

  if (v instanceof Property) {
    return "prop/" + v.value0;
  }

  ;

  if (v instanceof Handler) {
    return "handler/" + v.value0;
  }

  ;

  if (v instanceof Ref) {
    return "ref";
  }

  ;
  throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 182, column 16 - line 187, column 16): " + [v.constructor.name]);
};

var propFromString = Unsafe_Coerce.unsafeCoerce;
var propFromNumber = Unsafe_Coerce.unsafeCoerce;
var propFromInt = Unsafe_Coerce.unsafeCoerce;
var propFromBoolean = Unsafe_Coerce.unsafeCoerce;
var functorProp = new Data_Functor.Functor(function (f) {
  return function (v) {
    if (v instanceof Handler) {
      return new Handler(v.value0, Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v.value1));
    }

    ;

    if (v instanceof Ref) {
      return new Ref(Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v.value0));
    }

    ;
    return v;
  };
});
var functorElemRef = new Data_Functor.Functor(function (f) {
  return function (v) {
    if (v instanceof Created) {
      return new Created(f(v.value0));
    }

    ;

    if (v instanceof Removed) {
      return new Removed(f(v.value0));
    }

    ;
    throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 49, column 1 - line 51, column 36): " + [f.constructor.name, v.constructor.name]);
  };
});

var buildProp = function buildProp(emit) {
  return function (el) {
    var removeProp = function removeProp(prevEvents) {
      return function (v, v1) {
        if (v1 instanceof Attribute) {
          return Halogen_VDom_Util.removeAttribute(Data_Nullable.toNullable(v1.value0), v1.value1, el);
        }

        ;

        if (v1 instanceof Property) {
          return removeProperty(v1.value0, el);
        }

        ;

        if (v1 instanceof Handler) {
          var handler = Halogen_VDom_Util.unsafeLookup(v1.value0, prevEvents);
          return Halogen_VDom_Util.removeEventListener(v1.value0, Data_Tuple.fst(handler), el);
        }

        ;

        if (v1 instanceof Ref) {
          return Data_Unit.unit;
        }

        ;
        throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 169, column 5 - line 179, column 18): " + [v1.constructor.name]);
      };
    };

    var mbEmit = function mbEmit(v) {
      if (v instanceof Data_Maybe.Just) {
        return emit(v.value0)();
      }

      ;
      return Data_Unit.unit;
    };

    var haltProp = function haltProp(state) {
      var v = Foreign_Object.lookup("ref")(state.props);

      if (v instanceof Data_Maybe.Just && v.value0 instanceof Ref) {
        return mbEmit(v.value0.value0(new Removed(el)));
      }

      ;
      return Data_Unit.unit;
    };

    var diffProp = function diffProp(prevEvents, events) {
      return function (v, v1, v11, v2) {
        if (v11 instanceof Attribute && v2 instanceof Attribute) {
          var $56 = v11.value2 === v2.value2;

          if ($56) {
            return v2;
          }

          ;
          Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el);
          return v2;
        }

        ;

        if (v11 instanceof Property && v2 instanceof Property) {
          var v4 = Halogen_VDom_Util.refEq(v11.value1, v2.value1);

          if (v4) {
            return v2;
          }

          ;

          if (v2.value0 === "value") {
            var elVal = unsafeGetProperty("value", el);
            var $65 = Halogen_VDom_Util.refEq(elVal, v2.value1);

            if ($65) {
              return v2;
            }

            ;
            setProperty(v2.value0, v2.value1, el);
            return v2;
          }

          ;
          setProperty(v2.value0, v2.value1, el);
          return v2;
        }

        ;

        if (v11 instanceof Handler && v2 instanceof Handler) {
          var handler = Halogen_VDom_Util.unsafeLookup(v2.value0, prevEvents);
          Effect_Ref.write(v2.value1)(Data_Tuple.snd(handler))();
          Halogen_VDom_Util.pokeMutMap(v2.value0, handler, events);
          return v2;
        }

        ;
        return v2;
      };
    };

    var applyProp = function applyProp(events) {
      return function (v, v1, v2) {
        if (v2 instanceof Attribute) {
          Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el);
          return v2;
        }

        ;

        if (v2 instanceof Property) {
          setProperty(v2.value0, v2.value1, el);
          return v2;
        }

        ;

        if (v2 instanceof Handler) {
          var v3 = Halogen_VDom_Util.unsafeGetAny(v2.value0, events);

          if (Halogen_VDom_Util.unsafeHasAny(v2.value0, events)) {
            Effect_Ref.write(v2.value1)(Data_Tuple.snd(v3))();
            return v2;
          }

          ;
          var ref = Effect_Ref["new"](v2.value1)();
          var listener = Web_Event_EventTarget.eventListener(function (ev) {
            return function __do() {
              var f$prime = Effect_Ref.read(ref)();
              return mbEmit(f$prime(ev));
            };
          })();
          Halogen_VDom_Util.pokeMutMap(v2.value0, new Data_Tuple.Tuple(listener, ref), events);
          Halogen_VDom_Util.addEventListener(v2.value0, listener, el);
          return v2;
        }

        ;

        if (v2 instanceof Ref) {
          mbEmit(v2.value0(new Created(el)));
          return v2;
        }

        ;
        throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 113, column 5 - line 135, column 15): " + [v2.constructor.name]);
      };
    };

    var patchProp = function patchProp(state, ps2) {
      var events = Halogen_VDom_Util.newMutMap();
      var onThis = removeProp(state.events);
      var onThese = diffProp(state.events, events);
      var onThat = applyProp(events);
      var props = Halogen_VDom_Util.diffWithKeyAndIxE(state.props, ps2, propToStrKey, onThese, onThis, onThat);
      var nextState = {
        events: Halogen_VDom_Util.unsafeFreeze(events),
        props: props
      };
      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Data_Unit.unit, nextState, patchProp, haltProp));
    };

    var renderProp = function renderProp(ps1) {
      var events = Halogen_VDom_Util.newMutMap();
      var ps1$prime = Halogen_VDom_Util.strMapWithIxE(ps1, propToStrKey, applyProp(events));
      var state = {
        events: Halogen_VDom_Util.unsafeFreeze(events),
        props: ps1$prime
      };
      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Data_Unit.unit, state, patchProp, haltProp));
    };

    return renderProp;
  };
};

module.exports = {
  Attribute: Attribute,
  Property: Property,
  Handler: Handler,
  Ref: Ref,
  Created: Created,
  Removed: Removed,
  propFromString: propFromString,
  propFromBoolean: propFromBoolean,
  propFromInt: propFromInt,
  propFromNumber: propFromNumber,
  buildProp: buildProp,
  functorProp: functorProp,
  functorElemRef: functorElemRef
};
},{"../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Nullable/index.js":"../output/Data.Nullable/index.js","../Data.Tuple/index.js":"../output/Data.Tuple/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js","../Effect.Ref/index.js":"../output/Effect.Ref/index.js","../Foreign/index.js":"../output/Foreign/index.js","../Foreign.Object/index.js":"../output/Foreign.Object/index.js","../Halogen.VDom.Machine/index.js":"../output/Halogen.VDom.Machine/index.js","../Halogen.VDom.Util/index.js":"../output/Halogen.VDom.Util/index.js","../Unsafe.Coerce/index.js":"../output/Unsafe.Coerce/index.js","../Web.Event.EventTarget/index.js":"../output/Web.Event.EventTarget/index.js"}],"../output/Halogen.HTML.Core/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var DOM_HTML_Indexed_ButtonType = require("../DOM.HTML.Indexed.ButtonType/index.js");

var DOM_HTML_Indexed_CrossOriginValue = require("../DOM.HTML.Indexed.CrossOriginValue/index.js");

var DOM_HTML_Indexed_DirValue = require("../DOM.HTML.Indexed.DirValue/index.js");

var DOM_HTML_Indexed_FormMethod = require("../DOM.HTML.Indexed.FormMethod/index.js");

var DOM_HTML_Indexed_InputAcceptType = require("../DOM.HTML.Indexed.InputAcceptType/index.js");

var DOM_HTML_Indexed_InputType = require("../DOM.HTML.Indexed.InputType/index.js");

var DOM_HTML_Indexed_KindValue = require("../DOM.HTML.Indexed.KindValue/index.js");

var DOM_HTML_Indexed_MenuType = require("../DOM.HTML.Indexed.MenuType/index.js");

var DOM_HTML_Indexed_MenuitemType = require("../DOM.HTML.Indexed.MenuitemType/index.js");

var DOM_HTML_Indexed_OnOff = require("../DOM.HTML.Indexed.OnOff/index.js");

var DOM_HTML_Indexed_OrderedListType = require("../DOM.HTML.Indexed.OrderedListType/index.js");

var DOM_HTML_Indexed_PreloadValue = require("../DOM.HTML.Indexed.PreloadValue/index.js");

var DOM_HTML_Indexed_ScopeValue = require("../DOM.HTML.Indexed.ScopeValue/index.js");

var DOM_HTML_Indexed_StepValue = require("../DOM.HTML.Indexed.StepValue/index.js");

var DOM_HTML_Indexed_WrapValue = require("../DOM.HTML.Indexed.WrapValue/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_MediaType = require("../Data.MediaType/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Halogen_Query_Input = require("../Halogen.Query.Input/index.js");

var Halogen_VDom_DOM_Prop = require("../Halogen.VDom.DOM.Prop/index.js");

var Halogen_VDom_Types = require("../Halogen.VDom.Types/index.js");

var PropName = function PropName(x) {
  return x;
};

var HTML = function HTML(x) {
  return x;
};

var ClassName = function ClassName(x) {
  return x;
};

var AttrName = function AttrName(x) {
  return x;
};

var IsProp = function IsProp(toPropValue) {
  this.toPropValue = toPropValue;
};

var widget = function widget($30) {
  return HTML(Halogen_VDom_Types.Widget.create($30));
};

var toPropValue = function toPropValue(dict) {
  return dict.toPropValue;
};

var text = function text($31) {
  return HTML(Halogen_VDom_Types.Text.create($31));
};

var semigroupClassName = Data_Semigroup.semigroupString;

var ref = function ref(f) {
  return Halogen_VDom_DOM_Prop.Ref.create(function ($32) {
    return f(function (v) {
      if (v instanceof Halogen_VDom_DOM_Prop.Created) {
        return new Data_Maybe.Just(v.value0);
      }

      ;

      if (v instanceof Halogen_VDom_DOM_Prop.Removed) {
        return Data_Maybe.Nothing.value;
      }

      ;
      throw new Error("Failed pattern match at Halogen.HTML.Core (line 104, column 21 - line 106, column 23): " + [v.constructor.name]);
    }($32));
  });
};

var prop = function prop(dictIsProp) {
  return function (v) {
    var $33 = Halogen_VDom_DOM_Prop.Property.create(v);
    var $34 = toPropValue(dictIsProp);
    return function ($35) {
      return $33($34($35));
    };
  };
};

var ordPropName = Data_Ord.ordString;
var ordClassName = Data_Ord.ordString;
var ordAttrName = Data_Ord.ordString;
var newtypePropName = new Data_Newtype.Newtype(function (n) {
  return n;
}, PropName);
var newtypeHTML = new Data_Newtype.Newtype(function (n) {
  return n;
}, HTML);

var renderWidget = function renderWidget(f) {
  return function (g) {
    return function (v) {
      return Halogen_VDom_Types.renderWidget(Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Halogen_VDom_DOM_Prop.functorProp)(Data_Functor.map(Halogen_Query_Input.functorInput)(f))))(function () {
        var $36 = Data_Newtype.un(newtypeHTML)(HTML);
        return function ($37) {
          return $36(g($37));
        };
      }())(v);
    };
  };
};

var newtypeClassName = new Data_Newtype.Newtype(function (n) {
  return n;
}, ClassName);
var newtypeAttrName = new Data_Newtype.Newtype(function (n) {
  return n;
}, AttrName);

var keyed = function keyed(ns) {
  return function (name) {
    return function (props) {
      return function (children) {
        return new Halogen_VDom_Types.Keyed(ns, name, props, children);
      };
    };
  };
};

var isPropWrapValue = new IsProp(function ($38) {
  return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_WrapValue.renderWrapValue($38));
});
var isPropString = new IsProp(Halogen_VDom_DOM_Prop.propFromString);
var isPropStepValue = new IsProp(function ($39) {
  return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_StepValue.renderStepValue($39));
});
var isPropScopeValue = new IsProp(function ($40) {
  return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_ScopeValue.renderScopeValue($40));
});
var isPropPreloadValue = new IsProp(function ($41) {
  return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_PreloadValue.renderPreloadValue($41));
});
var isPropOrderedListType = new IsProp(function ($42) {
  return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_OrderedListType.renderOrderedListType($42));
});
var isPropOnOff = new IsProp(function ($43) {
  return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_OnOff.renderOnOff($43));
});
var isPropNumber = new IsProp(Halogen_VDom_DOM_Prop.propFromNumber);
var isPropMenuitemType = new IsProp(function ($44) {
  return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_MenuitemType.renderMenuitemType($44));
});
var isPropMenuType = new IsProp(function ($45) {
  return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_MenuType.renderMenuType($45));
});
var isPropMediaType = new IsProp(function () {
  var $46 = Data_Newtype.unwrap(Data_MediaType.newtypeMediaType);
  return function ($47) {
    return Halogen_VDom_DOM_Prop.propFromString($46($47));
  };
}());
var isPropKindValue = new IsProp(function ($48) {
  return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_KindValue.renderKindValue($48));
});
var isPropInt = new IsProp(Halogen_VDom_DOM_Prop.propFromInt);
var isPropInputType = new IsProp(function ($49) {
  return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_InputType.renderInputType($49));
});
var isPropInputAcceptType = new IsProp(function ($50) {
  return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_InputAcceptType.renderInputAcceptType($50));
});
var isPropFormMethod = new IsProp(function ($51) {
  return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_FormMethod.renderFormMethod($51));
});
var isPropDirValue = new IsProp(function ($52) {
  return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_DirValue.renderDirValue($52));
});
var isPropCrossOriginValue = new IsProp(function ($53) {
  return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_CrossOriginValue.renderCrossOriginValue($53));
});
var isPropButtonType = new IsProp(function ($54) {
  return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_ButtonType.renderButtonType($54));
});
var isPropBoolean = new IsProp(Halogen_VDom_DOM_Prop.propFromBoolean);
var handler = Halogen_VDom_DOM_Prop.Handler.create;
var eqPropName = Data_Eq.eqString;
var eqClassName = Data_Eq.eqString;
var eqAttrName = Data_Eq.eqString;

var element = function element(ns) {
  return function (name) {
    return function (props) {
      return function (children) {
        return new Halogen_VDom_Types.Elem(ns, name, props, children);
      };
    };
  };
};

var bifunctorHTML = new Data_Bifunctor.Bifunctor(function (f) {
  return function (g) {
    return function (v) {
      return Data_Bifunctor.bimap(Halogen_VDom_Types.bifunctorVDom)(Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Halogen_VDom_DOM_Prop.functorProp)(Data_Functor.map(Halogen_Query_Input.functorInput)(g))))(f)(v);
    };
  };
});
var functorHTML = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorHTML));

var attr = function attr(ns) {
  return function (v) {
    return Halogen_VDom_DOM_Prop.Attribute.create(ns)(v);
  };
};

module.exports = {
  HTML: HTML,
  renderWidget: renderWidget,
  widget: widget,
  text: text,
  element: element,
  keyed: keyed,
  prop: prop,
  attr: attr,
  handler: handler,
  ref: ref,
  IsProp: IsProp,
  toPropValue: toPropValue,
  PropName: PropName,
  AttrName: AttrName,
  ClassName: ClassName,
  newtypeHTML: newtypeHTML,
  bifunctorHTML: bifunctorHTML,
  functorHTML: functorHTML,
  isPropString: isPropString,
  isPropInt: isPropInt,
  isPropNumber: isPropNumber,
  isPropBoolean: isPropBoolean,
  isPropMediaType: isPropMediaType,
  isPropButtonType: isPropButtonType,
  isPropCrossOriginValue: isPropCrossOriginValue,
  isPropDirValue: isPropDirValue,
  isPropFormMethod: isPropFormMethod,
  isPropInputType: isPropInputType,
  isPropKindValue: isPropKindValue,
  isPropMenuitemType: isPropMenuitemType,
  isPropMenuType: isPropMenuType,
  isPropOnOff: isPropOnOff,
  isPropOrderedListType: isPropOrderedListType,
  isPropPreloadValue: isPropPreloadValue,
  isPropScopeValue: isPropScopeValue,
  isPropStepValue: isPropStepValue,
  isPropWrapValue: isPropWrapValue,
  isPropInputAcceptType: isPropInputAcceptType,
  newtypePropName: newtypePropName,
  eqPropName: eqPropName,
  ordPropName: ordPropName,
  newtypeAttrName: newtypeAttrName,
  eqAttrName: eqAttrName,
  ordAttrName: ordAttrName,
  newtypeClassName: newtypeClassName,
  eqClassName: eqClassName,
  ordClassName: ordClassName,
  semigroupClassName: semigroupClassName
};
},{"../DOM.HTML.Indexed.ButtonType/index.js":"../output/DOM.HTML.Indexed.ButtonType/index.js","../DOM.HTML.Indexed.CrossOriginValue/index.js":"../output/DOM.HTML.Indexed.CrossOriginValue/index.js","../DOM.HTML.Indexed.DirValue/index.js":"../output/DOM.HTML.Indexed.DirValue/index.js","../DOM.HTML.Indexed.FormMethod/index.js":"../output/DOM.HTML.Indexed.FormMethod/index.js","../DOM.HTML.Indexed.InputAcceptType/index.js":"../output/DOM.HTML.Indexed.InputAcceptType/index.js","../DOM.HTML.Indexed.InputType/index.js":"../output/DOM.HTML.Indexed.InputType/index.js","../DOM.HTML.Indexed.KindValue/index.js":"../output/DOM.HTML.Indexed.KindValue/index.js","../DOM.HTML.Indexed.MenuType/index.js":"../output/DOM.HTML.Indexed.MenuType/index.js","../DOM.HTML.Indexed.MenuitemType/index.js":"../output/DOM.HTML.Indexed.MenuitemType/index.js","../DOM.HTML.Indexed.OnOff/index.js":"../output/DOM.HTML.Indexed.OnOff/index.js","../DOM.HTML.Indexed.OrderedListType/index.js":"../output/DOM.HTML.Indexed.OrderedListType/index.js","../DOM.HTML.Indexed.PreloadValue/index.js":"../output/DOM.HTML.Indexed.PreloadValue/index.js","../DOM.HTML.Indexed.ScopeValue/index.js":"../output/DOM.HTML.Indexed.ScopeValue/index.js","../DOM.HTML.Indexed.StepValue/index.js":"../output/DOM.HTML.Indexed.StepValue/index.js","../DOM.HTML.Indexed.WrapValue/index.js":"../output/DOM.HTML.Indexed.WrapValue/index.js","../Data.Bifunctor/index.js":"../output/Data.Bifunctor/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.MediaType/index.js":"../output/Data.MediaType/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Semigroup/index.js":"../output/Data.Semigroup/index.js","../Halogen.Query.Input/index.js":"../output/Halogen.Query.Input/index.js","../Halogen.VDom.DOM.Prop/index.js":"../output/Halogen.VDom.DOM.Prop/index.js","../Halogen.VDom.Types/index.js":"../output/Halogen.VDom.Types/index.js"}],"../output/Halogen.HTML.Elements/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");

var Halogen_VDom_Types = require("../Halogen.VDom.Types/index.js");

var withKeys_ = function withKeys_(ctor) {
  return function (children) {
    var v = ctor([]);

    if (v instanceof Halogen_VDom_Types.Elem) {
      return new Halogen_VDom_Types.Keyed(v.value0, v.value1, v.value2, children);
    }

    ;
    return v;
  };
};

var withKeys = function withKeys(ctor) {
  return function (props) {
    return function (children) {
      var v = ctor(props)([]);

      if (v instanceof Halogen_VDom_Types.Elem) {
        return new Halogen_VDom_Types.Keyed(v.value0, v.value1, v.value2, children);
      }

      ;
      return v;
    };
  };
};

var keyedNS = function () {
  var $12 = Control_Applicative.pure(Data_Maybe.applicativeMaybe);
  return function ($13) {
    return Halogen_HTML_Core.keyed($12($13));
  };
}();

var keyed = Halogen_HTML_Core.keyed(Data_Maybe.Nothing.value);

var elementNS = function () {
  var $14 = Control_Applicative.pure(Data_Maybe.applicativeMaybe);
  return function ($15) {
    return Halogen_HTML_Core.element($14($15));
  };
}();

var element = Halogen_HTML_Core.element(Data_Maybe.Nothing.value);
var em = element("em");
var em_ = em([]);
var embed = element("embed");
var embed_ = embed([]);
var fieldset = element("fieldset");
var fieldset_ = fieldset([]);
var figcaption = element("figcaption");
var figcaption_ = figcaption([]);
var figure = element("figure");
var figure_ = figure([]);
var footer = element("footer");
var footer_ = footer([]);
var form = element("form");
var form_ = form([]);
var h1 = element("h1");
var h1_ = h1([]);
var h2 = element("h2");
var h2_ = h2([]);
var h3 = element("h3");
var h3_ = h3([]);
var h4 = element("h4");
var h4_ = h4([]);
var h5 = element("h5");
var h5_ = h5([]);
var h6 = element("h6");
var h6_ = h6([]);
var head = element("head");
var head_ = head([]);
var header = element("header");
var header_ = header([]);

var hr = function hr(props) {
  return element("hr")(props)([]);
};

var hr_ = hr([]);
var html = element("html");
var html_ = html([]);
var i = element("i");
var i_ = i([]);

var iframe = function iframe(props) {
  return element("iframe")(props)([]);
};

var img = function img(props) {
  return element("img")(props)([]);
};

var input = function input(props) {
  return element("input")(props)([]);
};

var ins = element("ins");
var ins_ = ins([]);
var kbd = element("kbd");
var kbd_ = kbd([]);
var label = element("label");
var label_ = label([]);
var legend = element("legend");
var legend_ = legend([]);
var li = element("li");
var li_ = li([]);

var link = function link(props) {
  return element("link")(props)([]);
};

var main = element("main");
var main_ = main([]);
var map = element("map");
var map_ = map([]);
var mark = element("mark");
var mark_ = mark([]);
var menu = element("menu");
var menu_ = menu([]);
var menuitem = element("menuitem");
var menuitem_ = menuitem([]);

var meta = function meta(props) {
  return element("meta")(props)([]);
};

var meter = element("meter");
var meter_ = meter([]);
var nav = element("nav");
var nav_ = nav([]);
var noscript = element("noscript");
var noscript_ = noscript([]);
var object = element("object");
var object_ = object([]);
var ol = element("ol");
var ol_ = ol([]);
var optgroup = element("optgroup");
var optgroup_ = optgroup([]);
var option = element("option");
var option_ = option([]);
var output = element("output");
var output_ = output([]);
var p = element("p");
var p_ = p([]);

var param = function param(props) {
  return element("param")(props)([]);
};

var pre = element("pre");
var pre_ = pre([]);
var progress = element("progress");
var progress_ = progress([]);
var q = element("q");
var q_ = q([]);
var rp = element("rp");
var rp_ = rp([]);
var rt = element("rt");
var rt_ = rt([]);
var ruby = element("ruby");
var ruby_ = ruby([]);
var samp = element("samp");
var samp_ = samp([]);
var script = element("script");
var script_ = script([]);
var section = element("section");
var section_ = section([]);
var select = element("select");
var select_ = select([]);
var small = element("small");
var small_ = small([]);

var source = function source(props) {
  return element("source")(props)([]);
};

var span = element("span");
var span_ = span([]);
var strong = element("strong");
var strong_ = strong([]);
var style = element("style");
var style_ = style([]);
var sub = element("sub");
var sub_ = sub([]);
var summary = element("summary");
var summary_ = summary([]);
var sup = element("sup");
var sup_ = sup([]);
var table = element("table");
var table_ = table([]);
var tbody = element("tbody");
var tbody_ = tbody([]);
var td = element("td");
var td_ = td([]);

var textarea = function textarea(es) {
  return element("textarea")(es)([]);
};

var tfoot = element("tfoot");
var tfoot_ = tfoot([]);
var th = element("th");
var th_ = th([]);
var thead = element("thead");
var thead_ = thead([]);
var time = element("time");
var time_ = time([]);
var title = element("title");
var title_ = title([]);
var tr = element("tr");
var tr_ = tr([]);

var track = function track(props) {
  return element("track")(props)([]);
};

var u = element("u");
var u_ = u([]);
var ul = element("ul");
var ul_ = ul([]);
var $$var = element("var");
var var_ = $$var([]);
var video = element("video");
var video_ = video([]);

var wbr = function wbr(props) {
  return element("wbr")(props)([]);
};

var dt = element("dt");
var dt_ = dt([]);
var dl = element("dl");
var dl_ = dl([]);
var div = element("div");
var div_ = div([]);
var dialog = element("dialog");
var dialog_ = dialog([]);
var dfn = element("dfn");
var dfn_ = dfn([]);
var details = element("details");
var details_ = details([]);
var del = element("del");
var del_ = del([]);
var dd = element("dd");
var dd_ = dd([]);
var datalist = element("datalist");
var datalist_ = datalist([]);

var command = function command(props) {
  return element("command")(props)([]);
};

var colgroup = element("colgroup");
var colgroup_ = colgroup([]);

var col = function col(props) {
  return element("col")(props)([]);
};

var code = element("code");
var code_ = code([]);
var cite = element("cite");
var cite_ = cite([]);
var caption = element("caption");
var caption_ = caption([]);

var canvas = function canvas(props) {
  return element("canvas")(props)([]);
};

var button = element("button");
var button_ = button([]);

var br = function br(props) {
  return element("br")(props)([]);
};

var br_ = br([]);
var body = element("body");
var body_ = body([]);
var blockquote = element("blockquote");
var blockquote_ = blockquote([]);
var bdo = element("bdo");
var bdo_ = bdo([]);
var bdi = element("bdi");
var bdi_ = bdi([]);

var base = function base(props) {
  return element("base")(props)([]);
};

var b = element("b");
var b_ = b([]);
var audio = element("audio");
var audio_ = audio([]);
var aside = element("aside");
var aside_ = aside([]);
var article = element("article");
var article_ = article([]);

var area = function area(props) {
  return element("area")(props)([]);
};

var address = element("address");
var address_ = address([]);
var abbr = element("abbr");
var abbr_ = abbr([]);
var a = element("a");
var a_ = a([]);
module.exports = {
  element: element,
  elementNS: elementNS,
  keyed: keyed,
  keyedNS: keyedNS,
  withKeys: withKeys,
  withKeys_: withKeys_,
  a: a,
  a_: a_,
  abbr: abbr,
  abbr_: abbr_,
  address: address,
  address_: address_,
  area: area,
  article: article,
  article_: article_,
  aside: aside,
  aside_: aside_,
  audio: audio,
  audio_: audio_,
  b: b,
  b_: b_,
  base: base,
  bdi: bdi,
  bdi_: bdi_,
  bdo: bdo,
  bdo_: bdo_,
  blockquote: blockquote,
  blockquote_: blockquote_,
  body: body,
  body_: body_,
  br: br,
  br_: br_,
  button: button,
  button_: button_,
  canvas: canvas,
  caption: caption,
  caption_: caption_,
  cite: cite,
  cite_: cite_,
  code: code,
  code_: code_,
  col: col,
  colgroup: colgroup,
  colgroup_: colgroup_,
  command: command,
  datalist: datalist,
  datalist_: datalist_,
  dd: dd,
  dd_: dd_,
  del: del,
  del_: del_,
  details: details,
  details_: details_,
  dfn: dfn,
  dfn_: dfn_,
  dialog: dialog,
  dialog_: dialog_,
  div: div,
  div_: div_,
  dl: dl,
  dl_: dl_,
  dt: dt,
  dt_: dt_,
  em: em,
  em_: em_,
  embed: embed,
  embed_: embed_,
  fieldset: fieldset,
  fieldset_: fieldset_,
  figcaption: figcaption,
  figcaption_: figcaption_,
  figure: figure,
  figure_: figure_,
  footer: footer,
  footer_: footer_,
  form: form,
  form_: form_,
  h1: h1,
  h1_: h1_,
  h2: h2,
  h2_: h2_,
  h3: h3,
  h3_: h3_,
  h4: h4,
  h4_: h4_,
  h5: h5,
  h5_: h5_,
  h6: h6,
  h6_: h6_,
  head: head,
  head_: head_,
  header: header,
  header_: header_,
  hr: hr,
  hr_: hr_,
  html: html,
  html_: html_,
  i: i,
  i_: i_,
  iframe: iframe,
  img: img,
  input: input,
  ins: ins,
  ins_: ins_,
  kbd: kbd,
  kbd_: kbd_,
  label: label,
  label_: label_,
  legend: legend,
  legend_: legend_,
  li: li,
  li_: li_,
  link: link,
  main: main,
  main_: main_,
  map: map,
  map_: map_,
  mark: mark,
  mark_: mark_,
  menu: menu,
  menu_: menu_,
  menuitem: menuitem,
  menuitem_: menuitem_,
  meta: meta,
  meter: meter,
  meter_: meter_,
  nav: nav,
  nav_: nav_,
  noscript: noscript,
  noscript_: noscript_,
  object: object,
  object_: object_,
  ol: ol,
  ol_: ol_,
  optgroup: optgroup,
  optgroup_: optgroup_,
  option: option,
  option_: option_,
  output: output,
  output_: output_,
  p: p,
  p_: p_,
  param: param,
  pre: pre,
  pre_: pre_,
  progress: progress,
  progress_: progress_,
  q: q,
  q_: q_,
  rp: rp,
  rp_: rp_,
  rt: rt,
  rt_: rt_,
  ruby: ruby,
  ruby_: ruby_,
  samp: samp,
  samp_: samp_,
  script: script,
  script_: script_,
  section: section,
  section_: section_,
  select: select,
  select_: select_,
  small: small,
  small_: small_,
  source: source,
  span: span,
  span_: span_,
  strong: strong,
  strong_: strong_,
  style: style,
  style_: style_,
  sub: sub,
  sub_: sub_,
  summary: summary,
  summary_: summary_,
  sup: sup,
  sup_: sup_,
  table: table,
  table_: table_,
  tbody: tbody,
  tbody_: tbody_,
  td: td,
  td_: td_,
  textarea: textarea,
  tfoot: tfoot,
  tfoot_: tfoot_,
  th: th,
  th_: th_,
  thead: thead,
  thead_: thead_,
  time: time,
  time_: time_,
  title: title,
  title_: title_,
  tr: tr,
  tr_: tr_,
  track: track,
  u: u,
  u_: u_,
  ul: ul,
  ul_: ul_,
  "var": $$var,
  var_: var_,
  video: video,
  video_: video_,
  wbr: wbr
};
},{"../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Halogen.HTML.Core/index.js":"../output/Halogen.HTML.Core/index.js","../Halogen.VDom.Types/index.js":"../output/Halogen.VDom.Types/index.js"}],"../output/Foreign.Index/foreign.js":[function(require,module,exports) {
"use strict";

exports.unsafeReadPropImpl = function (f, s, key, value) {
  return value == null ? f : s(value[key]);
};

exports.unsafeHasOwnProperty = function (prop, value) {
  return Object.prototype.hasOwnProperty.call(value, prop);
};

exports.unsafeHasProperty = function (prop, value) {
  return prop in value;
};
},{}],"../output/Foreign.Index/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Foreign = require("../Foreign/index.js");

var Indexable = function Indexable(ix) {
  this.ix = ix;
};

var Index = function Index(errorAt, hasOwnProperty, hasProperty, index) {
  this.errorAt = errorAt;
  this.hasOwnProperty = hasOwnProperty;
  this.hasProperty = hasProperty;
  this.index = index;
};

var unsafeReadProp = function unsafeReadProp(k) {
  return function (value) {
    return $foreign.unsafeReadPropImpl(Foreign.fail(new Foreign.TypeMismatch("object", Foreign.typeOf(value))), Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)), k, value);
  };
};

var readProp = unsafeReadProp;
var readIndex = unsafeReadProp;

var ix = function ix(dict) {
  return dict.ix;
};

var index = function index(dict) {
  return dict.index;
};

var indexableExceptT = new Indexable(function (dictIndex) {
  return function (f) {
    return function (i) {
      return Control_Bind.bindFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Function.flip(index(dictIndex))(i))(f);
    };
  };
});
var indexableForeign = new Indexable(function (dictIndex) {
  return index(dictIndex);
});

var hasPropertyImpl = function hasPropertyImpl(v) {
  return function (value) {
    if (Foreign.isNull(value)) {
      return false;
    }

    ;

    if (Foreign.isUndefined(value)) {
      return false;
    }

    ;

    if (Foreign.typeOf(value) === "object" || Foreign.typeOf(value) === "function") {
      return $foreign.unsafeHasProperty(v, value);
    }

    ;
    return false;
  };
};

var hasProperty = function hasProperty(dict) {
  return dict.hasProperty;
};

var hasOwnPropertyImpl = function hasOwnPropertyImpl(v) {
  return function (value) {
    if (Foreign.isNull(value)) {
      return false;
    }

    ;

    if (Foreign.isUndefined(value)) {
      return false;
    }

    ;

    if (Foreign.typeOf(value) === "object" || Foreign.typeOf(value) === "function") {
      return $foreign.unsafeHasOwnProperty(v, value);
    }

    ;
    return false;
  };
};

var indexInt = new Index(Foreign.ErrorAtIndex.create, hasOwnPropertyImpl, hasPropertyImpl, Data_Function.flip(readIndex));
var indexString = new Index(Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl, Data_Function.flip(readProp));

var hasOwnProperty = function hasOwnProperty(dict) {
  return dict.hasOwnProperty;
};

var errorAt = function errorAt(dict) {
  return dict.errorAt;
};

module.exports = {
  Index: Index,
  Indexable: Indexable,
  readProp: readProp,
  readIndex: readIndex,
  ix: ix,
  index: index,
  hasProperty: hasProperty,
  hasOwnProperty: hasOwnProperty,
  errorAt: errorAt,
  indexString: indexString,
  indexInt: indexInt,
  indexableForeign: indexableForeign,
  indexableExceptT: indexableExceptT
};
},{"./foreign.js":"../output/Foreign.Index/foreign.js","../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Monad.Except.Trans/index.js":"../output/Control.Monad.Except.Trans/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Identity/index.js":"../output/Data.Identity/index.js","../Foreign/index.js":"../output/Foreign/index.js"}],"../output/Web.Clipboard.ClipboardEvent.EventTypes/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var paste = "paste";
var cut = "cut";
var copy = "copy";
var clipboardchange = "clipboardchange";
module.exports = {
  clipboardchange: clipboardchange,
  copy: copy,
  cut: cut,
  paste: paste
};
},{}],"../output/Web.Event.Event/foreign.js":[function(require,module,exports) {
"use strict";

exports.bubbles = function (e) {
  return e.bubbles;
};

exports.cancelable = function (e) {
  return e.cancelable;
};

exports._currentTarget = function (e) {
  return e.currentTarget;
};

exports.defaultPrevented = function (e) {
  return function () {
    return e.defaultPrevented;
  };
};

exports.eventPhaseIndex = function (e) {
  return e.eventPhase;
};

exports._target = function (e) {
  return e.target;
};

exports.timeStamp = function (e) {
  return e.timeStamp;
};

exports.type_ = function (e) {
  return e.type;
};

exports.preventDefault = function (e) {
  return function () {
    return e.preventDefault();
  };
};

exports.stopImmediatePropagation = function (e) {
  return function () {
    return e.stopImmediatePropagation();
  };
};

exports.stopPropagation = function (e) {
  return function () {
    return e.stopPropagation();
  };
};
},{}],"../output/Data.Enum/foreign.js":[function(require,module,exports) {
"use strict";

exports.toCharCode = function (c) {
  return c.charCodeAt(0);
};

exports.fromCharCode = function (c) {
  return String.fromCharCode(c);
};
},{}],"../output/Data.Enum/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Cardinality = function Cardinality(x) {
  return x;
};

var Enum = function Enum(Ord0, pred, succ) {
  this.Ord0 = Ord0;
  this.pred = pred;
  this.succ = succ;
};

var BoundedEnum = function BoundedEnum(Bounded0, Enum1, cardinality, fromEnum, toEnum) {
  this.Bounded0 = Bounded0;
  this.Enum1 = Enum1;
  this.cardinality = cardinality;
  this.fromEnum = fromEnum;
  this.toEnum = toEnum;
};

var toEnum = function toEnum(dict) {
  return dict.toEnum;
};

var succ = function succ(dict) {
  return dict.succ;
};

var upFromIncluding = function upFromIncluding(dictEnum) {
  return function (dictUnfoldable1) {
    return Data_Unfoldable1.unfoldr1(dictUnfoldable1)(Control_Apply.apply(Control_Apply.applyFn)(Data_Tuple.Tuple.create)(succ(dictEnum)));
  };
};

var showCardinality = new Data_Show.Show(function (v) {
  return "(Cardinality " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});

var pred = function pred(dict) {
  return dict.pred;
};

var ordCardinality = Data_Ord.ordInt;
var newtypeCardinality = new Data_Newtype.Newtype(function (n) {
  return n;
}, Cardinality);

var fromEnum = function fromEnum(dict) {
  return dict.fromEnum;
};

var toEnumWithDefaults = function toEnumWithDefaults(dictBoundedEnum) {
  return function (low) {
    return function (high) {
      return function (x) {
        var v = toEnum(dictBoundedEnum)(x);

        if (v instanceof Data_Maybe.Just) {
          return v.value0;
        }

        ;

        if (v instanceof Data_Maybe.Nothing) {
          var $54 = x < fromEnum(dictBoundedEnum)(Data_Bounded.bottom(dictBoundedEnum.Bounded0()));

          if ($54) {
            return low;
          }

          ;
          return high;
        }

        ;
        throw new Error("Failed pattern match at Data.Enum (line 158, column 33 - line 160, column 62): " + [v.constructor.name]);
      };
    };
  };
};

var eqCardinality = Data_Eq.eqInt;
var enumUnit = new Enum(function () {
  return Data_Ord.ordUnit;
}, Data_Function["const"](Data_Maybe.Nothing.value), Data_Function["const"](Data_Maybe.Nothing.value));

var enumTuple = function enumTuple(dictEnum) {
  return function (dictBoundedEnum) {
    return new Enum(function () {
      return Data_Tuple.ordTuple(dictEnum.Ord0())(dictBoundedEnum.Enum1().Ord0());
    }, function (v) {
      return Data_Maybe.maybe(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Bounded.top(dictBoundedEnum.Bounded0())))(pred(dictEnum)(v.value0)))(function () {
        var $96 = Data_Tuple.Tuple.create(v.value0);
        return function ($97) {
          return Data_Maybe.Just.create($96($97));
        };
      }())(pred(dictBoundedEnum.Enum1())(v.value1));
    }, function (v) {
      return Data_Maybe.maybe(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Bounded.bottom(dictBoundedEnum.Bounded0())))(succ(dictEnum)(v.value0)))(function () {
        var $98 = Data_Tuple.Tuple.create(v.value0);
        return function ($99) {
          return Data_Maybe.Just.create($98($99));
        };
      }())(succ(dictBoundedEnum.Enum1())(v.value1));
    });
  };
};

var enumOrdering = new Enum(function () {
  return Data_Ord.ordOrdering;
}, function (v) {
  if (v instanceof Data_Ordering.LT) {
    return Data_Maybe.Nothing.value;
  }

  ;

  if (v instanceof Data_Ordering.EQ) {
    return new Data_Maybe.Just(Data_Ordering.LT.value);
  }

  ;

  if (v instanceof Data_Ordering.GT) {
    return new Data_Maybe.Just(Data_Ordering.EQ.value);
  }

  ;
  throw new Error("Failed pattern match at Data.Enum (line 72, column 1 - line 78, column 20): " + [v.constructor.name]);
}, function (v) {
  if (v instanceof Data_Ordering.LT) {
    return new Data_Maybe.Just(Data_Ordering.EQ.value);
  }

  ;

  if (v instanceof Data_Ordering.EQ) {
    return new Data_Maybe.Just(Data_Ordering.GT.value);
  }

  ;

  if (v instanceof Data_Ordering.GT) {
    return Data_Maybe.Nothing.value;
  }

  ;
  throw new Error("Failed pattern match at Data.Enum (line 72, column 1 - line 78, column 20): " + [v.constructor.name]);
});

var enumMaybe = function enumMaybe(dictBoundedEnum) {
  return new Enum(function () {
    return Data_Maybe.ordMaybe(dictBoundedEnum.Enum1().Ord0());
  }, function (v) {
    if (v instanceof Data_Maybe.Nothing) {
      return Data_Maybe.Nothing.value;
    }

    ;

    if (v instanceof Data_Maybe.Just) {
      return new Data_Maybe.Just(pred(dictBoundedEnum.Enum1())(v.value0));
    }

    ;
    throw new Error("Failed pattern match at Data.Enum (line 80, column 1 - line 84, column 32): " + [v.constructor.name]);
  }, function (v) {
    if (v instanceof Data_Maybe.Nothing) {
      return new Data_Maybe.Just(new Data_Maybe.Just(Data_Bounded.bottom(dictBoundedEnum.Bounded0())));
    }

    ;

    if (v instanceof Data_Maybe.Just) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(succ(dictBoundedEnum.Enum1())(v.value0));
    }

    ;
    throw new Error("Failed pattern match at Data.Enum (line 80, column 1 - line 84, column 32): " + [v.constructor.name]);
  });
};

var enumInt = new Enum(function () {
  return Data_Ord.ordInt;
}, function (n) {
  var $67 = n > Data_Bounded.bottom(Data_Bounded.boundedInt);

  if ($67) {
    return new Data_Maybe.Just(n - 1 | 0);
  }

  ;
  return Data_Maybe.Nothing.value;
}, function (n) {
  var $68 = n < Data_Bounded.top(Data_Bounded.boundedInt);

  if ($68) {
    return new Data_Maybe.Just(n + 1 | 0);
  }

  ;
  return Data_Maybe.Nothing.value;
});

var enumFromTo = function enumFromTo(dictEnum) {
  return function (dictUnfoldable1) {
    var go = function go(step) {
      return function (op) {
        return function (to) {
          return function (a) {
            return new Data_Tuple.Tuple(a, Control_Bind.bind(Data_Maybe.bindMaybe)(step(a))(function (a$prime) {
              return Data_Functor.voidLeft(Data_Maybe.functorMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(op(a$prime)(to)))(a$prime);
            }));
          };
        };
      };
    };

    return function (v) {
      return function (v1) {
        if (Data_Eq.eq(dictEnum.Ord0().Eq0())(v)(v1)) {
          return Data_Unfoldable1.singleton(dictUnfoldable1)(v);
        }

        ;

        if (Data_Ord.lessThan(dictEnum.Ord0())(v)(v1)) {
          return Data_Unfoldable1.unfoldr1(dictUnfoldable1)(go(succ(dictEnum))(Data_Ord.lessThanOrEq(dictEnum.Ord0()))(v1))(v);
        }

        ;

        if (Data_Boolean.otherwise) {
          return Data_Unfoldable1.unfoldr1(dictUnfoldable1)(go(pred(dictEnum))(Data_Ord.greaterThanOrEq(dictEnum.Ord0()))(v1))(v);
        }

        ;
        throw new Error("Failed pattern match at Data.Enum (line 183, column 14 - line 187, column 51): " + [v.constructor.name, v1.constructor.name]);
      };
    };
  };
};

var enumFromThenTo = function enumFromThenTo(dictUnfoldable) {
  return function (dictFunctor) {
    return function (dictBoundedEnum) {
      var go = function go(step) {
        return function (to) {
          return function (e) {
            if (e <= to) {
              return new Data_Maybe.Just(new Data_Tuple.Tuple(e, e + step | 0));
            }

            ;

            if (Data_Boolean.otherwise) {
              return Data_Maybe.Nothing.value;
            }

            ;
            throw new Error("Failed pattern match at Data.Enum (line 214, column 5 - line 216, column 28): " + [step.constructor.name, to.constructor.name, e.constructor.name]);
          };
        };
      };

      return function (a) {
        return function (b) {
          return function (c) {
            var c$prime = fromEnum(dictBoundedEnum)(c);
            var b$prime = fromEnum(dictBoundedEnum)(b);
            var a$prime = fromEnum(dictBoundedEnum)(a);
            return Data_Functor.map(dictFunctor)(function () {
              var $100 = Data_Maybe.fromJust();
              var $101 = toEnum(dictBoundedEnum);
              return function ($102) {
                return $100($101($102));
              };
            }())(Data_Unfoldable.unfoldr(dictUnfoldable)(go(b$prime - a$prime | 0)(c$prime))(a$prime));
          };
        };
      };
    };
  };
};

var enumEither = function enumEither(dictBoundedEnum) {
  return function (dictBoundedEnum1) {
    return new Enum(function () {
      return Data_Either.ordEither(dictBoundedEnum.Enum1().Ord0())(dictBoundedEnum1.Enum1().Ord0());
    }, function (v) {
      if (v instanceof Data_Either.Left) {
        return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function ($103) {
          return Data_Maybe.Just.create(Data_Either.Left.create($103));
        })(pred(dictBoundedEnum.Enum1())(v.value0));
      }

      ;

      if (v instanceof Data_Either.Right) {
        return Data_Maybe.maybe(new Data_Maybe.Just(new Data_Either.Left(Data_Bounded.top(dictBoundedEnum.Bounded0()))))(function ($104) {
          return Data_Maybe.Just.create(Data_Either.Right.create($104));
        })(pred(dictBoundedEnum1.Enum1())(v.value0));
      }

      ;
      throw new Error("Failed pattern match at Data.Enum (line 86, column 1 - line 90, column 69): " + [v.constructor.name]);
    }, function (v) {
      if (v instanceof Data_Either.Left) {
        return Data_Maybe.maybe(new Data_Maybe.Just(new Data_Either.Right(Data_Bounded.bottom(dictBoundedEnum1.Bounded0()))))(function ($105) {
          return Data_Maybe.Just.create(Data_Either.Left.create($105));
        })(succ(dictBoundedEnum.Enum1())(v.value0));
      }

      ;

      if (v instanceof Data_Either.Right) {
        return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function ($106) {
          return Data_Maybe.Just.create(Data_Either.Right.create($106));
        })(succ(dictBoundedEnum1.Enum1())(v.value0));
      }

      ;
      throw new Error("Failed pattern match at Data.Enum (line 86, column 1 - line 90, column 69): " + [v.constructor.name]);
    });
  };
};

var enumBoolean = new Enum(function () {
  return Data_Ord.ordBoolean;
}, function (v) {
  if (v) {
    return new Data_Maybe.Just(false);
  }

  ;
  return Data_Maybe.Nothing.value;
}, function (v) {
  if (!v) {
    return new Data_Maybe.Just(true);
  }

  ;
  return Data_Maybe.Nothing.value;
});

var downFromIncluding = function downFromIncluding(dictEnum) {
  return function (dictUnfoldable1) {
    return Data_Unfoldable1.unfoldr1(dictUnfoldable1)(Control_Apply.apply(Control_Apply.applyFn)(Data_Tuple.Tuple.create)(pred(dictEnum)));
  };
};

var diag = function diag(a) {
  return new Data_Tuple.Tuple(a, a);
};

var downFrom = function downFrom(dictEnum) {
  return function (dictUnfoldable) {
    return Data_Unfoldable.unfoldr(dictUnfoldable)(function () {
      var $107 = Data_Functor.map(Data_Maybe.functorMaybe)(diag);
      var $108 = pred(dictEnum);
      return function ($109) {
        return $107($108($109));
      };
    }());
  };
};

var upFrom = function upFrom(dictEnum) {
  return function (dictUnfoldable) {
    return Data_Unfoldable.unfoldr(dictUnfoldable)(function () {
      var $110 = Data_Functor.map(Data_Maybe.functorMaybe)(diag);
      var $111 = succ(dictEnum);
      return function ($112) {
        return $110($111($112));
      };
    }());
  };
};

var defaultToEnum = function defaultToEnum(dictBounded) {
  return function (dictEnum) {
    return function (i$prime) {
      var go = function go($copy_i) {
        return function ($copy_x) {
          var $tco_var_i = $copy_i;
          var $tco_done = false;
          var $tco_result;

          function $tco_loop(i, x) {
            var $82 = i === 0;

            if ($82) {
              $tco_done = true;
              return new Data_Maybe.Just(x);
            }

            ;
            var v = succ(dictEnum)(x);

            if (v instanceof Data_Maybe.Just) {
              $tco_var_i = i - 1 | 0;
              $copy_x = v.value0;
              return;
            }

            ;

            if (v instanceof Data_Maybe.Nothing) {
              $tco_done = true;
              return Data_Maybe.Nothing.value;
            }

            ;
            throw new Error("Failed pattern match at Data.Enum (line 293, column 12 - line 295, column 33): " + [v.constructor.name]);
          }

          ;

          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_i, $copy_x);
          }

          ;
          return $tco_result;
        };
      };

      var $85 = i$prime < 0;

      if ($85) {
        return Data_Maybe.Nothing.value;
      }

      ;
      return go(i$prime)(Data_Bounded.bottom(dictBounded));
    };
  };
};

var defaultSucc = function defaultSucc(toEnum$prime) {
  return function (fromEnum$prime) {
    return function (a) {
      return toEnum$prime(fromEnum$prime(a) + 1 | 0);
    };
  };
};

var defaultPred = function defaultPred(toEnum$prime) {
  return function (fromEnum$prime) {
    return function (a) {
      return toEnum$prime(fromEnum$prime(a) - 1 | 0);
    };
  };
};

var defaultFromEnum = function defaultFromEnum(dictEnum) {
  var go = function go($copy_i) {
    return function ($copy_x) {
      var $tco_var_i = $copy_i;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(i, x) {
        var v = pred(dictEnum)(x);

        if (v instanceof Data_Maybe.Just) {
          $tco_var_i = i + 1 | 0;
          $copy_x = v.value0;
          return;
        }

        ;

        if (v instanceof Data_Maybe.Nothing) {
          $tco_done = true;
          return i;
        }

        ;
        throw new Error("Failed pattern match at Data.Enum (line 306, column 5 - line 308, column 19): " + [v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_i, $copy_x);
      }

      ;
      return $tco_result;
    };
  };

  return go(0);
};

var defaultCardinality = function defaultCardinality(dictBounded) {
  return function (dictEnum) {
    var go = function go($copy_i) {
      return function ($copy_x) {
        var $tco_var_i = $copy_i;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(i, x) {
          var v = succ(dictEnum)(x);

          if (v instanceof Data_Maybe.Just) {
            $tco_var_i = i + 1 | 0;
            $copy_x = v.value0;
            return;
          }

          ;

          if (v instanceof Data_Maybe.Nothing) {
            $tco_done = true;
            return i;
          }

          ;
          throw new Error("Failed pattern match at Data.Enum (line 273, column 5 - line 275, column 19): " + [v.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_i, $copy_x);
        }

        ;
        return $tco_result;
      };
    };

    return Cardinality(go(1)(Data_Bounded.bottom(dictBounded)));
  };
};

var charToEnum = function charToEnum(v) {
  if (v >= Data_Bounded.bottom(Data_Bounded.boundedInt) && v <= Data_Bounded.top(Data_Bounded.boundedInt)) {
    return new Data_Maybe.Just($foreign.fromCharCode(v));
  }

  ;
  return Data_Maybe.Nothing.value;
};

var enumChar = new Enum(function () {
  return Data_Ord.ordChar;
}, defaultPred(charToEnum)($foreign.toCharCode), defaultSucc(charToEnum)($foreign.toCharCode));

var cardinality = function cardinality(dict) {
  return dict.cardinality;
};

var boundedEnumUnit = new BoundedEnum(function () {
  return Data_Bounded.boundedUnit;
}, function () {
  return enumUnit;
}, 1, Data_Function["const"](0), function (v) {
  if (v === 0) {
    return new Data_Maybe.Just(Data_Unit.unit);
  }

  ;
  return Data_Maybe.Nothing.value;
});
var boundedEnumOrdering = new BoundedEnum(function () {
  return Data_Bounded.boundedOrdering;
}, function () {
  return enumOrdering;
}, 3, function (v) {
  if (v instanceof Data_Ordering.LT) {
    return 0;
  }

  ;

  if (v instanceof Data_Ordering.EQ) {
    return 1;
  }

  ;

  if (v instanceof Data_Ordering.GT) {
    return 2;
  }

  ;
  throw new Error("Failed pattern match at Data.Enum (line 137, column 1 - line 145, column 18): " + [v.constructor.name]);
}, function (v) {
  if (v === 0) {
    return new Data_Maybe.Just(Data_Ordering.LT.value);
  }

  ;

  if (v === 1) {
    return new Data_Maybe.Just(Data_Ordering.EQ.value);
  }

  ;

  if (v === 2) {
    return new Data_Maybe.Just(Data_Ordering.GT.value);
  }

  ;
  return Data_Maybe.Nothing.value;
});
var boundedEnumChar = new BoundedEnum(function () {
  return Data_Bounded.boundedChar;
}, function () {
  return enumChar;
}, $foreign.toCharCode(Data_Bounded.top(Data_Bounded.boundedChar)) - $foreign.toCharCode(Data_Bounded.bottom(Data_Bounded.boundedChar)) | 0, $foreign.toCharCode, charToEnum);
var boundedEnumBoolean = new BoundedEnum(function () {
  return Data_Bounded.boundedBoolean;
}, function () {
  return enumBoolean;
}, 2, function (v) {
  if (!v) {
    return 0;
  }

  ;

  if (v) {
    return 1;
  }

  ;
  throw new Error("Failed pattern match at Data.Enum (line 118, column 1 - line 124, column 20): " + [v.constructor.name]);
}, function (v) {
  if (v === 0) {
    return new Data_Maybe.Just(false);
  }

  ;

  if (v === 1) {
    return new Data_Maybe.Just(true);
  }

  ;
  return Data_Maybe.Nothing.value;
});
module.exports = {
  Enum: Enum,
  succ: succ,
  pred: pred,
  BoundedEnum: BoundedEnum,
  cardinality: cardinality,
  toEnum: toEnum,
  fromEnum: fromEnum,
  toEnumWithDefaults: toEnumWithDefaults,
  Cardinality: Cardinality,
  enumFromTo: enumFromTo,
  enumFromThenTo: enumFromThenTo,
  upFrom: upFrom,
  upFromIncluding: upFromIncluding,
  downFrom: downFrom,
  downFromIncluding: downFromIncluding,
  defaultSucc: defaultSucc,
  defaultPred: defaultPred,
  defaultCardinality: defaultCardinality,
  defaultToEnum: defaultToEnum,
  defaultFromEnum: defaultFromEnum,
  enumBoolean: enumBoolean,
  enumInt: enumInt,
  enumChar: enumChar,
  enumUnit: enumUnit,
  enumOrdering: enumOrdering,
  enumMaybe: enumMaybe,
  enumEither: enumEither,
  enumTuple: enumTuple,
  boundedEnumBoolean: boundedEnumBoolean,
  boundedEnumChar: boundedEnumChar,
  boundedEnumUnit: boundedEnumUnit,
  boundedEnumOrdering: boundedEnumOrdering,
  newtypeCardinality: newtypeCardinality,
  eqCardinality: eqCardinality,
  ordCardinality: ordCardinality,
  showCardinality: showCardinality
};
},{"./foreign.js":"../output/Data.Enum/foreign.js","../Control.Apply/index.js":"../output/Control.Apply/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.MonadZero/index.js":"../output/Control.MonadZero/index.js","../Data.Boolean/index.js":"../output/Data.Boolean/index.js","../Data.Bounded/index.js":"../output/Data.Bounded/index.js","../Data.Either/index.js":"../output/Data.Either/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Ordering/index.js":"../output/Data.Ordering/index.js","../Data.Show/index.js":"../output/Data.Show/index.js","../Data.Tuple/index.js":"../output/Data.Tuple/index.js","../Data.Unfoldable/index.js":"../output/Data.Unfoldable/index.js","../Data.Unfoldable1/index.js":"../output/Data.Unfoldable1/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js"}],"../output/Web.Event.EventPhase/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var None = function () {
  function None() {}

  ;
  None.value = new None();
  return None;
}();

var Capturing = function () {
  function Capturing() {}

  ;
  Capturing.value = new Capturing();
  return Capturing;
}();

var AtTarget = function () {
  function AtTarget() {}

  ;
  AtTarget.value = new AtTarget();
  return AtTarget;
}();

var Bubbling = function () {
  function Bubbling() {}

  ;
  Bubbling.value = new Bubbling();
  return Bubbling;
}();

var toEnumEventPhase = function toEnumEventPhase(v) {
  if (v === 0) {
    return new Data_Maybe.Just(None.value);
  }

  ;

  if (v === 1) {
    return new Data_Maybe.Just(Capturing.value);
  }

  ;

  if (v === 2) {
    return new Data_Maybe.Just(AtTarget.value);
  }

  ;

  if (v === 3) {
    return new Data_Maybe.Just(Bubbling.value);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var fromEnumEventPhase = function fromEnumEventPhase(v) {
  if (v instanceof None) {
    return 0;
  }

  ;

  if (v instanceof Capturing) {
    return 1;
  }

  ;

  if (v instanceof AtTarget) {
    return 2;
  }

  ;

  if (v instanceof Bubbling) {
    return 3;
  }

  ;
  throw new Error("Failed pattern match at Web.Event.EventPhase (line 40, column 3 - line 44, column 18): " + [v.constructor.name]);
};

var eqEventPhase = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof None && y instanceof None) {
      return true;
    }

    ;

    if (x instanceof Capturing && y instanceof Capturing) {
      return true;
    }

    ;

    if (x instanceof AtTarget && y instanceof AtTarget) {
      return true;
    }

    ;

    if (x instanceof Bubbling && y instanceof Bubbling) {
      return true;
    }

    ;
    return false;
  };
});
var ordEventPhase = new Data_Ord.Ord(function () {
  return eqEventPhase;
}, function (x) {
  return function (y) {
    if (x instanceof None && y instanceof None) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof None) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof None) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Capturing && y instanceof Capturing) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Capturing) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Capturing) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof AtTarget && y instanceof AtTarget) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof AtTarget) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof AtTarget) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Bubbling && y instanceof Bubbling) {
      return Data_Ordering.EQ.value;
    }

    ;
    throw new Error("Failed pattern match at Web.Event.EventPhase (line 14, column 1 - line 14, column 48): " + [x.constructor.name, y.constructor.name]);
  };
});
var enumEventPhase = new Data_Enum.Enum(function () {
  return ordEventPhase;
}, Data_Enum.defaultPred(toEnumEventPhase)(fromEnumEventPhase), Data_Enum.defaultSucc(toEnumEventPhase)(fromEnumEventPhase));
var boundedEventPhase = new Data_Bounded.Bounded(function () {
  return ordEventPhase;
}, None.value, Bubbling.value);
var boundedEnumEventPhase = new Data_Enum.BoundedEnum(function () {
  return boundedEventPhase;
}, function () {
  return enumEventPhase;
}, 4, fromEnumEventPhase, toEnumEventPhase);
module.exports = {
  None: None,
  Capturing: Capturing,
  AtTarget: AtTarget,
  Bubbling: Bubbling,
  toEnumEventPhase: toEnumEventPhase,
  fromEnumEventPhase: fromEnumEventPhase,
  eqEventPhase: eqEventPhase,
  ordEventPhase: ordEventPhase,
  boundedEventPhase: boundedEventPhase,
  enumEventPhase: enumEventPhase,
  boundedEnumEventPhase: boundedEnumEventPhase
};
},{"../Data.Bounded/index.js":"../output/Data.Bounded/index.js","../Data.Enum/index.js":"../output/Data.Enum/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Ordering/index.js":"../output/Data.Ordering/index.js"}],"../output/Web.Event.Event/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Web_Event_EventPhase = require("../Web.Event.EventPhase/index.js");

var EventType = function EventType(x) {
  return x;
};

var target = function target($4) {
  return Data_Nullable.toMaybe($foreign["_target"]($4));
};

var ordEventType = Data_Ord.ordString;
var newtypeEventType = new Data_Newtype.Newtype(function (n) {
  return n;
}, EventType);

var eventPhase = function eventPhase(dictPartial) {
  var $5 = Data_Maybe.fromJust();
  var $6 = Data_Enum.toEnum(Web_Event_EventPhase.boundedEnumEventPhase);
  return function ($7) {
    return $5($6($foreign.eventPhaseIndex($7)));
  };
};

var eqEventType = Data_Eq.eqString;

var currentTarget = function currentTarget($8) {
  return Data_Nullable.toMaybe($foreign["_currentTarget"]($8));
};

module.exports = {
  EventType: EventType,
  target: target,
  currentTarget: currentTarget,
  eventPhase: eventPhase,
  newtypeEventType: newtypeEventType,
  eqEventType: eqEventType,
  ordEventType: ordEventType,
  type_: $foreign.type_,
  stopPropagation: $foreign.stopPropagation,
  stopImmediatePropagation: $foreign.stopImmediatePropagation,
  bubbles: $foreign.bubbles,
  cancelable: $foreign.cancelable,
  preventDefault: $foreign.preventDefault,
  defaultPrevented: $foreign.defaultPrevented,
  timeStamp: $foreign.timeStamp
};
},{"./foreign.js":"../output/Web.Event.Event/foreign.js","../Data.Enum/index.js":"../output/Data.Enum/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Nullable/index.js":"../output/Data.Nullable/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Web.Event.EventPhase/index.js":"../output/Web.Event.EventPhase/index.js"}],"../output/Web.File.FileList/foreign.js":[function(require,module,exports) {
"use strict";

exports.length = function (fileList) {
  return fileList.length;
};

exports._item = function (index) {
  return function (fileList) {
    return fileList.item(index);
  };
};
},{}],"../output/Web.File.FileList/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var item = function item(i) {
  var $1 = $foreign["_item"](i);
  return function ($2) {
    return Data_Nullable.toMaybe($1($2));
  };
};

var items = function items(dictUnfoldable) {
  return function (fl) {
    return Data_Unfoldable.unfoldr(dictUnfoldable)(function (i) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(i + 1 | 0))(item(i)(fl));
    })(0);
  };
};

module.exports = {
  item: item,
  items: items,
  length: $foreign.length
};
},{"./foreign.js":"../output/Web.File.FileList/foreign.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Nullable/index.js":"../output/Data.Nullable/index.js","../Data.Tuple/index.js":"../output/Data.Tuple/index.js","../Data.Unfoldable/index.js":"../output/Data.Unfoldable/index.js"}],"../output/Web.HTML.Event.DragEvent.EventTypes/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var drop = "drop";
var dragstart = "dragstart";
var dragover = "dragover";
var dragleave = "dragleave";
var dragexit = "dragexit";
var dragenter = "dragenter";
var dragend = "dragend";
var drag = "drag";
module.exports = {
  dragstart: dragstart,
  drag: drag,
  dragenter: dragenter,
  dragexit: dragexit,
  dragleave: dragleave,
  dragover: dragover,
  drop: drop,
  dragend: dragend
};
},{}],"../output/Web.HTML.HTMLInputElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.accept = function (input) {
  return function () {
    return input.accept;
  };
};

exports.setAccept = function (accept) {
  return function (input) {
    return function () {
      input.accept = accept;
    };
  };
}; // ----------------------------------------------------------------------------


exports.alt = function (input) {
  return function () {
    return input.alt;
  };
};

exports.setAlt = function (alt) {
  return function (input) {
    return function () {
      input.alt = alt;
    };
  };
}; // ----------------------------------------------------------------------------


exports.autocomplete = function (input) {
  return function () {
    return input.autocomplete;
  };
};

exports.setAutocomplete = function (autocomplete) {
  return function (input) {
    return function () {
      input.autocomplete = autocomplete;
    };
  };
}; // ----------------------------------------------------------------------------


exports.autofocus = function (input) {
  return function () {
    return input.autofocus;
  };
};

exports.setAutofocus = function (autofocus) {
  return function (input) {
    return function () {
      input.autofocus = autofocus;
    };
  };
}; // ----------------------------------------------------------------------------


exports.defaultChecked = function (input) {
  return function () {
    return input.defaultChecked;
  };
};

exports.setDefaultChecked = function (defaultChecked) {
  return function (input) {
    return function () {
      input.defaultChecked = defaultChecked;
    };
  };
}; // ----------------------------------------------------------------------------


exports.checked = function (input) {
  return function () {
    return input.checked;
  };
};

exports.setChecked = function (checked) {
  return function (input) {
    return function () {
      input.checked = checked;
    };
  };
}; // ----------------------------------------------------------------------------


exports.dirName = function (input) {
  return function () {
    return input.dirName;
  };
};

exports.setDirName = function (dirName) {
  return function (input) {
    return function () {
      input.dirName = dirName;
    };
  };
}; // ----------------------------------------------------------------------------


exports.disabled = function (input) {
  return function () {
    return input.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (input) {
    return function () {
      input.disabled = disabled;
    };
  };
}; // ----------------------------------------------------------------------------


exports._form = function (input) {
  return function () {
    return input.form;
  };
}; // ----------------------------------------------------------------------------


exports._files = function (input) {
  return function () {
    return input.files;
  };
}; // ----------------------------------------------------------------------------


exports.formAction = function (input) {
  return function () {
    return input.formAction;
  };
};

exports.setFormAction = function (formAction) {
  return function (input) {
    return function () {
      input.formAction = formAction;
    };
  };
}; // ----------------------------------------------------------------------------


exports.formEnctype = function (input) {
  return function () {
    return input.formEnctype;
  };
};

exports.setFormEnctype = function (formEnctype) {
  return function (input) {
    return function () {
      input.formEnctype = formEnctype;
    };
  };
}; // ----------------------------------------------------------------------------


exports.formMethod = function (input) {
  return function () {
    return input.formMethod;
  };
};

exports.setFormMethod = function (formMethod) {
  return function (input) {
    return function () {
      input.formMethod = formMethod;
    };
  };
}; // ----------------------------------------------------------------------------


exports.formNoValidate = function (input) {
  return function () {
    return input.formNoValidate;
  };
};

exports.setFormNoValidate = function (formNoValidate) {
  return function (input) {
    return function () {
      input.formNoValidate = formNoValidate;
    };
  };
}; // ----------------------------------------------------------------------------


exports.formTarget = function (input) {
  return function () {
    return input.formTarget;
  };
};

exports.setFormTarget = function (formTarget) {
  return function (input) {
    return function () {
      input.formTarget = formTarget;
    };
  };
}; // ----------------------------------------------------------------------------


exports.height = function (input) {
  return function () {
    return input.height;
  };
};

exports.setHeight = function (height) {
  return function (input) {
    return function () {
      input.height = height;
    };
  };
}; // ----------------------------------------------------------------------------


exports.indeterminate = function (input) {
  return function () {
    return input.indeterminate;
  };
};

exports.setIndeterminate = function (indeterminate) {
  return function (input) {
    return function () {
      input.indeterminate = indeterminate;
    };
  };
}; // ----------------------------------------------------------------------------


exports._list = function (input) {
  return function () {
    return input.list;
  };
}; // ----------------------------------------------------------------------------


exports.max = function (input) {
  return function () {
    return input.max;
  };
};

exports.setMax = function (max) {
  return function (input) {
    return function () {
      input.max = max;
    };
  };
}; // ----------------------------------------------------------------------------


exports.maxLength = function (input) {
  return function () {
    return input.maxLength;
  };
};

exports.setMaxLength = function (maxLength) {
  return function (input) {
    return function () {
      input.maxLength = maxLength;
    };
  };
}; // ----------------------------------------------------------------------------


exports.min = function (input) {
  return function () {
    return input.min;
  };
};

exports.setMin = function (min) {
  return function (input) {
    return function () {
      input.min = min;
    };
  };
}; // ----------------------------------------------------------------------------


exports.minLength = function (input) {
  return function () {
    return input.minLength;
  };
};

exports.setMinLength = function (minLength) {
  return function (input) {
    return function () {
      input.minLength = minLength;
    };
  };
}; // ----------------------------------------------------------------------------


exports.multiple = function (input) {
  return function () {
    return input.multiple;
  };
};

exports.setMultiple = function (multiple) {
  return function (input) {
    return function () {
      input.multiple = multiple;
    };
  };
}; // ----------------------------------------------------------------------------


exports.name = function (input) {
  return function () {
    return input.name;
  };
};

exports.setName = function (name) {
  return function (input) {
    return function () {
      input.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.pattern = function (input) {
  return function () {
    return input.pattern;
  };
};

exports.setPattern = function (pattern) {
  return function (input) {
    return function () {
      input.pattern = pattern;
    };
  };
}; // ----------------------------------------------------------------------------


exports.placeholder = function (input) {
  return function () {
    return input.placeholder;
  };
};

exports.setPlaceholder = function (placeholder) {
  return function (input) {
    return function () {
      input.placeholder = placeholder;
    };
  };
}; // ----------------------------------------------------------------------------


exports.readOnly = function (input) {
  return function () {
    return input.readOnly;
  };
};

exports.setReadOnly = function (readOnly) {
  return function (input) {
    return function () {
      input.readOnly = readOnly;
    };
  };
}; // ----------------------------------------------------------------------------


exports.required = function (input) {
  return function () {
    return input.required;
  };
};

exports.setRequired = function (required) {
  return function (input) {
    return function () {
      input.required = required;
    };
  };
}; // ----------------------------------------------------------------------------


exports.size = function (input) {
  return function () {
    return input.size;
  };
};

exports.setSize = function (size) {
  return function (input) {
    return function () {
      input.size = size;
    };
  };
}; // ----------------------------------------------------------------------------


exports.src = function (input) {
  return function () {
    return input.src;
  };
};

exports.setSrc = function (src) {
  return function (input) {
    return function () {
      input.src = src;
    };
  };
}; // ----------------------------------------------------------------------------


exports.step = function (input) {
  return function () {
    return input.step;
  };
};

exports.setStep = function (step) {
  return function (input) {
    return function () {
      input.step = step;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (input) {
  return function () {
    return input.type;
  };
};

exports.setType = function (type) {
  return function (input) {
    return function () {
      input.type = type;
    };
  };
}; // ----------------------------------------------------------------------------


exports.defaultValue = function (input) {
  return function () {
    return input.defaultValue;
  };
};

exports.setDefaultValue = function (defaultValue) {
  return function (input) {
    return function () {
      input.defaultValue = defaultValue;
    };
  };
}; // ----------------------------------------------------------------------------


exports.value = function (input) {
  return function () {
    return input.value;
  };
};

exports.setValue = function (value) {
  return function (input) {
    return function () {
      input.value = value;
    };
  };
}; // ----------------------------------------------------------------------------


exports.valueAsDate = function (input) {
  return function () {
    return input.valueAsDate;
  };
};

exports.setValueAsDate = function (valueAsDate) {
  return function (input) {
    return function () {
      input.valueAsDate = valueAsDate;
    };
  };
}; // ----------------------------------------------------------------------------


exports.valueAsNumber = function (input) {
  return function () {
    return input.valueAsNumber;
  };
};

exports.setValueAsNumber = function (valueAsNumber) {
  return function (input) {
    return function () {
      input.valueAsNumber = valueAsNumber;
    };
  };
}; // ----------------------------------------------------------------------------


exports.width = function (input) {
  return function () {
    return input.width;
  };
};

exports.setWidth = function (width) {
  return function (input) {
    return function () {
      input.width = width;
    };
  };
}; // ----------------------------------------------------------------------------


exports["stepUp'"] = function (n) {
  return function (input) {
    return function () {
      input.stepUp(n);
    };
  };
}; // ----------------------------------------------------------------------------


exports["stepDown'"] = function (n) {
  return function (input) {
    return function () {
      input.stepDown(n);
    };
  };
}; // ----------------------------------------------------------------------------


exports.willValidate = function (input) {
  return function () {
    return input.willValidate;
  };
}; // ----------------------------------------------------------------------------


exports.validity = function (input) {
  return function () {
    return input.validity;
  };
}; // ----------------------------------------------------------------------------


exports.validationMessage = function (input) {
  return function () {
    return input.validationMessage;
  };
}; // ----------------------------------------------------------------------------


exports.checkValidity = function (input) {
  return function () {
    return input.checkValidity();
  };
}; // ----------------------------------------------------------------------------


exports.reportValidity = function (input) {
  return function () {
    return input.reportValidity();
  };
}; // ----------------------------------------------------------------------------


exports.setCustomValidity = function (value) {
  return function (input) {
    return function () {
      input.setCustomValidity(value);
    };
  };
}; // ----------------------------------------------------------------------------


exports.labels = function (input) {
  return function () {
    return input.labels;
  };
}; // ----------------------------------------------------------------------------


exports.select = function (input) {
  return function () {
    input.select();
  };
}; // ----------------------------------------------------------------------------


exports.selectionStart = function (input) {
  return function () {
    return input.selectionStart;
  };
};

exports.setSelectionStart = function (selectionStart) {
  return function (input) {
    return function () {
      input.selectionStart = selectionStart;
    };
  };
}; // ----------------------------------------------------------------------------


exports.selectionEnd = function (input) {
  return function () {
    return input.selectionEnd;
  };
};

exports.setSelectionEnd = function (selectionEnd) {
  return function (input) {
    return function () {
      input.selectionEnd = selectionEnd;
    };
  };
}; // ----------------------------------------------------------------------------


exports.selectionDirection = function (input) {
  return function () {
    return input.selectionDirection;
  };
};

exports.setSelectionDirection = function (selectionDirection) {
  return function (input) {
    return function () {
      input.selectionDirection = selectionDirection;
    };
  };
}; // ----------------------------------------------------------------------------


exports.setRangeText = function (replacement) {
  return function (input) {
    return function () {
      input.setRangeText(replacement);
    };
  };
};

exports._setRangeText = function (replacement, start, end, selectionMode, textarea) {
  textarea.setRangeText(replacement, start, end, selectionMode);
}; // ----------------------------------------------------------------------------


exports.setSelectionRange = function (start) {
  return function (end) {
    return function (direction) {
      return function (input) {
        return function () {
          input.setSelectionRange(start, end, direction, input);
        };
      };
    };
  };
};
},{}],"../output/Web.HTML.SelectionMode/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Show = require("../Data.Show/index.js");

var Preserve = function () {
  function Preserve() {}

  ;
  Preserve.value = new Preserve();
  return Preserve;
}();

var Select = function () {
  function Select() {}

  ;
  Select.value = new Select();
  return Select;
}();

var Start = function () {
  function Start() {}

  ;
  Start.value = new Start();
  return Start;
}();

var End = function () {
  function End() {}

  ;
  End.value = new End();
  return End;
}();

var showSelectionMode = new Data_Show.Show(function (v) {
  if (v instanceof Preserve) {
    return "Preserve";
  }

  ;

  if (v instanceof Select) {
    return "Select";
  }

  ;

  if (v instanceof Start) {
    return "Start";
  }

  ;

  if (v instanceof End) {
    return "End";
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.SelectionMode (line 17, column 10 - line 21, column 17): " + [v.constructor.name]);
});

var print = function print(v) {
  if (v instanceof Preserve) {
    return "preserve";
  }

  ;

  if (v instanceof Select) {
    return "select";
  }

  ;

  if (v instanceof Start) {
    return "start";
  }

  ;

  if (v instanceof End) {
    return "end";
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.SelectionMode (line 32, column 9 - line 36, column 15): " + [v.constructor.name]);
};

var parse = function parse(v) {
  if (v === "preserve") {
    return new Data_Maybe.Just(Preserve.value);
  }

  ;

  if (v === "select") {
    return new Data_Maybe.Just(Select.value);
  }

  ;

  if (v === "start") {
    return new Data_Maybe.Just(Start.value);
  }

  ;

  if (v === "end") {
    return new Data_Maybe.Just(End.value);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var eqSelectionMode = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof Preserve && y instanceof Preserve) {
      return true;
    }

    ;

    if (x instanceof Select && y instanceof Select) {
      return true;
    }

    ;

    if (x instanceof Start && y instanceof Start) {
      return true;
    }

    ;

    if (x instanceof End && y instanceof End) {
      return true;
    }

    ;
    return false;
  };
});
var ordSelectionMode = new Data_Ord.Ord(function () {
  return eqSelectionMode;
}, function (x) {
  return function (y) {
    if (x instanceof Preserve && y instanceof Preserve) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Preserve) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Preserve) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Select && y instanceof Select) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Select) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Select) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Start && y instanceof Start) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Start) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Start) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof End && y instanceof End) {
      return Data_Ordering.EQ.value;
    }

    ;
    throw new Error("Failed pattern match at Web.HTML.SelectionMode (line 14, column 1 - line 14, column 54): " + [x.constructor.name, y.constructor.name]);
  };
});
module.exports = {
  Preserve: Preserve,
  Select: Select,
  Start: Start,
  End: End,
  parse: parse,
  print: print,
  eqSelectionMode: eqSelectionMode,
  ordSelectionMode: ordSelectionMode,
  showSelectionMode: showSelectionMode
};
},{"../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Ordering/index.js":"../output/Data.Ordering/index.js","../Data.Show/index.js":"../output/Data.Show/index.js"}],"../output/Web.HTML.HTMLInputElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_HTML_SelectionMode = require("../Web.HTML.SelectionMode/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var stepUp = $foreign["stepUp'"](1);
var stepDown = $foreign["stepDown'"](1);

var setRangeText$prime = function setRangeText$prime(rpl) {
  return function (s) {
    return function (e) {
      return function (mode) {
        return function (area) {
          return function () {
            return $foreign["_setRangeText"](rpl, s, e, Web_HTML_SelectionMode.print(mode), area);
          };
        };
      };
    };
  };
};

var list = function () {
  var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($1) {
    return $0($foreign["_list"]($1));
  };
}();

var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");

var form = function () {
  var $2 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($3) {
    return $2($foreign["_form"]($3));
  };
}();

var files = function () {
  var $4 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($5) {
    return $4($foreign["_files"]($5));
  };
}();

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  form: form,
  files: files,
  list: list,
  "setRangeText'": setRangeText$prime,
  accept: $foreign.accept,
  setAccept: $foreign.setAccept,
  alt: $foreign.alt,
  setAlt: $foreign.setAlt,
  autocomplete: $foreign.autocomplete,
  setAutocomplete: $foreign.setAutocomplete,
  autofocus: $foreign.autofocus,
  setAutofocus: $foreign.setAutofocus,
  defaultChecked: $foreign.defaultChecked,
  setDefaultChecked: $foreign.setDefaultChecked,
  checked: $foreign.checked,
  setChecked: $foreign.setChecked,
  dirName: $foreign.dirName,
  setDirName: $foreign.setDirName,
  disabled: $foreign.disabled,
  setDisabled: $foreign.setDisabled,
  formAction: $foreign.formAction,
  setFormAction: $foreign.setFormAction,
  formEnctype: $foreign.formEnctype,
  setFormEnctype: $foreign.setFormEnctype,
  formMethod: $foreign.formMethod,
  setFormMethod: $foreign.setFormMethod,
  formNoValidate: $foreign.formNoValidate,
  setFormNoValidate: $foreign.setFormNoValidate,
  formTarget: $foreign.formTarget,
  setFormTarget: $foreign.setFormTarget,
  height: $foreign.height,
  setHeight: $foreign.setHeight,
  indeterminate: $foreign.indeterminate,
  setIndeterminate: $foreign.setIndeterminate,
  max: $foreign.max,
  setMax: $foreign.setMax,
  maxLength: $foreign.maxLength,
  setMaxLength: $foreign.setMaxLength,
  min: $foreign.min,
  setMin: $foreign.setMin,
  minLength: $foreign.minLength,
  setMinLength: $foreign.setMinLength,
  multiple: $foreign.multiple,
  setMultiple: $foreign.setMultiple,
  name: $foreign.name,
  setName: $foreign.setName,
  pattern: $foreign.pattern,
  setPattern: $foreign.setPattern,
  placeholder: $foreign.placeholder,
  setPlaceholder: $foreign.setPlaceholder,
  readOnly: $foreign.readOnly,
  setReadOnly: $foreign.setReadOnly,
  required: $foreign.required,
  setRequired: $foreign.setRequired,
  size: $foreign.size,
  setSize: $foreign.setSize,
  src: $foreign.src,
  setSrc: $foreign.setSrc,
  step: $foreign.step,
  setStep: $foreign.setStep,
  type_: $foreign.type_,
  setType: $foreign.setType,
  defaultValue: $foreign.defaultValue,
  setDefaultValue: $foreign.setDefaultValue,
  value: $foreign.value,
  setValue: $foreign.setValue,
  valueAsDate: $foreign.valueAsDate,
  setValueAsDate: $foreign.setValueAsDate,
  valueAsNumber: $foreign.valueAsNumber,
  setValueAsNumber: $foreign.setValueAsNumber,
  width: $foreign.width,
  setWidth: $foreign.setWidth,
  "stepUp'": $foreign["stepUp'"],
  "stepDown'": $foreign["stepDown'"],
  willValidate: $foreign.willValidate,
  validity: $foreign.validity,
  validationMessage: $foreign.validationMessage,
  checkValidity: $foreign.checkValidity,
  reportValidity: $foreign.reportValidity,
  setCustomValidity: $foreign.setCustomValidity,
  labels: $foreign.labels,
  select: $foreign.select,
  selectionStart: $foreign.selectionStart,
  setSelectionStart: $foreign.setSelectionStart,
  selectionEnd: $foreign.selectionEnd,
  setSelectionEnd: $foreign.setSelectionEnd,
  selectionDirection: $foreign.selectionDirection,
  setSelectionDirection: $foreign.setSelectionDirection,
  setRangeText: $foreign.setRangeText,
  setSelectionRange: $foreign.setSelectionRange
};
},{"./foreign.js":"../output/Web.HTML.HTMLInputElement/foreign.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Nullable/index.js":"../output/Data.Nullable/index.js","../Effect/index.js":"../output/Effect/index.js","../Unsafe.Coerce/index.js":"../output/Unsafe.Coerce/index.js","../Web.HTML.SelectionMode/index.js":"../output/Web.HTML.SelectionMode/index.js","../Web.Internal.FFI/index.js":"../output/Web.Internal.FFI/index.js"}],"../output/Web.UIEvent.FocusEvent.EventTypes/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var focusout = "focusout";
var focusin = "focusin";
var focus = "focus";
var blur = "blur";
module.exports = {
  blur: blur,
  focus: focus,
  focusin: focusin,
  focusout: focusout
};
},{}],"../output/Web.UIEvent.KeyboardEvent.EventTypes/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var keyup = "keyup";
var keydown = "keydown";
module.exports = {
  keydown: keydown,
  keyup: keyup
};
},{}],"../output/Web.UIEvent.MouseEvent.EventTypes/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var mouseup = "mouseup";
var mouseover = "mouseover";
var mouseout = "mouseout";
var mousemove = "mousemove";
var mouseleave = "mouseleave";
var mouseenter = "mouseenter";
var mousedown = "mousedown";
var dblclick = "dblclick";
var click = "click";
module.exports = {
  click: click,
  dblclick: dblclick,
  mousedown: mousedown,
  mouseenter: mouseenter,
  mouseleave: mouseleave,
  mousemove: mousemove,
  mouseout: mouseout,
  mouseover: mouseover,
  mouseup: mouseup
};
},{}],"../output/Web.UIEvent.WheelEvent.EventTypes/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var wheel = "wheel";
module.exports = {
  wheel: wheel
};
},{}],"../output/Halogen.HTML.Events/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad_Except = require("../Control.Monad.Except/index.js");

var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect_Unsafe = require("../Effect.Unsafe/index.js");

var Foreign = require("../Foreign/index.js");

var Foreign_Index = require("../Foreign.Index/index.js");

var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");

var Halogen_Query_Input = require("../Halogen.Query.Input/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Clipboard_ClipboardEvent_EventTypes = require("../Web.Clipboard.ClipboardEvent.EventTypes/index.js");

var Web_Event_Event = require("../Web.Event.Event/index.js");

var Web_File_FileList = require("../Web.File.FileList/index.js");

var Web_HTML_Event_DragEvent_EventTypes = require("../Web.HTML.Event.DragEvent.EventTypes/index.js");

var Web_HTML_Event_EventTypes = require("../Web.HTML.Event.EventTypes/index.js");

var Web_HTML_HTMLInputElement = require("../Web.HTML.HTMLInputElement/index.js");

var Web_UIEvent_FocusEvent_EventTypes = require("../Web.UIEvent.FocusEvent.EventTypes/index.js");

var Web_UIEvent_KeyboardEvent_EventTypes = require("../Web.UIEvent.KeyboardEvent.EventTypes/index.js");

var Web_UIEvent_MouseEvent_EventTypes = require("../Web.UIEvent.MouseEvent.EventTypes/index.js");

var Web_UIEvent_WheelEvent_EventTypes = require("../Web.UIEvent.WheelEvent.EventTypes/index.js");

var wheelHandler = Unsafe_Coerce.unsafeCoerce;
var touchHandler = Unsafe_Coerce.unsafeCoerce;
var mouseHandler = Unsafe_Coerce.unsafeCoerce;
var keyHandler = Unsafe_Coerce.unsafeCoerce;

var handler = function handler(et) {
  var $1 = Halogen_HTML_Core.handler(et);
  var $2 = Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(Halogen_Query_Input.Action.create));
  return function ($3) {
    return $1($2($3));
  };
};

var onAbort = handler("abort");
var onChange = handler(Web_HTML_Event_EventTypes.change);

var onClick = function () {
  var $4 = handler(Web_UIEvent_MouseEvent_EventTypes.click);
  return function ($5) {
    return $4(mouseHandler($5));
  };
}();

var onDoubleClick = function () {
  var $6 = handler(Web_UIEvent_MouseEvent_EventTypes.dblclick);
  return function ($7) {
    return $6(mouseHandler($7));
  };
}();

var onError = handler(Web_HTML_Event_EventTypes.error);

var onFileUpload = function onFileUpload(dictUnfoldable) {
  return function (f) {
    return handler(Web_HTML_Event_EventTypes.change)(Control_Bind.composeKleisli(Data_Maybe.bindMaybe)(Web_Event_Event.target)(Control_Bind.composeKleisli(Data_Maybe.bindMaybe)(Web_HTML_HTMLInputElement.fromEventTarget)(Control_Bind.composeKleisli(Data_Maybe.bindMaybe)(function ($8) {
      return Effect_Unsafe.unsafePerformEffect(Web_HTML_HTMLInputElement.files($8));
    })(Control_Bind.composeKleisli(Data_Maybe.bindMaybe)(function () {
      var $9 = Control_Applicative.pure(Data_Maybe.applicativeMaybe);
      var $10 = Web_File_FileList.items(dictUnfoldable);
      return function ($11) {
        return $9($10($11));
      };
    }())(f)))));
  };
};

var onInput = handler(Web_HTML_Event_EventTypes.input);
var onInvalid = handler(Web_HTML_Event_EventTypes.invalid);

var onKeyDown = function () {
  var $12 = handler(Web_UIEvent_KeyboardEvent_EventTypes.keydown);
  return function ($13) {
    return $12(keyHandler($13));
  };
}();

var onKeyUp = function () {
  var $14 = handler(Web_UIEvent_KeyboardEvent_EventTypes.keyup);
  return function ($15) {
    return $14(keyHandler($15));
  };
}();

var onLoad = handler(Web_HTML_Event_EventTypes.load);

var onMouseDown = function () {
  var $16 = handler(Web_UIEvent_MouseEvent_EventTypes.mousedown);
  return function ($17) {
    return $16(mouseHandler($17));
  };
}();

var onMouseEnter = function () {
  var $18 = handler(Web_UIEvent_MouseEvent_EventTypes.mouseenter);
  return function ($19) {
    return $18(mouseHandler($19));
  };
}();

var onMouseLeave = function () {
  var $20 = handler(Web_UIEvent_MouseEvent_EventTypes.mouseleave);
  return function ($21) {
    return $20(mouseHandler($21));
  };
}();

var onMouseMove = function () {
  var $22 = handler(Web_UIEvent_MouseEvent_EventTypes.mousemove);
  return function ($23) {
    return $22(mouseHandler($23));
  };
}();

var onMouseOut = function () {
  var $24 = handler(Web_UIEvent_MouseEvent_EventTypes.mouseout);
  return function ($25) {
    return $24(mouseHandler($25));
  };
}();

var onMouseOver = function () {
  var $26 = handler(Web_UIEvent_MouseEvent_EventTypes.mouseover);
  return function ($27) {
    return $26(mouseHandler($27));
  };
}();

var onMouseUp = function () {
  var $28 = handler(Web_UIEvent_MouseEvent_EventTypes.mouseup);
  return function ($29) {
    return $28(mouseHandler($29));
  };
}();

var onReset = handler("reset");
var onResize = handler("resize");
var onScroll = handler("scroll");
var onSelect = handler(Web_HTML_Event_EventTypes.select);
var onSubmit = handler("submit");

var onTouchCancel = function () {
  var $30 = handler("touchcancel");
  return function ($31) {
    return $30(touchHandler($31));
  };
}();

var onTouchEnd = function () {
  var $32 = handler("touchend");
  return function ($33) {
    return $32(touchHandler($33));
  };
}();

var onTouchEnter = function () {
  var $34 = handler("touchenter");
  return function ($35) {
    return $34(touchHandler($35));
  };
}();

var onTouchLeave = function () {
  var $36 = handler("touchleave");
  return function ($37) {
    return $36(touchHandler($37));
  };
}();

var onTouchMove = function () {
  var $38 = handler("touchmove");
  return function ($39) {
    return $38(touchHandler($39));
  };
}();

var onTouchStart = function () {
  var $40 = handler("touchstart");
  return function ($41) {
    return $40(touchHandler($41));
  };
}();

var onTransitionEnd = handler("transitionend");

var onWheel = function () {
  var $42 = handler(Web_UIEvent_WheelEvent_EventTypes.wheel);
  return function ($43) {
    return $42(wheelHandler($43));
  };
}();

var focusHandler = Unsafe_Coerce.unsafeCoerce;

var onBlur = function () {
  var $44 = handler(Web_HTML_Event_EventTypes.blur);
  return function ($45) {
    return $44(focusHandler($45));
  };
}();

var onFocus = function () {
  var $46 = handler(Web_UIEvent_FocusEvent_EventTypes.focus);
  return function ($47) {
    return $46(focusHandler($47));
  };
}();

var onFocusIn = function () {
  var $48 = handler(Web_UIEvent_FocusEvent_EventTypes.focusin);
  return function ($49) {
    return $48(focusHandler($49));
  };
}();

var onFocusOut = function () {
  var $50 = handler(Web_UIEvent_FocusEvent_EventTypes.focusout);
  return function ($51) {
    return $50(focusHandler($51));
  };
}();

var dragHandler = Unsafe_Coerce.unsafeCoerce;

var onDrag = function () {
  var $52 = handler(Web_HTML_Event_DragEvent_EventTypes.drag);
  return function ($53) {
    return $52(dragHandler($53));
  };
}();

var onDragEnd = function () {
  var $54 = handler(Web_HTML_Event_DragEvent_EventTypes.dragend);
  return function ($55) {
    return $54(dragHandler($55));
  };
}();

var onDragEnter = function () {
  var $56 = handler(Web_HTML_Event_DragEvent_EventTypes.dragenter);
  return function ($57) {
    return $56(dragHandler($57));
  };
}();

var onDragExit = function () {
  var $58 = handler(Web_HTML_Event_DragEvent_EventTypes.dragexit);
  return function ($59) {
    return $58(dragHandler($59));
  };
}();

var onDragLeave = function () {
  var $60 = handler(Web_HTML_Event_DragEvent_EventTypes.dragleave);
  return function ($61) {
    return $60(dragHandler($61));
  };
}();

var onDragOver = function () {
  var $62 = handler(Web_HTML_Event_DragEvent_EventTypes.dragover);
  return function ($63) {
    return $62(dragHandler($63));
  };
}();

var onDragStart = function () {
  var $64 = handler(Web_HTML_Event_DragEvent_EventTypes.dragstart);
  return function ($65) {
    return $64(dragHandler($65));
  };
}();

var onDrop = function () {
  var $66 = handler(Web_HTML_Event_DragEvent_EventTypes.drop);
  return function ($67) {
    return $66(dragHandler($67));
  };
}();

var clipboardHandler = Unsafe_Coerce.unsafeCoerce;

var onCopy = function () {
  var $68 = handler(Web_Clipboard_ClipboardEvent_EventTypes.copy);
  return function ($69) {
    return $68(clipboardHandler($69));
  };
}();

var onCut = function () {
  var $70 = handler(Web_Clipboard_ClipboardEvent_EventTypes.cut);
  return function ($71) {
    return $70(clipboardHandler($71));
  };
}();

var onPaste = function () {
  var $72 = handler(Web_Clipboard_ClipboardEvent_EventTypes.paste);
  return function ($73) {
    return $72(clipboardHandler($73));
  };
}();

var addForeignPropHandler = function addForeignPropHandler(key) {
  return function (prop) {
    return function (reader) {
      return function (f) {
        var go = function go(a) {
          return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(reader)(Foreign_Index.readProp(prop))(Foreign.unsafeToForeign(a));
        };

        return handler(key)(Control_Bind.composeKleisli(Data_Maybe.bindMaybe)(Web_Event_Event.currentTarget)(function (e) {
          return Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(f)(Control_Monad_Except.runExcept(go(e)));
        }));
      };
    };
  };
};

var onChecked = addForeignPropHandler(Web_HTML_Event_EventTypes.change)("checked")(Foreign.readBoolean);
var onSelectedIndexChange = addForeignPropHandler(Web_HTML_Event_EventTypes.change)("selectedIndex")(Foreign.readInt);
var onValueChange = addForeignPropHandler(Web_HTML_Event_EventTypes.change)("value")(Foreign.readString);
var onValueInput = addForeignPropHandler(Web_HTML_Event_EventTypes.input)("value")(Foreign.readString);
module.exports = {
  handler: handler,
  onAbort: onAbort,
  onError: onError,
  onLoad: onLoad,
  onScroll: onScroll,
  onChange: onChange,
  onFileUpload: onFileUpload,
  onInput: onInput,
  onInvalid: onInvalid,
  onReset: onReset,
  onSelect: onSelect,
  onSubmit: onSubmit,
  onTransitionEnd: onTransitionEnd,
  onCopy: onCopy,
  onPaste: onPaste,
  onCut: onCut,
  onClick: onClick,
  onDoubleClick: onDoubleClick,
  onMouseDown: onMouseDown,
  onMouseEnter: onMouseEnter,
  onMouseLeave: onMouseLeave,
  onMouseMove: onMouseMove,
  onMouseOver: onMouseOver,
  onMouseOut: onMouseOut,
  onMouseUp: onMouseUp,
  onWheel: onWheel,
  onKeyDown: onKeyDown,
  onKeyUp: onKeyUp,
  onBlur: onBlur,
  onFocus: onFocus,
  onFocusIn: onFocusIn,
  onFocusOut: onFocusOut,
  onDrag: onDrag,
  onDragEnd: onDragEnd,
  onDragExit: onDragExit,
  onDragEnter: onDragEnter,
  onDragLeave: onDragLeave,
  onDragOver: onDragOver,
  onDragStart: onDragStart,
  onDrop: onDrop,
  onTouchCancel: onTouchCancel,
  onTouchEnd: onTouchEnd,
  onTouchEnter: onTouchEnter,
  onTouchLeave: onTouchLeave,
  onTouchMove: onTouchMove,
  onTouchStart: onTouchStart,
  onResize: onResize,
  onValueChange: onValueChange,
  onValueInput: onValueInput,
  onSelectedIndexChange: onSelectedIndexChange,
  onChecked: onChecked
};
},{"../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Monad.Except/index.js":"../output/Control.Monad.Except/index.js","../Control.Monad.Except.Trans/index.js":"../output/Control.Monad.Except.Trans/index.js","../Data.Either/index.js":"../output/Data.Either/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Identity/index.js":"../output/Data.Identity/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Effect.Unsafe/index.js":"../output/Effect.Unsafe/index.js","../Foreign/index.js":"../output/Foreign/index.js","../Foreign.Index/index.js":"../output/Foreign.Index/index.js","../Halogen.HTML.Core/index.js":"../output/Halogen.HTML.Core/index.js","../Halogen.Query.Input/index.js":"../output/Halogen.Query.Input/index.js","../Unsafe.Coerce/index.js":"../output/Unsafe.Coerce/index.js","../Web.Clipboard.ClipboardEvent.EventTypes/index.js":"../output/Web.Clipboard.ClipboardEvent.EventTypes/index.js","../Web.Event.Event/index.js":"../output/Web.Event.Event/index.js","../Web.File.FileList/index.js":"../output/Web.File.FileList/index.js","../Web.HTML.Event.DragEvent.EventTypes/index.js":"../output/Web.HTML.Event.DragEvent.EventTypes/index.js","../Web.HTML.Event.EventTypes/index.js":"../output/Web.HTML.Event.EventTypes/index.js","../Web.HTML.HTMLInputElement/index.js":"../output/Web.HTML.HTMLInputElement/index.js","../Web.UIEvent.FocusEvent.EventTypes/index.js":"../output/Web.UIEvent.FocusEvent.EventTypes/index.js","../Web.UIEvent.KeyboardEvent.EventTypes/index.js":"../output/Web.UIEvent.KeyboardEvent.EventTypes/index.js","../Web.UIEvent.MouseEvent.EventTypes/index.js":"../output/Web.UIEvent.MouseEvent.EventTypes/index.js","../Web.UIEvent.WheelEvent.EventTypes/index.js":"../output/Web.UIEvent.WheelEvent.EventTypes/index.js"}],"../output/Halogen.HTML.Properties/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var DOM_HTML_Indexed_OnOff = require("../DOM.HTML.Indexed.OnOff/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_String_Common = require("../Data.String.Common/index.js");

var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");

var Halogen_Query_Input = require("../Halogen.Query.Input/index.js");

var Halogen_VDom_DOM_Prop = require("../Halogen.VDom.DOM.Prop/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var IProp = function IProp(x) {
  return x;
};

var ref = function () {
  var go = function go(p) {
    return function (mel) {
      return new Data_Maybe.Just(new Halogen_Query_Input.RefUpdate(p, mel));
    };
  };

  return function ($11) {
    return Halogen_HTML_Core.ref(go($11));
  };
}();

var prop = function prop(dictIsProp) {
  return Halogen_HTML_Core.prop(dictIsProp);
};

var readOnly = prop(Halogen_HTML_Core.isPropBoolean)("readOnly");
var rel = prop(Halogen_HTML_Core.isPropString)("rel");
var required = prop(Halogen_HTML_Core.isPropBoolean)("required");
var rowSpan = prop(Halogen_HTML_Core.isPropInt)("rowSpan");
var rows = prop(Halogen_HTML_Core.isPropInt)("rows");
var selected = prop(Halogen_HTML_Core.isPropBoolean)("selected");
var selectedIndex = prop(Halogen_HTML_Core.isPropInt)("selectedIndex");
var spellcheck = prop(Halogen_HTML_Core.isPropBoolean)("spellcheck");
var src = prop(Halogen_HTML_Core.isPropString)("src");
var step = prop(Halogen_HTML_Core.isPropStepValue)("step");
var tabIndex = prop(Halogen_HTML_Core.isPropInt)("tabIndex");
var target = prop(Halogen_HTML_Core.isPropString)("target");
var title = prop(Halogen_HTML_Core.isPropString)("title");

var type_ = function type_(dictIsProp) {
  return prop(dictIsProp)("type");
};

var value = prop(Halogen_HTML_Core.isPropString)("value");
var width = prop(Halogen_HTML_Core.isPropInt)("width");
var preload = prop(Halogen_HTML_Core.isPropPreloadValue)("preload");
var poster = prop(Halogen_HTML_Core.isPropString)("poster");
var placeholder = prop(Halogen_HTML_Core.isPropString)("placeholder");
var pattern = prop(Halogen_HTML_Core.isPropString)("pattern");
var noValidate = prop(Halogen_HTML_Core.isPropBoolean)("noValidate");
var newtypeIProp = new Data_Newtype.Newtype(function (n) {
  return n;
}, IProp);
var name = prop(Halogen_HTML_Core.isPropString)("name");
var muted = prop(Halogen_HTML_Core.isPropBoolean)("muted");
var multiple = prop(Halogen_HTML_Core.isPropBoolean)("multiple");
var min = prop(Halogen_HTML_Core.isPropNumber)("min");
var method = prop(Halogen_HTML_Core.isPropFormMethod)("method");
var max = prop(Halogen_HTML_Core.isPropNumber)("max");
var loop = prop(Halogen_HTML_Core.isPropBoolean)("loop");
var id_ = prop(Halogen_HTML_Core.isPropString)("id");
var href = prop(Halogen_HTML_Core.isPropString)("href");
var height = prop(Halogen_HTML_Core.isPropInt)("height");
var functorIProp = new Data_Functor.Functor(function (f) {
  return function (m) {
    return Data_Functor.map(Halogen_VDom_DOM_Prop.functorProp)(Data_Functor.map(Halogen_Query_Input.functorInput)(f))(m);
  };
});
var $$for = prop(Halogen_HTML_Core.isPropString)("htmlFor");

var expand = function expand(dictUnion) {
  return Unsafe_Coerce.unsafeCoerce;
};

var enctype = prop(Halogen_HTML_Core.isPropMediaType)("enctype");
var draggable = prop(Halogen_HTML_Core.isPropBoolean)("draggable");
var download = prop(Halogen_HTML_Core.isPropString)("download");
var disabled = prop(Halogen_HTML_Core.isPropBoolean)("disabled");

var enabled = function () {
  var $12 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean);
  return function ($13) {
    return disabled($12($13));
  };
}();

var controls = prop(Halogen_HTML_Core.isPropBoolean)("controls");
var cols = prop(Halogen_HTML_Core.isPropInt)("cols");
var colSpan = prop(Halogen_HTML_Core.isPropInt)("colSpan");

var classes = function () {
  var $14 = prop(Halogen_HTML_Core.isPropString)("className");
  var $15 = Data_String_Common.joinWith(" ");
  var $16 = Data_Functor.map(Data_Functor.functorArray)(Data_Newtype.unwrap(Halogen_HTML_Core.newtypeClassName));
  return function ($17) {
    return $14($15($16($17)));
  };
}();

var class_ = function () {
  var $18 = prop(Halogen_HTML_Core.isPropString)("className");
  var $19 = Data_Newtype.unwrap(Halogen_HTML_Core.newtypeClassName);
  return function ($20) {
    return $18($19($20));
  };
}();

var checked = prop(Halogen_HTML_Core.isPropBoolean)("checked");
var charset = prop(Halogen_HTML_Core.isPropString)("charset");
var autoplay = prop(Halogen_HTML_Core.isPropBoolean)("autoplay");
var autofocus = prop(Halogen_HTML_Core.isPropBoolean)("autofocus");

var autocomplete = function () {
  var $21 = prop(Halogen_HTML_Core.isPropOnOff)("autocomplete");
  return function ($22) {
    return $21(function (b) {
      if (b) {
        return DOM_HTML_Indexed_OnOff.On.value;
      }

      ;
      return DOM_HTML_Indexed_OnOff.Off.value;
    }($22));
  };
}();

var attrNS = function () {
  var $23 = Control_Applicative.pure(Data_Maybe.applicativeMaybe);
  return function ($24) {
    return Halogen_HTML_Core.attr($23($24));
  };
}();

var attr = Halogen_HTML_Core.attr(Data_Maybe.Nothing.value);
var list = attr("list");
var alt = prop(Halogen_HTML_Core.isPropString)("alt");
var action = prop(Halogen_HTML_Core.isPropString)("action");
var accept = prop(Halogen_HTML_Core.isPropInputAcceptType)("accept");
module.exports = {
  IProp: IProp,
  prop: prop,
  attr: attr,
  attrNS: attrNS,
  ref: ref,
  expand: expand,
  alt: alt,
  charset: charset,
  class_: class_,
  classes: classes,
  cols: cols,
  rows: rows,
  colSpan: colSpan,
  rowSpan: rowSpan,
  "for": $$for,
  height: height,
  width: width,
  href: href,
  id_: id_,
  name: name,
  rel: rel,
  src: src,
  target: target,
  title: title,
  download: download,
  method: method,
  action: action,
  enctype: enctype,
  noValidate: noValidate,
  type_: type_,
  value: value,
  min: min,
  max: max,
  step: step,
  disabled: disabled,
  enabled: enabled,
  required: required,
  readOnly: readOnly,
  spellcheck: spellcheck,
  checked: checked,
  selected: selected,
  selectedIndex: selectedIndex,
  placeholder: placeholder,
  autocomplete: autocomplete,
  list: list,
  autofocus: autofocus,
  multiple: multiple,
  pattern: pattern,
  accept: accept,
  autoplay: autoplay,
  controls: controls,
  loop: loop,
  muted: muted,
  poster: poster,
  preload: preload,
  draggable: draggable,
  tabIndex: tabIndex,
  newtypeIProp: newtypeIProp,
  functorIProp: functorIProp
};
},{"../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../DOM.HTML.Indexed.OnOff/index.js":"../output/DOM.HTML.Indexed.OnOff/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.HeytingAlgebra/index.js":"../output/Data.HeytingAlgebra/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.String.Common/index.js":"../output/Data.String.Common/index.js","../Halogen.HTML.Core/index.js":"../output/Halogen.HTML.Core/index.js","../Halogen.Query.Input/index.js":"../output/Halogen.Query.Input/index.js","../Halogen.VDom.DOM.Prop/index.js":"../output/Halogen.VDom.DOM.Prop/index.js","../Unsafe.Coerce/index.js":"../output/Unsafe.Coerce/index.js"}],"../output/Halogen.Query/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var tell = function tell(act) {
  return act(Data_Unit.unit);
};

var request = function request(req) {
  return req(Control_Category.identity(Control_Category.categoryFn));
};

var getHTMLElementRef = function () {
  var $1 = Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(function (v) {
    return Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Web_HTML_HTMLElement.fromElement)(v);
  });
  return function ($2) {
    return $1(Halogen_Query_HalogenM.getRef($2));
  };
}();

module.exports = {
  tell: tell,
  request: request,
  getHTMLElementRef: getHTMLElementRef
};
},{"../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Category/index.js":"../output/Control.Category/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js","../Halogen.Query.HalogenM/index.js":"../output/Halogen.Query.HalogenM/index.js","../Web.HTML.HTMLElement/index.js":"../output/Web.HTML.HTMLElement/index.js"}],"../output/Control.Monad.Fork.Class/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Effect_Aff = require("../Effect.Aff/index.js");

var Completed = function () {
  function Completed(value0) {
    this.value0 = value0;
  }

  ;

  Completed.create = function (value0) {
    return new Completed(value0);
  };

  return Completed;
}();

var Failed = function () {
  function Failed(value0) {
    this.value0 = value0;
  }

  ;

  Failed.create = function (value0) {
    return new Failed(value0);
  };

  return Failed;
}();

var Killed = function () {
  function Killed(value0) {
    this.value0 = value0;
  }

  ;

  Killed.create = function (value0) {
    return new Killed(value0);
  };

  return Killed;
}();

var MonadFork = function MonadFork(Functor1, Monad0, fork, join, suspend) {
  this.Functor1 = Functor1;
  this.Monad0 = Monad0;
  this.fork = fork;
  this.join = join;
  this.suspend = suspend;
};

var MonadKill = function MonadKill(MonadFork0, MonadThrow1, kill) {
  this.MonadFork0 = MonadFork0;
  this.MonadThrow1 = MonadThrow1;
  this.kill = kill;
};

var MonadBracket = function MonadBracket(MonadError1, MonadKill0, bracket, never, uninterruptible) {
  this.MonadError1 = MonadError1;
  this.MonadKill0 = MonadKill0;
  this.bracket = bracket;
  this.never = never;
  this.uninterruptible = uninterruptible;
};

var uninterruptible = function uninterruptible(dict) {
  return dict.uninterruptible;
};

var suspend = function suspend(dict) {
  return dict.suspend;
};

var never = function never(dict) {
  return dict.never;
};

var monadForkAff = new MonadFork(function () {
  return Effect_Aff.functorFiber;
}, function () {
  return Effect_Aff.monadAff;
}, Effect_Aff.forkAff, Effect_Aff.joinFiber, Effect_Aff.suspendAff);
var monadKillAff = new MonadKill(function () {
  return monadForkAff;
}, function () {
  return Effect_Aff.monadThrowAff;
}, Effect_Aff.killFiber);
var monadBracketAff = new MonadBracket(function () {
  return Effect_Aff.monadErrorAff;
}, function () {
  return monadKillAff;
}, function (acquire) {
  return function (release) {
    return function (run) {
      return Effect_Aff.generalBracket(acquire)({
        completed: function completed($11) {
          return release(Completed.create($11));
        },
        failed: function failed($12) {
          return release(Failed.create($12));
        },
        killed: function killed($13) {
          return release(Killed.create($13));
        }
      })(run);
    };
  };
}, Effect_Aff.never, Effect_Aff.invincible);

var kill = function kill(dict) {
  return dict.kill;
};

var join = function join(dict) {
  return dict.join;
};

var fork = function fork(dict) {
  return dict.fork;
};

var monadForkReaderT = function monadForkReaderT(dictMonadFork) {
  return new MonadFork(dictMonadFork.Functor1, function () {
    return Control_Monad_Reader_Trans.monadReaderT(dictMonadFork.Monad0());
  }, function (v) {
    var $14 = fork(dictMonadFork);
    return function ($15) {
      return $14(v($15));
    };
  }, function () {
    var $16 = Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(dictMonadFork.Monad0());
    var $17 = join(dictMonadFork);
    return function ($18) {
      return $16($17($18));
    };
  }(), function (v) {
    var $19 = suspend(dictMonadFork);
    return function ($20) {
      return $19(v($20));
    };
  });
};

var monadKillReaderT = function monadKillReaderT(dictMonadKill) {
  return new MonadKill(function () {
    return monadForkReaderT(dictMonadKill.MonadFork0());
  }, function () {
    return Control_Monad_Reader_Trans.monadThrowReaderT(dictMonadKill.MonadThrow1());
  }, function (e) {
    var $21 = Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(dictMonadKill.MonadThrow1().Monad0());
    var $22 = kill(dictMonadKill)(e);
    return function ($23) {
      return $21($22($23));
    };
  });
};

var bracket = function bracket(dict) {
  return dict.bracket;
};

var monadBracketReaderT = function monadBracketReaderT(dictMonadBracket) {
  return new MonadBracket(function () {
    return Control_Monad_Reader_Trans.monadErrorReaderT(dictMonadBracket.MonadError1());
  }, function () {
    return monadKillReaderT(dictMonadBracket.MonadKill0());
  }, function (v) {
    return function (release) {
      return function (run) {
        return function (r) {
          return bracket(dictMonadBracket)(v(r))(function (c) {
            return function (a) {
              return Control_Monad_Reader_Trans.runReaderT(release(c)(a))(r);
            };
          })(function (a) {
            return Control_Monad_Reader_Trans.runReaderT(run(a))(r);
          });
        };
      };
    };
  }, Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(dictMonadBracket.MonadError1().MonadThrow0().Monad0())(never(dictMonadBracket)), function (k) {
    return function (r) {
      return uninterruptible(dictMonadBracket)(Control_Monad_Reader_Trans.runReaderT(k)(r));
    };
  });
};

module.exports = {
  bracket: bracket,
  fork: fork,
  join: join,
  kill: kill,
  never: never,
  suspend: suspend,
  uninterruptible: uninterruptible,
  MonadFork: MonadFork,
  MonadKill: MonadKill,
  Completed: Completed,
  Failed: Failed,
  Killed: Killed,
  MonadBracket: MonadBracket,
  monadForkAff: monadForkAff,
  monadForkReaderT: monadForkReaderT,
  monadKillAff: monadKillAff,
  monadKillReaderT: monadKillReaderT,
  monadBracketAff: monadBracketAff,
  monadBracketReaderT: monadBracketReaderT
};
},{"../Control.Monad.Reader.Trans/index.js":"../output/Control.Monad.Reader.Trans/index.js","../Control.Monad.Trans.Class/index.js":"../output/Control.Monad.Trans.Class/index.js","../Effect.Aff/index.js":"../output/Effect.Aff/index.js"}],"../output/Halogen.Aff.Driver.State/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Map_Internal = require("../Data.Map.Internal/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect_Ref = require("../Effect.Ref/index.js");

var Halogen_Data_Slot = require("../Halogen.Data.Slot/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var DriverStateRef = function DriverStateRef(x) {
  return x;
};

var DriverState = function DriverState(x) {
  return x;
};

var unRenderStateX = Unsafe_Coerce.unsafeCoerce;
var unDriverStateX = Unsafe_Coerce.unsafeCoerce;

var renderStateX_ = function renderStateX_(dictApplicative) {
  return function (f) {
    return unDriverStateX(function (st) {
      return Data_Foldable.traverse_(dictApplicative)(Data_Foldable.foldableMaybe)(f)(st.rendering);
    });
  };
};

var mkRenderStateX = Unsafe_Coerce.unsafeCoerce;

var renderStateX = function renderStateX(dictFunctor) {
  return function (f) {
    return unDriverStateX(function (st) {
      return mkRenderStateX(f(st.rendering));
    });
  };
};

var mkDriverStateXRef = Unsafe_Coerce.unsafeCoerce;

var mapDriverState = function mapDriverState(f) {
  return function (v) {
    return f(v);
  };
};

var initDriverState = function initDriverState(component) {
  return function (input) {
    return function (handler) {
      return function (lchs) {
        return function __do() {
          var selfRef = Effect_Ref["new"]({})();
          var childrenIn = Effect_Ref["new"](Halogen_Data_Slot.empty)();
          var childrenOut = Effect_Ref["new"](Halogen_Data_Slot.empty)();
          var handlerRef = Effect_Ref["new"](handler)();
          var pendingQueries = Effect_Ref["new"](new Data_Maybe.Just(Data_List_Types.Nil.value))();
          var pendingOuts = Effect_Ref["new"](new Data_Maybe.Just(Data_List_Types.Nil.value))();
          var pendingHandlers = Effect_Ref["new"](Data_Maybe.Nothing.value)();
          var fresh = Effect_Ref["new"](1)();
          var subscriptions = Effect_Ref["new"](new Data_Maybe.Just(Data_Map_Internal.empty))();
          var forks = Effect_Ref["new"](Data_Map_Internal.empty)();
          var ds = {
            component: component,
            state: component.initialState(input),
            refs: Data_Map_Internal.empty,
            children: Halogen_Data_Slot.empty,
            childrenIn: childrenIn,
            childrenOut: childrenOut,
            selfRef: selfRef,
            handlerRef: handlerRef,
            pendingQueries: pendingQueries,
            pendingOuts: pendingOuts,
            pendingHandlers: pendingHandlers,
            rendering: Data_Maybe.Nothing.value,
            fresh: fresh,
            subscriptions: subscriptions,
            forks: forks,
            lifecycleHandlers: lchs
          };
          Effect_Ref.write(ds)(selfRef)();
          return mkDriverStateXRef(selfRef);
        };
      };
    };
  };
};

module.exports = {
  DriverState: DriverState,
  mapDriverState: mapDriverState,
  DriverStateRef: DriverStateRef,
  unDriverStateX: unDriverStateX,
  mkDriverStateXRef: mkDriverStateXRef,
  renderStateX: renderStateX,
  renderStateX_: renderStateX_,
  unRenderStateX: unRenderStateX,
  initDriverState: initDriverState
};
},{"../Data.Foldable/index.js":"../output/Data.Foldable/index.js","../Data.List.Types/index.js":"../output/Data.List.Types/index.js","../Data.Map.Internal/index.js":"../output/Data.Map.Internal/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Effect.Ref/index.js":"../output/Effect.Ref/index.js","../Halogen.Data.Slot/index.js":"../output/Halogen.Data.Slot/index.js","../Unsafe.Coerce/index.js":"../output/Unsafe.Coerce/index.js"}],"../output/Unsafe.Reference/foreign.js":[function(require,module,exports) {
"use strict";

exports.reallyUnsafeRefEq = function (a) {
  return function (b) {
    return a === b;
  };
};
},{}],"../output/Unsafe.Reference/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var unsafeRefEq = $foreign.reallyUnsafeRefEq;
module.exports = {
  unsafeRefEq: unsafeRefEq,
  reallyUnsafeRefEq: $foreign.reallyUnsafeRefEq
};
},{"./foreign.js":"../output/Unsafe.Reference/foreign.js"}],"../output/Halogen.Aff.Driver.Eval/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Applicative_Free = require("../Control.Applicative.Free/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Coroutine = require("../Control.Coroutine/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Fork_Class = require("../Control.Monad.Fork.Class/index.js");

var Control_Monad_Free = require("../Control.Monad.Free/index.js");

var Control_Monad_Free_Trans = require("../Control.Monad.Free.Trans/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Parallel = require("../Control.Parallel/index.js");

var Control_Parallel_Class = require("../Control.Parallel.Class/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Coyoneda = require("../Data.Coyoneda/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Map_Internal = require("../Data.Map.Internal/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect = require("../Effect/index.js");

var Effect_Aff = require("../Effect.Aff/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Effect_Exception = require("../Effect.Exception/index.js");

var Effect_Ref = require("../Effect.Ref/index.js");

var Halogen_Aff_Driver_State = require("../Halogen.Aff.Driver.State/index.js");

var Halogen_Query_ChildQuery = require("../Halogen.Query.ChildQuery/index.js");

var Halogen_Query_EventSource = require("../Halogen.Query.EventSource/index.js");

var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM/index.js");

var Halogen_Query_HalogenQ = require("../Halogen.Query.HalogenQ/index.js");

var Halogen_Query_Input = require("../Halogen.Query.Input/index.js");

var Unsafe_Reference = require("../Unsafe.Reference/index.js");

var unsubscribe = function unsubscribe(sid) {
  return function (ref) {
    return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v.subscriptions)))(function (subs) {
        return Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_Foldable.foldableMaybe)(Halogen_Query_EventSource.finalize)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Map_Internal.lookup(Halogen_Query_HalogenM.ordSubscriptionId)(sid))(subs));
      });
    });
  };
};

var queueOrRun = function queueOrRun(ref) {
  return function (au) {
    return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
      if (v instanceof Data_Maybe.Nothing) {
        return au;
      }

      ;

      if (v instanceof Data_Maybe.Just) {
        return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write(new Data_Maybe.Just(new Data_List_Types.Cons(au, v.value0)))(ref));
      }

      ;
      throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 195, column 33 - line 197, column 57): " + [v.constructor.name]);
    });
  };
};

var handleLifecycle = function handleLifecycle(lchs) {
  return function (f) {
    return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write({
      initializers: Data_List_Types.Nil.value,
      finalizers: Data_List_Types.Nil.value
    })(lchs)))(function () {
      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(f))(function (result) {
        return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(lchs)))(function (v) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(v.finalizers))(function () {
            return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Parallel.parSequence_(Effect_Aff.parallelAff)(Data_List_Types.foldableList)(v.initializers))(function () {
              return Control_Applicative.pure(Effect_Aff.applicativeAff)(result);
            });
          });
        });
      });
    });
  };
};

var fresh = function fresh(f) {
  return function (ref) {
    return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
      return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["modify'"](function (i) {
        return {
          state: i + 1 | 0,
          value: f(i)
        };
      })(v.fresh));
    });
  };
};

var evalQ = function evalQ(render) {
  return function (ref) {
    return function (q) {
      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
        return evalM(render)(ref)(v["component"]["eval"](new Halogen_Query_HalogenQ.Query(Data_Functor.map(Data_Coyoneda.functorCoyoneda)(Data_Maybe.Just.create)(Data_Coyoneda.liftCoyoneda(q)), Data_Function["const"](Data_Maybe.Nothing.value))));
      });
    };
  };
};

var evalM = function evalM(render) {
  return function (initRef) {
    return function (v) {
      var evalChildQuery = function evalChildQuery(ref) {
        return function (cqb) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {
            return Halogen_Query_ChildQuery.unChildQueryBox(function (v2) {
              var evalChild = function evalChild(v3) {
                return Control_Parallel_Class.parallel(Effect_Aff.parallelAff)(Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v3)))(function (dsx) {
                  return Halogen_Aff_Driver_State.unDriverStateX(function (ds) {
                    return evalQ(render)(ds.selfRef)(v2.value1);
                  })(dsx);
                }));
              };

              return Data_Functor.map(Effect_Aff.functorAff)(v2.value2)(Control_Parallel_Class.sequential(Effect_Aff.parallelAff)(v2.value0(Effect_Aff.applicativeParAff)(evalChild)(v1.children)));
            })(cqb);
          });
        };
      };

      var go = function go(ref) {
        return function (v1) {
          if (v1 instanceof Halogen_Query_HalogenM.State) {
            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v2) {
              var v3 = v1.value0(v2.state);

              if (Unsafe_Reference.unsafeRefEq(v2.state)(v3.value1)) {
                return Control_Applicative.pure(Effect_Aff.applicativeAff)(v3.value0);
              }

              ;

              if (Data_Boolean.otherwise) {
                return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write({
                  component: v2.component,
                  state: v3.value1,
                  refs: v2.refs,
                  children: v2.children,
                  childrenIn: v2.childrenIn,
                  childrenOut: v2.childrenOut,
                  selfRef: v2.selfRef,
                  handlerRef: v2.handlerRef,
                  pendingQueries: v2.pendingQueries,
                  pendingOuts: v2.pendingOuts,
                  pendingHandlers: v2.pendingHandlers,
                  rendering: v2.rendering,
                  fresh: v2.fresh,
                  subscriptions: v2.subscriptions,
                  forks: v2.forks,
                  lifecycleHandlers: v2.lifecycleHandlers
                })(ref)))(function () {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(handleLifecycle(v2.lifecycleHandlers)(render(v2.lifecycleHandlers)(ref)))(function () {
                    return Control_Applicative.pure(Effect_Aff.applicativeAff)(v3.value0);
                  });
                });
              }

              ;
              throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 85, column 7 - line 91, column 21): " + [v3.constructor.name]);
            });
          }

          ;

          if (v1 instanceof Halogen_Query_HalogenM.Subscribe) {
            return Control_Bind.bind(Effect_Aff.bindAff)(fresh(Halogen_Query_HalogenM.SubscriptionId)(ref))(function (sid) {
              var v2 = v1.value0(sid);
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v3) {
                return Control_Bind.bind(Effect_Aff.bindAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(Control_Bind.bind(Effect_Aff.bindAff)(v2)(function (v4) {
                  var done = Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v3.subscriptions)))(function (subs) {
                    return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.modify_(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal["delete"](Halogen_Query_HalogenM.ordSubscriptionId)(sid)))(v3.subscriptions)))(function () {
                      return Control_Applicative.when(Effect_Aff.applicativeAff)(Data_Maybe.maybe(false)(Data_Map_Internal.member(Halogen_Query_HalogenM.ordSubscriptionId)(sid))(subs))(Halogen_Query_EventSource.finalize(v4.finalizer));
                    });
                  });
                  var consumer = Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Control_Coroutine["await"](Effect_Aff.monadAff))(function (act) {
                    return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Effect_Aff.monadAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v3.subscriptions))))(function (subs) {
                      return Control_Applicative.when(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqBoolean))(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal.member(Halogen_Query_HalogenM.ordSubscriptionId)(sid))(subs))(new Data_Maybe.Just(true)))(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Effect_Aff.monadAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(evalF(render)(ref)(new Halogen_Query_Input.Action(act)))))(function () {
                        return consumer;
                      }));
                    });
                  });
                  return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.modify_(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal.insert(Halogen_Query_HalogenM.ordSubscriptionId)(sid)(done)))(v3.subscriptions)))(function () {
                    return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Coroutine.runProcess(Effect_Aff.monadRecAff)(Control_Coroutine.pullFrom(Effect_Aff.monadRecAff)(consumer)(v4.producer)))(function () {
                      return Halogen_Query_EventSource.finalize(done);
                    });
                  });
                })))(function () {
                  return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1(sid));
                });
              });
            });
          }

          ;

          if (v1 instanceof Halogen_Query_HalogenM.Unsubscribe) {
            return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(unsubscribe(v1.value0)(ref))(function () {
              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1);
            });
          }

          ;

          if (v1 instanceof Halogen_Query_HalogenM.Lift) {
            return v1.value0;
          }

          ;

          if (v1 instanceof Halogen_Query_HalogenM.ChildQuery) {
            return evalChildQuery(ref)(v1.value0);
          }

          ;

          if (v1 instanceof Halogen_Query_HalogenM.Raise) {
            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v2) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v2.handlerRef)))(function (handler) {
                return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(queueOrRun(v2.pendingOuts)(handler(v1.value0)))(function () {
                  return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1);
                });
              });
            });
          }

          ;

          if (v1 instanceof Halogen_Query_HalogenM.Par) {
            return Control_Parallel_Class.sequential(Effect_Aff.parallelAff)(Control_Applicative_Free.retractFreeAp(Effect_Aff.applicativeParAff)(Control_Applicative_Free.hoistFreeAp(function () {
              var $85 = Control_Parallel_Class.parallel(Effect_Aff.parallelAff);
              var $86 = evalM(render)(ref);
              return function ($87) {
                return $85($86($87));
              };
            }())(v1.value0)));
          }

          ;

          if (v1 instanceof Halogen_Query_HalogenM.Fork) {
            return Control_Bind.bind(Effect_Aff.bindAff)(fresh(Halogen_Query_HalogenM.ForkId)(ref))(function (fid) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v2) {
                return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["new"](false)))(function (doneRef) {
                  return Control_Bind.bind(Effect_Aff.bindAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(Effect_Aff["finally"](Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                    Effect_Ref.modify_(Data_Map_Internal["delete"](Halogen_Query_HalogenM.ordForkId)(fid))(v2.forks)();
                    return Effect_Ref.write(true)(doneRef)();
                  }))(evalM(render)(ref)(v1.value0))))(function (fiber) {
                    return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Control_Monad.unlessM(Effect.monadEffect)(Effect_Ref.read(doneRef))(Effect_Ref.modify_(Data_Map_Internal.insert(Halogen_Query_HalogenM.ordForkId)(fid)(fiber))(v2.forks))))(function () {
                      return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1(fid));
                    });
                  });
                });
              });
            });
          }

          ;

          if (v1 instanceof Halogen_Query_HalogenM.Kill) {
            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v2) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v2.forks)))(function (forkMap) {
                return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_Foldable.foldableMaybe)(Effect_Aff.killFiber(Effect_Exception.error("Cancelled")))(Data_Map_Internal.lookup(Halogen_Query_HalogenM.ordForkId)(v1.value0)(forkMap)))(function () {
                  return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1);
                });
              });
            });
          }

          ;

          if (v1 instanceof Halogen_Query_HalogenM.GetRef) {
            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v2) {
              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1(Data_Map_Internal.lookup(Data_Ord.ordString)(v1.value0)(v2.refs)));
            });
          }

          ;
          throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 82, column 12 - line 146, column 33): " + [v1.constructor.name]);
        };
      };

      return Control_Monad_Free.foldFree(Effect_Aff.monadRecAff)(go(initRef))(v);
    };
  };
};

var evalF = function evalF(render) {
  return function (ref) {
    return function (v) {
      if (v instanceof Halogen_Query_Input.RefUpdate) {
        return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Data_Function.flip(Effect_Ref.modify_)(ref)(Halogen_Aff_Driver_State.mapDriverState(function (st) {
          return {
            component: st.component,
            state: st.state,
            refs: Data_Map_Internal.alter(Data_Ord.ordString)(Data_Function["const"](v.value1))(v.value0)(st.refs),
            children: st.children,
            childrenIn: st.childrenIn,
            childrenOut: st.childrenOut,
            selfRef: st.selfRef,
            handlerRef: st.handlerRef,
            pendingQueries: st.pendingQueries,
            pendingOuts: st.pendingOuts,
            pendingHandlers: st.pendingHandlers,
            rendering: st.rendering,
            fresh: st.fresh,
            subscriptions: st.subscriptions,
            forks: st.forks,
            lifecycleHandlers: st.lifecycleHandlers
          };
        })));
      }

      ;

      if (v instanceof Halogen_Query_Input.Action) {
        return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {
          return evalM(render)(ref)(v1["component"]["eval"](new Halogen_Query_HalogenQ.Action(v.value0, Data_Unit.unit)));
        });
      }

      ;
      throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 51, column 20 - line 57, column 62): " + [v.constructor.name]);
    };
  };
};

module.exports = {
  evalF: evalF,
  evalQ: evalQ,
  evalM: evalM,
  handleLifecycle: handleLifecycle,
  queueOrRun: queueOrRun
};
},{"../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Applicative.Free/index.js":"../output/Control.Applicative.Free/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Coroutine/index.js":"../output/Control.Coroutine/index.js","../Control.Monad/index.js":"../output/Control.Monad/index.js","../Control.Monad.Fork.Class/index.js":"../output/Control.Monad.Fork.Class/index.js","../Control.Monad.Free/index.js":"../output/Control.Monad.Free/index.js","../Control.Monad.Free.Trans/index.js":"../output/Control.Monad.Free.Trans/index.js","../Control.Monad.Trans.Class/index.js":"../output/Control.Monad.Trans.Class/index.js","../Control.Parallel/index.js":"../output/Control.Parallel/index.js","../Control.Parallel.Class/index.js":"../output/Control.Parallel.Class/index.js","../Data.Boolean/index.js":"../output/Data.Boolean/index.js","../Data.Coyoneda/index.js":"../output/Data.Coyoneda/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Foldable/index.js":"../output/Data.Foldable/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.List.Types/index.js":"../output/Data.List.Types/index.js","../Data.Map.Internal/index.js":"../output/Data.Map.Internal/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js","../Effect/index.js":"../output/Effect/index.js","../Effect.Aff/index.js":"../output/Effect.Aff/index.js","../Effect.Class/index.js":"../output/Effect.Class/index.js","../Effect.Exception/index.js":"../output/Effect.Exception/index.js","../Effect.Ref/index.js":"../output/Effect.Ref/index.js","../Halogen.Aff.Driver.State/index.js":"../output/Halogen.Aff.Driver.State/index.js","../Halogen.Query.ChildQuery/index.js":"../output/Halogen.Query.ChildQuery/index.js","../Halogen.Query.EventSource/index.js":"../output/Halogen.Query.EventSource/index.js","../Halogen.Query.HalogenM/index.js":"../output/Halogen.Query.HalogenM/index.js","../Halogen.Query.HalogenQ/index.js":"../output/Halogen.Query.HalogenQ/index.js","../Halogen.Query.Input/index.js":"../output/Halogen.Query.Input/index.js","../Unsafe.Reference/index.js":"../output/Unsafe.Reference/index.js"}],"../output/Halogen.Aff.Driver/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Coroutine = require("../Control.Coroutine/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Fork_Class = require("../Control.Monad.Fork.Class/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Parallel = require("../Control.Parallel/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_List = require("../Data.List/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Map_Internal = require("../Data.Map.Internal/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect = require("../Effect/index.js");

var Effect_Aff = require("../Effect.Aff/index.js");

var Effect_Aff_AVar = require("../Effect.Aff.AVar/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Effect_Console = require("../Effect.Console/index.js");

var Effect_Exception = require("../Effect.Exception/index.js");

var Effect_Ref = require("../Effect.Ref/index.js");

var Halogen_Aff_Driver_Eval = require("../Halogen.Aff.Driver.Eval/index.js");

var Halogen_Aff_Driver_State = require("../Halogen.Aff.Driver.State/index.js");

var Halogen_Component = require("../Halogen.Component/index.js");

var Halogen_Data_Slot = require("../Halogen.Data.Slot/index.js");

var Halogen_Query_EventSource = require("../Halogen.Query.EventSource/index.js");

var Halogen_Query_HalogenQ = require("../Halogen.Query.HalogenQ/index.js");

var Halogen_Query_Input = require("../Halogen.Query.Input/index.js");

var newLifecycleHandlers = Effect_Ref["new"]({
  initializers: Data_List_Types.Nil.value,
  finalizers: Data_List_Types.Nil.value
});
var handleAff = Effect_Aff.runAff_(Data_Either.either(Effect_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))));

var handlePending = function handlePending(ref) {
  return function __do() {
    var queue = Effect_Ref.read(ref)();
    Effect_Ref.write(Data_Maybe.Nothing.value)(ref)();
    return Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(queue)(function () {
      var $25 = Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff));
      return function ($26) {
        return handleAff($25(Data_List.reverse($26)));
      };
    }())();
  };
};

var cleanupSubscriptionsAndForks = function cleanupSubscriptionsAndForks(v) {
  return function __do() {
    Control_Bind.bindFlipped(Effect.bindEffect)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function () {
      var $27 = Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_Map_Internal.foldableMap)(function () {
        var $29 = Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff);
        return function ($30) {
          return $29(Halogen_Query_EventSource.finalize($30));
        };
      }());
      return function ($28) {
        return handleAff($27($28));
      };
    }()))(Effect_Ref.read(v.subscriptions))();
    Effect_Ref.write(Data_Maybe.Nothing.value)(v.subscriptions)();
    Control_Bind.bindFlipped(Effect.bindEffect)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Map_Internal.foldableMap)(function () {
      var $31 = Effect_Aff.killFiber(Effect_Exception.error("finalized"));
      return function ($32) {
        return handleAff($31($32));
      };
    }()))(Effect_Ref.read(v.forks))();
    return Effect_Ref.write(Data_Map_Internal.empty)(v.forks)();
  };
};

var runUI = function runUI(renderSpec) {
  return function (component) {
    return function (i) {
      var subscribe = function subscribe(fresh) {
        return function (ref) {
          return function (consumer) {
            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff_AVar.empty)(function (inputVar) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                var listenerId = Effect_Ref.read(fresh)();
                Effect_Ref.modify_(function (v) {
                  return v + 1 | 0;
                })(fresh)();
                Effect_Ref.modify_(Data_Map_Internal.insert(Data_Ord.ordInt)(listenerId)(inputVar))(ref)();
                return listenerId;
              }))(function (listenerId) {
                var producer = Control_Coroutine.producer(Effect_Aff.monadAff)(Data_Functor.map(Effect_Aff.functorAff)(Data_Either.either(Data_Function["const"](new Data_Either.Right(Data_Unit.unit)))(Data_Either.Left.create))(Control_Monad_Error_Class["try"](Effect_Aff.monadErrorAff)(Effect_Aff_AVar.take(inputVar))));
                return Data_Functor["void"](Effect_Aff.functorAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Coroutine.runProcess(Effect_Aff.monadRecAff)(Control_Coroutine.connect(Effect_Aff.monadRecAff)(Effect_Aff.parallelAff)(producer)(consumer)))(function () {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.modify_(Data_Map_Internal["delete"](Data_Ord.ordInt)(listenerId))(ref)))(function () {
                    return Effect_Aff_AVar.kill(Effect_Exception.error("ended"))(inputVar);
                  });
                })));
              });
            });
          };
        };
      };

      var rootHandler = function rootHandler(ref) {
        return function (message) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (listeners) {
            return Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_Map_Internal.foldableMap)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(Data_Functor.map(Data_Map_Internal.functorMap)(Effect_Aff_AVar.put(message))(listeners));
          });
        };
      };

      var squashChildInitializers = function squashChildInitializers(lchs) {
        return function (preInits) {
          return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
            var parentInitializer = Halogen_Aff_Driver_Eval.evalM(render)(st.selfRef)(st["component"]["eval"](new Halogen_Query_HalogenQ.Initialize(Data_Unit.unit)));
            return Effect_Ref.modify_(function (handlers) {
              return {
                initializers: new Data_List_Types.Cons(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Parallel.parSequence_(Effect_Aff.parallelAff)(Data_List_Types.foldableList)(Data_List.reverse(handlers.initializers)))(function () {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(parentInitializer)(function () {
                    return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                      handlePending(st.pendingQueries)();
                      return handlePending(st.pendingOuts)();
                    });
                  });
                }), preInits),
                finalizers: handlers.finalizers
              };
            })(lchs);
          });
        };
      };

      var runComponent = function runComponent(lchs) {
        return function (handler) {
          return function (j) {
            return Halogen_Component.unComponent(function (c) {
              return function __do() {
                var lchs$prime = newLifecycleHandlers();
                var $$var = Halogen_Aff_Driver_State.initDriverState(c)(j)(handler)(lchs$prime)();
                var pre = Effect_Ref.read(lchs)();
                Effect_Ref.write({
                  initializers: Data_List_Types.Nil.value,
                  finalizers: pre.finalizers
                })(lchs)();
                Control_Bind.bindFlipped(Effect.bindEffect)(Halogen_Aff_Driver_State.unDriverStateX(function () {
                  var $33 = render(lchs);
                  return function ($34) {
                    return $33(function (v) {
                      return v.selfRef;
                    }($34));
                  };
                }()))(Effect_Ref.read($$var))();
                Control_Bind.bindFlipped(Effect.bindEffect)(squashChildInitializers(lchs)(pre.initializers))(Effect_Ref.read($$var))();
                return $$var;
              };
            });
          };
        };
      };

      var renderChild = function renderChild(lchs) {
        return function (handler) {
          return function (childrenInRef) {
            return function (childrenOutRef) {
              return Halogen_Component.unComponentSlot(function (slot) {
                return function __do() {
                  var childrenIn = Data_Functor.map(Effect.functorEffect)(slot.pop)(Effect_Ref.read(childrenInRef))();

                  var $$var = function () {
                    if (childrenIn instanceof Data_Maybe.Just) {
                      Effect_Ref.write(childrenIn.value0.value1)(childrenInRef)();
                      var dsx = Effect_Ref.read(childrenIn.value0.value0)();
                      Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                        return function __do() {
                          Data_Function.flip(Effect_Ref.write)(st.handlerRef)(function () {
                            var $35 = Data_Maybe.maybe(Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Unit.unit))(handler);
                            return function ($36) {
                              return $35(slot.output($36));
                            };
                          }())();
                          return handleAff(Halogen_Aff_Driver_Eval.evalM(render)(st.selfRef)(st["component"]["eval"](new Halogen_Query_HalogenQ.Receive(slot.input, Data_Unit.unit))))();
                        };
                      })(dsx)();
                      return childrenIn.value0.value0;
                    }

                    ;

                    if (childrenIn instanceof Data_Maybe.Nothing) {
                      return runComponent(lchs)(function () {
                        var $37 = Data_Maybe.maybe(Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Unit.unit))(handler);
                        return function ($38) {
                          return $37(slot.output($38));
                        };
                      }())(slot.input)(slot.component)();
                    }

                    ;
                    throw new Error("Failed pattern match at Halogen.Aff.Driver (line 236, column 14 - line 245, column 98): " + [childrenIn.constructor.name]);
                  }();

                  var isDuplicate = Data_Functor.map(Effect.functorEffect)(function ($39) {
                    return Data_Maybe.isJust(slot.get($39));
                  })(Effect_Ref.read(childrenOutRef))();
                  Control_Applicative.when(Effect.applicativeEffect)(isDuplicate)(Effect_Console.warn("Halogen: Duplicate slot address was detected during rendering, unexpected results may occur"))();
                  Effect_Ref.modify_(slot.set($$var))(childrenOutRef)();
                  return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read($$var))(Halogen_Aff_Driver_State.renderStateX(Effect.functorEffect)(function (v) {
                    if (v instanceof Data_Maybe.Nothing) {
                      return Effect_Exception["throw"]("Halogen internal error: child was not initialized in renderChild");
                    }

                    ;

                    if (v instanceof Data_Maybe.Just) {
                      return Control_Applicative.pure(Effect.applicativeEffect)(renderSpec.renderChild(v.value0));
                    }

                    ;
                    throw new Error("Failed pattern match at Halogen.Aff.Driver (line 250, column 37 - line 252, column 50): " + [v.constructor.name]);
                  }))();
                };
              });
            };
          };
        };
      };

      var render = function render(lchs) {
        return function ($$var) {
          return function __do() {
            var v = Effect_Ref.read($$var)();
            var shouldProcessHandlers = Data_Functor.map(Effect.functorEffect)(Data_Maybe.isNothing)(Effect_Ref.read(v.pendingHandlers))();
            Control_Applicative.when(Effect.applicativeEffect)(shouldProcessHandlers)(Effect_Ref.write(new Data_Maybe.Just(Data_List_Types.Nil.value))(v.pendingHandlers))();
            Effect_Ref.write(Halogen_Data_Slot.empty)(v.childrenOut)();
            Effect_Ref.write(v.children)(v.childrenIn)();
            var selfRef = Control_Category.identity(Control_Category.categoryFn)(v.selfRef);
            var pendingQueries = Control_Category.identity(Control_Category.categoryFn)(v.pendingQueries);
            var pendingHandlers = Control_Category.identity(Control_Category.categoryFn)(v.pendingHandlers);

            var handler = function () {
              var $40 = Halogen_Aff_Driver_Eval.queueOrRun(pendingHandlers);
              var $41 = Data_Functor["void"](Effect_Aff.functorAff);
              var $42 = Halogen_Aff_Driver_Eval.evalF(render)(selfRef);
              return function ($43) {
                return $40($41($42($43)));
              };
            }();

            var childHandler = function () {
              var $44 = Halogen_Aff_Driver_Eval.queueOrRun(pendingQueries);
              return function ($45) {
                return $44(handler(Halogen_Query_Input.Action.create($45)));
              };
            }();

            var rendering = renderSpec.render(function ($46) {
              return handleAff(handler($46));
            })(renderChild(lchs)(childHandler)(v.childrenIn)(v.childrenOut))(v.component.render(v.state))(v.rendering)();
            var children = Effect_Ref.read(v.childrenOut)();
            var childrenIn = Effect_Ref.read(v.childrenIn)();
            Halogen_Data_Slot.foreachSlot(Effect.applicativeEffect)(childrenIn)(function (v1) {
              return function __do() {
                var childDS = Effect_Ref.read(v1)();
                Halogen_Aff_Driver_State.renderStateX_(Effect.applicativeEffect)(renderSpec.removeChild)(childDS)();
                return finalize(lchs)(childDS)();
              };
            })();
            Data_Function.flip(Effect_Ref.modify_)(v.selfRef)(Halogen_Aff_Driver_State.mapDriverState(function (ds$prime) {
              return {
                component: ds$prime.component,
                state: ds$prime.state,
                refs: ds$prime.refs,
                children: children,
                childrenIn: ds$prime.childrenIn,
                childrenOut: ds$prime.childrenOut,
                selfRef: ds$prime.selfRef,
                handlerRef: ds$prime.handlerRef,
                pendingQueries: ds$prime.pendingQueries,
                pendingOuts: ds$prime.pendingOuts,
                pendingHandlers: ds$prime.pendingHandlers,
                rendering: new Data_Maybe.Just(rendering),
                fresh: ds$prime.fresh,
                subscriptions: ds$prime.subscriptions,
                forks: ds$prime.forks,
                lifecycleHandlers: ds$prime.lifecycleHandlers
              };
            }))();
            return Control_Applicative.when(Effect.applicativeEffect)(shouldProcessHandlers)(Data_Function.flip(Control_Monad_Rec_Class.tailRecM(Control_Monad_Rec_Class.monadRecEffect))(Data_Unit.unit)(function (v1) {
              return function __do() {
                var handlers = Effect_Ref.read(pendingHandlers)();
                Effect_Ref.write(new Data_Maybe.Just(Data_List_Types.Nil.value))(pendingHandlers)();
                Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function () {
                  var $47 = Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff));
                  return function ($48) {
                    return handleAff($47(Data_List.reverse($48)));
                  };
                }())(handlers)();
                var mmore = Effect_Ref.read(pendingHandlers)();
                var $21 = Data_Maybe.maybe(false)(Data_List["null"])(mmore);

                if ($21) {
                  return Data_Functor.voidLeft(Effect.functorEffect)(Effect_Ref.write(Data_Maybe.Nothing.value)(pendingHandlers))(new Control_Monad_Rec_Class.Done(Data_Unit.unit))();
                }

                ;
                return new Control_Monad_Rec_Class.Loop(Data_Unit.unit);
              };
            }))();
          };
        };
      };

      var finalize = function finalize(lchs) {
        return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
          return function __do() {
            cleanupSubscriptionsAndForks(st)();
            var f = Halogen_Aff_Driver_Eval.evalM(render)(st.selfRef)(st["component"]["eval"](new Halogen_Query_HalogenQ.Finalize(Data_Unit.unit)));
            Effect_Ref.modify_(function (handlers) {
              return {
                initializers: handlers.initializers,
                finalizers: new Data_List_Types.Cons(f, handlers.finalizers)
              };
            })(lchs)();
            return Halogen_Data_Slot.foreachSlot(Effect.applicativeEffect)(st.children)(function (v) {
              return function __do() {
                var dsx = Effect_Ref.read(v)();
                return finalize(lchs)(dsx)();
              };
            })();
          };
        });
      };

      var evalDriver = function evalDriver(disposed) {
        return function (ref) {
          return function (q) {
            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(disposed)))(function (v) {
              if (v) {
                return Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Maybe.Nothing.value);
              }

              ;
              return Halogen_Aff_Driver_Eval.evalQ(render)(ref)(q);
            });
          };
        };
      };

      var dispose = function dispose(disposed) {
        return function (lchs) {
          return function (dsx) {
            return function (subsRef) {
              return Halogen_Aff_Driver_Eval.handleLifecycle(lchs)(function __do() {
                var v = Effect_Ref.read(disposed)();

                if (v) {
                  return Data_Unit.unit;
                }

                ;
                Effect_Ref.write(true)(disposed)();
                Control_Bind.bindFlipped(Effect.bindEffect)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Map_Internal.foldableMap)(function () {
                  var $49 = Effect_Aff_AVar.kill(Effect_Exception.error("disposed"));
                  return function ($50) {
                    return Effect_Aff.launchAff_($49($50));
                  };
                }()))(Effect_Ref.read(subsRef))();
                finalize(lchs)(dsx)();
                return Halogen_Aff_Driver_State.unDriverStateX(function () {
                  var $51 = Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(renderSpec.dispose);
                  return function ($52) {
                    return $51(function (v1) {
                      return v1.rendering;
                    }($52));
                  };
                }())(dsx)();
              });
            };
          };
        };
      };

      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(newLifecycleHandlers))(function (lchs) {
        return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["new"](0)))(function (fresh) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["new"](false)))(function (disposed) {
            return Halogen_Aff_Driver_Eval.handleLifecycle(lchs)(function __do() {
              var listeners = Effect_Ref["new"](Data_Map_Internal.empty)();
              var dsx = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref.read)(runComponent(lchs)(rootHandler(listeners))(i)(component))();
              return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                return Control_Applicative.pure(Effect.applicativeEffect)({
                  query: evalDriver(disposed)(st.selfRef),
                  subscribe: subscribe(fresh)(listeners),
                  dispose: dispose(disposed)(lchs)(dsx)(listeners)
                });
              })(dsx)();
            });
          });
        });
      });
    };
  };
};

module.exports = {
  runUI: runUI
};
},{"../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Category/index.js":"../output/Control.Category/index.js","../Control.Coroutine/index.js":"../output/Control.Coroutine/index.js","../Control.Monad.Error.Class/index.js":"../output/Control.Monad.Error.Class/index.js","../Control.Monad.Fork.Class/index.js":"../output/Control.Monad.Fork.Class/index.js","../Control.Monad.Rec.Class/index.js":"../output/Control.Monad.Rec.Class/index.js","../Control.Parallel/index.js":"../output/Control.Parallel/index.js","../Data.Either/index.js":"../output/Data.Either/index.js","../Data.Foldable/index.js":"../output/Data.Foldable/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.List/index.js":"../output/Data.List/index.js","../Data.List.Types/index.js":"../output/Data.List.Types/index.js","../Data.Map.Internal/index.js":"../output/Data.Map.Internal/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js","../Effect/index.js":"../output/Effect/index.js","../Effect.Aff/index.js":"../output/Effect.Aff/index.js","../Effect.Aff.AVar/index.js":"../output/Effect.Aff.AVar/index.js","../Effect.Class/index.js":"../output/Effect.Class/index.js","../Effect.Console/index.js":"../output/Effect.Console/index.js","../Effect.Exception/index.js":"../output/Effect.Exception/index.js","../Effect.Ref/index.js":"../output/Effect.Ref/index.js","../Halogen.Aff.Driver.Eval/index.js":"../output/Halogen.Aff.Driver.Eval/index.js","../Halogen.Aff.Driver.State/index.js":"../output/Halogen.Aff.Driver.State/index.js","../Halogen.Component/index.js":"../output/Halogen.Component/index.js","../Halogen.Data.Slot/index.js":"../output/Halogen.Data.Slot/index.js","../Halogen.Query.EventSource/index.js":"../output/Halogen.Query.EventSource/index.js","../Halogen.Query.HalogenQ/index.js":"../output/Halogen.Query.HalogenQ/index.js","../Halogen.Query.Input/index.js":"../output/Halogen.Query.Input/index.js"}],"../output/Web.DOM.Node/foreign.js":[function(require,module,exports) {
"use strict";

var getEffProp = function getEffProp(name) {
  return function (node) {
    return function () {
      return node[name];
    };
  };
};

exports.nodeTypeIndex = function (node) {
  return node.nodeType;
};

exports.nodeName = function (node) {
  return node.nodeName;
};

exports.baseURI = getEffProp("baseURI");
exports._ownerDocument = getEffProp("ownerDocument");
exports._parentNode = getEffProp("parentNode");
exports._parentElement = getEffProp("parentElement");

exports.hasChildNodes = function (node) {
  return function () {
    return node.hasChildNodes();
  };
};

exports.childNodes = getEffProp("childNodes");
exports._firstChild = getEffProp("firstChild");
exports._lastChild = getEffProp("lastChild");
exports._previousSibling = getEffProp("previousSibling");
exports._nextSibling = getEffProp("nextSibling");
exports._nodeValue = getEffProp("nodeValue");

exports.setNodeValue = function (value) {
  return function (node) {
    return function () {
      node.nodeValue = value;
      return {};
    };
  };
};

exports.textContent = getEffProp("textContent");

exports.setTextContent = function (value) {
  return function (node) {
    return function () {
      node.textContent = value;
      return {};
    };
  };
};

exports.normalize = function (node) {
  return function () {
    node.normalize();
    return {};
  };
};

exports.clone = function (node) {
  return function () {
    return node.cloneNode(false);
  };
};

exports.deepClone = function (node) {
  return function () {
    return node.cloneNode(true);
  };
};

exports.isEqualNode = function (node1) {
  return function (node2) {
    return function () {
      return node1.isEqualNode(node2);
    };
  };
};

exports.compareDocumentPositionBits = function (node1) {
  return function (node2) {
    return function () {
      return node1.compareDocumentPosition(node2);
    };
  };
};

exports.contains = function (node1) {
  return function (node2) {
    return function () {
      return node1.contains(node2);
    };
  };
};

exports._lookupPrefix = function (prefix) {
  return function (node) {
    return function () {
      return node.lookupPrefix(prefix);
    };
  };
};

exports._lookupNamespaceURI = function (ns) {
  return function (node) {
    return function () {
      return node.lookupNamespaceURI(ns);
    };
  };
};

exports.isDefaultNamespace = function (ns) {
  return function (node) {
    return function () {
      return node.isDefaultNamespace(ns);
    };
  };
};

exports.insertBefore = function (node1) {
  return function (node2) {
    return function (parent) {
      return function () {
        return parent.insertBefore(node1, node2);
      };
    };
  };
};

exports.appendChild = function (node) {
  return function (parent) {
    return function () {
      return parent.appendChild(node);
    };
  };
};

exports.replaceChild = function (newChild) {
  return function (oldChild) {
    return function (parent) {
      return function () {
        return parent.replaceChild(newChild, oldChild);
      };
    };
  };
};

exports.removeChild = function (node) {
  return function (parent) {
    return function () {
      return parent.removeChild(node);
    };
  };
};
},{}],"../output/Web.DOM.NodeType/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Show = require("../Data.Show/index.js");

var ElementNode = function () {
  function ElementNode() {}

  ;
  ElementNode.value = new ElementNode();
  return ElementNode;
}();

var AttributeNode = function () {
  function AttributeNode() {}

  ;
  AttributeNode.value = new AttributeNode();
  return AttributeNode;
}();

var TextNode = function () {
  function TextNode() {}

  ;
  TextNode.value = new TextNode();
  return TextNode;
}();

var CDATASectionNode = function () {
  function CDATASectionNode() {}

  ;
  CDATASectionNode.value = new CDATASectionNode();
  return CDATASectionNode;
}();

var EntityReferenceNode = function () {
  function EntityReferenceNode() {}

  ;
  EntityReferenceNode.value = new EntityReferenceNode();
  return EntityReferenceNode;
}();

var EntityNode = function () {
  function EntityNode() {}

  ;
  EntityNode.value = new EntityNode();
  return EntityNode;
}();

var ProcessingInstructionNode = function () {
  function ProcessingInstructionNode() {}

  ;
  ProcessingInstructionNode.value = new ProcessingInstructionNode();
  return ProcessingInstructionNode;
}();

var CommentNode = function () {
  function CommentNode() {}

  ;
  CommentNode.value = new CommentNode();
  return CommentNode;
}();

var DocumentNode = function () {
  function DocumentNode() {}

  ;
  DocumentNode.value = new DocumentNode();
  return DocumentNode;
}();

var DocumentTypeNode = function () {
  function DocumentTypeNode() {}

  ;
  DocumentTypeNode.value = new DocumentTypeNode();
  return DocumentTypeNode;
}();

var DocumentFragmentNode = function () {
  function DocumentFragmentNode() {}

  ;
  DocumentFragmentNode.value = new DocumentFragmentNode();
  return DocumentFragmentNode;
}();

var NotationNode = function () {
  function NotationNode() {}

  ;
  NotationNode.value = new NotationNode();
  return NotationNode;
}();

var toEnumNodeType = function toEnumNodeType(v) {
  if (v === 1) {
    return new Data_Maybe.Just(ElementNode.value);
  }

  ;

  if (v === 2) {
    return new Data_Maybe.Just(AttributeNode.value);
  }

  ;

  if (v === 3) {
    return new Data_Maybe.Just(TextNode.value);
  }

  ;

  if (v === 4) {
    return new Data_Maybe.Just(CDATASectionNode.value);
  }

  ;

  if (v === 5) {
    return new Data_Maybe.Just(EntityReferenceNode.value);
  }

  ;

  if (v === 6) {
    return new Data_Maybe.Just(EntityNode.value);
  }

  ;

  if (v === 7) {
    return new Data_Maybe.Just(ProcessingInstructionNode.value);
  }

  ;

  if (v === 8) {
    return new Data_Maybe.Just(CommentNode.value);
  }

  ;

  if (v === 9) {
    return new Data_Maybe.Just(DocumentNode.value);
  }

  ;

  if (v === 10) {
    return new Data_Maybe.Just(DocumentTypeNode.value);
  }

  ;

  if (v === 11) {
    return new Data_Maybe.Just(DocumentFragmentNode.value);
  }

  ;

  if (v === 12) {
    return new Data_Maybe.Just(NotationNode.value);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var showNodeType = new Data_Show.Show(function (v) {
  if (v instanceof ElementNode) {
    return "ElementNode";
  }

  ;

  if (v instanceof AttributeNode) {
    return "AttributeNode";
  }

  ;

  if (v instanceof TextNode) {
    return "TextNode";
  }

  ;

  if (v instanceof CDATASectionNode) {
    return "CDATASectionNode";
  }

  ;

  if (v instanceof EntityReferenceNode) {
    return "EntityReferenceNode";
  }

  ;

  if (v instanceof EntityNode) {
    return "EntityNode";
  }

  ;

  if (v instanceof ProcessingInstructionNode) {
    return "ProcessingInstructionNode";
  }

  ;

  if (v instanceof CommentNode) {
    return "CommentNode";
  }

  ;

  if (v instanceof DocumentNode) {
    return "DocumentNode";
  }

  ;

  if (v instanceof DocumentTypeNode) {
    return "DocumentTypeNode";
  }

  ;

  if (v instanceof DocumentFragmentNode) {
    return "DocumentFragmentNode";
  }

  ;

  if (v instanceof NotationNode) {
    return "NotationNode";
  }

  ;
  throw new Error("Failed pattern match at Web.DOM.NodeType (line 39, column 1 - line 51, column 37): " + [v.constructor.name]);
});

var fromEnumNodeType = function fromEnumNodeType(v) {
  if (v instanceof ElementNode) {
    return 1;
  }

  ;

  if (v instanceof AttributeNode) {
    return 2;
  }

  ;

  if (v instanceof TextNode) {
    return 3;
  }

  ;

  if (v instanceof CDATASectionNode) {
    return 4;
  }

  ;

  if (v instanceof EntityReferenceNode) {
    return 5;
  }

  ;

  if (v instanceof EntityNode) {
    return 6;
  }

  ;

  if (v instanceof ProcessingInstructionNode) {
    return 7;
  }

  ;

  if (v instanceof CommentNode) {
    return 8;
  }

  ;

  if (v instanceof DocumentNode) {
    return 9;
  }

  ;

  if (v instanceof DocumentTypeNode) {
    return 10;
  }

  ;

  if (v instanceof DocumentFragmentNode) {
    return 11;
  }

  ;

  if (v instanceof NotationNode) {
    return 12;
  }

  ;
  throw new Error("Failed pattern match at Web.DOM.NodeType (line 68, column 1 - line 68, column 36): " + [v.constructor.name]);
};

var eqNodeType = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof ElementNode && y instanceof ElementNode) {
      return true;
    }

    ;

    if (x instanceof AttributeNode && y instanceof AttributeNode) {
      return true;
    }

    ;

    if (x instanceof TextNode && y instanceof TextNode) {
      return true;
    }

    ;

    if (x instanceof CDATASectionNode && y instanceof CDATASectionNode) {
      return true;
    }

    ;

    if (x instanceof EntityReferenceNode && y instanceof EntityReferenceNode) {
      return true;
    }

    ;

    if (x instanceof EntityNode && y instanceof EntityNode) {
      return true;
    }

    ;

    if (x instanceof ProcessingInstructionNode && y instanceof ProcessingInstructionNode) {
      return true;
    }

    ;

    if (x instanceof CommentNode && y instanceof CommentNode) {
      return true;
    }

    ;

    if (x instanceof DocumentNode && y instanceof DocumentNode) {
      return true;
    }

    ;

    if (x instanceof DocumentTypeNode && y instanceof DocumentTypeNode) {
      return true;
    }

    ;

    if (x instanceof DocumentFragmentNode && y instanceof DocumentFragmentNode) {
      return true;
    }

    ;

    if (x instanceof NotationNode && y instanceof NotationNode) {
      return true;
    }

    ;
    return false;
  };
});
var ordNodeType = new Data_Ord.Ord(function () {
  return eqNodeType;
}, function (x) {
  return function (y) {
    return Data_Ord.compare(Data_Ord.ordInt)(fromEnumNodeType(x))(fromEnumNodeType(y));
  };
});
var enumNodeType = new Data_Enum.Enum(function () {
  return ordNodeType;
}, Data_Enum.defaultPred(toEnumNodeType)(fromEnumNodeType), Data_Enum.defaultSucc(toEnumNodeType)(fromEnumNodeType));
var boundedNodeType = new Data_Bounded.Bounded(function () {
  return ordNodeType;
}, ElementNode.value, NotationNode.value);
var boundedEnumNodeType = new Data_Enum.BoundedEnum(function () {
  return boundedNodeType;
}, function () {
  return enumNodeType;
}, 12, fromEnumNodeType, toEnumNodeType);
module.exports = {
  ElementNode: ElementNode,
  AttributeNode: AttributeNode,
  TextNode: TextNode,
  CDATASectionNode: CDATASectionNode,
  EntityReferenceNode: EntityReferenceNode,
  EntityNode: EntityNode,
  ProcessingInstructionNode: ProcessingInstructionNode,
  CommentNode: CommentNode,
  DocumentNode: DocumentNode,
  DocumentTypeNode: DocumentTypeNode,
  DocumentFragmentNode: DocumentFragmentNode,
  NotationNode: NotationNode,
  eqNodeType: eqNodeType,
  ordNodeType: ordNodeType,
  boundedNodeType: boundedNodeType,
  enumNodeType: enumNodeType,
  boundedEnumNodeType: boundedEnumNodeType,
  showNodeType: showNodeType
};
},{"../Data.Bounded/index.js":"../output/Data.Bounded/index.js","../Data.Enum/index.js":"../output/Data.Enum/index.js","../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Ord/index.js":"../output/Data.Ord/index.js","../Data.Show/index.js":"../output/Data.Show/index.js"}],"../output/Web.DOM.Node/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_DOM_NodeType = require("../Web.DOM.NodeType/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toEventTarget = Unsafe_Coerce.unsafeCoerce;

var previousSibling = function () {
  var $1 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($2) {
    return $1($foreign["_previousSibling"]($2));
  };
}();

var parentNode = function () {
  var $3 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($4) {
    return $3($foreign["_parentNode"]($4));
  };
}();

var parentElement = function () {
  var $5 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($6) {
    return $5($foreign["_parentElement"]($6));
  };
}();

var ownerDocument = function () {
  var $7 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($8) {
    return $7($foreign["_ownerDocument"]($8));
  };
}();

var nodeValue = function () {
  var $9 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($10) {
    return $9($foreign["_nodeValue"]($10));
  };
}();

var nodeType = function nodeType(dictPartial) {
  var $11 = Data_Maybe.fromJust();
  var $12 = Data_Enum.toEnum(Web_DOM_NodeType.boundedEnumNodeType);
  return function ($13) {
    return $11($12($foreign.nodeTypeIndex($13)));
  };
};

var nextSibling = function () {
  var $14 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($15) {
    return $14($foreign["_nextSibling"]($15));
  };
}();

var lookupPrefix = function lookupPrefix(p) {
  var $16 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  var $17 = $foreign["_lookupPrefix"](p);
  return function ($18) {
    return $16($17($18));
  };
};

var lookupNamespaceURI = function lookupNamespaceURI(ns) {
  var $19 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  var $20 = $foreign["_lookupNamespaceURI"](ns);
  return function ($21) {
    return $19($20($21));
  };
};

var lastChild = function () {
  var $22 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($23) {
    return $22($foreign["_lastChild"]($23));
  };
}();

var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("Node");

var firstChild = function () {
  var $24 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($25) {
    return $24($foreign["_firstChild"]($25));
  };
}();

module.exports = {
  fromEventTarget: fromEventTarget,
  toEventTarget: toEventTarget,
  nodeType: nodeType,
  ownerDocument: ownerDocument,
  parentNode: parentNode,
  parentElement: parentElement,
  firstChild: firstChild,
  lastChild: lastChild,
  previousSibling: previousSibling,
  nextSibling: nextSibling,
  nodeValue: nodeValue,
  lookupPrefix: lookupPrefix,
  lookupNamespaceURI: lookupNamespaceURI,
  nodeTypeIndex: $foreign.nodeTypeIndex,
  nodeName: $foreign.nodeName,
  baseURI: $foreign.baseURI,
  hasChildNodes: $foreign.hasChildNodes,
  childNodes: $foreign.childNodes,
  setNodeValue: $foreign.setNodeValue,
  textContent: $foreign.textContent,
  setTextContent: $foreign.setTextContent,
  normalize: $foreign.normalize,
  clone: $foreign.clone,
  deepClone: $foreign.deepClone,
  isEqualNode: $foreign.isEqualNode,
  compareDocumentPositionBits: $foreign.compareDocumentPositionBits,
  contains: $foreign.contains,
  isDefaultNamespace: $foreign.isDefaultNamespace,
  insertBefore: $foreign.insertBefore,
  appendChild: $foreign.appendChild,
  replaceChild: $foreign.replaceChild,
  removeChild: $foreign.removeChild
};
},{"./foreign.js":"../output/Web.DOM.Node/foreign.js","../Data.Enum/index.js":"../output/Data.Enum/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Nullable/index.js":"../output/Data.Nullable/index.js","../Effect/index.js":"../output/Effect/index.js","../Unsafe.Coerce/index.js":"../output/Unsafe.Coerce/index.js","../Web.DOM.NodeType/index.js":"../output/Web.DOM.NodeType/index.js","../Web.Internal.FFI/index.js":"../output/Web.Internal.FFI/index.js"}],"../output/Halogen.VDom.Driver/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect = require("../Effect/index.js");

var Effect_Aff = require("../Effect.Aff/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Effect_Ref = require("../Effect.Ref/index.js");

var Halogen_Aff_Driver = require("../Halogen.Aff.Driver/index.js");

var Halogen_Aff_Driver_State = require("../Halogen.Aff.Driver.State/index.js");

var Halogen_Component = require("../Halogen.Component/index.js");

var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");

var Halogen_VDom_DOM = require("../Halogen.VDom.DOM/index.js");

var Halogen_VDom_DOM_Prop = require("../Halogen.VDom.DOM.Prop/index.js");

var Halogen_VDom_Machine = require("../Halogen.VDom.Machine/index.js");

var Halogen_VDom_Thunk = require("../Halogen.VDom.Thunk/index.js");

var Unsafe_Reference = require("../Unsafe.Reference/index.js");

var Web_DOM_Node = require("../Web.DOM.Node/index.js");

var Web_HTML = require("../Web.HTML/index.js");

var Web_HTML_HTMLDocument = require("../Web.HTML.HTMLDocument/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_HTML_Window = require("../Web.HTML.Window/index.js");

var RenderState = function RenderState(x) {
  return x;
};

var substInParent = function substInParent(v) {
  return function (v1) {
    return function (v2) {
      if (v1 instanceof Data_Maybe.Just && v2 instanceof Data_Maybe.Just) {
        return Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.insertBefore(v)(v1.value0)(v2.value0));
      }

      ;

      if (v1 instanceof Data_Maybe.Nothing && v2 instanceof Data_Maybe.Just) {
        return Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.appendChild(v)(v2.value0));
      }

      ;
      return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
    };
  };
};

var removeChild = function removeChild(v) {
  return function __do() {
    var npn = Web_DOM_Node.parentNode(v.node)();
    return Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function (pn) {
      return Web_DOM_Node.removeChild(v.node)(pn);
    })(npn)();
  };
};

var mkSpec = function mkSpec(handler) {
  return function (renderChildRef) {
    return function (document) {
      var getNode = Halogen_Aff_Driver_State.unRenderStateX(function (v) {
        return v.node;
      });

      var done = function done(st) {
        if (st instanceof Data_Maybe.Just) {
          return Halogen_VDom_Machine.halt(st.value0);
        }

        ;
        return Data_Unit.unit;
      };

      var buildWidget = function buildWidget(spec) {
        var buildThunk = Halogen_VDom_Thunk.buildThunk(Data_Newtype.unwrap(Halogen_HTML_Core.newtypeHTML))(spec);

        var renderComponentSlot = function renderComponentSlot(cs) {
          var renderChild = Effect_Ref.read(renderChildRef)();
          var rsx = renderChild(cs)();
          var node = getNode(rsx);
          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, Data_Maybe.Nothing.value, patch, done));
        };

        var render = function render(slot) {
          if (slot instanceof Halogen_Component.ComponentSlot) {
            return renderComponentSlot(slot.value0);
          }

          ;

          if (slot instanceof Halogen_Component.ThunkSlot) {
            var step = buildThunk(slot.value0);
            return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(step), new Data_Maybe.Just(step), patch, done));
          }

          ;
          throw new Error("Failed pattern match at Halogen.VDom.Driver (line 85, column 7 - line 90, column 75): " + [slot.constructor.name]);
        };

        var patch = function patch(st, slot) {
          if (st instanceof Data_Maybe.Just) {
            if (slot instanceof Halogen_Component.ComponentSlot) {
              Halogen_VDom_Machine.halt(st.value0);
              return renderComponentSlot(slot.value0);
            }

            ;

            if (slot instanceof Halogen_Component.ThunkSlot) {
              var step$prime = Halogen_VDom_Machine.step(st.value0, slot.value0);
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(step$prime), new Data_Maybe.Just(step$prime), patch, done));
            }

            ;
            throw new Error("Failed pattern match at Halogen.VDom.Driver (line 98, column 22 - line 104, column 79): " + [slot.constructor.name]);
          }

          ;
          return render(slot);
        };

        return render;
      };

      var buildAttributes = Halogen_VDom_DOM_Prop.buildProp(handler);
      return {
        buildWidget: buildWidget,
        buildAttributes: buildAttributes,
        document: document
      };
    };
  };
};

var renderSpec = function renderSpec(document) {
  return function (container) {
    var render = function render(handler) {
      return function (child) {
        return function (v) {
          return function (v1) {
            if (v1 instanceof Data_Maybe.Nothing) {
              return function __do() {
                var renderChildRef = Effect_Ref["new"](child)();
                var spec = mkSpec(handler)(renderChildRef)(document);
                var machine = Halogen_VDom_DOM.buildVDom(spec)(v);
                var node = Halogen_VDom_Machine.extract(machine);
                Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.appendChild(node)(Web_HTML_HTMLElement.toNode(container)))();
                return {
                  machine: machine,
                  node: node,
                  renderChildRef: renderChildRef
                };
              };
            }

            ;

            if (v1 instanceof Data_Maybe.Just) {
              return function __do() {
                Effect_Ref.write(child)(v1.value0.renderChildRef)();
                var parent = Web_DOM_Node.parentNode(v1.value0.node)();
                var nextSib = Web_DOM_Node.nextSibling(v1.value0.node)();
                var machine$prime = Halogen_VDom_Machine.step(v1.value0.machine, v);
                var newNode = Halogen_VDom_Machine.extract(machine$prime);
                Control_Applicative.when(Effect.applicativeEffect)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean)))(Unsafe_Reference.unsafeRefEq)(v1.value0.node)(newNode))(substInParent(newNode)(nextSib)(parent))();
                return {
                  machine: machine$prime,
                  node: newNode,
                  renderChildRef: v1.value0.renderChildRef
                };
              };
            }

            ;
            throw new Error("Failed pattern match at Halogen.VDom.Driver (line 159, column 5 - line 175, column 80): " + [v1.constructor.name]);
          };
        };
      };
    };

    return {
      render: render,
      renderChild: Control_Category.identity(Control_Category.categoryFn),
      removeChild: removeChild,
      dispose: removeChild
    };
  };
};

var runUI = function runUI(component) {
  return function (i) {
    return function (element) {
      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Data_Functor.map(Effect.functorEffect)(Web_HTML_HTMLDocument.toDocument)(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.document)(Web_HTML.window))))(function (document) {
        return Halogen_Aff_Driver.runUI(renderSpec(document)(element))(component)(i);
      });
    };
  };
};

module.exports = {
  runUI: runUI
};
},{"../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Category/index.js":"../output/Control.Category/index.js","../Data.Foldable/index.js":"../output/Data.Foldable/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.HeytingAlgebra/index.js":"../output/Data.HeytingAlgebra/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Newtype/index.js":"../output/Data.Newtype/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js","../Effect/index.js":"../output/Effect/index.js","../Effect.Aff/index.js":"../output/Effect.Aff/index.js","../Effect.Class/index.js":"../output/Effect.Class/index.js","../Effect.Ref/index.js":"../output/Effect.Ref/index.js","../Halogen.Aff.Driver/index.js":"../output/Halogen.Aff.Driver/index.js","../Halogen.Aff.Driver.State/index.js":"../output/Halogen.Aff.Driver.State/index.js","../Halogen.Component/index.js":"../output/Halogen.Component/index.js","../Halogen.HTML.Core/index.js":"../output/Halogen.HTML.Core/index.js","../Halogen.VDom.DOM/index.js":"../output/Halogen.VDom.DOM/index.js","../Halogen.VDom.DOM.Prop/index.js":"../output/Halogen.VDom.DOM.Prop/index.js","../Halogen.VDom.Machine/index.js":"../output/Halogen.VDom.Machine/index.js","../Halogen.VDom.Thunk/index.js":"../output/Halogen.VDom.Thunk/index.js","../Unsafe.Reference/index.js":"../output/Unsafe.Reference/index.js","../Web.DOM.Node/index.js":"../output/Web.DOM.Node/index.js","../Web.HTML/index.js":"../output/Web.HTML/index.js","../Web.HTML.HTMLDocument/index.js":"../output/Web.HTML.HTMLDocument/index.js","../Web.HTML.HTMLElement/index.js":"../output/Web.HTML.HTMLElement/index.js","../Web.HTML.Window/index.js":"../output/Web.HTML.Window/index.js"}],"../output/Web.HTML.HTMLCanvasElement/foreign.js":[function(require,module,exports) {
"use strict";

exports.width = function (canvas) {
  return function () {
    return canvas.width;
  };
};

exports.setWidth = function (width) {
  return function (canvas) {
    return function () {
      canvas.width = width;
    };
  };
}; // ----------------------------------------------------------------------------


exports.height = function (canvas) {
  return function () {
    return canvas.height;
  };
};

exports.setHeight = function (height) {
  return function (canvas) {
    return function () {
      canvas.height = height;
    };
  };
};
},{}],"../output/Web.HTML.HTMLCanvasElement/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  width: $foreign.width,
  setWidth: $foreign.setWidth,
  height: $foreign.height,
  setHeight: $foreign.setHeight
};
},{"./foreign.js":"../output/Web.HTML.HTMLCanvasElement/foreign.js","../Unsafe.Coerce/index.js":"../output/Unsafe.Coerce/index.js","../Web.Internal.FFI/index.js":"../output/Web.Internal.FFI/index.js"}],"../output/Render/index.js":[function(require,module,exports) {
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect_Aff = require("../Effect.Aff/index.js");

var Effect_Aff_Class = require("../Effect.Aff.Class/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Effect_Unsafe = require("../Effect.Unsafe/index.js");

var Halogen_Aff_Util = require("../Halogen.Aff.Util/index.js");

var Halogen_Component = require("../Halogen.Component/index.js");

var Halogen_HTML_Elements = require("../Halogen.HTML.Elements/index.js");

var Halogen_HTML_Events = require("../Halogen.HTML.Events/index.js");

var Halogen_HTML_Properties = require("../Halogen.HTML.Properties/index.js");

var Halogen_Query = require("../Halogen.Query/index.js");

var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM/index.js");

var Halogen_VDom_Driver = require("../Halogen.VDom.Driver/index.js");

var Web_HTML_HTMLCanvasElement = require("../Web.HTML.HTMLCanvasElement/index.js");

var LoadScene = function () {
  function LoadScene(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  LoadScene.create = function (value0) {
    return function (value1) {
      return new LoadScene(value0, value1);
    };
  };

  return LoadScene;
}();

var Rerender = function () {
  function Rerender(value0) {
    this.value0 = value0;
  }

  ;

  Rerender.create = function (value0) {
    return new Rerender(value0);
  };

  return Rerender;
}();

var Render = function () {
  function Render() {}

  ;
  Render.value = new Render();
  return Render;
}();

var HandleEvent = function () {
  function HandleEvent(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  HandleEvent.create = function (value0) {
    return function (value1) {
      return new HandleEvent(value0, value1);
    };
  };

  return HandleEvent;
}(); // | Run a computation (inside a halogen component) which requires access to a canvas rendering context.


var withContext = function withContext(dictMonadEffect) {
  return function (ref) {
    return function ($$continue) {
      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.gets(Halogen_Query_HalogenM.monadStateHalogenM)(function (v) {
        return v.context;
      }))(function (context) {
        if (context instanceof Data_Maybe.Just) {
          return $$continue(context.value0);
        }

        ;

        if (context instanceof Data_Maybe.Nothing) {
          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(function (v) {
            return Control_Bind.bind(Data_Maybe.bindMaybe)(v)(Web_HTML_HTMLCanvasElement.fromHTMLElement);
          })(Halogen_Query.getHTMLElementRef(ref)))(function (element) {
            if (element instanceof Data_Maybe.Nothing) {
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
            }

            ;

            if (element instanceof Data_Maybe.Just) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadEffect))($foreign.resizeCanvas(element.value0)))(function () {
                return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadEffect))($foreign.getContext(element.value0)))(function (ctx) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v) {
                    var $15 = {};

                    for (var $16 in v) {
                      if ({}.hasOwnProperty.call(v, $16)) {
                        $15[$16] = v[$16];
                      }

                      ;
                    }

                    ;
                    $15.context = new Data_Maybe.Just(ctx);
                    return $15;
                  }))(function () {
                    return $$continue(ctx);
                  });
                });
              });
            }

            ;
            throw new Error("Failed pattern match at Render (line 83, column 7 - line 89, column 23): " + [element.constructor.name]);
          });
        }

        ;
        throw new Error("Failed pattern match at Render (line 79, column 3 - line 89, column 23): " + [context.constructor.name]);
      });
    };
  };
};

var handleMouseUp = Data_Function_Uncurried.runFn3($foreign.handleMouseUpImpl);
var handleMouseMove = Data_Function_Uncurried.runFn3($foreign.handleMouseMoveImpl);
var handleMouseDown = Data_Function_Uncurried.runFn3($foreign.handleMouseDownImpl);
var canvasRef = "canvas";

var component = function component(dictMonadEffect) {
  return function (dictMonadAff) {
    var renderState = function renderState(state) {
      return Halogen_HTML_Elements.div_([Halogen_HTML_Elements.canvas([Halogen_HTML_Properties.width(600), Halogen_HTML_Properties.height(600), Halogen_HTML_Properties.id_("leCanvas"), Halogen_HTML_Properties.ref(canvasRef), Halogen_HTML_Events.onMouseDown(function () {
        var $29 = HandleEvent.create(handleMouseDown);
        return function ($30) {
          return Data_Maybe.Just.create($29($30));
        };
      }()), Halogen_HTML_Events.onMouseMove(function () {
        var $31 = HandleEvent.create(handleMouseMove);
        return function ($32) {
          return Data_Maybe.Just.create($31($32));
        };
      }()), Halogen_HTML_Events.onMouseUp(function () {
        var $33 = HandleEvent.create(handleMouseUp);
        return function ($34) {
          return Data_Maybe.Just.create($33($34));
        };
      }())])]);
    };

    var handleQuery = function handleQuery(v) {
      if (v instanceof LoadScene) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
          var $20 = {};

          for (var $21 in v1) {
            if ({}.hasOwnProperty.call(v1, $21)) {
              $20[$21] = v1[$21];
            }

            ;
          }

          ;
          $20.geometryCache = v.value0;
          return $20;
        }))(function () {
          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(handleAction(Render.value))(function () {
            return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(new Data_Maybe.Just(v.value1));
          });
        });
      }

      ;

      if (v instanceof Rerender) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(handleAction(Render.value))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(new Data_Maybe.Just(v.value0));
        });
      }

      ;
      throw new Error("Failed pattern match at Render (line 121, column 17 - line 128, column 20): " + [v.constructor.name]);
    };

    var handleAction = function handleAction(v) {
      if (v instanceof Render) {
        return withContext(dictMonadAff.MonadEffect0())(canvasRef)(function (ctx) {
          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.gets(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
            return v1.geometryCache;
          }))(function (cache) {
            return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))($foreign.renderCanvas(ctx)(cache));
          });
        });
      }

      ;

      if (v instanceof HandleEvent) {
        return withContext(dictMonadAff.MonadEffect0())(canvasRef)(function (ctx) {
          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.gets(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
            return v1.geometryCache;
          }))(function (cache) {
            return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(v.value0(ctx)(v.value1)(cache)))(function (action) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(handleQuery(new Rerender(Data_Unit.unit)))(function () {
                return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
              });
            });
          });
        });
      }

      ;
      throw new Error("Failed pattern match at Render (line 131, column 18 - line 142, column 18): " + [v.constructor.name]);
    };

    return Halogen_Component.mkComponent({
      initialState: Data_Function["const"]({
        context: Data_Maybe.Nothing.value,
        geometryCache: Effect_Unsafe.unsafePerformEffect($foreign.emptyGeometryCache)
      }),
      render: renderState,
      "eval": Halogen_Component.mkEval({
        handleAction: handleAction,
        handleQuery: Halogen_Component.defaultEval.handleQuery,
        receive: Halogen_Component.defaultEval.receive,
        initialize: Halogen_Component.defaultEval.initialize,
        finalize: Halogen_Component.defaultEval.finalize
      })
    });
  };
};

var render = Halogen_Aff_Util.runHalogenAff(Control_Bind.bind(Effect_Aff.bindAff)(Halogen_Aff_Util.awaitBody)(function (body) {
  return Halogen_VDom_Driver.runUI(component(Effect_Aff.monadEffectAff)(Effect_Aff_Class.monadAffAff))(Data_Unit.unit)(body);
}));
module.exports = {
  handleMouseDown: handleMouseDown,
  handleMouseMove: handleMouseMove,
  handleMouseUp: handleMouseUp,
  render: render,
  canvasRef: canvasRef,
  withContext: withContext,
  LoadScene: LoadScene,
  Rerender: Rerender,
  Render: Render,
  HandleEvent: HandleEvent,
  component: component,
  emptyGeometryCache: $foreign.emptyGeometryCache,
  renderCanvas: $foreign.renderCanvas,
  handleMouseUpImpl: $foreign.handleMouseUpImpl,
  handleMouseDownImpl: $foreign.handleMouseDownImpl,
  handleMouseMoveImpl: $foreign.handleMouseMoveImpl,
  resizeCanvas: $foreign.resizeCanvas,
  getContext: $foreign.getContext
};
},{"./foreign.js":"../output/Render/foreign.js","../Control.Applicative/index.js":"../output/Control.Applicative/index.js","../Control.Bind/index.js":"../output/Control.Bind/index.js","../Control.Monad.State.Class/index.js":"../output/Control.Monad.State.Class/index.js","../Data.Function/index.js":"../output/Data.Function/index.js","../Data.Function.Uncurried/index.js":"../output/Data.Function.Uncurried/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Unit/index.js":"../output/Data.Unit/index.js","../Effect.Aff/index.js":"../output/Effect.Aff/index.js","../Effect.Aff.Class/index.js":"../output/Effect.Aff.Class/index.js","../Effect.Class/index.js":"../output/Effect.Class/index.js","../Effect.Unsafe/index.js":"../output/Effect.Unsafe/index.js","../Halogen.Aff.Util/index.js":"../output/Halogen.Aff.Util/index.js","../Halogen.Component/index.js":"../output/Halogen.Component/index.js","../Halogen.HTML.Elements/index.js":"../output/Halogen.HTML.Elements/index.js","../Halogen.HTML.Events/index.js":"../output/Halogen.HTML.Events/index.js","../Halogen.HTML.Properties/index.js":"../output/Halogen.HTML.Properties/index.js","../Halogen.Query/index.js":"../output/Halogen.Query/index.js","../Halogen.Query.HalogenM/index.js":"../output/Halogen.Query.HalogenM/index.js","../Halogen.VDom.Driver/index.js":"../output/Halogen.VDom.Driver/index.js","../Web.HTML.HTMLCanvasElement/index.js":"../output/Web.HTML.HTMLCanvasElement/index.js"}],"../output/Main/index.js":[function(require,module,exports) {
// Generated by purs version 0.13.8
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Effect_Console = require("../Effect.Console/index.js");

var Render = require("../Render/index.js");

var $$Object = function $$Object(x) {
  return x;
};

var Morphism = function Morphism(x) {
  return x;
};

var showObject = new Data_Show.Show(function (v) {
  return v;
});
var showMorphism = new Data_Show.Show(function (v) {
  return Data_Show.show(showObject)(v.value0) + (" -> " + Data_Show.show(showObject)(v.value1));
});
var eqObject = new Data_Eq.Eq(function (x) {
  return function (y) {
    return x === y;
  };
});

var isEndomorphism = function isEndomorphism(v) {
  return Data_Eq.eq(eqObject)(Data_Tuple.fst(v))(Data_Tuple.snd(v));
};

var isIdentity = isEndomorphism;

var isMorphismInCategory = function isMorphismInCategory(v) {
  return function (v1) {
    return function (v2) {
      if (v1 instanceof Data_Maybe.Nothing && v2 instanceof Data_Maybe.Nothing) {
        return true;
      }

      ;

      if (v1 instanceof Data_Maybe.Just && v2 instanceof Data_Maybe.Nothing) {
        return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (m) {
          return function (v3) {
            return m || Data_Eq.eq(eqObject)(Data_Tuple.fst(v3))(v1.value0);
          };
        })(false)(v.morphisms);
      }

      ;

      if (v1 instanceof Data_Maybe.Nothing && v2 instanceof Data_Maybe.Just) {
        return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (m) {
          return function (v3) {
            return m || Data_Eq.eq(eqObject)(Data_Tuple.snd(v3))(v2.value0);
          };
        })(false)(v.morphisms);
      }

      ;

      if (v1 instanceof Data_Maybe.Just && v2 instanceof Data_Maybe.Just) {
        return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (m) {
          return function (v3) {
            return m || Data_Eq.eq(eqObject)(Data_Tuple.fst(v3))(v1.value0) && Data_Eq.eq(eqObject)(Data_Tuple.snd(v3))(v2.value0);
          };
        })(false)(v.morphisms);
      }

      ;
      throw new Error("Failed pattern match at Main (line 36, column 1 - line 36, column 76): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
    };
  };
};

var isIsomorphism = function isIsomorphism(v) {
  return function (category) {
    return isMorphismInCategory(category)(Data_Maybe.Just.create(Data_Tuple.snd(v)))(Data_Maybe.Just.create(Data_Tuple.fst(v)));
  };
};

var isAutomorphism = function isAutomorphism(f) {
  return function (category) {
    return isIsomorphism(f)(category) && isEndomorphism(f);
  };
};

var createMorphism = function createMorphism(a) {
  return function (b) {
    return new Data_Tuple.Tuple(a, b);
  };
};

var composeMorphisms = function composeMorphisms(v) {
  return function (v1) {
    var $37 = Data_Eq.eq(eqObject)(v1.value1)(v.value0);

    if ($37) {
      return new Data_Maybe.Just(new Data_Tuple.Tuple(v1.value0, v.value1));
    }

    ;
    return Data_Maybe.Nothing.value;
  };
};

var isRetraction = function isRetraction(f) {
  return function (g) {
    return Data_Maybe.fromMaybe(false)(Data_Functor.map(Data_Maybe.functorMaybe)(isIdentity)(composeMorphisms(f)(g)));
  };
};

var isSection = function isSection(f) {
  return function (g) {
    return Data_Maybe.fromMaybe(false)(Data_Functor.map(Data_Maybe.functorMaybe)(isIdentity)(composeMorphisms(g)(f)));
  };
};

var main = function () {
  var myMorphism3 = createMorphism("20")("Blah");
  var myMorphism2 = createMorphism("5")("bloo");
  var myMorphism1 = createMorphism("Blah")("5");
  var myCategory = {
    objects: ["Blah", "5", "bloo", "20"],
    morphisms: [myMorphism1, myMorphism2, myMorphism3]
  };
  return function __do() {
    Effect_Console.logShow(Data_Maybe.showMaybe(showMorphism))(composeMorphisms(myMorphism2)(myMorphism1))();
    Effect_Console.logShow(Data_Maybe.showMaybe(showMorphism))(composeMorphisms(myMorphism1)(myMorphism3))();
    Effect_Console.logShow(Data_Show.showBoolean)(isMorphismInCategory(myCategory)(new Data_Maybe.Just("Blah"))(new Data_Maybe.Just("bloo")))();
    Effect_Console.logShow(Data_Maybe.showMaybe(Data_Show.showBoolean))(Data_Functor.map(Data_Maybe.functorMaybe)(isIdentity)(composeMorphisms(createMorphism("5")("Blah"))(myMorphism1)))();
    return Render.render();
  };
}();

module.exports = {
  "Object": $$Object,
  Morphism: Morphism,
  createMorphism: createMorphism,
  composeMorphisms: composeMorphisms,
  isMorphismInCategory: isMorphismInCategory,
  isEndomorphism: isEndomorphism,
  isIdentity: isIdentity,
  isSection: isSection,
  isRetraction: isRetraction,
  isIsomorphism: isIsomorphism,
  isAutomorphism: isAutomorphism,
  main: main,
  eqObject: eqObject,
  showObject: showObject,
  showMorphism: showMorphism
};
},{"../Data.Eq/index.js":"../output/Data.Eq/index.js","../Data.Foldable/index.js":"../output/Data.Foldable/index.js","../Data.Functor/index.js":"../output/Data.Functor/index.js","../Data.Maybe/index.js":"../output/Data.Maybe/index.js","../Data.Show/index.js":"../output/Data.Show/index.js","../Data.Tuple/index.js":"../output/Data.Tuple/index.js","../Effect.Console/index.js":"../output/Effect.Console/index.js","../Render/index.js":"../output/Render/index.js"}],"index.js":[function(require,module,exports) {
require("../output/Main/index.js").main();
},{"../output/Main/index.js":"../output/Main/index.js"}],"../../../../AppData/Roaming/npm/node_modules/parcel/src/builtins/hmr-runtime.js":[function(require,module,exports) {
var global = arguments[3];
var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;

function Module(moduleName) {
  OldModule.call(this, moduleName);
  this.hot = {
    data: module.bundle.hotData,
    _acceptCallbacks: [],
    _disposeCallbacks: [],
    accept: function (fn) {
      this._acceptCallbacks.push(fn || function () {});
    },
    dispose: function (fn) {
      this._disposeCallbacks.push(fn);
    }
  };
  module.bundle.hotData = null;
}

module.bundle.Module = Module;
var checkedAssets, assetsToAccept;
var parent = module.bundle.parent;

if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {
  var hostname = "" || location.hostname;
  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';
  var ws = new WebSocket(protocol + '://' + hostname + ':' + "51872" + '/');

  ws.onmessage = function (event) {
    checkedAssets = {};
    assetsToAccept = [];
    var data = JSON.parse(event.data);

    if (data.type === 'update') {
      var handled = false;
      data.assets.forEach(function (asset) {
        if (!asset.isNew) {
          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);

          if (didAccept) {
            handled = true;
          }
        }
      }); // Enable HMR for CSS by default.

      handled = handled || data.assets.every(function (asset) {
        return asset.type === 'css' && asset.generated.js;
      });

      if (handled) {
        console.clear();
        data.assets.forEach(function (asset) {
          hmrApply(global.parcelRequire, asset);
        });
        assetsToAccept.forEach(function (v) {
          hmrAcceptRun(v[0], v[1]);
        });
      } else if (location.reload) {
        // `location` global exists in a web worker context but lacks `.reload()` function.
        location.reload();
      }
    }

    if (data.type === 'reload') {
      ws.close();

      ws.onclose = function () {
        location.reload();
      };
    }

    if (data.type === 'error-resolved') {
      console.log('[parcel] ✨ Error resolved');
      removeErrorOverlay();
    }

    if (data.type === 'error') {
      console.error('[parcel] 🚨  ' + data.error.message + '\n' + data.error.stack);
      removeErrorOverlay();
      var overlay = createErrorOverlay(data);
      document.body.appendChild(overlay);
    }
  };
}

function removeErrorOverlay() {
  var overlay = document.getElementById(OVERLAY_ID);

  if (overlay) {
    overlay.remove();
  }
}

function createErrorOverlay(data) {
  var overlay = document.createElement('div');
  overlay.id = OVERLAY_ID; // html encode message and stack trace

  var message = document.createElement('div');
  var stackTrace = document.createElement('pre');
  message.innerText = data.error.message;
  stackTrace.innerText = data.error.stack;
  overlay.innerHTML = '<div style="background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;">' + '<span style="background: red; padding: 2px 4px; border-radius: 2px;">ERROR</span>' + '<span style="top: 2px; margin-left: 5px; position: relative;">🚨</span>' + '<div style="font-size: 18px; font-weight: bold; margin-top: 20px;">' + message.innerHTML + '</div>' + '<pre>' + stackTrace.innerHTML + '</pre>' + '</div>';
  return overlay;
}

function getParents(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return [];
  }

  var parents = [];
  var k, d, dep;

  for (k in modules) {
    for (d in modules[k][1]) {
      dep = modules[k][1][d];

      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {
        parents.push(k);
      }
    }
  }

  if (bundle.parent) {
    parents = parents.concat(getParents(bundle.parent, id));
  }

  return parents;
}

function hmrApply(bundle, asset) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (modules[asset.id] || !bundle.parent) {
    var fn = new Function('require', 'module', 'exports', asset.generated.js);
    asset.isNew = !modules[asset.id];
    modules[asset.id] = [fn, asset.deps];
  } else if (bundle.parent) {
    hmrApply(bundle.parent, asset);
  }
}

function hmrAcceptCheck(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (!modules[id] && bundle.parent) {
    return hmrAcceptCheck(bundle.parent, id);
  }

  if (checkedAssets[id]) {
    return;
  }

  checkedAssets[id] = true;
  var cached = bundle.cache[id];
  assetsToAccept.push([bundle, id]);

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    return true;
  }

  return getParents(global.parcelRequire, id).some(function (id) {
    return hmrAcceptCheck(global.parcelRequire, id);
  });
}

function hmrAcceptRun(bundle, id) {
  var cached = bundle.cache[id];
  bundle.hotData = {};

  if (cached) {
    cached.hot.data = bundle.hotData;
  }

  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {
    cached.hot._disposeCallbacks.forEach(function (cb) {
      cb(bundle.hotData);
    });
  }

  delete bundle.cache[id];
  bundle(id);
  cached = bundle.cache[id];

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    cached.hot._acceptCallbacks.forEach(function (cb) {
      cb();
    });

    return true;
  }
}
},{}]},{},["../../../../AppData/Roaming/npm/node_modules/parcel/src/builtins/hmr-runtime.js","index.js"], null)
//# sourceMappingURL=/public.e31bb0bc.js.map