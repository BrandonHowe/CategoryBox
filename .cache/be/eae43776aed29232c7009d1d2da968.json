{"id":"../node_modules/@thi.ng/matrices/add.js","dependencies":[{"name":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\package.json","includedInParent":true,"mtime":1602941589745},{"name":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\matrices\\package.json","includedInParent":true,"mtime":1602877541104},{"name":"@thi.ng/vectors","loc":{"line":1,"column":34},"parent":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\matrices\\add.js","resolved":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\vectors\\index.js"},{"name":"./internal/codegen","loc":{"line":2,"column":24},"parent":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\matrices\\add.js","resolved":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\matrices\\internal\\codegen.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.add44 = exports.add33 = exports.add23 = exports.add22 = exports.add = void 0;\n\nvar _vectors = require(\"@thi.ng/vectors\");\n\nvar _codegen = require(\"./internal/codegen\");\n\n/**\n * Componentwise matrix addition. If `out` is not given, writes result\n * in `a`. Both input matrices MUST be of same size.\n *\n * out = a + b\n *\n * @param out -\n * @param a -\n * @param b -\n */\nconst add = _vectors.add;\nexports.add = add;\nconst add22 = _vectors.add4;\nexports.add22 = add22;\nconst [add23, add33, add44] = (0, _codegen.defMath)(add, \"+\");\nexports.add44 = add44;\nexports.add33 = add33;\nexports.add23 = add23;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/@thi.ng/matrices/add.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/@thi.ng/matrices/add.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/@thi.ng/matrices/add.js","original":{"line":3,"column":0}},{"generated":{"line":22,"column":0},"source":"../node_modules/@thi.ng/matrices/add.js","original":{"line":13,"column":7}},{"name":"add","generated":{"line":22,"column":6},"source":"../node_modules/@thi.ng/matrices/add.js","original":{"line":13,"column":13}},{"generated":{"line":22,"column":9},"source":"../node_modules/@thi.ng/matrices/add.js","original":{"line":13,"column":16}},{"name":"_add","generated":{"line":22,"column":12},"source":"../node_modules/@thi.ng/matrices/add.js","original":{"line":13,"column":19}},{"generated":{"line":22,"column":24},"source":"../node_modules/@thi.ng/matrices/add.js","original":{"line":13,"column":7}},{"generated":{"line":24,"column":0},"source":"../node_modules/@thi.ng/matrices/add.js","original":{"line":14,"column":7}},{"name":"add22","generated":{"line":24,"column":6},"source":"../node_modules/@thi.ng/matrices/add.js","original":{"line":14,"column":13}},{"generated":{"line":24,"column":11},"source":"../node_modules/@thi.ng/matrices/add.js","original":{"line":14,"column":18}},{"name":"add4","generated":{"line":24,"column":14},"source":"../node_modules/@thi.ng/matrices/add.js","original":{"line":14,"column":21}},{"generated":{"line":24,"column":27},"source":"../node_modules/@thi.ng/matrices/add.js","original":{"line":14,"column":7}},{"generated":{"line":26,"column":0},"source":"../node_modules/@thi.ng/matrices/add.js","original":{"line":15,"column":7}},{"generated":{"line":26,"column":6},"source":"../node_modules/@thi.ng/matrices/add.js","original":{"line":15,"column":13}},{"name":"add23","generated":{"line":26,"column":7},"source":"../node_modules/@thi.ng/matrices/add.js","original":{"line":15,"column":14}},{"generated":{"line":26,"column":12},"source":"../node_modules/@thi.ng/matrices/add.js","original":{"line":15,"column":13}},{"name":"add33","generated":{"line":26,"column":14},"source":"../node_modules/@thi.ng/matrices/add.js","original":{"line":15,"column":21}},{"generated":{"line":26,"column":19},"source":"../node_modules/@thi.ng/matrices/add.js","original":{"line":15,"column":13}},{"name":"add44","generated":{"line":26,"column":21},"source":"../node_modules/@thi.ng/matrices/add.js","original":{"line":15,"column":28}},{"generated":{"line":26,"column":26},"source":"../node_modules/@thi.ng/matrices/add.js","original":{"line":15,"column":13}},{"generated":{"line":26,"column":30},"source":"../node_modules/@thi.ng/matrices/add.js","original":{"line":15,"column":37}},{"name":"add","generated":{"line":26,"column":52},"source":"../node_modules/@thi.ng/matrices/add.js","original":{"line":15,"column":45}},{"generated":{"line":26,"column":55},"source":"../node_modules/@thi.ng/matrices/add.js","original":{"line":15,"column":37}},{"generated":{"line":26,"column":57},"source":"../node_modules/@thi.ng/matrices/add.js","original":{"line":15,"column":50}},{"generated":{"line":26,"column":60},"source":"../node_modules/@thi.ng/matrices/add.js","original":{"line":15,"column":37}},{"generated":{"line":26,"column":61},"source":"../node_modules/@thi.ng/matrices/add.js","original":{"line":15,"column":7}}],"sources":{"../node_modules/@thi.ng/matrices/add.js":"import { add as _add, add4 } from \"@thi.ng/vectors\";\nimport { defMath } from \"./internal/codegen\";\n/**\n * Componentwise matrix addition. If `out` is not given, writes result\n * in `a`. Both input matrices MUST be of same size.\n *\n * out = a + b\n *\n * @param out -\n * @param a -\n * @param b -\n */\nexport const add = _add;\nexport const add22 = add4;\nexport const [add23, add33, add44] = defMath(add, \"+\");\n"},"lineCount":null}},"error":null,"hash":"c1193ebe36411888136a7824270209db","cacheData":{"env":{}}}