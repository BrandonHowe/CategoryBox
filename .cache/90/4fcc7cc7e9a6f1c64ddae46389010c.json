{"id":"../node_modules/@thi.ng/defmulti/defmulti-n.js","dependencies":[{"name":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\package.json","includedInParent":true,"mtime":1602941589745},{"name":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\defmulti\\package.json","includedInParent":true,"mtime":1602877541099},{"name":"@thi.ng/errors","loc":{"line":1,"column":29},"parent":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\defmulti\\defmulti-n.js","resolved":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\errors\\index.js"},{"name":"./constants","loc":{"line":2,"column":24},"parent":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\defmulti\\defmulti-n.js","resolved":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\defmulti\\constants.js"},{"name":"./defmulti","loc":{"line":3,"column":25},"parent":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\defmulti\\defmulti-n.js","resolved":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\defmulti\\defmulti.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defmultiN = void 0;\n\nvar _errors = require(\"@thi.ng/errors\");\n\nvar _constants = require(\"./constants\");\n\nvar _defmulti = require(\"./defmulti\");\n\n/**\n * Returns a multi-dispatch function which delegates to one of the\n * provided implementations, based on the arity (number of args) when\n * the function is called.\n *\n * @remarks\n * Internally uses {@link (defmulti:1)}, so new arities can be dynamically\n * added (or removed) at a later time. If no `fallback` is provided,\n * `defmultiN` also registers a {@link DEFAULT} implementation which\n * simply throws an {@link @thi.ng/errors#IllegalArityError} when\n * invoked.\n *\n * **Note:** Unlike {@link (defmulti:1)} no argument type checking is\n * supported, however you can specify the return type for the generated\n * function.\n *\n * @example\n * ```ts\n * const foo = defmultiN<string>({\n *   0: () => \"zero\",\n *   1: (x) => `one: ${x}`,\n *   3: (x, y, z) => `three: ${x}, ${y}, ${z}`\n * });\n *\n * foo();\n * // zero\n * foo(23);\n * // one: 23\n * foo(1, 2, 3);\n * // three: 1, 2, 3\n * foo(1, 2);\n * // Error: illegal arity: 2\n *\n * foo.add(2, (x, y) => `two: ${x}, ${y}`);\n * foo(1, 2);\n * // two: 1, 2\n * ```\n *\n * @param impls - implementations\n * @param fallback - fallback implementation\n */\nconst defmultiN = (impls, fallback) => {\n  const fn = (0, _defmulti.defmulti)((...args) => args.length);\n  fn.add(_constants.DEFAULT, fallback || ((...args) => (0, _errors.illegalArity)(args.length)));\n\n  for (let id in impls) {\n    fn.add(id, impls[id]);\n  }\n\n  return fn;\n};\n\nexports.defmultiN = defmultiN;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":3,"column":0}},{"generated":{"line":14,"column":0},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":4,"column":0}},{"generated":{"line":55,"column":0},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":45,"column":7}},{"name":"defmultiN","generated":{"line":55,"column":6},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":45,"column":13}},{"generated":{"line":55,"column":15},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":45,"column":22}},{"generated":{"line":55,"column":18},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":45,"column":25}},{"name":"impls","generated":{"line":55,"column":19},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":45,"column":26}},{"generated":{"line":55,"column":24},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":45,"column":25}},{"name":"fallback","generated":{"line":55,"column":26},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":45,"column":33}},{"generated":{"line":55,"column":34},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":45,"column":25}},{"generated":{"line":55,"column":39},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":45,"column":46}},{"generated":{"line":56,"column":0},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":46,"column":4}},{"name":"fn","generated":{"line":56,"column":8},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":46,"column":10}},{"generated":{"line":56,"column":10},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":46,"column":12}},{"generated":{"line":56,"column":13},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":46,"column":15}},{"generated":{"line":56,"column":37},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":46,"column":24}},{"generated":{"line":56,"column":38},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":46,"column":25}},{"name":"args","generated":{"line":56,"column":41},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":46,"column":28}},{"generated":{"line":56,"column":45},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":46,"column":24}},{"name":"args","generated":{"line":56,"column":50},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":46,"column":37}},{"generated":{"line":56,"column":54},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":46,"column":41}},{"name":"length","generated":{"line":56,"column":55},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":46,"column":42}},{"generated":{"line":56,"column":61},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":46,"column":15}},{"generated":{"line":56,"column":62},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":46,"column":4}},{"name":"fn","generated":{"line":57,"column":0},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":47,"column":4}},{"name":"fn","generated":{"line":57,"column":2},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":47,"column":4}},{"generated":{"line":57,"column":4},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":47,"column":6}},{"name":"add","generated":{"line":57,"column":5},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":47,"column":7}},{"generated":{"line":57,"column":8},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":47,"column":4}},{"name":"DEFAULT","generated":{"line":57,"column":9},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":47,"column":11}},{"generated":{"line":57,"column":27},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":47,"column":4}},{"name":"fallback","generated":{"line":57,"column":29},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":47,"column":20}},{"generated":{"line":57,"column":37},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":47,"column":28}},{"generated":{"line":57,"column":42},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":47,"column":33}},{"generated":{"line":57,"column":43},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":47,"column":34}},{"name":"args","generated":{"line":57,"column":46},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":47,"column":37}},{"generated":{"line":57,"column":50},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":47,"column":33}},{"generated":{"line":57,"column":55},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":47,"column":46}},{"name":"args","generated":{"line":57,"column":81},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":47,"column":59}},{"generated":{"line":57,"column":85},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":47,"column":63}},{"name":"length","generated":{"line":57,"column":86},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":47,"column":64}},{"generated":{"line":57,"column":92},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":47,"column":46}},{"generated":{"line":57,"column":93},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":47,"column":28}},{"generated":{"line":57,"column":94},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":47,"column":4}},{"generated":{"line":59,"column":0},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":48,"column":4}},{"generated":{"line":59,"column":7},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":48,"column":9}},{"name":"id","generated":{"line":59,"column":11},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":48,"column":13}},{"generated":{"line":59,"column":13},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":48,"column":4}},{"name":"impls","generated":{"line":59,"column":17},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":48,"column":19}},{"generated":{"line":59,"column":22},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":48,"column":4}},{"generated":{"line":59,"column":24},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":48,"column":26}},{"name":"fn","generated":{"line":60,"column":0},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":49,"column":8}},{"name":"fn","generated":{"line":60,"column":4},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":49,"column":8}},{"generated":{"line":60,"column":6},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":49,"column":10}},{"name":"add","generated":{"line":60,"column":7},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":49,"column":11}},{"generated":{"line":60,"column":10},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":49,"column":8}},{"name":"id","generated":{"line":60,"column":11},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":49,"column":15}},{"generated":{"line":60,"column":13},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":49,"column":8}},{"name":"impls","generated":{"line":60,"column":15},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":49,"column":19}},{"generated":{"line":60,"column":20},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":49,"column":24}},{"name":"id","generated":{"line":60,"column":21},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":49,"column":25}},{"generated":{"line":60,"column":23},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":49,"column":24}},{"generated":{"line":60,"column":24},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":49,"column":8}},{"generated":{"line":61,"column":0},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":50,"column":5}},{"generated":{"line":63,"column":0},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":51,"column":4}},{"name":"fn","generated":{"line":63,"column":9},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":51,"column":11}},{"generated":{"line":63,"column":11},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":51,"column":4}},{"generated":{"line":64,"column":0},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":52,"column":1}},{"generated":{"line":64,"column":1},"source":"../node_modules/@thi.ng/defmulti/defmulti-n.js","original":{"line":45,"column":7}}],"sources":{"../node_modules/@thi.ng/defmulti/defmulti-n.js":"import { illegalArity } from \"@thi.ng/errors\";\nimport { DEFAULT } from \"./constants\";\nimport { defmulti } from \"./defmulti\";\n/**\n * Returns a multi-dispatch function which delegates to one of the\n * provided implementations, based on the arity (number of args) when\n * the function is called.\n *\n * @remarks\n * Internally uses {@link (defmulti:1)}, so new arities can be dynamically\n * added (or removed) at a later time. If no `fallback` is provided,\n * `defmultiN` also registers a {@link DEFAULT} implementation which\n * simply throws an {@link @thi.ng/errors#IllegalArityError} when\n * invoked.\n *\n * **Note:** Unlike {@link (defmulti:1)} no argument type checking is\n * supported, however you can specify the return type for the generated\n * function.\n *\n * @example\n * ```ts\n * const foo = defmultiN<string>({\n *   0: () => \"zero\",\n *   1: (x) => `one: ${x}`,\n *   3: (x, y, z) => `three: ${x}, ${y}, ${z}`\n * });\n *\n * foo();\n * // zero\n * foo(23);\n * // one: 23\n * foo(1, 2, 3);\n * // three: 1, 2, 3\n * foo(1, 2);\n * // Error: illegal arity: 2\n *\n * foo.add(2, (x, y) => `two: ${x}, ${y}`);\n * foo(1, 2);\n * // two: 1, 2\n * ```\n *\n * @param impls - implementations\n * @param fallback - fallback implementation\n */\nexport const defmultiN = (impls, fallback) => {\n    const fn = defmulti((...args) => args.length);\n    fn.add(DEFAULT, fallback || ((...args) => illegalArity(args.length)));\n    for (let id in impls) {\n        fn.add(id, impls[id]);\n    }\n    return fn;\n};\n"},"lineCount":null}},"error":null,"hash":"b8dc8e6c820e1b211aef7b0547782bc7","cacheData":{"env":{}}}