{"id":"../node_modules/@thi.ng/rstream/from/promises.js","dependencies":[{"name":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\package.json","includedInParent":true,"mtime":1602941589745},{"name":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\rstream\\package.json","includedInParent":true,"mtime":1602879073986},{"name":"@thi.ng/transducers","loc":{"line":1,"column":23},"parent":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\rstream\\from\\promises.js","resolved":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\transducers\\index.js"},{"name":"../utils/idgen","loc":{"line":2,"column":27},"parent":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\rstream\\from\\promises.js","resolved":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\rstream\\utils\\idgen.js"},{"name":"./promise","loc":{"line":3,"column":28},"parent":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\rstream\\from\\promises.js","resolved":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\rstream\\from\\promise.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fromPromises = void 0;\n\nvar _transducers = require(\"@thi.ng/transducers\");\n\nvar _idgen = require(\"../utils/idgen\");\n\nvar _promise = require(\"./promise\");\n\n/**\n * Wraps given iterable in `Promise.all()` to yield {@link Stream} of\n * results in same order as arguments, then closes.\n *\n * @remarks\n * If any of the promises rejects, all others will do so too. In this\n * case the stream calls {@link ISubscriber.error} in all of its\n * subscribers.\n *\n * @example\n * ```ts\n * fromPromises([\n *     Promise.resolve(1),\n *     Promise.resolve(2),\n *     Promise.resolve(3)\n * ]).subscribe(trace())\n * // 1\n * // 2\n * // 3\n * // done\n * ```\n *\n * @example\n * If individual error handling is required, an alternative is below\n * (however this approach provides no ordering guarantees):\n *\n * ```ts\n * fromIterable([\n *     Promise.resolve(1),\n *     new Promise(() => setTimeout(() => { throw new Error(\"eeek\"); }, 10)),\n *     Promise.resolve(3)\n * ]).subscribe(resolve()).subscribe(trace())\n * ```\n *\n * @param promises -\n */\nconst fromPromises = (promises, opts) => (0, _promise.fromPromise)(Promise.all(promises), (0, _idgen.optsWithID)(\"promises\", opts)).transform((0, _transducers.mapcat)(x => x));\n\nexports.fromPromises = fromPromises;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/@thi.ng/rstream/from/promises.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/@thi.ng/rstream/from/promises.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/@thi.ng/rstream/from/promises.js","original":{"line":3,"column":0}},{"generated":{"line":14,"column":0},"source":"../node_modules/@thi.ng/rstream/from/promises.js","original":{"line":4,"column":0}},{"generated":{"line":50,"column":0},"source":"../node_modules/@thi.ng/rstream/from/promises.js","original":{"line":40,"column":7}},{"name":"fromPromises","generated":{"line":50,"column":6},"source":"../node_modules/@thi.ng/rstream/from/promises.js","original":{"line":40,"column":13}},{"generated":{"line":50,"column":18},"source":"../node_modules/@thi.ng/rstream/from/promises.js","original":{"line":40,"column":25}},{"generated":{"line":50,"column":21},"source":"../node_modules/@thi.ng/rstream/from/promises.js","original":{"line":40,"column":28}},{"name":"promises","generated":{"line":50,"column":22},"source":"../node_modules/@thi.ng/rstream/from/promises.js","original":{"line":40,"column":29}},{"generated":{"line":50,"column":30},"source":"../node_modules/@thi.ng/rstream/from/promises.js","original":{"line":40,"column":28}},{"name":"opts","generated":{"line":50,"column":32},"source":"../node_modules/@thi.ng/rstream/from/promises.js","original":{"line":40,"column":39}},{"generated":{"line":50,"column":36},"source":"../node_modules/@thi.ng/rstream/from/promises.js","original":{"line":40,"column":28}},{"generated":{"line":50,"column":41},"source":"../node_modules/@thi.ng/rstream/from/promises.js","original":{"line":40,"column":48}},{"name":"Promise","generated":{"line":50,"column":67},"source":"../node_modules/@thi.ng/rstream/from/promises.js","original":{"line":40,"column":60}},{"generated":{"line":50,"column":74},"source":"../node_modules/@thi.ng/rstream/from/promises.js","original":{"line":40,"column":67}},{"name":"all","generated":{"line":50,"column":75},"source":"../node_modules/@thi.ng/rstream/from/promises.js","original":{"line":40,"column":68}},{"generated":{"line":50,"column":78},"source":"../node_modules/@thi.ng/rstream/from/promises.js","original":{"line":40,"column":60}},{"name":"promises","generated":{"line":50,"column":79},"source":"../node_modules/@thi.ng/rstream/from/promises.js","original":{"line":40,"column":72}},{"generated":{"line":50,"column":87},"source":"../node_modules/@thi.ng/rstream/from/promises.js","original":{"line":40,"column":60}},{"generated":{"line":50,"column":88},"source":"../node_modules/@thi.ng/rstream/from/promises.js","original":{"line":40,"column":48}},{"generated":{"line":50,"column":90},"source":"../node_modules/@thi.ng/rstream/from/promises.js","original":{"line":40,"column":83}},{"generated":{"line":50,"column":113},"source":"../node_modules/@thi.ng/rstream/from/promises.js","original":{"line":40,"column":94}},{"generated":{"line":50,"column":123},"source":"../node_modules/@thi.ng/rstream/from/promises.js","original":{"line":40,"column":83}},{"name":"opts","generated":{"line":50,"column":125},"source":"../node_modules/@thi.ng/rstream/from/promises.js","original":{"line":40,"column":106}},{"generated":{"line":50,"column":129},"source":"../node_modules/@thi.ng/rstream/from/promises.js","original":{"line":40,"column":83}},{"generated":{"line":50,"column":130},"source":"../node_modules/@thi.ng/rstream/from/promises.js","original":{"line":40,"column":48}},{"name":"transform","generated":{"line":50,"column":132},"source":"../node_modules/@thi.ng/rstream/from/promises.js","original":{"line":40,"column":113}},{"generated":{"line":50,"column":141},"source":"../node_modules/@thi.ng/rstream/from/promises.js","original":{"line":40,"column":48}},{"generated":{"line":50,"column":142},"source":"../node_modules/@thi.ng/rstream/from/promises.js","original":{"line":40,"column":123}},{"name":"x","generated":{"line":50,"column":167},"source":"../node_modules/@thi.ng/rstream/from/promises.js","original":{"line":40,"column":131}},{"generated":{"line":50,"column":168},"source":"../node_modules/@thi.ng/rstream/from/promises.js","original":{"line":40,"column":130}},{"name":"x","generated":{"line":50,"column":172},"source":"../node_modules/@thi.ng/rstream/from/promises.js","original":{"line":40,"column":137}},{"generated":{"line":50,"column":173},"source":"../node_modules/@thi.ng/rstream/from/promises.js","original":{"line":40,"column":123}},{"generated":{"line":50,"column":174},"source":"../node_modules/@thi.ng/rstream/from/promises.js","original":{"line":40,"column":48}},{"generated":{"line":50,"column":175},"source":"../node_modules/@thi.ng/rstream/from/promises.js","original":{"line":40,"column":7}}],"sources":{"../node_modules/@thi.ng/rstream/from/promises.js":"import { mapcat } from \"@thi.ng/transducers\";\nimport { optsWithID } from \"../utils/idgen\";\nimport { fromPromise } from \"./promise\";\n/**\n * Wraps given iterable in `Promise.all()` to yield {@link Stream} of\n * results in same order as arguments, then closes.\n *\n * @remarks\n * If any of the promises rejects, all others will do so too. In this\n * case the stream calls {@link ISubscriber.error} in all of its\n * subscribers.\n *\n * @example\n * ```ts\n * fromPromises([\n *     Promise.resolve(1),\n *     Promise.resolve(2),\n *     Promise.resolve(3)\n * ]).subscribe(trace())\n * // 1\n * // 2\n * // 3\n * // done\n * ```\n *\n * @example\n * If individual error handling is required, an alternative is below\n * (however this approach provides no ordering guarantees):\n *\n * ```ts\n * fromIterable([\n *     Promise.resolve(1),\n *     new Promise(() => setTimeout(() => { throw new Error(\"eeek\"); }, 10)),\n *     Promise.resolve(3)\n * ]).subscribe(resolve()).subscribe(trace())\n * ```\n *\n * @param promises -\n */\nexport const fromPromises = (promises, opts) => fromPromise(Promise.all(promises), optsWithID(\"promises\", opts)).transform(mapcat((x) => x));\n"},"lineCount":null}},"error":null,"hash":"63fff32521ed0a6b2937d07a22a1371a","cacheData":{"env":{}}}