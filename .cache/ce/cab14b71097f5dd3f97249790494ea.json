{"id":"../node_modules/@thi.ng/api/assert.js","dependencies":[{"name":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\package.json","includedInParent":true,"mtime":1602941589745},{"name":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\api\\package.json","includedInParent":true,"mtime":1602877541094},{"name":"./constants","loc":{"line":1,"column":22},"parent":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\api\\assert.js","resolved":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\api\\constants.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assert = void 0;\n\nvar _constants = require(\"./constants\");\n\n/**\n * Takes a `test` result or predicate function without args and throws\n * error with given `msg` if test failed (i.e. is falsy).\n *\n * @remarks\n * The function is only enabled if `process.env.NODE_ENV != \"production\"`\n * or if the `UMBRELLA_ASSERTS` env var is set to 1.\n */\nconst assert = (() => {\n  try {\n    return \"development\" !== \"production\" || undefined === \"1\";\n  } catch (e) {}\n\n  return false;\n})() ? (test, msg = \"assertion failed\") => {\n  if (typeof test === \"function\" && !test() || !test) {\n    throw new Error(typeof msg === \"function\" ? msg() : msg);\n  }\n} : _constants.NO_OP;\nexports.assert = assert;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":2,"column":0}},{"generated":{"line":18,"column":0},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":10,"column":7}},{"name":"assert","generated":{"line":18,"column":6},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":10,"column":13}},{"generated":{"line":18,"column":12},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":10,"column":19}},{"generated":{"line":18,"column":15},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":10,"column":22}},{"generated":{"line":18,"column":16},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":10,"column":23}},{"generated":{"line":18,"column":22},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":10,"column":29}},{"generated":{"line":19,"column":0},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":11,"column":4}},{"generated":{"line":19,"column":6},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":11,"column":8}},{"generated":{"line":20,"column":0},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":12,"column":8}},{"generated":{"line":20,"column":11},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":12,"column":16}},{"generated":{"line":20,"column":29},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":12,"column":41}},{"generated":{"line":20,"column":41},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":12,"column":16}},{"generated":{"line":20,"column":45},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":13,"column":12}},{"generated":{"line":20,"column":59},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":13,"column":45}},{"generated":{"line":20,"column":62},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":12,"column":8}},{"generated":{"line":21,"column":0},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":14,"column":5}},{"generated":{"line":21,"column":3},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":11,"column":4}},{"generated":{"line":21,"column":4},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":15,"column":4}},{"name":"e","generated":{"line":21,"column":11},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":15,"column":11}},{"generated":{"line":21,"column":12},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":15,"column":4}},{"generated":{"line":21,"column":14},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":15,"column":14}},{"generated":{"line":21,"column":15},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":15,"column":17}},{"generated":{"line":23,"column":0},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":16,"column":4}},{"generated":{"line":23,"column":9},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":16,"column":11}},{"generated":{"line":23,"column":14},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":16,"column":4}},{"generated":{"line":24,"column":0},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":17,"column":1}},{"generated":{"line":24,"column":1},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":10,"column":22}},{"generated":{"line":24,"column":7},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":18,"column":6}},{"name":"test","generated":{"line":24,"column":8},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":18,"column":7}},{"generated":{"line":24,"column":12},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":18,"column":6}},{"name":"msg","generated":{"line":24,"column":14},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":18,"column":13}},{"generated":{"line":24,"column":17},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":18,"column":16}},{"generated":{"line":24,"column":20},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":18,"column":19}},{"generated":{"line":24,"column":38},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":18,"column":6}},{"generated":{"line":24,"column":43},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":18,"column":42}},{"generated":{"line":25,"column":0},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":19,"column":8}},{"generated":{"line":25,"column":6},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":19,"column":13}},{"name":"test","generated":{"line":25,"column":13},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":19,"column":20}},{"generated":{"line":25,"column":17},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":19,"column":13}},{"generated":{"line":25,"column":22},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":19,"column":29}},{"generated":{"line":25,"column":32},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":19,"column":13}},{"generated":{"line":25,"column":36},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":19,"column":43}},{"name":"test","generated":{"line":25,"column":37},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":19,"column":44}},{"generated":{"line":25,"column":41},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":19,"column":48}},{"generated":{"line":25,"column":43},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":19,"column":12}},{"generated":{"line":25,"column":47},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":19,"column":55}},{"name":"test","generated":{"line":25,"column":48},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":19,"column":56}},{"generated":{"line":25,"column":52},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":19,"column":8}},{"generated":{"line":25,"column":54},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":19,"column":62}},{"generated":{"line":26,"column":0},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":20,"column":12}},{"generated":{"line":26,"column":10},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":20,"column":18}},{"name":"Error","generated":{"line":26,"column":14},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":20,"column":22}},{"generated":{"line":26,"column":19},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":20,"column":18}},{"generated":{"line":26,"column":20},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":20,"column":28}},{"name":"msg","generated":{"line":26,"column":27},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":20,"column":35}},{"generated":{"line":26,"column":30},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":20,"column":28}},{"generated":{"line":26,"column":35},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":20,"column":43}},{"generated":{"line":26,"column":45},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":20,"column":28}},{"name":"msg","generated":{"line":26,"column":48},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":20,"column":56}},{"generated":{"line":26,"column":51},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":20,"column":59}},{"generated":{"line":26,"column":53},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":20,"column":28}},{"name":"msg","generated":{"line":26,"column":56},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":20,"column":64}},{"generated":{"line":26,"column":59},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":20,"column":18}},{"generated":{"line":26,"column":60},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":20,"column":12}},{"generated":{"line":27,"column":0},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":21,"column":9}},{"generated":{"line":28,"column":0},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":22,"column":5}},{"generated":{"line":28,"column":1},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":10,"column":22}},{"name":"NO_OP","generated":{"line":28,"column":4},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":23,"column":6}},{"generated":{"line":28,"column":20},"source":"../node_modules/@thi.ng/api/assert.js","original":{"line":10,"column":7}}],"sources":{"../node_modules/@thi.ng/api/assert.js":"import { NO_OP } from \"./constants\";\n/**\n * Takes a `test` result or predicate function without args and throws\n * error with given `msg` if test failed (i.e. is falsy).\n *\n * @remarks\n * The function is only enabled if `process.env.NODE_ENV != \"production\"`\n * or if the `UMBRELLA_ASSERTS` env var is set to 1.\n */\nexport const assert = (() => {\n    try {\n        return (process.env.NODE_ENV !== \"production\" ||\n            process.env.UMBRELLA_ASSERTS === \"1\");\n    }\n    catch (e) { }\n    return false;\n})()\n    ? (test, msg = \"assertion failed\") => {\n        if ((typeof test === \"function\" && !test()) || !test) {\n            throw new Error(typeof msg === \"function\" ? msg() : msg);\n        }\n    }\n    : NO_OP;\n"},"lineCount":null}},"error":null,"hash":"23c83f3d66d737fdd9e4e2f7eeaa59e9","cacheData":{"env":{"NODE_ENV":"development"}}}