{"id":"../node_modules/@thi.ng/matrices/normal-mat.js","dependencies":[{"name":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\package.json","includedInParent":true,"mtime":1602941589745},{"name":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\matrices\\package.json","includedInParent":true,"mtime":1602877541104},{"name":"./invert","loc":{"line":1,"column":35},"parent":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\matrices\\normal-mat.js","resolved":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\matrices\\invert.js"},{"name":"./m44-m33","loc":{"line":2,"column":26},"parent":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\matrices\\normal-mat.js","resolved":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\matrices\\m44-m33.js"},{"name":"./transpose","loc":{"line":3,"column":41},"parent":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\matrices\\normal-mat.js","resolved":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\matrices\\transpose.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.normal44 = exports.normal33 = void 0;\n\nvar _invert = require(\"./invert\");\n\nvar _m44M = require(\"./m44-m33\");\n\nvar _transpose = require(\"./transpose\");\n\n/**\n * Converts given 4x4 matrix to a 3x3 normal matrix, i.e. the transposed\n * inverse of its upper-left 3x3 region. If `out` is null a new result\n * matrix will be created. Returns `undefined` if matrix inversion\n * failed.\n *\n * @param out -\n * @param m -\n */\nconst normal33 = (out, m) => {\n  out = (0, _invert.invert33)(null, (0, _m44M.mat44to33)(out, m));\n  return out ? (0, _transpose.transpose33)(null, out) : undefined;\n};\n/**\n * Converts given 4x4 matrix to a 4x4 matrix normal matrix, i.e. the\n * transposed inverse. Writes results to `m` if `out` is null. Returns\n * `undefined` if matrix inversion failed.\n *\n * @param out -\n * @param m -\n */\n\n\nexports.normal33 = normal33;\n\nconst normal44 = (out, m) => {\n  out = (0, _invert.invert44)(out, m);\n  return out ? (0, _transpose.transpose44)(null, out) : undefined;\n};\n\nexports.normal44 = normal44;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":3,"column":0}},{"generated":{"line":14,"column":0},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":4,"column":0}},{"generated":{"line":23,"column":0},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":13,"column":7}},{"name":"normal33","generated":{"line":23,"column":6},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":13,"column":13}},{"generated":{"line":23,"column":14},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":13,"column":21}},{"generated":{"line":23,"column":17},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":13,"column":24}},{"name":"out","generated":{"line":23,"column":18},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":13,"column":25}},{"generated":{"line":23,"column":21},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":13,"column":24}},{"name":"m","generated":{"line":23,"column":23},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":13,"column":30}},{"generated":{"line":23,"column":24},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":13,"column":24}},{"generated":{"line":23,"column":29},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":13,"column":36}},{"name":"out","generated":{"line":24,"column":0},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":14,"column":4}},{"name":"out","generated":{"line":24,"column":2},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":14,"column":4}},{"generated":{"line":24,"column":5},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":14,"column":7}},{"generated":{"line":24,"column":8},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":14,"column":10}},{"generated":{"line":24,"column":30},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":14,"column":19}},{"generated":{"line":24,"column":34},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":14,"column":10}},{"generated":{"line":24,"column":36},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":14,"column":25}},{"name":"out","generated":{"line":24,"column":57},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":14,"column":35}},{"generated":{"line":24,"column":60},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":14,"column":25}},{"name":"m","generated":{"line":24,"column":62},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":14,"column":40}},{"generated":{"line":24,"column":63},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":14,"column":25}},{"generated":{"line":24,"column":64},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":14,"column":10}},{"generated":{"line":24,"column":65},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":14,"column":4}},{"generated":{"line":25,"column":0},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":15,"column":4}},{"name":"out","generated":{"line":25,"column":9},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":15,"column":11}},{"generated":{"line":25,"column":12},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":15,"column":14}},{"generated":{"line":25,"column":15},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":15,"column":17}},{"generated":{"line":25,"column":43},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":15,"column":29}},{"generated":{"line":25,"column":47},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":15,"column":17}},{"name":"out","generated":{"line":25,"column":49},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":15,"column":35}},{"generated":{"line":25,"column":52},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":15,"column":17}},{"generated":{"line":25,"column":53},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":15,"column":14}},{"name":"undefined","generated":{"line":25,"column":56},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":15,"column":42}},{"generated":{"line":25,"column":65},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":15,"column":4}},{"generated":{"line":26,"column":0},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":16,"column":1}},{"generated":{"line":26,"column":1},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":13,"column":7}},{"generated":{"line":27,"column":0},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":17,"column":0}},{"generated":{"line":39,"column":0},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":25,"column":7}},{"name":"normal44","generated":{"line":39,"column":6},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":25,"column":13}},{"generated":{"line":39,"column":14},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":25,"column":21}},{"generated":{"line":39,"column":17},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":25,"column":24}},{"name":"out","generated":{"line":39,"column":18},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":25,"column":25}},{"generated":{"line":39,"column":21},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":25,"column":24}},{"name":"m","generated":{"line":39,"column":23},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":25,"column":30}},{"generated":{"line":39,"column":24},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":25,"column":24}},{"generated":{"line":39,"column":29},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":25,"column":36}},{"name":"out","generated":{"line":40,"column":0},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":26,"column":4}},{"name":"out","generated":{"line":40,"column":2},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":26,"column":4}},{"generated":{"line":40,"column":5},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":26,"column":7}},{"generated":{"line":40,"column":8},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":26,"column":10}},{"name":"out","generated":{"line":40,"column":30},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":26,"column":19}},{"generated":{"line":40,"column":33},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":26,"column":10}},{"name":"m","generated":{"line":40,"column":35},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":26,"column":24}},{"generated":{"line":40,"column":36},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":26,"column":10}},{"generated":{"line":40,"column":37},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":26,"column":4}},{"generated":{"line":41,"column":0},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":27,"column":4}},{"name":"out","generated":{"line":41,"column":9},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":27,"column":11}},{"generated":{"line":41,"column":12},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":27,"column":14}},{"generated":{"line":41,"column":15},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":27,"column":17}},{"generated":{"line":41,"column":43},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":27,"column":29}},{"generated":{"line":41,"column":47},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":27,"column":17}},{"name":"out","generated":{"line":41,"column":49},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":27,"column":35}},{"generated":{"line":41,"column":52},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":27,"column":17}},{"generated":{"line":41,"column":53},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":27,"column":14}},{"name":"undefined","generated":{"line":41,"column":56},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":27,"column":42}},{"generated":{"line":41,"column":65},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":27,"column":4}},{"generated":{"line":42,"column":0},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":28,"column":1}},{"generated":{"line":42,"column":1},"source":"../node_modules/@thi.ng/matrices/normal-mat.js","original":{"line":25,"column":7}}],"sources":{"../node_modules/@thi.ng/matrices/normal-mat.js":"import { invert33, invert44 } from \"./invert\";\nimport { mat44to33 } from \"./m44-m33\";\nimport { transpose33, transpose44 } from \"./transpose\";\n/**\n * Converts given 4x4 matrix to a 3x3 normal matrix, i.e. the transposed\n * inverse of its upper-left 3x3 region. If `out` is null a new result\n * matrix will be created. Returns `undefined` if matrix inversion\n * failed.\n *\n * @param out -\n * @param m -\n */\nexport const normal33 = (out, m) => {\n    out = invert33(null, mat44to33(out, m));\n    return out ? transpose33(null, out) : undefined;\n};\n/**\n * Converts given 4x4 matrix to a 4x4 matrix normal matrix, i.e. the\n * transposed inverse. Writes results to `m` if `out` is null. Returns\n * `undefined` if matrix inversion failed.\n *\n * @param out -\n * @param m -\n */\nexport const normal44 = (out, m) => {\n    out = invert44(out, m);\n    return out ? transpose44(null, out) : undefined;\n};\n"},"lineCount":null}},"error":null,"hash":"a1afe68143d6d6df35172ff6c2a989c4","cacheData":{"env":{}}}