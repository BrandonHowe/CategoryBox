{"id":"../node_modules/@thi.ng/arrays/ensure-iterable.js","dependencies":[{"name":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\package.json","includedInParent":true,"mtime":1604244572636},{"name":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\arrays\\package.json","includedInParent":true,"mtime":1602877541099},{"name":"@thi.ng/errors","loc":{"line":1,"column":28},"parent":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\arrays\\ensure-iterable.js","resolved":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\errors\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ensureIterable = void 0;\n\nvar _errors = require(\"@thi.ng/errors\");\n\n/**\n * Attempts to obtain an iterator from `x` and throws error if `x` is\n * not iterable.\n *\n * @param x -\n */\nconst ensureIterable = x => {\n  (x == null || !x[Symbol.iterator]) && (0, _errors.illegalArgs)(`value is not iterable: ${x}`);\n  return x;\n};\n\nexports.ensureIterable = ensureIterable;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":2,"column":0}},{"generated":{"line":11,"column":0},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":3,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":4,"column":0}},{"generated":{"line":13,"column":0},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":5,"column":0}},{"generated":{"line":14,"column":0},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":6,"column":0}},{"generated":{"line":15,"column":0},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":7,"column":0}},{"generated":{"line":16,"column":0},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":8,"column":7}},{"name":"ensureIterable","generated":{"line":16,"column":6},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":8,"column":13}},{"generated":{"line":16,"column":20},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":8,"column":27}},{"name":"x","generated":{"line":16,"column":23},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":8,"column":31}},{"generated":{"line":16,"column":24},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":8,"column":30}},{"generated":{"line":16,"column":28},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":8,"column":37}},{"generated":{"line":17,"column":0},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":9,"column":4}},{"name":"x","generated":{"line":17,"column":3},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":9,"column":5}},{"generated":{"line":17,"column":4},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":9,"column":6}},{"generated":{"line":17,"column":8},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":9,"column":10}},{"generated":{"line":17,"column":12},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":9,"column":5}},{"generated":{"line":17,"column":16},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":9,"column":18}},{"name":"x","generated":{"line":17,"column":17},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":9,"column":19}},{"generated":{"line":17,"column":18},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":9,"column":20}},{"name":"Symbol","generated":{"line":17,"column":19},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":9,"column":21}},{"generated":{"line":17,"column":25},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":9,"column":27}},{"name":"iterator","generated":{"line":17,"column":26},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":9,"column":28}},{"generated":{"line":17,"column":34},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":9,"column":20}},{"generated":{"line":17,"column":35},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":9,"column":4}},{"generated":{"line":17,"column":40},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":10,"column":8}},{"generated":{"line":17,"column":65},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":10,"column":21}},{"name":"x","generated":{"line":17,"column":91},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":10,"column":46}},{"generated":{"line":17,"column":92},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":10,"column":48}},{"generated":{"line":17,"column":94},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":10,"column":8}},{"generated":{"line":17,"column":95},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":9,"column":4}},{"generated":{"line":18,"column":0},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":11,"column":4}},{"name":"x","generated":{"line":18,"column":9},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":11,"column":11}},{"generated":{"line":18,"column":10},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":11,"column":4}},{"generated":{"line":19,"column":0},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":12,"column":1}},{"generated":{"line":19,"column":1},"source":"../node_modules/@thi.ng/arrays/ensure-iterable.js","original":{"line":8,"column":7}}],"sources":{"../node_modules/@thi.ng/arrays/ensure-iterable.js":"import { illegalArgs } from \"@thi.ng/errors\";\n/**\n * Attempts to obtain an iterator from `x` and throws error if `x` is\n * not iterable.\n *\n * @param x -\n */\nexport const ensureIterable = (x) => {\n    (x == null || !x[Symbol.iterator]) &&\n        illegalArgs(`value is not iterable: ${x}`);\n    return x;\n};\n"},"lineCount":null}},"error":null,"hash":"95011f15980b6d87b67ff5c6ad9b3628","cacheData":{"env":{}}}