{"id":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","dependencies":[{"name":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\package.json","includedInParent":true,"mtime":1604244572636},{"name":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\transducers\\package.json","includedInParent":true,"mtime":1602877541099}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.repeatedly = repeatedly;\n\n/**\n * Iterator yielding return values of given no-arg function `fn`. If `n`\n * is given, only that many values will be produced, else the iterator\n * is infinite.\n *\n * @example\n * ```ts\n * [...repeatedly(() => Math.floor(Math.random() * 10), 5)]\n * // [7, 0, 9, 3, 1]\n * ```\n *\n * @param fn - value producer\n * @param n - num values (default: ∞)\n */\nfunction* repeatedly(fn, n = Infinity) {\n  while (n-- > 0) {\n    yield fn();\n  }\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","original":{"line":1,"column":0}},{"generated":{"line":9,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","original":{"line":6,"column":0}},{"generated":{"line":14,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","original":{"line":7,"column":0}},{"generated":{"line":15,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","original":{"line":8,"column":0}},{"generated":{"line":16,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","original":{"line":9,"column":0}},{"generated":{"line":17,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","original":{"line":10,"column":0}},{"generated":{"line":18,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","original":{"line":11,"column":0}},{"generated":{"line":19,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","original":{"line":12,"column":0}},{"generated":{"line":20,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","original":{"line":13,"column":0}},{"generated":{"line":21,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","original":{"line":14,"column":0}},{"generated":{"line":22,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","original":{"line":15,"column":7}},{"name":"repeatedly","generated":{"line":22,"column":10},"source":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","original":{"line":15,"column":17}},{"generated":{"line":22,"column":20},"source":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","original":{"line":15,"column":7}},{"name":"fn","generated":{"line":22,"column":21},"source":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","original":{"line":15,"column":28}},{"generated":{"line":22,"column":23},"source":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","original":{"line":15,"column":7}},{"name":"n","generated":{"line":22,"column":25},"source":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","original":{"line":15,"column":32}},{"generated":{"line":22,"column":26},"source":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","original":{"line":15,"column":33}},{"name":"Infinity","generated":{"line":22,"column":29},"source":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","original":{"line":15,"column":36}},{"generated":{"line":22,"column":37},"source":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","original":{"line":15,"column":7}},{"generated":{"line":22,"column":39},"source":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","original":{"line":15,"column":46}},{"generated":{"line":23,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","original":{"line":16,"column":4}},{"name":"n","generated":{"line":23,"column":9},"source":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","original":{"line":16,"column":11}},{"generated":{"line":23,"column":10},"source":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","original":{"line":16,"column":12}},{"generated":{"line":23,"column":15},"source":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","original":{"line":16,"column":17}},{"generated":{"line":23,"column":16},"source":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","original":{"line":16,"column":4}},{"generated":{"line":23,"column":18},"source":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","original":{"line":16,"column":20}},{"generated":{"line":24,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","original":{"line":17,"column":8}},{"name":"fn","generated":{"line":24,"column":10},"source":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","original":{"line":17,"column":14}},{"generated":{"line":24,"column":12},"source":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","original":{"line":17,"column":16}},{"generated":{"line":24,"column":14},"source":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","original":{"line":17,"column":8}},{"generated":{"line":25,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","original":{"line":18,"column":5}},{"generated":{"line":26,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeatedly.js","original":{"line":19,"column":1}}],"sources":{"../node_modules/@thi.ng/transducers/iter/repeatedly.js":"/**\n * Iterator yielding return values of given no-arg function `fn`. If `n`\n * is given, only that many values will be produced, else the iterator\n * is infinite.\n *\n * @example\n * ```ts\n * [...repeatedly(() => Math.floor(Math.random() * 10), 5)]\n * // [7, 0, 9, 3, 1]\n * ```\n *\n * @param fn - value producer\n * @param n - num values (default: ∞)\n */\nexport function* repeatedly(fn, n = Infinity) {\n    while (n-- > 0) {\n        yield fn();\n    }\n}\n"},"lineCount":null}},"error":null,"hash":"049c6ce1c16635c25812caa8c99357c4","cacheData":{"env":{}}}