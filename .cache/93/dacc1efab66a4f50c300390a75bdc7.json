{"id":"../node_modules/@thi.ng/paths/update-in.js","dependencies":[{"name":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\package.json","includedInParent":true,"mtime":1602941589745},{"name":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\paths\\package.json","includedInParent":true,"mtime":1602879073986},{"name":"./getter","loc":{"line":1,"column":26},"parent":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\paths\\update-in.js","resolved":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\paths\\getter.js"},{"name":"./setter","loc":{"line":2,"column":26},"parent":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\paths\\update-in.js","resolved":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\paths\\setter.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updateIn = updateIn;\nexports.updateInUnsafe = void 0;\n\nvar _getter = require(\"./getter\");\n\nvar _setter = require(\"./setter\");\n\n/**\n * Similar to {@link setInUnsafe}, but applies given function to current\n * path value (incl. any additional/optional arguments passed to\n * `updateIn`) and uses result as new value. Does not modify original\n * state.\n *\n * @remarks\n * Unchecked version of {@link updateIn}. The type parameter `T` can be\n * used to indicate the type of the nested value to be updated (default:\n * `any`).\n *\n * @example\n * ```ts\n * add = (x: number, y: number) => x + y;\n * updateInUnsafe({ a: { b: { c: 23 } } }, \"a.b.c\", add, 10);\n * // { a: { b: { c: 33 } } }\n *\n * // type checked\n * updateIn({ a: { b: { c: 23 } } }, [\"a\",\"b\",\"c\"], add, 10);\n * // { a: { b: { c: 33 } } }\n *\n * // type error (value at \"a.b\" is not a number)\n * updateIn({ a: { b: { c: 23 } } }, [\"a\",\"b\"], add, 10);\n * ```\n *\n * @param state - state to update\n * @param path - update path\n * @param fn - update function\n * @param args - optional args for `fn`\n */\nconst updateInUnsafe = (state, path, fn, ...args) => // @ts-ignore\nupdateIn(state, path, fn, ...args);\n\nexports.updateInUnsafe = updateInUnsafe;\n\nfunction updateIn(state, path, fn, ...args) {\n  return (0, _setter.defSetter)(path)(state, // @ts-ignore\n  fn.apply(null, (args.unshift((0, _getter.defGetter)(path)(state)), args)));\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":9,"column":0},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":2,"column":0}},{"generated":{"line":13,"column":0},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":3,"column":0}},{"generated":{"line":43,"column":0},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":33,"column":7}},{"name":"updateInUnsafe","generated":{"line":43,"column":6},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":33,"column":13}},{"generated":{"line":43,"column":20},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":33,"column":27}},{"generated":{"line":43,"column":23},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":33,"column":30}},{"name":"state","generated":{"line":43,"column":24},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":33,"column":31}},{"generated":{"line":43,"column":29},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":33,"column":30}},{"name":"path","generated":{"line":43,"column":31},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":33,"column":38}},{"generated":{"line":43,"column":35},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":33,"column":30}},{"name":"fn","generated":{"line":43,"column":37},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":33,"column":44}},{"generated":{"line":43,"column":39},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":33,"column":30}},{"generated":{"line":43,"column":41},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":33,"column":48}},{"name":"args","generated":{"line":43,"column":44},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":33,"column":51}},{"generated":{"line":43,"column":48},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":33,"column":30}},{"generated":{"line":43,"column":53},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":34,"column":0}},{"name":"updateIn","generated":{"line":44,"column":0},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":35,"column":0}},{"generated":{"line":44,"column":8},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":35,"column":8}},{"name":"state","generated":{"line":44,"column":9},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":35,"column":9}},{"generated":{"line":44,"column":14},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":35,"column":8}},{"name":"path","generated":{"line":44,"column":16},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":35,"column":16}},{"generated":{"line":44,"column":20},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":35,"column":8}},{"name":"fn","generated":{"line":44,"column":22},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":35,"column":22}},{"generated":{"line":44,"column":24},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":35,"column":8}},{"generated":{"line":44,"column":26},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":35,"column":26}},{"name":"args","generated":{"line":44,"column":29},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":35,"column":29}},{"generated":{"line":44,"column":33},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":35,"column":8}},{"generated":{"line":44,"column":34},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":33,"column":7}},{"generated":{"line":48,"column":0},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":36,"column":7}},{"name":"updateIn","generated":{"line":48,"column":9},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":36,"column":16}},{"generated":{"line":48,"column":17},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":36,"column":7}},{"name":"state","generated":{"line":48,"column":18},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":36,"column":25}},{"generated":{"line":48,"column":23},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":36,"column":7}},{"name":"path","generated":{"line":48,"column":25},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":36,"column":32}},{"generated":{"line":48,"column":29},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":36,"column":7}},{"name":"fn","generated":{"line":48,"column":31},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":36,"column":38}},{"generated":{"line":48,"column":33},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":36,"column":7}},{"generated":{"line":48,"column":35},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":36,"column":42}},{"name":"args","generated":{"line":48,"column":38},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":36,"column":45}},{"generated":{"line":48,"column":42},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":36,"column":7}},{"generated":{"line":48,"column":44},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":36,"column":51}},{"generated":{"line":49,"column":0},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":37,"column":4}},{"generated":{"line":49,"column":9},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":37,"column":11}},{"name":"path","generated":{"line":49,"column":32},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":37,"column":21}},{"generated":{"line":49,"column":36},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":37,"column":11}},{"name":"state","generated":{"line":49,"column":38},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":37,"column":27}},{"generated":{"line":49,"column":43},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":37,"column":11}},{"generated":{"line":49,"column":45},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":38,"column":4}},{"name":"fn","generated":{"line":50,"column":0},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":39,"column":4}},{"name":"fn","generated":{"line":50,"column":2},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":39,"column":4}},{"generated":{"line":50,"column":4},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":39,"column":6}},{"name":"apply","generated":{"line":50,"column":5},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":39,"column":7}},{"generated":{"line":50,"column":10},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":39,"column":4}},{"generated":{"line":50,"column":11},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":39,"column":13}},{"generated":{"line":50,"column":15},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":39,"column":4}},{"name":"args","generated":{"line":50,"column":18},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":39,"column":20}},{"generated":{"line":50,"column":22},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":39,"column":24}},{"name":"unshift","generated":{"line":50,"column":23},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":39,"column":25}},{"generated":{"line":50,"column":30},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":39,"column":20}},{"generated":{"line":50,"column":31},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":39,"column":33}},{"name":"path","generated":{"line":50,"column":54},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":39,"column":43}},{"generated":{"line":50,"column":58},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":39,"column":33}},{"name":"state","generated":{"line":50,"column":60},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":39,"column":49}},{"generated":{"line":50,"column":65},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":39,"column":33}},{"generated":{"line":50,"column":66},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":39,"column":20}},{"name":"args","generated":{"line":50,"column":69},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":39,"column":58}},{"generated":{"line":50,"column":73},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":39,"column":4}},{"generated":{"line":50,"column":75},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":37,"column":11}},{"generated":{"line":50,"column":76},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":37,"column":4}},{"generated":{"line":51,"column":0},"source":"../node_modules/@thi.ng/paths/update-in.js","original":{"line":40,"column":1}}],"sources":{"../node_modules/@thi.ng/paths/update-in.js":"import { defGetter } from \"./getter\";\nimport { defSetter } from \"./setter\";\n/**\n * Similar to {@link setInUnsafe}, but applies given function to current\n * path value (incl. any additional/optional arguments passed to\n * `updateIn`) and uses result as new value. Does not modify original\n * state.\n *\n * @remarks\n * Unchecked version of {@link updateIn}. The type parameter `T` can be\n * used to indicate the type of the nested value to be updated (default:\n * `any`).\n *\n * @example\n * ```ts\n * add = (x: number, y: number) => x + y;\n * updateInUnsafe({ a: { b: { c: 23 } } }, \"a.b.c\", add, 10);\n * // { a: { b: { c: 33 } } }\n *\n * // type checked\n * updateIn({ a: { b: { c: 23 } } }, [\"a\",\"b\",\"c\"], add, 10);\n * // { a: { b: { c: 33 } } }\n *\n * // type error (value at \"a.b\" is not a number)\n * updateIn({ a: { b: { c: 23 } } }, [\"a\",\"b\"], add, 10);\n * ```\n *\n * @param state - state to update\n * @param path - update path\n * @param fn - update function\n * @param args - optional args for `fn`\n */\nexport const updateInUnsafe = (state, path, fn, ...args) => \n// @ts-ignore\nupdateIn(state, path, fn, ...args);\nexport function updateIn(state, path, fn, ...args) {\n    return defSetter(path)(state, \n    // @ts-ignore\n    fn.apply(null, (args.unshift(defGetter(path)(state)), args)));\n}\n"},"lineCount":null}},"error":null,"hash":"3e22452afed5400f800cdde233c1e127","cacheData":{"env":{}}}