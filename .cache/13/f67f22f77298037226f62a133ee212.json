{"id":"../node_modules/@thi.ng/vectors/fmod.js","dependencies":[{"name":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\package.json","includedInParent":true,"mtime":1602941589745},{"name":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\vectors\\package.json","includedInParent":true,"mtime":1602941035831},{"name":"@thi.ng/math","loc":{"line":1,"column":30},"parent":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\vectors\\fmod.js","resolved":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\math\\index.js"},{"name":"./internal/codegen","loc":{"line":2,"column":34},"parent":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\vectors\\fmod.js","resolved":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\vectors\\internal\\codegen.js"},{"name":"./internal/templates","loc":{"line":3,"column":20},"parent":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\vectors\\fmod.js","resolved":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\vectors\\internal\\templates.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fmod4 = exports.fmod3 = exports.fmod2 = exports.fmod = void 0;\n\nvar _math = require(\"@thi.ng/math\");\n\nvar _codegen = require(\"./internal/codegen\");\n\nvar _templates = require(\"./internal/templates\");\n\n/**\n * This version of mod uses the same logic as in GLSL, whereas {@link mod}\n * merely uses JavaScript's `%` modulo operator, yielding different\n * results for negative values, i.e. using the sign of the last arg.\n *\n * `a - b * floor(a/b)`\n *\n */\nconst [fmod, fmod2, fmod3, fmod4] = (0, _codegen.defHofOp)(_math.fmod, (0, _templates.FN2)(\"op\"), _codegen.ARGS_VV);\nexports.fmod4 = fmod4;\nexports.fmod3 = fmod3;\nexports.fmod2 = fmod2;\nexports.fmod = fmod;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/@thi.ng/vectors/fmod.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/@thi.ng/vectors/fmod.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/@thi.ng/vectors/fmod.js","original":{"line":3,"column":0}},{"generated":{"line":14,"column":0},"source":"../node_modules/@thi.ng/vectors/fmod.js","original":{"line":4,"column":0}},{"generated":{"line":22,"column":0},"source":"../node_modules/@thi.ng/vectors/fmod.js","original":{"line":12,"column":7}},{"generated":{"line":22,"column":6},"source":"../node_modules/@thi.ng/vectors/fmod.js","original":{"line":12,"column":13}},{"name":"fmod","generated":{"line":22,"column":7},"source":"../node_modules/@thi.ng/vectors/fmod.js","original":{"line":12,"column":14}},{"generated":{"line":22,"column":11},"source":"../node_modules/@thi.ng/vectors/fmod.js","original":{"line":12,"column":13}},{"name":"fmod2","generated":{"line":22,"column":13},"source":"../node_modules/@thi.ng/vectors/fmod.js","original":{"line":12,"column":20}},{"generated":{"line":22,"column":18},"source":"../node_modules/@thi.ng/vectors/fmod.js","original":{"line":12,"column":13}},{"name":"fmod3","generated":{"line":22,"column":20},"source":"../node_modules/@thi.ng/vectors/fmod.js","original":{"line":12,"column":27}},{"generated":{"line":22,"column":25},"source":"../node_modules/@thi.ng/vectors/fmod.js","original":{"line":12,"column":13}},{"name":"fmod4","generated":{"line":22,"column":27},"source":"../node_modules/@thi.ng/vectors/fmod.js","original":{"line":12,"column":34}},{"generated":{"line":22,"column":32},"source":"../node_modules/@thi.ng/vectors/fmod.js","original":{"line":12,"column":13}},{"generated":{"line":22,"column":36},"source":"../node_modules/@thi.ng/vectors/fmod.js","original":{"line":12,"column":43}},{"name":"_fmod","generated":{"line":22,"column":59},"source":"../node_modules/@thi.ng/vectors/fmod.js","original":{"line":12,"column":52}},{"generated":{"line":22,"column":69},"source":"../node_modules/@thi.ng/vectors/fmod.js","original":{"line":12,"column":43}},{"generated":{"line":22,"column":71},"source":"../node_modules/@thi.ng/vectors/fmod.js","original":{"line":12,"column":59}},{"generated":{"line":22,"column":91},"source":"../node_modules/@thi.ng/vectors/fmod.js","original":{"line":12,"column":63}},{"generated":{"line":22,"column":95},"source":"../node_modules/@thi.ng/vectors/fmod.js","original":{"line":12,"column":59}},{"generated":{"line":22,"column":96},"source":"../node_modules/@thi.ng/vectors/fmod.js","original":{"line":12,"column":43}},{"name":"ARGS_VV","generated":{"line":22,"column":98},"source":"../node_modules/@thi.ng/vectors/fmod.js","original":{"line":12,"column":70}},{"generated":{"line":22,"column":114},"source":"../node_modules/@thi.ng/vectors/fmod.js","original":{"line":12,"column":43}},{"generated":{"line":22,"column":115},"source":"../node_modules/@thi.ng/vectors/fmod.js","original":{"line":12,"column":7}}],"sources":{"../node_modules/@thi.ng/vectors/fmod.js":"import { fmod as _fmod } from \"@thi.ng/math\";\nimport { ARGS_VV, defHofOp } from \"./internal/codegen\";\nimport { FN2 } from \"./internal/templates\";\n/**\n * This version of mod uses the same logic as in GLSL, whereas {@link mod}\n * merely uses JavaScript's `%` modulo operator, yielding different\n * results for negative values, i.e. using the sign of the last arg.\n *\n * `a - b * floor(a/b)`\n *\n */\nexport const [fmod, fmod2, fmod3, fmod4] = defHofOp(_fmod, FN2(\"op\"), ARGS_VV);\n"},"lineCount":null}},"error":null,"hash":"d3340cc558e81f8266e1b62de25c9f22","cacheData":{"env":{}}}