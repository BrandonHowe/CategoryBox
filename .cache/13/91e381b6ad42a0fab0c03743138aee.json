{"id":"../node_modules/@thi.ng/api/decorators/nomixin.js","dependencies":[{"name":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\package.json","includedInParent":true,"mtime":1604244572636},{"name":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\api\\package.json","includedInParent":true,"mtime":1602877541094}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.nomixin = void 0;\n\n/**\n * Method property decorator. Sets `configurable` flag of\n * PropertyDescriptor to `false` (same as `@configurable(false)`).\n * Intended to be used in combination with mixin decorators to enable\n * partial implementations of mixed-in behaviors in target class and\n * avoid them being overidden by mixed-in behaviour.\n */\nconst nomixin = (_, __, descriptor) => {\n  descriptor.configurable = false;\n};\n\nexports.nomixin = nomixin;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/@thi.ng/api/decorators/nomixin.js","original":{"line":1,"column":0}},{"generated":{"line":9,"column":0},"source":"../node_modules/@thi.ng/api/decorators/nomixin.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/@thi.ng/api/decorators/nomixin.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"../node_modules/@thi.ng/api/decorators/nomixin.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/@thi.ng/api/decorators/nomixin.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"../node_modules/@thi.ng/api/decorators/nomixin.js","original":{"line":6,"column":0}},{"generated":{"line":14,"column":0},"source":"../node_modules/@thi.ng/api/decorators/nomixin.js","original":{"line":7,"column":0}},{"generated":{"line":15,"column":0},"source":"../node_modules/@thi.ng/api/decorators/nomixin.js","original":{"line":8,"column":7}},{"name":"nomixin","generated":{"line":15,"column":6},"source":"../node_modules/@thi.ng/api/decorators/nomixin.js","original":{"line":8,"column":13}},{"generated":{"line":15,"column":13},"source":"../node_modules/@thi.ng/api/decorators/nomixin.js","original":{"line":8,"column":20}},{"generated":{"line":15,"column":16},"source":"../node_modules/@thi.ng/api/decorators/nomixin.js","original":{"line":8,"column":23}},{"name":"_","generated":{"line":15,"column":17},"source":"../node_modules/@thi.ng/api/decorators/nomixin.js","original":{"line":8,"column":24}},{"generated":{"line":15,"column":18},"source":"../node_modules/@thi.ng/api/decorators/nomixin.js","original":{"line":8,"column":23}},{"name":"__","generated":{"line":15,"column":20},"source":"../node_modules/@thi.ng/api/decorators/nomixin.js","original":{"line":8,"column":27}},{"generated":{"line":15,"column":22},"source":"../node_modules/@thi.ng/api/decorators/nomixin.js","original":{"line":8,"column":23}},{"name":"descriptor","generated":{"line":15,"column":24},"source":"../node_modules/@thi.ng/api/decorators/nomixin.js","original":{"line":8,"column":31}},{"generated":{"line":15,"column":34},"source":"../node_modules/@thi.ng/api/decorators/nomixin.js","original":{"line":8,"column":23}},{"generated":{"line":15,"column":39},"source":"../node_modules/@thi.ng/api/decorators/nomixin.js","original":{"line":8,"column":46}},{"name":"descriptor","generated":{"line":16,"column":0},"source":"../node_modules/@thi.ng/api/decorators/nomixin.js","original":{"line":9,"column":4}},{"name":"descriptor","generated":{"line":16,"column":2},"source":"../node_modules/@thi.ng/api/decorators/nomixin.js","original":{"line":9,"column":4}},{"generated":{"line":16,"column":12},"source":"../node_modules/@thi.ng/api/decorators/nomixin.js","original":{"line":9,"column":14}},{"name":"configurable","generated":{"line":16,"column":13},"source":"../node_modules/@thi.ng/api/decorators/nomixin.js","original":{"line":9,"column":15}},{"generated":{"line":16,"column":25},"source":"../node_modules/@thi.ng/api/decorators/nomixin.js","original":{"line":9,"column":4}},{"generated":{"line":16,"column":28},"source":"../node_modules/@thi.ng/api/decorators/nomixin.js","original":{"line":9,"column":30}},{"generated":{"line":16,"column":33},"source":"../node_modules/@thi.ng/api/decorators/nomixin.js","original":{"line":9,"column":4}},{"generated":{"line":17,"column":0},"source":"../node_modules/@thi.ng/api/decorators/nomixin.js","original":{"line":10,"column":1}},{"generated":{"line":17,"column":1},"source":"../node_modules/@thi.ng/api/decorators/nomixin.js","original":{"line":8,"column":7}}],"sources":{"../node_modules/@thi.ng/api/decorators/nomixin.js":"/**\n * Method property decorator. Sets `configurable` flag of\n * PropertyDescriptor to `false` (same as `@configurable(false)`).\n * Intended to be used in combination with mixin decorators to enable\n * partial implementations of mixed-in behaviors in target class and\n * avoid them being overidden by mixed-in behaviour.\n */\nexport const nomixin = (_, __, descriptor) => {\n    descriptor.configurable = false;\n};\n"},"lineCount":null}},"error":null,"hash":"232b024fff06e6659dd3bacd5eed0831","cacheData":{"env":{}}}