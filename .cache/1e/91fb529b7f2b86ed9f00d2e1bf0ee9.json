{"id":"../node_modules/@thi.ng/compose/promisify.js","dependencies":[{"name":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\package.json","includedInParent":true,"mtime":1602941589745},{"name":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\compose\\package.json","includedInParent":true,"mtime":1602877541102}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.promisify = void 0;\n\n/**\n * Takes a function accepting a NodeJS-like callback w/ (error, result)\n * args and converts it into a Promise, e.g. for use in async contexts.\n *\n * @remarks\n * The constructed promise calls the given function with a custom\n * callback, which then either resolves or rejects the promise.\n *\n * @example\n * ```ts\n * (async () => {\n *    const body = await promisify(partial(fs.readFile, \"foo.txt\"));\n *    console.log(body.toString());\n * })();\n * ```\n *\n * @param fn - function accepting a callback\n */\nconst promisify = fn => new Promise((resolve, reject) => fn((err, result) => err != null ? reject(err) : resolve(result)));\n\nexports.promisify = promisify;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":1,"column":0}},{"generated":{"line":26,"column":0},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":19,"column":7}},{"name":"promisify","generated":{"line":26,"column":6},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":19,"column":13}},{"generated":{"line":26,"column":15},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":19,"column":22}},{"name":"fn","generated":{"line":26,"column":18},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":19,"column":26}},{"generated":{"line":26,"column":20},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":19,"column":25}},{"generated":{"line":26,"column":24},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":19,"column":33}},{"name":"Promise","generated":{"line":26,"column":28},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":19,"column":37}},{"generated":{"line":26,"column":35},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":19,"column":33}},{"generated":{"line":26,"column":36},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":19,"column":45}},{"name":"resolve","generated":{"line":26,"column":37},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":19,"column":46}},{"generated":{"line":26,"column":44},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":19,"column":45}},{"name":"reject","generated":{"line":26,"column":46},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":19,"column":55}},{"generated":{"line":26,"column":52},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":19,"column":45}},{"name":"fn","generated":{"line":26,"column":57},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":19,"column":66}},{"generated":{"line":26,"column":59},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":19,"column":68}},{"generated":{"line":26,"column":60},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":19,"column":69}},{"name":"err","generated":{"line":26,"column":61},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":19,"column":70}},{"generated":{"line":26,"column":64},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":19,"column":69}},{"name":"result","generated":{"line":26,"column":66},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":19,"column":75}},{"generated":{"line":26,"column":72},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":19,"column":69}},{"name":"err","generated":{"line":26,"column":77},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":19,"column":87}},{"generated":{"line":26,"column":80},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":19,"column":90}},{"generated":{"line":26,"column":84},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":19,"column":94}},{"generated":{"line":26,"column":88},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":19,"column":87}},{"name":"reject","generated":{"line":26,"column":91},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":19,"column":101}},{"generated":{"line":26,"column":97},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":19,"column":107}},{"name":"err","generated":{"line":26,"column":98},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":19,"column":108}},{"generated":{"line":26,"column":101},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":19,"column":107}},{"generated":{"line":26,"column":102},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":19,"column":87}},{"name":"resolve","generated":{"line":26,"column":105},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":19,"column":115}},{"generated":{"line":26,"column":112},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":19,"column":122}},{"name":"result","generated":{"line":26,"column":113},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":19,"column":123}},{"generated":{"line":26,"column":119},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":19,"column":122}},{"generated":{"line":26,"column":120},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":19,"column":68}},{"generated":{"line":26,"column":121},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":19,"column":33}},{"generated":{"line":26,"column":122},"source":"../node_modules/@thi.ng/compose/promisify.js","original":{"line":19,"column":7}}],"sources":{"../node_modules/@thi.ng/compose/promisify.js":"/**\n * Takes a function accepting a NodeJS-like callback w/ (error, result)\n * args and converts it into a Promise, e.g. for use in async contexts.\n *\n * @remarks\n * The constructed promise calls the given function with a custom\n * callback, which then either resolves or rejects the promise.\n *\n * @example\n * ```ts\n * (async () => {\n *    const body = await promisify(partial(fs.readFile, \"foo.txt\"));\n *    console.log(body.toString());\n * })();\n * ```\n *\n * @param fn - function accepting a callback\n */\nexport const promisify = (fn) => new Promise((resolve, reject) => fn((err, result) => (err != null ? reject(err) : resolve(result))));\n"},"lineCount":null}},"error":null,"hash":"fd8cc06f96b576774624e0d0d9c7d772","cacheData":{"env":{}}}