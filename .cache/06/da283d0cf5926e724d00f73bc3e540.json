{"id":"../node_modules/@thi.ng/transducers/iter/concat.js","dependencies":[{"name":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\package.json","includedInParent":true,"mtime":1602941589745},{"name":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\transducers\\package.json","includedInParent":true,"mtime":1602877541099},{"name":"@thi.ng/arrays","loc":{"line":1,"column":31},"parent":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\transducers\\iter\\concat.js","resolved":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\arrays\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.concat = concat;\n\nvar _arrays = require(\"@thi.ng/arrays\");\n\n/**\n * Yields iterator producing concatenation of given iterables.\n * Undefined & null inputs are silently ignored, however any\n * such values produced or contained in an input will remain.\n *\n * @example\n * ```ts\n * [...concat([1, 2, 3], null, [4, 5])]\n * // [ 1, 2, 3, 4, 5 ]\n *\n * [...concat([1, 2, 3, undefined], null, [4, 5])]\n * // [ 1, 2, 3, undefined, 4, 5 ]\n * ```\n *\n * @param xs -\n */\nfunction* concat(...xs) {\n  for (let x of xs) {\n    x != null && (yield* (0, _arrays.ensureIterable)(x));\n  }\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/concat.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/concat.js","original":{"line":2,"column":0}},{"generated":{"line":26,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/concat.js","original":{"line":18,"column":7}},{"name":"concat","generated":{"line":26,"column":10},"source":"../node_modules/@thi.ng/transducers/iter/concat.js","original":{"line":18,"column":17}},{"generated":{"line":26,"column":16},"source":"../node_modules/@thi.ng/transducers/iter/concat.js","original":{"line":18,"column":7}},{"generated":{"line":26,"column":17},"source":"../node_modules/@thi.ng/transducers/iter/concat.js","original":{"line":18,"column":24}},{"name":"xs","generated":{"line":26,"column":20},"source":"../node_modules/@thi.ng/transducers/iter/concat.js","original":{"line":18,"column":27}},{"generated":{"line":26,"column":22},"source":"../node_modules/@thi.ng/transducers/iter/concat.js","original":{"line":18,"column":7}},{"generated":{"line":26,"column":24},"source":"../node_modules/@thi.ng/transducers/iter/concat.js","original":{"line":18,"column":31}},{"generated":{"line":27,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/concat.js","original":{"line":19,"column":4}},{"generated":{"line":27,"column":7},"source":"../node_modules/@thi.ng/transducers/iter/concat.js","original":{"line":19,"column":9}},{"name":"x","generated":{"line":27,"column":11},"source":"../node_modules/@thi.ng/transducers/iter/concat.js","original":{"line":19,"column":13}},{"generated":{"line":27,"column":12},"source":"../node_modules/@thi.ng/transducers/iter/concat.js","original":{"line":19,"column":4}},{"name":"xs","generated":{"line":27,"column":16},"source":"../node_modules/@thi.ng/transducers/iter/concat.js","original":{"line":19,"column":18}},{"generated":{"line":27,"column":18},"source":"../node_modules/@thi.ng/transducers/iter/concat.js","original":{"line":19,"column":4}},{"generated":{"line":27,"column":20},"source":"../node_modules/@thi.ng/transducers/iter/concat.js","original":{"line":19,"column":22}},{"name":"x","generated":{"line":28,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/concat.js","original":{"line":20,"column":8}},{"name":"x","generated":{"line":28,"column":4},"source":"../node_modules/@thi.ng/transducers/iter/concat.js","original":{"line":20,"column":8}},{"generated":{"line":28,"column":5},"source":"../node_modules/@thi.ng/transducers/iter/concat.js","original":{"line":20,"column":9}},{"generated":{"line":28,"column":9},"source":"../node_modules/@thi.ng/transducers/iter/concat.js","original":{"line":20,"column":13}},{"generated":{"line":28,"column":13},"source":"../node_modules/@thi.ng/transducers/iter/concat.js","original":{"line":20,"column":8}},{"generated":{"line":28,"column":18},"source":"../node_modules/@thi.ng/transducers/iter/concat.js","original":{"line":20,"column":22}},{"generated":{"line":28,"column":25},"source":"../node_modules/@thi.ng/transducers/iter/concat.js","original":{"line":20,"column":29}},{"name":"x","generated":{"line":28,"column":53},"source":"../node_modules/@thi.ng/transducers/iter/concat.js","original":{"line":20,"column":44}},{"generated":{"line":28,"column":54},"source":"../node_modules/@thi.ng/transducers/iter/concat.js","original":{"line":20,"column":29}},{"generated":{"line":28,"column":55},"source":"../node_modules/@thi.ng/transducers/iter/concat.js","original":{"line":20,"column":8}},{"generated":{"line":29,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/concat.js","original":{"line":21,"column":5}},{"generated":{"line":30,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/concat.js","original":{"line":22,"column":1}}],"sources":{"../node_modules/@thi.ng/transducers/iter/concat.js":"import { ensureIterable } from \"@thi.ng/arrays\";\n/**\n * Yields iterator producing concatenation of given iterables.\n * Undefined & null inputs are silently ignored, however any\n * such values produced or contained in an input will remain.\n *\n * @example\n * ```ts\n * [...concat([1, 2, 3], null, [4, 5])]\n * // [ 1, 2, 3, 4, 5 ]\n *\n * [...concat([1, 2, 3, undefined], null, [4, 5])]\n * // [ 1, 2, 3, undefined, 4, 5 ]\n * ```\n *\n * @param xs -\n */\nexport function* concat(...xs) {\n    for (let x of xs) {\n        x != null && (yield* ensureIterable(x));\n    }\n}\n"},"lineCount":null}},"error":null,"hash":"9da3b10cd119fede2872347d07b583f1","cacheData":{"env":{}}}