{"id":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","dependencies":[{"name":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\package.json","includedInParent":true,"mtime":1602941589745},{"name":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\transducers\\package.json","includedInParent":true,"mtime":1602877541099},{"name":"../rfn/assoc-obj","loc":{"line":1,"column":25},"parent":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\transducers\\iter\\key-permutations.js","resolved":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\transducers\\rfn\\assoc-obj.js"},{"name":"../xform/map","loc":{"line":2,"column":20},"parent":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\transducers\\iter\\key-permutations.js","resolved":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\transducers\\xform\\map.js"},{"name":"../xform/mapcat","loc":{"line":3,"column":23},"parent":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\transducers\\iter\\key-permutations.js","resolved":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\transducers\\xform\\mapcat.js"},{"name":"../xform/partition","loc":{"line":4,"column":26},"parent":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\transducers\\iter\\key-permutations.js","resolved":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\transducers\\xform\\partition.js"},{"name":"./pairs","loc":{"line":5,"column":22},"parent":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\transducers\\iter\\key-permutations.js","resolved":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\transducers\\iter\\pairs.js"},{"name":"./permutations","loc":{"line":6,"column":29},"parent":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\transducers\\iter\\key-permutations.js","resolved":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\transducers\\iter\\permutations.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.keyPermutations = void 0;\n\nvar _assocObj = require(\"../rfn/assoc-obj\");\n\nvar _map = require(\"../xform/map\");\n\nvar _mapcat = require(\"../xform/mapcat\");\n\nvar _partition = require(\"../xform/partition\");\n\nvar _pairs = require(\"./pairs\");\n\nvar _permutations = require(\"./permutations\");\n\n/**\n * Similar to {@link permutations}, however takes an object with each\n * key specifying an array of its possible values. Yields an iterable of\n * objects of all value permutations.\n *\n * @remarks\n * The resulting object type will be derived from the value types in the\n * given `spec` object.\n *\n * The order of resulting permutations is not guaranteed and depending\n * on the VM's iteration behavior of `Object.keys()`.\n *\n * @example\n * ```ts\n * [...keyPermutations({ a: [1, 2], b: [true, false], c: [\"X\", \"Y\"] })]\n * // [\n * //   { a: 1, b: true, c: 'X' },\n * //   { a: 1, b: true, c: 'Y' },\n * //   { a: 1, b: false, c: 'X' },\n * //   { a: 1, b: false, c: 'Y' },\n * //   { a: 2, b: true, c: 'X' },\n * //   { a: 2, b: true, c: 'Y' },\n * //   { a: 2, b: false, c: 'X' },\n * //   { a: 2, b: false, c: 'Y' }\n * // ]\n * ```\n *\n * @param spec - permutation spec object\n */\nconst keyPermutations = spec => (0, _map.map)(x => (0, _assocObj.assocObj)((0, _partition.partition)(2, x)), (0, _permutations.permutations)(...(0, _mapcat.mapcat)(([k, v]) => [[k], v], (0, _pairs.pairs)(spec))));\n\nexports.keyPermutations = keyPermutations;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":3,"column":0}},{"generated":{"line":14,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":4,"column":0}},{"generated":{"line":16,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":5,"column":0}},{"generated":{"line":18,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":6,"column":0}},{"generated":{"line":20,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":7,"column":0}},{"generated":{"line":49,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":7}},{"name":"keyPermutations","generated":{"line":49,"column":6},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":13}},{"generated":{"line":49,"column":21},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":28}},{"name":"spec","generated":{"line":49,"column":24},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":32}},{"generated":{"line":49,"column":28},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":31}},{"generated":{"line":49,"column":32},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":42}},{"name":"x","generated":{"line":49,"column":46},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":47}},{"generated":{"line":49,"column":47},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":46}},{"generated":{"line":49,"column":51},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":53}},{"generated":{"line":49,"column":75},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":62}},{"generated":{"line":49,"column":101},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":72}},{"generated":{"line":49,"column":102},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":62}},{"name":"x","generated":{"line":49,"column":104},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":75}},{"generated":{"line":49,"column":105},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":62}},{"generated":{"line":49,"column":106},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":53}},{"generated":{"line":49,"column":107},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":42}},{"generated":{"line":49,"column":109},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":80}},{"generated":{"line":49,"column":141},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":93}},{"generated":{"line":49,"column":144},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":96}},{"generated":{"line":49,"column":164},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":103}},{"generated":{"line":49,"column":165},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":104}},{"name":"k","generated":{"line":49,"column":166},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":105}},{"generated":{"line":49,"column":167},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":104}},{"name":"v","generated":{"line":49,"column":169},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":108}},{"generated":{"line":49,"column":170},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":104}},{"generated":{"line":49,"column":171},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":103}},{"generated":{"line":49,"column":176},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":115}},{"generated":{"line":49,"column":177},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":116}},{"name":"k","generated":{"line":49,"column":178},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":117}},{"generated":{"line":49,"column":179},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":116}},{"generated":{"line":49,"column":180},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":115}},{"name":"v","generated":{"line":49,"column":182},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":121}},{"generated":{"line":49,"column":183},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":115}},{"generated":{"line":49,"column":184},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":96}},{"generated":{"line":49,"column":186},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":125}},{"name":"spec","generated":{"line":49,"column":204},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":131}},{"generated":{"line":49,"column":208},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":125}},{"generated":{"line":49,"column":209},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":96}},{"generated":{"line":49,"column":210},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":80}},{"generated":{"line":49,"column":211},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":42}},{"generated":{"line":49,"column":212},"source":"../node_modules/@thi.ng/transducers/iter/key-permutations.js","original":{"line":36,"column":7}}],"sources":{"../node_modules/@thi.ng/transducers/iter/key-permutations.js":"import { assocObj } from \"../rfn/assoc-obj\";\nimport { map } from \"../xform/map\";\nimport { mapcat } from \"../xform/mapcat\";\nimport { partition } from \"../xform/partition\";\nimport { pairs } from \"./pairs\";\nimport { permutations } from \"./permutations\";\n/**\n * Similar to {@link permutations}, however takes an object with each\n * key specifying an array of its possible values. Yields an iterable of\n * objects of all value permutations.\n *\n * @remarks\n * The resulting object type will be derived from the value types in the\n * given `spec` object.\n *\n * The order of resulting permutations is not guaranteed and depending\n * on the VM's iteration behavior of `Object.keys()`.\n *\n * @example\n * ```ts\n * [...keyPermutations({ a: [1, 2], b: [true, false], c: [\"X\", \"Y\"] })]\n * // [\n * //   { a: 1, b: true, c: 'X' },\n * //   { a: 1, b: true, c: 'Y' },\n * //   { a: 1, b: false, c: 'X' },\n * //   { a: 1, b: false, c: 'Y' },\n * //   { a: 2, b: true, c: 'X' },\n * //   { a: 2, b: true, c: 'Y' },\n * //   { a: 2, b: false, c: 'X' },\n * //   { a: 2, b: false, c: 'Y' }\n * // ]\n * ```\n *\n * @param spec - permutation spec object\n */\nexport const keyPermutations = (spec) => (map((x) => assocObj(partition(2, x)), permutations(...mapcat(([k, v]) => [[k], v], pairs(spec)))));\n"},"lineCount":null}},"error":null,"hash":"be8dae11bfb68e992c3282cf490e01dd","cacheData":{"env":{}}}