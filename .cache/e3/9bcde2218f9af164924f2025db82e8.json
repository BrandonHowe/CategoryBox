{"id":"../node_modules/@thi.ng/transducers/iter/repeat.js","dependencies":[{"name":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\package.json","includedInParent":true,"mtime":1604244572636},{"name":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\transducers\\package.json","includedInParent":true,"mtime":1602877541099}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.repeat = repeat;\n\n/**\n * Iterator yielding an infinite (by default) repetition of given value\n * `x`. If `n` is given, only produces that many values.\n *\n * See also: {@link repeatedly}\n *\n * @example\n * ```ts\n * [...repeat(42, 5)]\n * // [42, 42, 42, 42, 42]\n * ```\n *\n * @param x - value to repeat\n * @param n - num values (default: ∞)\n */\nfunction* repeat(x, n = Infinity) {\n  while (n-- > 0) {\n    yield x;\n  }\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeat.js","original":{"line":1,"column":0}},{"generated":{"line":9,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeat.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeat.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeat.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeat.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeat.js","original":{"line":6,"column":0}},{"generated":{"line":14,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeat.js","original":{"line":7,"column":0}},{"generated":{"line":15,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeat.js","original":{"line":8,"column":0}},{"generated":{"line":16,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeat.js","original":{"line":9,"column":0}},{"generated":{"line":17,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeat.js","original":{"line":10,"column":0}},{"generated":{"line":18,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeat.js","original":{"line":11,"column":0}},{"generated":{"line":19,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeat.js","original":{"line":12,"column":0}},{"generated":{"line":20,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeat.js","original":{"line":13,"column":0}},{"generated":{"line":21,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeat.js","original":{"line":14,"column":0}},{"generated":{"line":22,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeat.js","original":{"line":15,"column":0}},{"generated":{"line":23,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeat.js","original":{"line":16,"column":7}},{"name":"repeat","generated":{"line":23,"column":10},"source":"../node_modules/@thi.ng/transducers/iter/repeat.js","original":{"line":16,"column":17}},{"generated":{"line":23,"column":16},"source":"../node_modules/@thi.ng/transducers/iter/repeat.js","original":{"line":16,"column":7}},{"name":"x","generated":{"line":23,"column":17},"source":"../node_modules/@thi.ng/transducers/iter/repeat.js","original":{"line":16,"column":24}},{"generated":{"line":23,"column":18},"source":"../node_modules/@thi.ng/transducers/iter/repeat.js","original":{"line":16,"column":7}},{"name":"n","generated":{"line":23,"column":20},"source":"../node_modules/@thi.ng/transducers/iter/repeat.js","original":{"line":16,"column":27}},{"generated":{"line":23,"column":21},"source":"../node_modules/@thi.ng/transducers/iter/repeat.js","original":{"line":16,"column":28}},{"name":"Infinity","generated":{"line":23,"column":24},"source":"../node_modules/@thi.ng/transducers/iter/repeat.js","original":{"line":16,"column":31}},{"generated":{"line":23,"column":32},"source":"../node_modules/@thi.ng/transducers/iter/repeat.js","original":{"line":16,"column":7}},{"generated":{"line":23,"column":34},"source":"../node_modules/@thi.ng/transducers/iter/repeat.js","original":{"line":16,"column":41}},{"generated":{"line":24,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeat.js","original":{"line":17,"column":4}},{"name":"n","generated":{"line":24,"column":9},"source":"../node_modules/@thi.ng/transducers/iter/repeat.js","original":{"line":17,"column":11}},{"generated":{"line":24,"column":10},"source":"../node_modules/@thi.ng/transducers/iter/repeat.js","original":{"line":17,"column":12}},{"generated":{"line":24,"column":15},"source":"../node_modules/@thi.ng/transducers/iter/repeat.js","original":{"line":17,"column":17}},{"generated":{"line":24,"column":16},"source":"../node_modules/@thi.ng/transducers/iter/repeat.js","original":{"line":17,"column":4}},{"generated":{"line":24,"column":18},"source":"../node_modules/@thi.ng/transducers/iter/repeat.js","original":{"line":17,"column":20}},{"generated":{"line":25,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeat.js","original":{"line":18,"column":8}},{"name":"x","generated":{"line":25,"column":10},"source":"../node_modules/@thi.ng/transducers/iter/repeat.js","original":{"line":18,"column":14}},{"generated":{"line":25,"column":11},"source":"../node_modules/@thi.ng/transducers/iter/repeat.js","original":{"line":18,"column":8}},{"generated":{"line":26,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeat.js","original":{"line":19,"column":5}},{"generated":{"line":27,"column":0},"source":"../node_modules/@thi.ng/transducers/iter/repeat.js","original":{"line":20,"column":1}}],"sources":{"../node_modules/@thi.ng/transducers/iter/repeat.js":"/**\n * Iterator yielding an infinite (by default) repetition of given value\n * `x`. If `n` is given, only produces that many values.\n *\n * See also: {@link repeatedly}\n *\n * @example\n * ```ts\n * [...repeat(42, 5)]\n * // [42, 42, 42, 42, 42]\n * ```\n *\n * @param x - value to repeat\n * @param n - num values (default: ∞)\n */\nexport function* repeat(x, n = Infinity) {\n    while (n-- > 0) {\n        yield x;\n    }\n}\n"},"lineCount":null}},"error":null,"hash":"50c93855890b2e31cae1608bb53cd5ac","cacheData":{"env":{}}}