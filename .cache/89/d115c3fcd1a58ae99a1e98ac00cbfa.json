{"id":"../node_modules/@thi.ng/transducers/xform/noop.js","dependencies":[{"name":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\package.json","includedInParent":true,"mtime":1604244572636},{"name":"C:\\Users\\Brandon 2\\Documents\\Projects\\categorytheory\\node_modules\\@thi.ng\\transducers\\package.json","includedInParent":true,"mtime":1602877541099}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.noop = void 0;\n\n/**\n * No-op / pass-through transducer, essentially the same as:\n * `map((x) => x)`, but faster. Useful for testing and / or to keep\n * existing values in a {@link (multiplex:1)} tuple lane.\n */\nconst noop = () => rfn => rfn;\n\nexports.noop = noop;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/@thi.ng/transducers/xform/noop.js","original":{"line":1,"column":0}},{"generated":{"line":9,"column":0},"source":"../node_modules/@thi.ng/transducers/xform/noop.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/@thi.ng/transducers/xform/noop.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"../node_modules/@thi.ng/transducers/xform/noop.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/@thi.ng/transducers/xform/noop.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"../node_modules/@thi.ng/transducers/xform/noop.js","original":{"line":6,"column":7}},{"name":"noop","generated":{"line":13,"column":6},"source":"../node_modules/@thi.ng/transducers/xform/noop.js","original":{"line":6,"column":13}},{"generated":{"line":13,"column":10},"source":"../node_modules/@thi.ng/transducers/xform/noop.js","original":{"line":6,"column":17}},{"generated":{"line":13,"column":13},"source":"../node_modules/@thi.ng/transducers/xform/noop.js","original":{"line":6,"column":20}},{"name":"rfn","generated":{"line":13,"column":19},"source":"../node_modules/@thi.ng/transducers/xform/noop.js","original":{"line":6,"column":27}},{"generated":{"line":13,"column":22},"source":"../node_modules/@thi.ng/transducers/xform/noop.js","original":{"line":6,"column":26}},{"name":"rfn","generated":{"line":13,"column":26},"source":"../node_modules/@thi.ng/transducers/xform/noop.js","original":{"line":6,"column":35}},{"generated":{"line":13,"column":29},"source":"../node_modules/@thi.ng/transducers/xform/noop.js","original":{"line":6,"column":7}}],"sources":{"../node_modules/@thi.ng/transducers/xform/noop.js":"/**\n * No-op / pass-through transducer, essentially the same as:\n * `map((x) => x)`, but faster. Useful for testing and / or to keep\n * existing values in a {@link (multiplex:1)} tuple lane.\n */\nexport const noop = () => (rfn) => rfn;\n"},"lineCount":null}},"error":null,"hash":"c38b99b7e775a7389526430501b708ce","cacheData":{"env":{}}}